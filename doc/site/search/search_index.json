{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Ewt - Epilogic Web Toolkit","text":""},{"location":"#introduction","title":"Introduction","text":"<p>Ewt est une application web permettant de mettre en \u0153uvre des processus  m\u00e9tier \u00e0 partir de r\u00e8gles personnalisables et d\u00e9finies dans des fichiers de  configuration, de description de structure de donn\u00e9es et de scripts de  traitements. L'ensemble des r\u00e8gles de description m\u00e9tier constitue une  application Ewt.</p> <p></p> <p>Ces applications m\u00e9tier peuvent \u00eatre cr\u00e9\u00e9es sans connaissance java  particuli\u00e8re et ne n\u00e9cessitent pas d'outil d'\u00e9dition sp\u00e9cifique.  Elles b\u00e9n\u00e9ficient d'une bo\u00eete \u00e0 outils qui ne cesse de s'\u00e9toffer et  qui propose actuellement les fonctionnalit\u00e9s suivantes:</p> <ul> <li>Mod\u00e8le de donn\u00e9es structur\u00e9</li> <li>Gestion de workflow</li> <li>Gestion de la concurrence (modes optimiste et pessimiste)</li> <li>Gestion de droits par policy</li> <li>Planificateur de t\u00e2ches</li> <li>Langage de script int\u00e9gr\u00e9, avec debugger compatible VS-Code</li> <li>Support multi serveur de base de donn\u00e9es</li> <li>Services Rest, Soap, WebSocket</li> <li>Index Lucene int\u00e9gr\u00e9</li> <li>etc.</li> </ul> <p></p> <p>Une application Ewt est donc un ensemble de fichiers XML qui d\u00e9crivent la  structure logique et physique des donn\u00e9es, les param\u00e8tres de configuration,  les r\u00e8gles de s\u00e9curit\u00e9, la gestion d'\u00e9tats, les scripts de calcul, les  styles, les ressources (images, css, javascript, etc.), les libell\u00e9s  multi-langues, les sch\u00e9mas wsdl, etc.</p> <p></p> <p>Ewt se charge alors d'interpr\u00e9ter ces \u00e9l\u00e9ments de configuration pour mettre  en \u0153uvre le processus d\u00e9crit par l'application.</p>"},{"location":"#documentation","title":"Documentation","text":"<p>La pr\u00e9sente documentation se compose de trois parties:</p> <ol> <li>Le guide de r\u00e9f\u00e9rence pr\u00e9sente les     fonctionnalit\u00e9s et les concepts du moteur Ewt </li> <li>Les librairies sont des catalogues de m\u00e9thodes mises     \u00e0 disposition par Ewt et utilisables dans des scripts</li> <li>Les le\u00e7ons sont agit de petites formations qui     montrent comment construire une application Ewt ou qui pr\u00e9sentent     certaines fa\u00e7ons de proc\u00e9der pour r\u00e9aliser une t\u00e2che donn\u00e9e.</li> </ol>"},{"location":"#licence","title":"Licence","text":"<p>Ewt utilise un mod\u00e8le de licence GNU Affero General Public License (AGPL) v3. Ce mod\u00e8le de licence s'applique au code source d'Ewt, \u00e0 la documentation et  aux applications Ewt donn\u00e9es en exemple.</p> <p>Les plugins ne sont pas concern\u00e9s et sont libres d'utiliser un autre mod\u00e8le  de licence.</p>"},{"location":"actions/addTuple/","title":"<code>addTuple</code>","text":""},{"location":"actions/addTuple/#description","title":"Description","text":"<p>Ajoute un tuple sur un dossier existant. Cette action est g\u00e9n\u00e9ralement utilis\u00e9e pour ajouter une ligne sur une table de valeurs.</p>"},{"location":"actions/addTuple/#schema","title":"Sch\u00e9ma","text":"<pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"description\": \"This json schema gives prototype of action addTuple\",\n    \"title\": \"Action addTuple\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"action\": {\n            \"const\": \"addTuple\",\n            \"description\": \"Name of the action\",\n            \"type\": \"string\"\n        },\n        \"params\": {\n            \"description\": \"Parameters of current action\",\n            \"type\": \"object\",\n            \"properties\": {\n                \"modelName\": {\n                    \"description\": \"Name of model onto tuple must be added\",\n                    \"type\": \"string\"\n                },\n                \"groupName\": {\n                    \"description\": \"Name of group onto tuple must be added\",\n                    \"type\": \"string\"\n                },\n                \"docId\": {\n                    \"description\": \"Document id onto tuple must be added\",\n                    \"type\": [\n                        \"integer\",\n                        \"string\"\n                    ]\n                }\n            },\n            \"required\": [\n                \"modelName\",\n                \"docId\",\n                \"groupName\"\n            ]\n        }\n    },\n    \"required\": [\n        \"action\",\n        \"params\"\n    ],\n    \"$id\": \"https://ewt.epilogic.ch/action.addtuple.schema.json\"\n}\n</code></pre>"},{"location":"actions/admin/","title":"<code>admin</code>","text":""},{"location":"actions/admin/#description","title":"Description","text":"<p>Fonction d'administration de l'application. Les fonctions d'administration ne sont disponibles qu'en mode debug.</p>"},{"location":"actions/admin/#schema","title":"Sch\u00e9ma","text":"<pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"description\": \"This json schema gives prototype of action admin\",\n    \"title\": \"Action admin\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"action\": {\n            \"const\": \"admin\",\n            \"description\": \"Name of the action\",\n            \"type\": \"string\"\n        },\n        \"params\": {\n            \"description\": \"Parameters of current action\",\n            \"type\": \"object\",\n            \"properties\": {\n                \"action\": {\n                    \"description\": \"Name of administration action\",\n                    \"type\": \"string\"\n                },\n                \"parameters\": {\n                    \"description\": \"Action parameters\",\n                    \"type\": \"object\",\n                    \"properties\": {}\n                }\n            },\n            \"required\": [\"action\"]\n        }\n    },\n    \"required\": [\n        \"action\",\n        \"params\"\n    ],\n    \"$id\": \"https://ewt.epilogic.ch/action.admin.schema.json\"\n}\n</code></pre>"},{"location":"actions/arrange/","title":"<code>arrange</code>","text":""},{"location":"actions/arrange/#description","title":"Description","text":"<p>Fonction de r\u00e9organisation des tuples d'un groupe multi. Cette action regroupe les fonctions de tri, de filtre et de pagination des tuples d'un groupe multi.</p> <p>L'action est sans effet sur les groupes single, et donc a fortiori sur le  groupe principal (maingroup).</p> <p>Cette action peut jouer un r\u00f4le important pour le contr\u00f4le des performances d'une application. En effet, elle permet d'\u00e9viter le chargement d'un grand nombre de tuples dans le cas de groupes multi.</p> <p>Lorsqu'elle est invoqu\u00e9e, l'action force un (re-)chargement des donn\u00e9es \u00e0 partir de la base de donn\u00e9es. Cela n'est possible que si les tuples pr\u00e9sents en m\u00e9moire sont synchrones avec la base de donn\u00e9es. Cela suppose que soit:</p> <ol> <li>l'attribut <code>autoflush</code> est activ\u00e9 au niveau du mod\u00e8le</li> <li>l'utilisateur a effectu\u00e9 un save explicite si l'autoflush n'est     pas actif</li> <li>il n'y a aucun changement sur les tuples en m\u00e9moire par rapport \u00e0 la     valeur charg\u00e9e \u00e0 partir de la base de donn\u00e9es</li> </ol> <p>Si ces conditions sont remplies, alors les tuples en m\u00e9moire sont supprim\u00e9s puis recharg\u00e9s \u00e0 partir de la base de donn\u00e9es en tenant compte des r\u00e8gles pass\u00e9es \u00e0 l'action (r\u00e8gles de filtre, de tri et/ou de pagination)</p> <p>Les param\u00e8tres de l'action peuvent \u00eatre pass\u00e9s selon deux modes distincts:</p> <ul> <li><code>absolute</code>: c'est le mode par d\u00e9faut, dans ce cas l'action     s'attend \u00e0 ce que les param\u00e8tres d'un type d'arrangement (<code>sort</code> ou     <code>filter</code>) soient pass\u00e9s dans leur int\u00e9gralit\u00e9. Cela signifie     que si une r\u00e8gle n'est plus pr\u00e9sente, elle est consid\u00e9r\u00e9e comme     abandonn\u00e9e.</li> <li> <p><code>relative</code>: dans ce cas, l'action s'attend \u00e0 ne recevoir que     les changements de r\u00e8gles par rapport \u00e0 l'\u00e9tat actuel. Cela signifie     que si une r\u00e8gle n'est pas pr\u00e9sente, elle est consid\u00e9r\u00e9e comme     inchang\u00e9e. Les tris avec un ordre vide sont interpr\u00e9t\u00e9s comme des     suppression de crit\u00e8re (le champ n'est plus pris en compte dans le     tri).</p> <p>Dans le cas des r\u00e8gles de tri, le mode relatif b\u00e9n\u00e9ficie d'une option  suppl\u00e9mentaire. Le param\u00e8tre <code>position</code> permet d'indiquer comment la  r\u00e8gle de tri relative doit \u00eatre prise en compte. Les valeurs  possibles sont:</p> <ul> <li><code>start</code> : indique que la r\u00e8gle de tri relative doit \u00eatre ajout\u00e9e      avant les autres. Elle aura donc un poids plus important que les      autres.</li> <li><code>end</code> : indique que la r\u00e8gle de tri relative doit \u00eatre ajout\u00e9e      apr\u00e8s les autres. Elle aura donc un poids moins important que les      autres.</li> </ul> <p>La position par d\u00e9faut est <code>start</code>.</p> </li> </ul>"},{"location":"actions/arrange/#schema","title":"Sch\u00e9ma","text":"<pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"description\": \"This json schema gives prototype of action arrange\",\n    \"title\": \"Action arrange\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"action\": {\n            \"const\": \"arrange\",\n            \"description\": \"Name of the action\",\n            \"type\": \"string\"\n        },\n        \"params\": {\n            \"description\": \"Parameters of current action\",\n            \"type\": \"object\",\n            \"properties\": {\n                \"mode\": {\n                    \"description\": \"Indicates whether the rules of arrangement have to be interpreted absolutely or relatively. Default is 'absolute'\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"absolute\",\n                        \"relative\"\n                    ]\n                },\n                \"position\": {\n                    \"description\": \"Indicates weight of relative sort rule. Value `start` indicates that rule should be placed as first sorting condition. Value `end` indicates that rule should be placed as last one. Default is 'start'\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"start\",\n                        \"end\"\n                    ]\n                },\n                \"filter\": {\n                    \"description\": \"Filtering parameters\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"inverse\": {\n                                \"description\": \"Enable inverse logic for filtering\",\n                                \"type\": \"boolean\"\n                            },\n                            \"condition\": {\n                                \"description\": \"Filtering condition(s)\",\n                                \"type\": \"array\",\n                                \"items\": {\"type\": \"string\"}\n                            },\n                            \"fieldName\": {\n                                \"description\": \"Name of field used as filtering criteria\",\n                                \"type\": \"string\"\n                            },\n                            \"method\": {\n                                \"description\": \"Filtering method\",\n                                \"type\": \"string\",\n                                \"enum\": [\n                                    \"exact\",\n                                    \"contains\",\n                                    \"range\",\n                                    \"list\"\n                                ]\n                            }\n                        }\n                    }\n                },\n                \"modelName\": {\n                    \"description\": \"Name of model onto arrangement is performed\",\n                    \"type\": \"string\"\n                },\n                \"groupName\": {\n                    \"description\": \"Name of group onto arrangement is perform\",\n                    \"type\": \"string\"\n                },\n                \"docId\": {\n                    \"description\": \"Document id\",\n                    \"type\": [\n                        \"integer\",\n                        \"string\"\n                    ]\n                },\n                \"paginate\": {\n                    \"description\": \"Pagination parameters\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"offset\": {\n                            \"description\": \"The offset clause for rows selection\",\n                            \"type\": [\n                                \"integer\",\n                                \"string\"\n                            ]\n                        },\n                        \"limit\": {\n                            \"description\": \"The number of rows to show in page\",\n                            \"type\": [\n                                \"integer\",\n                                \"string\"\n                            ]\n                        }\n                    }\n                },\n                \"sort\": {\n                    \"description\": \"Sorting parameters\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"fieldName\": {\n                                \"description\": \"Name of field used as sorting criteria\",\n                                \"type\": \"string\"\n                            },\n                            \"order\": {\n                                \"description\": \"Sort ordering\",\n                                \"type\": \"string\",\n                                \"enum\": [\n                                    \"asc\",\n                                    \"desc\"\n                                ]\n                            }\n                        }\n                    }\n                }\n            },\n            \"required\": [\n                \"modelName\",\n                \"docId\",\n                \"groupName\"\n            ]\n        }\n    },\n    \"required\": [\n        \"action\",\n        \"params\"\n    ],\n    \"$id\": \"https://ewt.epilogic.ch/action.arrange.schema.json\"\n}\n</code></pre>"},{"location":"actions/clone/","title":"<code>clone</code>","text":""},{"location":"actions/clone/#description","title":"Description","text":"<p>Cl\u00f4nage de dossier.</p> <p>Seuls les \u00e9l\u00e9ments pour lesquels le cl\u00f4nage est activ\u00e9 au niveau de la  descript sont cl\u00f4nables.</p> <p>Le cl\u00f4nage peut \u00eatre param\u00e9tr\u00e9 au moyen d'un mode: le mode permet d'indiquer quels champs doivent \u00eatre clon\u00e9s et lesquels ne doivent pas \u00eatre clon\u00e9s (il est clair que les champs identifiant ne peuvent pas \u00eatre clon\u00e9s).</p> <p>Le mode de copie est \u00e0 d\u00e9finir au niveau de la descript via l'\u00e9l\u00e9ment</p> <pre><code>&lt;clone&gt;\n  &lt;mode name=\"\"&gt;false&lt;/mode&gt;\n  &lt;mode name=\"foo\"&gt;false&lt;/mode&gt;\n  &lt;mode name=\"bar\"&gt;false&lt;/mode&gt;\n&lt;/clone&gt;\n</code></pre>"},{"location":"actions/clone/#schema","title":"Sch\u00e9ma","text":"<pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"description\": \"This json schema gives prototype of action clone\",\n    \"title\": \"Action clone\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"action\": {\n            \"const\": \"clone\",\n            \"description\": \"Name of the action\",\n            \"type\": \"string\"\n        },\n        \"params\": {\n            \"description\": \"Parameters of current action\",\n            \"type\": \"object\",\n            \"properties\": {\n                \"mode\": {\n                    \"description\": \"clone mode\",\n                    \"type\": \"string\"\n                },\n                \"modelName\": {\n                    \"description\": \"Name of model\",\n                    \"type\": \"string\"\n                },\n                \"docId\": {\n                    \"description\": \"Document id\",\n                    \"type\": [\n                        \"integer\",\n                        \"string\"\n                    ]\n                }\n            },\n            \"required\": [\n                \"modelName\",\n                \"docId\"\n            ]\n        }\n    },\n    \"required\": [\n        \"action\",\n        \"params\"\n    ],\n    \"$id\": \"https://ewt.epilogic.ch/action.close.schema.json\"\n}\n</code></pre>"},{"location":"actions/close/","title":"<code>close</code>","text":""},{"location":"actions/close/#description","title":"Description","text":"<p>Fermeture de dossier. Les modifications sont automatiquement enregistr\u00e9es.</p>"},{"location":"actions/close/#schema","title":"Sch\u00e9ma","text":"<pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"description\": \"This json schema gives prototype of action close\",\n    \"title\": \"Action close\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"action\": {\n            \"const\": \"close\",\n            \"description\": \"Name of the action\",\n            \"type\": \"string\"\n        },\n        \"params\": {\n            \"description\": \"Parameters of current action\",\n            \"type\": \"object\",\n            \"properties\": {\n                \"modelName\": {\n                    \"description\": \"Name of model\",\n                    \"type\": \"string\"\n                },\n                \"docId\": {\n                    \"description\": \"Document id\",\n                    \"type\": [\n                        \"integer\",\n                        \"string\"\n                    ]\n                }\n            },\n            \"required\": [\n                \"modelName\",\n                \"docId\"\n            ]\n        }\n    },\n    \"required\": [\n        \"action\",\n        \"params\"\n    ],\n    \"$id\": \"https://ewt.epilogic.ch/action.close.schema.json\"\n}\n</code></pre>"},{"location":"actions/create/","title":"<code>create</code>","text":""},{"location":"actions/create/#description","title":"Description","text":"<p>Cr\u00e9ation de dossier.</p> <p>La m\u00e9thode attend un param\u00e8tre:</p> <code>modelName</code> Le nom du mod\u00e8le de dossier \u00e0 cr\u00e9er"},{"location":"actions/create/#schema","title":"Sch\u00e9ma","text":"<pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"description\": \"This json schema gives prototype of action create\",\n    \"title\": \"Action create\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"action\": {\n            \"const\": \"create\",\n            \"description\": \"Name of the action\",\n            \"type\": \"string\"\n        },\n        \"params\": {\n            \"description\": \"Parameters of current action\",\n            \"type\": \"object\",\n            \"properties\": {\n                \"modelName\": {\n                    \"description\": \"Name of model to instantiate\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"modelName\",\n                \"docId\"\n            ]\n        }\n    },\n    \"required\": [\n        \"action\",\n        \"params\"\n    ],\n    \"$id\": \"https://ewt.epilogic.ch/action.create.schema.json\"\n}\n</code></pre>"},{"location":"actions/delTuple/","title":"<code>delTuple</code>","text":""},{"location":"actions/delTuple/#description","title":"Description","text":"<p>Suppression de tuple.</p>"},{"location":"actions/delTuple/#schema","title":"Sch\u00e9ma","text":"<pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"description\": \"This json schema gives prototype of action delTuple\",\n    \"title\": \"Action delTuple\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"action\": {\n            \"const\": \"delTuple\",\n            \"description\": \"Name of the action\",\n            \"type\": \"string\"\n        },\n        \"params\": {\n            \"description\": \"Parameters of current action\",\n            \"type\": \"object\",\n            \"properties\": {\n                \"modelName\": {\n                    \"description\": \"Name of model\",\n                    \"type\": \"string\"\n                },\n                \"groupName\": {\n                    \"description\": \"Name of group\",\n                    \"type\": \"string\"\n                },\n                \"tupleId\": {\n                    \"description\": \"Tuple id\",\n                    \"type\": [\n                        \"integer\",\n                        \"string\"\n                    ]\n                },\n                \"docId\": {\n                    \"description\": \"Document id\",\n                    \"type\": [\n                        \"integer\",\n                        \"string\"\n                    ]\n                }\n            },\n            \"required\": [\n                \"modelName\",\n                \"docId\",\n                \"groupName\",\n                \"tupleId\"\n            ]\n        }\n    },\n    \"required\": [\n        \"action\",\n        \"params\"\n    ],\n    \"$id\": \"https://ewt.epilogic.ch/action.deltuple.schema.json\"\n}\n</code></pre>"},{"location":"actions/delete/","title":"<code>delete</code>","text":""},{"location":"actions/delete/#description","title":"Description","text":"<p>Suppression de dossier.</p>"},{"location":"actions/delete/#schema","title":"Sch\u00e9ma","text":"<pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"description\": \"This json schema gives prototype of action delete\",\n    \"title\": \"Action delete\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"action\": {\n            \"const\": \"delete\",\n            \"description\": \"Name of the action\",\n            \"type\": \"string\"\n        },\n        \"params\": {\n            \"description\": \"Parameters of current action\",\n            \"type\": \"object\",\n            \"properties\": {\n                \"modelName\": {\n                    \"description\": \"Name of model\",\n                    \"type\": \"string\"\n                },\n                \"docId\": {\n                    \"description\": \"Document id\",\n                    \"type\": [\n                        \"integer\",\n                        \"string\"\n                    ]\n                }\n            },\n            \"required\": [\n                \"modelName\",\n                \"docId\"\n            ]\n        }\n    },\n    \"required\": [\n        \"action\",\n        \"params\"\n    ],\n    \"$id\": \"https://ewt.epilogic.ch/action.delete.schema.json\"\n}\n</code></pre>"},{"location":"actions/dummy/","title":"<code>dummy</code>","text":""},{"location":"actions/dummy/#description","title":"Description","text":"<p>Action dummy. Cette action ne fait aucun traitement hormis la sauvegarde des donn\u00e9es de la page (action qu'elle h\u00e9rite de <code>save</code>)</p>"},{"location":"actions/dummy/#schema","title":"Sch\u00e9ma","text":"<pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"description\": \"This json schema gives prototype of action dummy\",\n    \"title\": \"Action dummy\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"action\": {\n            \"const\": \"dummy\",\n            \"description\": \"Name of the action\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\"action\"],\n    \"$id\": \"https://ewt.epilogic.ch/action.dummy.schema.json\"\n}\n</code></pre>"},{"location":"actions/open/","title":"<code>open</code>","text":""},{"location":"actions/open/#description","title":"Description","text":"<p>Ouverture de dossier.</p> <p>La m\u00e9thode attend deux param\u00e8tres:</p> <code>modelName</code> Le nom du mod\u00e8le de dossier \u00e0 charger <code>docId</code> L'identifiant \u00e0 charger"},{"location":"actions/open/#schema","title":"Sch\u00e9ma","text":"<pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"description\": \"This json schema gives prototype of action open\",\n    \"title\": \"Action open\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"action\": {\n            \"const\": \"open\",\n            \"description\": \"Name of the action\",\n            \"type\": \"string\"\n        },\n        \"params\": {\n            \"description\": \"Parameters of current action\",\n            \"type\": \"object\",\n            \"properties\": {\n                \"modelName\": {\n                    \"description\": \"Name of model\",\n                    \"type\": \"string\"\n                },\n                \"reload\": {\n                    \"description\": \"Flag true/false that indicates if an open document should be reloaded from database\",\n                    \"type\": \"string\"\n                },\n                \"docId\": {\n                    \"description\": \"Document id\",\n                    \"type\": [\n                        \"integer\",\n                        \"string\"\n                    ]\n                },\n                \"enum\": [\n                    \"true\",\n                    \"false\"\n                ]\n            },\n            \"required\": [\n                \"modelName\",\n                \"docId\"\n            ]\n        }\n    },\n    \"required\": [\n        \"action\",\n        \"params\"\n    ],\n    \"$id\": \"https://ewt.epilogic.ch/action.open.schema.json\"\n}\n</code></pre>"},{"location":"actions/reset/","title":"<code>reset</code>","text":""},{"location":"actions/reset/#description","title":"Description","text":"<p>Reset de l'application. Cela a pour cons\u00e9quence un rechargement des configs et un red\u00e9ploiement des applications. Pour le reste, le comportement est le m\u00eame qu'un <code>save</code>.</p>"},{"location":"actions/reset/#schema","title":"Sch\u00e9ma","text":"<pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"description\": \"This json schema gives prototype of action reset\",\n    \"title\": \"Action reset\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"action\": {\n            \"const\": \"reset\",\n            \"description\": \"Name of the action\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\"action\"],\n    \"$id\": \"https://ewt.epilogic.ch/action.reset.schema.json\"\n}\n</code></pre>"},{"location":"actions/save/","title":"<code>save</code>","text":""},{"location":"actions/save/#description","title":"Description","text":"<p>Enregistrement de dossiers en base de donn\u00e9es. La commande enregistre en m\u00e9moire les valeurs de tous les champs de formulaire re\u00e7us dans la requ\u00eate, puis sauvegarde les dossiers correspondant en base de donn\u00e9es.</p>"},{"location":"actions/save/#schema","title":"Sch\u00e9ma","text":"<pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"description\": \"This json schema gives prototype of action save\",\n    \"title\": \"Action save\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"action\": {\n            \"const\": \"save\",\n            \"description\": \"Name of the action\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\"action\"],\n    \"$id\": \"https://ewt.epilogic.ch/action.save.schema.json\"\n}\n</code></pre>"},{"location":"actions/script/","title":"<code>script</code>","text":""},{"location":"actions/script/#description","title":"Description","text":"<p>Ex\u00e9cution de script.</p>"},{"location":"actions/script/#schema","title":"Sch\u00e9ma","text":"<pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"description\": \"This json schema gives prototype of action script\",\n    \"title\": \"Action script\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"action\": {\n            \"const\": \"script\",\n            \"description\": \"Name of the action\",\n            \"type\": \"string\"\n        },\n        \"params\": {\n            \"description\": \"Parameters of current action\",\n            \"type\": \"object\",\n            \"properties\": {\n                \"name\": {\n                    \"description\": \"Name of script to execute\",\n                    \"type\": \"string\"\n                },\n                \"parameters\": {\n                    \"description\": \"Script parameters\",\n                    \"type\": \"object\",\n                    \"properties\": {}\n                }\n            },\n            \"required\": [\"name\"]\n        }\n    },\n    \"required\": [\n        \"action\",\n        \"params\"\n    ],\n    \"$id\": \"https://ewt.epilogic.ch/action.script.schema.json\"\n}\n</code></pre>"},{"location":"actions/setState/","title":"<code>setState</code>","text":""},{"location":"actions/setState/#description","title":"Description","text":"<p>Change l'\u00e9tat du dossier.</p> <p>L'action peut s'utiliser de deux mani\u00e8res diff\u00e9rentes:</p> <ol> <li>Changement explicite d'\u00e9tat: on invoque l'action en indiquant vers quel    \u00e9tat le dossier doit aller</li> <li>Changement implicite d'\u00e9tat: on invoque l'action en indiquant quelle    transition r\u00e9aliser; l'\u00e9tat de destination est donc d\u00e9termin\u00e9 en fonction    de l'\u00e9tat courant et de la transition appel\u00e9e</li> </ol> <p>Il se peut que seule l'une ou l'autre des mani\u00e8res soit possible. Cela d\u00e9pend du mod\u00e8le d'\u00e9tats associ\u00e9 au dossier.</p>"},{"location":"actions/setState/#schema","title":"Sch\u00e9ma","text":"<pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"description\": \"This json schema gives prototype of action setState\",\n    \"title\": \"Action setState\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"action\": {\n            \"const\": \"setState\",\n            \"description\": \"Name of the action\",\n            \"type\": \"string\"\n        },\n        \"params\": {\n            \"oneOf\": [\n                {\n                    \"properties\": {\n                        \"modelName\": {\n                            \"description\": \"Name of model\",\n                            \"type\": \"string\"\n                        },\n                        \"docId\": {\n                            \"description\": \"Document id\",\n                            \"type\": [\n                                \"integer\",\n                                \"string\"\n                            ]\n                        },\n                        \"state\": {\n                            \"description\": \"Name of the new state of document\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"required\": [\n                        \"modelName\",\n                        \"docId\",\n                        \"state\"\n                    ]\n                },\n                {\n                    \"properties\": {\n                        \"modelName\": {\n                            \"description\": \"Name of model\",\n                            \"type\": \"string\"\n                        },\n                        \"docId\": {\n                            \"description\": \"Document id\",\n                            \"type\": [\n                                \"integer\",\n                                \"string\"\n                            ]\n                        },\n                        \"transition\": {\n                            \"description\": \"Name of the transition to fire\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"required\": [\n                        \"modelName\",\n                        \"docId\",\n                        \"transition\"\n                    ]\n                }\n            ],\n            \"description\": \"Parameters of current action\",\n            \"type\": \"object\"\n        }\n    },\n    \"required\": [\n        \"action\",\n        \"params\"\n    ],\n    \"$id\": \"https://ewt.epilogic.ch/action.setstate.schema.json\"\n}\n</code></pre>"},{"location":"actions/setStyle/","title":"<code>setStyle</code>","text":""},{"location":"actions/setStyle/#description","title":"Description","text":"<p>Change la feuille de style courante</p> <p>La fonction permet de forcer une feuille de style en for\u00e7ant le moteur \u00e0 utiliser le style qui la repr\u00e9sente (le mapping entre le style et la feuille de style XSL est d\u00e9fini dans le fichier de config). La fonction s'utilise autant dans le contexte d'un dossier (bien que dans ce cas il est recommand\u00e9 d'utiliser <code>setView</code>) que hors contexte de tout dossier.</p>"},{"location":"actions/setStyle/#schema","title":"Sch\u00e9ma","text":"<pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"description\": \"This json schema gives prototype of action setStyle\",\n    \"title\": \"Action setStyle\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"action\": {\n            \"const\": \"setStyle\",\n            \"description\": \"Name of the action\",\n            \"type\": \"string\"\n        },\n        \"params\": {\n            \"description\": \"Parameters of current action\",\n            \"type\": \"object\",\n            \"properties\": {\n                \"style\": {\n                    \"description\": \"Name of the style to activate\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"style\"]\n        }\n    },\n    \"required\": [\n        \"action\",\n        \"params\"\n    ],\n    \"$id\": \"https://ewt.epilogic.ch/action.setstyle.schema.json\"\n}\n</code></pre>"},{"location":"actions/setView/","title":"<code>setView</code>","text":""},{"location":"actions/setView/#description","title":"Description","text":"<p>Change la vue courante d'un dossier.</p> <p>Une vue est une organisation des groupes d'un dossier. La vue est associ\u00e9e \u00e0 une feuille de style qui a pour t\u00e2che d'afficher le(s) groupe(s) et les champs qui s'y trouvent. Les vues doivent \u00eatre d\u00e9clar\u00e9es au niveau du fichier de config (c'est l\u00e0 que le mapping entre la vue et la feuille de style XSL est d\u00e9fini).</p>"},{"location":"actions/setView/#schema","title":"Sch\u00e9ma","text":"<pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"description\": \"This json schema gives prototype of action setView\",\n    \"title\": \"Action setView\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"action\": {\n            \"const\": \"setView\",\n            \"description\": \"Name of the action\",\n            \"type\": \"string\"\n        },\n        \"params\": {\n            \"description\": \"Parameters of current action\",\n            \"type\": \"object\",\n            \"properties\": {\n                \"modelName\": {\n                    \"description\": \"Name of model\",\n                    \"type\": \"string\"\n                },\n                \"view\": {\n                    \"description\": \"Name of the view to activate\",\n                    \"type\": \"string\"\n                },\n                \"docId\": {\n                    \"description\": \"Document id\",\n                    \"type\": [\n                        \"integer\",\n                        \"string\"\n                    ]\n                }\n            },\n            \"required\": [\n                \"modelName\",\n                \"docId\",\n                \"view\"\n            ]\n        }\n    },\n    \"required\": [\n        \"action\",\n        \"params\"\n    ],\n    \"$id\": \"https://ewt.epilogic.ch/action.setview.schema.json\"\n}\n</code></pre>"},{"location":"endpoints/data/","title":"Endpoint <code>/data</code>","text":"<p>Le servlet <code>/data</code> est en cours de d\u00e9veloppement.</p> <p>Ce servlet permet de lire (en <code>GET</code>) et \u00e9crire (en <code>POST</code>) des donn\u00e9es de dossier. Les r\u00e9f\u00e9rences de champ se font \u00e0 l'aide d'un contexte.</p>"},{"location":"endpoints/rest/","title":"Endpoint <code>/rest</code>","text":"<p>La classe <code>EwtRestServlet</code> est habituellement mapp\u00e9e sur l'url-pattern <code>/rest</code>. La classe permet d'\u00e9valuer un script directement. Elle supporte les requ\u00eates <code>GET</code> et <code>POST</code> et un payload de diff\u00e9rentes formes:</p> <ul> <li>formulaire url-encoded</li> <li>formulaire multipart</li> <li>donn\u00e9es brutes</li> </ul> <p>Le servlet s'attend \u00e0 trouver le nom de l'application et le nom du script \u00e0 ex\u00e9cuter dans l'URL, par exemple:</p> <pre><code>/rest/sample/monscript?param1=foo&amp;param2=bar\n</code></pre> <p>Dans l'exemple ci-dessus, on ex\u00e9cute le script <code>monscript</code> de l'application <code>sample</code> et on passe les param\u00e8tres <code>param1</code> et <code>param2</code> au script. Ces deux param\u00e8tres seront disponibles pour le script via la variable <code>$$</code>.</p> <p>Le servlet reconna\u00eet en outre deux headers (ils sont optionnels):</p> <ul> <li><code>x-ewt-sid</code> : Ce header permet de passer l'identifiant de session; lorsque   ce header est d\u00e9fini, cela permet au serveur de lier la requ\u00eate \u00e0 une   session client. Cela permet d'obtenir d'utiliser des fonctionnalit\u00e9s li\u00e9es   aux dossiers ouverts, etc.</li> <li><code>x-ewt-ctx</code> : Ce header permet de sp\u00e9cifier un contexte, c'est-\u00e0-dire la   r\u00e9f\u00e9rence \u00e0 un dossier, un tuple ou un champ sur lequel le script pourra   travailler.</li> </ul> <p>La variable <code>$$</code> donne la liste des param\u00e8tres d'entr\u00e9e et des champs de formulaires re\u00e7us. Attention, Ewt peut \u00eatre amen\u00e9 \u00e0 modifier les noms de certains param\u00e8tres et/ou de certains champs, notamment dans les cas suivants:</p> <ul> <li>Les param\u00e8tres ou champs dont le nom contient un \"-\" sont \"camelis\u00e9s\",   c'-\u00e0-d. que le \"-\" est supprim\u00e9 et le caract\u00e8re suivant est mis en   majuscules. Ainsi, un param\u00e8tre <code>my-param</code> deviendra <code>myParam</code>. Pour   rappel, les noms de variables sont cens\u00e9s ne contenir que des caract\u00e8res   alphanum\u00e9riques ou le <code>_</code>.</li> <li>Les param\u00e8tres ou champs dont le nom commencent par un chiffre sont   pr\u00e9fix\u00e9s avec le caract\u00e8re <code>_</code>.</li> <li>Le servlet supporte les champs homonymes au niveau du formulaire multipart.   Toutefois les param\u00e8tres ou champs contenant un index, par exemple   <code>file[0]</code>, <code>file[1]</code> sont repris dans un seul param\u00e8tre <code>file</code>. Ce dernier   sera alors un tableau de valeurs.</li> </ul> <p>Exemple de contenu de la variable <code>$$</code> (ici mise en forme en json):</p> <pre><code>{\n    \"contentTypeEx\": \"multipart/form-data\",\n    \"method\": \"POST\",\n    \"workdir\": \"C:/apps/apache-tomcat-9.0.64/work/Catalina/localhost/ewt/649a46e7-cdde-4ec6-9622-39265881a235\",\n    \"payload\": null,\n    \"inputs\": {\n        \"field1\": \"1\u00e92\",\n        \"field2\": \"C:/apps/apache-tomcat-9.0.64/work/Catalina/localhost/ewt/649a46e7-cdde-4ec6-9622-39265881a235/sample.docx\",\n        \"field3\": \"I'm \ud83d\udc4d\ud83c\udffd.\",\n        \"file\": [\n          &lt;file1&gt;,\n          &lt;file2&gt;\n        ],\n        \"other-field\": \"test\"\n    },\n    \"params\": {\n        \"param1\": \"1\u00e93\",\n        \"param2\": \"f\ud83d\udc4d\ud83c\udffdo\"\n    },\n    \"contentType\": \"multipart/form-data; boundary=X-INSOMNIA-BOUNDARY\"\n}\n</code></pre> <p>Dans l'exemple ci-dessus, les \u00e9l\u00e9ments <code>&lt;file1&gt;</code> et <code>&lt;file2&gt;</code> d\u00e9signent des fichiers.</p>"},{"location":"endpoints/rest/#charset-des-formulaires-multiparts","title":"Charset des formulaires multiparts","text":"<p>Les formulaires multiparts peuvent contenir des donn\u00e9es binaires et/ou  textuelles. Il n'existe pas de r\u00e9elle convention concernant l'encoding des  formulaires multipart : ils \u00e9taient majoritairement encod\u00e9s en iso-8859-1,  mais la tendance est \u00e0 les encoder en utf-8 depuis quelques temps, notamment  avec l'introduction de HTML5.</p> <p>Ewt pr\u00e9voit trois fa\u00e7ons de traiter l'encoding des formulaires multipart:</p> <ol> <li>Faire en sorte que la requ\u00eate envoy\u00e9e \u00e0 Ewt utilise UTF-8 pour      l'encodage des valeurs, mais \u00e9galement des noms de fichiers pass\u00e9s en      headers du multipart.</li> <li> <p>Sp\u00e9cifier le charset par d\u00e9faut auquel le servlet devra s'attendre. </p> <p>Cela consiste \u00e0 sp\u00e9cifier le param\u00e8tre d'initialisation suivant au  niveau du fichier <code>web.xml</code>. Dans ce cas ci-dessous, on indique que le  servlet doit toujours s'attendre \u00e0 recevoir des valeurs en iso-8859-1.</p> <pre><code>&lt;servlet&gt;\n  &lt;servlet-name&gt;EwtRestServlet&lt;/servlet-name&gt;\n  &lt;servlet-class&gt;ch.epilogic.ewt.servlets.EwtRestServlet&lt;/servlet-class&gt;\n  &lt;init-param&gt;\n    &lt;param-name&gt;default-charset&lt;/param-name&gt;\n    &lt;param-value&gt;iso-8859-1&lt;/param-value&gt;\n  &lt;/init-param&gt;\n&lt;/servlet&gt;\n</code></pre> </li> <li> <p>Faire en sorte que l'appelant sp\u00e9cifie le charset qu'il utilise.      Cela peut se faire de deux fa\u00e7ons:</p> <ol> <li>Au moyen d'un param\u00e8tre d'URL <code>_charset_</code></li> <li>Au moyen d'un champ de formulaire nomm\u00e9 <code>_charset_</code></li> </ol> <p>Cette option s'inspire de la fonctionnalit\u00e9 mise en place dans certains  navigateurs (dont Chrome et Firefox) pour permettre de sp\u00e9cifier le  charset utilis\u00e9 dans les formulaires multipart. En effet, si un  formulaire HTML contient un champ cach\u00e9 de la forme suivante: </p> <pre><code>&lt;input type=\"hidden\" name=\"_charset_\" value=\"\"/&gt;\n</code></pre> <p>Le navigateur alimentera sa valeur avec le nom du charset utilis\u00e9. Ewt  \u00e9tend la fonctionnalit\u00e9 en autorisant ce champ \u00e0 figurer en tant que  param\u00e8tre d'URL.</p> </li> </ol>"},{"location":"endpoints/soap/","title":"Endpoint <code>/soap</code>","text":"<p>L'endpoint <code>/soap</code> est mapp\u00e9 sur un servlet qui prend en charge les requ\u00eates  SOAP. Lorsqu'on invoque le servlet en GET, le moteur fournit un inventaire  des services disponibles.</p> <p>Mise \u00e0 jour de script</p> <p>En mode <code>dev</code>, le moteur est cens\u00e9 d\u00e9tecter les modifications apport\u00e9es  aux scripts et les recharger \u00e0 la vol\u00e9e. Le m\u00e9canisme ne s'applique pas  \u00e0 la publication de script en tant que service.</p> <p>En clair, si vous ajoutez une annnotation <code>@accept(servlet=\"soap\")</code> \u00e0  votre script, la modification sera bien d\u00e9tect\u00e9e, mais le script ne sera  pas pour autant publi\u00e9 en tant que service. L'op\u00e9ration de publication  n'est r\u00e9alis\u00e9e que lors du chargement ou du reset de l'application.</p>"},{"location":"endpoints/web/","title":"Endpoint <code>/web</code>","text":"<p>La classe <code>EwtWebServlet</code> est habituellement mapp\u00e9e sur l'url-pattern <code>/web</code> et prend en charge les requ\u00eates <code>GET</code> et <code>POST</code> envoy\u00e9es depuis un navigateur.</p> <p>Dans le cas des requ\u00eates <code>GET</code>, le servlet analyse l'URL et retourne g\u00e9n\u00e9ralement la page d'accueil de l'application concern\u00e9e.</p> <p>Dans le cas des requ\u00eates <code>POST</code>, le servlet traite le formulaire re\u00e7u. La servlet supporte les formulaires de type url-encoded et multipart. Les deux types de formulaires sont trait\u00e9es de mani\u00e8re transparente et unifi\u00e9e, si bien que les requ\u00eates de formulaire peuvent utiliser l'un ou l'autre de ces types d'encodage, voire les deux en alternance. L'id\u00e9e est d'utiliser url-encoded en standard, et de basculer sur multipart si une donn\u00e9e binaire doit \u00eatre envoy\u00e9e \u00e0 l'application.</p> <p>Charset des formulaires multipart</p> <p>Par d\u00e9faut Ewt traite tous les formulaires HTML en partant du principe  qu'ils utilisent le charset UTF-8. Il se peut toutefois que l'on doive envoyer des donn\u00e9es multipart dans un autre charset.</p> <p>Les navigateurs actuels ne v\u00e9hiculent pas le charset. Pour permettre \u00e0 la page web d'indiquer \u00e0 Ewt quel charset il doit utiliser pour le parsing du formulaire multipart, il est possible d'ajouter un param\u00e8tre <code>_charset</code> dans l'URL. Lorsque ce param\u00e8tre est sp\u00e9cifi\u00e9, les donn\u00e9es textuelles pr\u00e9sentes dans le multipart sont interpr\u00e9t\u00e9es selon le charset indiqu\u00e9.</p> <p>Exemple de formulaire HTML for\u00e7ant le charset iso-8859-1:</p> <pre><code>&lt;form id=\"form\" method=\"post\"\n      action=\"{/output/session/formAction}?_charset=iso-8859-1\"\n      accept-charset=\"ISO-8859-1\"\n      enctype=\"multipart/form-data\"\n      autocomplete=\"off\"&gt;\n</code></pre>"},{"location":"endpoints/web/#commandes-et-actions","title":"Commandes et actions","text":"<p>Les commandes sont les ordres envoy\u00e9s \u00e0 Ewt au moyen un formulaire HTML post\u00e9 sur le servlet <code>/web</code>. Elles entra\u00eenent une action \u00e0 faire par le moteur. Commande et action sont li\u00e9es : la commande est le moyen de communiquer une action au moteur.</p> <p>La commande est d\u00e9crite au moyen d'un arbre json structur\u00e9 ainsi:</p> <pre><code>{\n  \"action\": \"some_action\",\n  \"params\": {\n    \"name\": \"sample\",\n    \"parameters\": {\n        \"var1\": \"foo\",\n        \"var2\": \"bar\",\n        ...\n    }\n  }, \n  \"supplement\": {\n    ...\n  }\n}\n</code></pre> <p>Le prototype de chaque action sp\u00e9cifie le sch\u00e9ma json de l'arbre attendu.</p> <p>Une commande est g\u00e9n\u00e9ralement constitu\u00e9e de deux \u00e9l\u00e9ments:</p> <ol> <li>[requis] Le nom de l'action qui est v\u00e9hicul\u00e9 au moyen de la propri\u00e9t\u00e9    <code>action</code></li> <li>[optionnel] Les param\u00e8tres d'appel, v\u00e9hicul\u00e9s au moyen de la propri\u00e9t\u00e9    <code>params</code>.    Chaque action attend des param\u00e8tres sp\u00e9cifiques, voire aucun param\u00e8tre    dans certains cas. Les param\u00e8tres sont des paires cl\u00e9/valeur o\u00f9 la cl\u00e9    est une cha\u00eene de caract\u00e8res et la valeur une valeur lit\u00e9rale, un tableau    ou n'importe quel type d'objet. Se reporter au prototype de chaque action    pour en conna\u00eetre la liste et la forme</li> </ol> <p>La commande est doit \u00eatre transmise \u00e0 Ewt via un champ de formulaire portant le nom <code>EWT:COMMAND</code>.</p> <p>Le moteur impl\u00e9mente les actions suivantes.</p> <ul> <li><code>addTuple</code></li> <li><code>admin</code></li> <li><code>arrange</code></li> <li><code>clone</code></li> <li><code>close</code></li> <li><code>create</code></li> <li><code>delete</code></li> <li><code>delTuple</code></li> <li><code>dummy</code></li> <li><code>open</code></li> <li><code>reset</code></li> <li><code>save</code></li> <li><code>script</code></li> <li><code>setState</code></li> <li><code>setStyle</code></li> <li><code>setView</code></li> </ul>"},{"location":"endpoints/web/#contexte","title":"Contexte","text":"<p>La commande peut \u00eatre accompagn\u00e9e d'un contexte. Le contexte est utile car il permet de pr\u00e9ciser sur quel dossier porte la commande. Sans contexte, le moteur ne saurait pas sur quel dossier appliquer la commande, ce qui est probl\u00e9matique lorsque l'on a plusieurs dossiers ouverts \u00e0 la fois.</p> <p>Le contexte est \u00e0 transmettre via le champ de formulaire portant le nom <code>EWT:CONTEXT</code>. La valeur de contexte doit \u00eatre une valeur uuid \u00e0 reprendre de l'arbre de sortie g\u00e9n\u00e9r\u00e9 par Ewt.</p>"},{"location":"endpoints/web/#fonctionnement-du-servlet","title":"Fonctionnement du servlet","text":"<p>Ce chapitre d\u00e9crit le fonctionnement du servlet <code>/web</code>. Il est pr\u00e9sent\u00e9 uniquement pour avoir une id\u00e9e des m\u00e9canismes mis en \u0153uvre au sein d'Ewt lors du traitement d'une requ\u00eate.</p> <ol> <li>Une requ\u00eate GET ou POST arrive, elle est prise en charge par la classe     <code>EwtWebServlet</code>. Les requ\u00eates GET et POST sont trait\u00e9es de la m\u00eame fa\u00e7on.</li> <li>Le servlet d\u00e9cortique l'URL pour en extraire le nom de l'application. Une     erreur 404 est retourn\u00e9e si l'application n'existe pas.</li> <li>Le servlet essaie de retrouver la session du client. Dans le cas o\u00f9 il     ne peut pas trouver de session, alors il effectue un check de policy     pour v\u00e9rifier que l'utilisateur connect\u00e9 poss\u00e8de les droits suffisants     pour acc\u00e9der \u00e0 l'application. Une erreur 403 est retourn\u00e9e en cas d'\u00e9chec.     Si la policy est v\u00e9rifi\u00e9e, une nouvelle session client est cr\u00e9\u00e9e.</li> <li>La session client est nettoy\u00e9e, c'est-\u00e0-dire que ses \u00e9l\u00e9ments non     persistants (requ\u00eate/r\u00e9ponse pr\u00e9c\u00e9dente, messages, contenus, dossiers     charg\u00e9s temporairement, objets transients, style temporaire, etc.) sont     r\u00e9initialis\u00e9s.</li> <li>Le sujet (utilisateur) est associ\u00e9 \u00e0 la session client</li> <li>La request et la response HTTP sont associ\u00e9s \u00e0 la session client</li> <li>Le contenu de la requ\u00eate est valid\u00e9</li> <li> <p>La requ\u00eate est trait\u00e9e. Le traitement se d\u00e9roule en plusieurs \u00e9tapes:</p> <ul> <li>parsing de la commande</li> <li>validation de la commande, i.e. contr\u00f4le que la commande est soit   vide, soit d\u00e9finie avec tous les param\u00e8tres attendus</li> <li>pr\u00e9-traitement de la commande : le pr\u00e9-traitement parse et valide tous les   \u00e9l\u00e9ments de la commande; c'est par exemple \u00e0 cette \u00e9tape que l'on   s'assure qu'il n'y a pas d'injection XSS, que les champs ont un format   valide, que les champs indiqu\u00e9s dans le payload de la requ\u00eate sont bien   cens\u00e9s pouvoir \u00eatre modifi\u00e9s, etc.</li> <li>ex\u00e9cution de la commande : enregistrement des modifications au niveau   de la session et au niveau de la base de donn\u00e9es</li> </ul> </li> <li> <p>Pr\u00e9paration de la r\u00e9ponse. Cette \u00e9tape consiste \u00e0 purger les tables de     mapping des noms de champs (utilis\u00e9 pour \u00e9tablir la correspondance entre     les champs de dossier et les uuid utilis\u00e9s dans le formulaire HTML)</p> </li> <li> <p>G\u00e9n\u00e9ration de la r\u00e9ponse. Cette op\u00e9ration est r\u00e9alis\u00e9e par la classe     EwtOutputWeb:</p> <ul> <li>le moteur d\u00e9termine le style \u00e0 utiliser et charge ce style</li> <li>l'arbre xml de sortie est construit</li> <li>l'arbre xml de sortie est transform\u00e9 au moyen du style afin d'obtenir   la r\u00e9ponse qui est renvoy\u00e9e au client</li> </ul> </li> </ol>"},{"location":"endpoints/websocket/","title":"Endpoint <code>/websocket</code>","text":""},{"location":"endpoints/websocket/#configuration","title":"Configuration","text":"<p>Ewt supporte les WebSockets. Ils ne sont cependant activ\u00e9s qu'\u00e0 la condition  o\u00f9 le path de l'endpoint est d\u00e9fini. Pour ce faire, il existe deux solutions:</p> <ol> <li> <p>D\u00e9finir le path de l'endpoint au niveau du fichier <code>web.xml</code> \u00e0 l'aide du      param\u00e8tre de contexte <code>websocket-endpoint-path</code>. Cela se fait par      exemple de la fa\u00e7on suivante (voir lignes en surbrillance):</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee\n                             http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n         version=\"4.0\"\n         metadata-complete=\"true\"&gt;\n\n    &lt;!-- Initialisation --&gt;\n\n    &lt;context-param&gt;\n        &lt;param-name&gt;application-root-path&lt;/param-name&gt;\n        &lt;param-value&gt;${env:EWT_APPLICATION_ROOT_PATH}&lt;/param-value&gt;\n    &lt;/context-param&gt;\n    &lt;context-param&gt;\n        &lt;param-name&gt;websocket-endpoint-path&lt;/param-name&gt;\n        &lt;param-value&gt;/websocket&lt;/param-value&gt;\n    &lt;/context-param&gt;\n\n    &lt;listener&gt;\n        &lt;listener-class&gt;ch.epilogic.ewt.core.EwtServletContextListener&lt;/listener-class&gt;\n    &lt;/listener&gt;\n\n  ...\n</code></pre> <p>Attention, l'endpoint WebSocket n'est pas un servlet et ne doit pas \u00eatre  d\u00e9clar\u00e9 comme les autres servlets. En r\u00e9alit\u00e9 l'endpoint est cr\u00e9\u00e9 par  Ewt \u00e0 l'initialisation du moteur.</p> </li> <li> <p>D\u00e9finir le path de l'endpoint via la propri\u00e9t\u00e9 <code>websocket-endpoint-path</code>      dans le fichier bootstrap d'Ewt.</p> <p>Dans le cas o\u00f9 la propri\u00e9t\u00e9 est d\u00e9finie \u00e0 la fois au niveau du <code>web.xml</code> et du fichier bootstrap, c'est la valeur de ce dernier qui prime.</p> </li> </ol>"},{"location":"endpoints/websocket/#utilisation","title":"Utilisation","text":"<p>Une URL de websocket peut prendre l'une des formes suivantes:</p> <pre><code>ws://host:port/ewt/websocket/application/script/session\nws://host:port/ewt/websocket/application/script/session/context\n</code></pre> <p>Les \u00e9quivalents utilisant le scheme <code>wss://</code> sont \u00e9galement disponibles,  sous r\u00e9serve que le serveur d'application soit correctement configur\u00e9.</p> <p>La partie <code>application</code> attend le nom de l'application.</p> <p>La partie <code>script</code> attend le nom du script qui prendra en charge les  messages envoy\u00e9s par le WebSocket.</p> <p>La partie <code>session</code> attend l'identifiant de session que l'on retrouve dans  l'arbre de sortie du moteur sous <code>/output/session/@id</code>. Cet \u00e9l\u00e9ment est  n\u00e9cessaire pour identifier le sujet (utilisateur) et v\u00e9rifier les  autorisations.</p> <p>La partie <code>context</code> attend l'identifiant de contexte que l'on retrouve dans  l'arbre de sortie du moteur sous <code>/output/documents/document/@context</code>. Cet  \u00e9l\u00e9ment est optionnel. Il permet de lier les sessions WebSocket \u00e0 un dossier en  particulier.</p> <p>L'ensemble des \u00e9l\u00e9ments <code>application</code>, <code>script</code> et <code>context</code>  constituent un canal. Toutes les sessions qui se connectent \u00e0 un m\u00eame canal  sont en quelque sorte li\u00e9es. Par exemple dans le cas d'un chat, on peut  voir le canal comme un groupe de discussion. </p>"},{"location":"ewt/exceptions/","title":"Les exceptions","text":"<p>Ewt d\u00e9finit diff\u00e9rentes classes d'exceptions dans le package  <code>ch.epilogic.ewt.throwable</code>.</p> <pre><code>---\ntitle: Ewt Exceptions diagram \n---\nclassDiagram\n    direction LR\n    note for EwtException \"Exception non bloquante\\npour le thread\"\n    note for EwtRuntimeException \"Exception qui met\\nimm\u00e9diatement fin au thread\"\n    note for EwtViolation \"Exception emp\u00eachant l'ex\u00e9cution\\nd'une action, pour raison\\nde s\u00e9curit\u00e9 ou de non\\nconformit\u00e9 des param\u00e8tres d'entr\u00e9e\"\n\n    Exception &lt;|-- EwtException\n    Error &lt;|-- EwtError\n    RuntimeException &lt;|-- EwtRuntimeException\n    RuntimeException &lt;|-- EwtInternalException\n\n    EwtException &lt;|-- EwtContextException\n    EwtException &lt;|-- EwtScriptException\n    EwtException &lt;|-- EwtViolation\n\n    EwtRuntimeException &lt;|-- EwtConfigurationException\n\n    EwtContextException &lt;|-- EwtOptimisticLockException\n    EwtContextException &lt;|-- EwtPessimisticLockException\n\n    class EwtException {\n        +buildXmlOutput()\n        +buildMessage()\n    }\n\n    class EwtRuntimeException {\n    }\n\n    class EwtContextException {\n        -EwtDocumentContextualisable source\n        +getSource()\n        +buildXmlOutput()\n    }\n\n    class EwtOptimisticLockException {\n        +EwtLockingLevel lockingLevel\n        +String lockingCause\n        +getLockingLevel()\n        +getLockingCause()\n        +buildXmlOutput()\n    }\n\n    class EwtPessimisticLockException {\n        -EwtLockingLevel lockingLevel\n        -String cause\n        +getLockingLevel()\n        +getLockingCause()\n        +buildXmlOutput()\n    }\n\n    class EwtError {\n    }\n\n    class EwtViolation {\n    }\n\n    class EwtScriptThrowable {\n    }</code></pre> <p>Des throwable sont \u00e9galement d\u00e9clar\u00e9s en tant que classes statiques dans  <code>EwtScriptProcessor</code>. Ces derniers servent \u00e0 piloter l'ex\u00e9cution d'un script.</p> <pre><code>---\ntitle: Script throwables diagram \n---\nclassDiagram\n    direction LR\n    note for EwtScriptThrowable \"Type d'exception permettant\\nde piloter l'ex\u00e9cution d'un script\"\n\n    Throwable &lt;|-- EwtScriptThrowable\n\n    EwtScriptThrowable &lt;|-- EwtScriptContinueThrowable\n    EwtScriptThrowable &lt;|-- EwtScriptBreakThrowable\n    EwtScriptThrowable &lt;|-- EwtScriptReturnThrowable\n    EwtScriptThrowable &lt;|-- EwtScriptThrowThrowable\n    EwtScriptThrowable &lt;|-- EwtScriptTimeoutThrowable\n    EwtScriptThrowable &lt;|-- EwtScriptExitThrowable\n    EwtScriptThrowable &lt;|-- EwtScriptInterruptThrowable\n\n    class EwtScriptThrowable {\n    }</code></pre>"},{"location":"lessons/","title":"\u00c0 propos","text":"<p>Ce chapitre pr\u00e9sente diff\u00e9rents tutoriels pour faciliter la prise en main  d'Ewt et cr\u00e9er une application simple.</p>"},{"location":"lessons/01_intro/","title":"Introduction","text":"<p>Cette documentation est un guide de formation rapide pour construire une  application Ewt. Il vient en compl\u00e9ment de la documentation de r\u00e9f\u00e9rence  mais ne la remplace pas.</p>"},{"location":"lessons/01_intro/#serveur-dapplication","title":"Serveur d'application","text":"<p>En pr\u00e9ambule, nous commen\u00e7ons par d\u00e9crire comment mettre en place un serveur  d'application. Pour ce faire, nous allons mettre en place un serveur Apache  Tomcat et un environnement java.</p> <p>Le but ici n'est pas de mettre en place un serveur de production, mais  uniquement un environnement de d\u00e9veloppement qui nous permettra de r\u00e9aliser  les diff\u00e9rentes le\u00e7ons. Par cons\u00e9quent les aspects de s\u00e9curit\u00e9 (notamment  li\u00e9 \u00e0 l'utilisation d'un compte administrateur pour l'ex\u00e9cution du serveur) ne  font pas l'objet de la pr\u00e9sente documentation.</p>"},{"location":"lessons/01_intro/#java","title":"Java","text":"<p>Le site  https://adoptium.net/temurin/releases/  fournit diff\u00e9rentes versions de java. Pour notre exemple, nous choisissons la  version jdk-11.0.19+7 pour Windows en architecture x64 au format ZIP.</p> <p>\u00c0 l'heure o\u00f9 ce document est r\u00e9dig\u00e9, l'URL de t\u00e9l\u00e9chargement est:</p> <p>https://objects.githubusercontent.com/github-production-release-asset-2e65be/372924883/1262e14b-e236-41ac-8471-66fd8a490ddc?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20230629%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20230629T091012Z&amp;X-Amz-Expires=300&amp;X-Amz-Signature=835d1263b4c5a39b8306771aeba4ac984ba7fadb9a85fbfdec1931323c05c4a0&amp;X-Amz-SignedHeaders=host&amp;actor_id=109016394&amp;key_id=0&amp;repo_id=372924883&amp;response-content-disposition=attachment%3B%20filename%3DOpenJDK11U-jdk_x64_windows_hotspot_11.0.19_7.zip&amp;response-content-type=application%2Foctet-stream</p> <p>Une fois le t\u00e9l\u00e9chargement termin\u00e9, nous d\u00e9zippons le contenu de l'archive  dans un dossier. Dans notre cas, nous d\u00e9zippons dans le dossier  <code>C:\\apps\\java</code>. L'ex\u00e9cutable java est donc disponible via le chemin suivant:</p> <p>C:\\apps\\java\\jdk-11.0.19+7\\bin\\java.exe</p>"},{"location":"lessons/01_intro/#apache-tomcat","title":"Apache Tomcat","text":""},{"location":"lessons/01_intro/#installation","title":"Installation","text":"<p>Apache Tomcat peut \u00eatre t\u00e9l\u00e9charg\u00e9 depuis le site  https://tomcat.apache.org/. Dans notre cas, nous optons pour la version 9, \u00e9galement au format ZIP  (cliquer sur \"Tomcat 9\" dans la section \"Download\", puis cliquer sur \"zip\"  dans la liste de \"Binary Distribuions\" pour la partie \"Core\").</p> <p>\u00c0 l'heure o\u00f9 ce document est r\u00e9dig\u00e9, l'URL de t\u00e9l\u00e9chargement est:</p> <p>https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.76/bin/apache-tomcat-9.0.76.zip</p> <p>Une fois le t\u00e9l\u00e9chargement termin\u00e9, nous d\u00e9zippons le contenu de l'archive  dans un dossier. Dans notre cas, nous d\u00e9zippons dans le dossier <code>C:\\apps</code>.  Le batch de d\u00e9marrage de tomcat est donc disponible via le chemin suivant:</p> <p>C:\\apps\\apache-tomcat-9.0.76\\bin\\startup.bat</p> <p>Pour nous assurer que Tomcat d\u00e9marre bien avec la version de java que nous  avons t\u00e9l\u00e9charg\u00e9, nous modifions l\u00e9g\u00e8rement le script de d\u00e9marrage de  tomcat. Nous en profitons \u00e9galement pour d\u00e9finir le charset et fixer le  mode de chargement des locales. Pour cela:</p> <ul> <li>\u00c9ditez le fichier <code>C:\\apps\\apache-tomcat-9.0.76\\bin\\startup.bat</code> \u00e0 l'aide      d'un \u00e9diteur de texte du style Notepad, VS-Code ou Notepad++ (mais pas      Word !)</li> <li> <p>Ajoutez les lignes suivantes apr\u00e8s l'instruction <code>setlocal</code> du d\u00e9but de      fichier puis enregistrez la modification (adaptez \u00e9ventuellement au path que      vous avez utilis\u00e9):</p> <pre><code>set JRE_HOME=C:\\apps\\java\\jdk-11.0.19+7\nset JAVA_OPTS=-Dfile.encoding=UTF-8 -Djava.locale.providers=COMPAT\n</code></pre> </li> </ul> <p>On peut alors tester que le serveur d\u00e9marre correctement. Pour cela il  suffit de double-cliquer sur le fichier  <code>C:\\apps\\apache-tomcat-9.0.76\\bin\\startup.bat</code>. Une fen\u00eatre devrait s'ouvrir  et afficher des informations en texte. On doit notamment y voir la mention  de la version de java que nous avons install\u00e9e.</p> <p>Vous pouvez vous assurer que le serveur est bien en place en ouvrant un  navigateur et en allant sur l'adresse  http://localhost:8080/. Vous devriez  alors voir appara\u00eetre la page d'accueil de Tomcat.</p>"},{"location":"lessons/01_intro/#configuration","title":"Configuration","text":"<p>La page d'accueil de Tomcat mentionne que, pour des raisons de s\u00e9curit\u00e9, les  acc\u00e8s \u00e0 l'application de gestion d'applications est limit\u00e9e. Nous  n'allons pas utiliser cette application, mais nous devons malgr\u00e9 tout  modifier le fichier de configuration des comptes utilisateurs.</p> <p>En premier lieu, le serveur d'application peut \u00eatre arr\u00eat\u00e9. Pour ce faire,  effectuez un contr\u00f4le clavier <code>CTRL+C</code> dans la fen\u00eatre de tomcat. Cela  stoppe tomcat et ferme la fen\u00eatre.</p> <ul> <li>\u00c9ditez le fichier <code>C:\\apps\\apache-tomcat-9.0.76\\conf\\tomcat-users.xml</code> \u00e0       l'aide d'un \u00e9diteur de texte</li> <li> <p>\u00c0 la fin du fichier, juste avant la ligne <code>&lt;/tomcat-users&gt;</code>, ajoutez les       lignes suivantes:</p> <pre><code>&lt;role rolename=\"EWT\"/&gt;\n&lt;user username=\"user\" password=\"1234\" roles=\"EWT\"/&gt;\n</code></pre> </li> <li> <p>Enregistrez les modifications</p> </li> </ul> <p>Nous avons ainsi pr\u00e9par\u00e9 un utilisateur de test pour notre application et  lui avons assign\u00e9 un role <code>EWT</code>. Il s'agit d'un r\u00f4le technique qui est  n\u00e9cessaire pour se connecter \u00e0 une application Ewt dans la configuration  d'origine du moteur. Ce comportement peut \u00eatre modifi\u00e9 en \u00e9ditant le  descripteur d'application <code>web.xml</code> pr\u00e9sent dans le WAR d'Ewt. Ce sujet sera  abord\u00e9 dans le cadre d'une autre le\u00e7on. </p>"},{"location":"lessons/01_intro/#deploiements","title":"D\u00e9ploiements","text":"<p>Apache Tomcat est fourni nativement avec plusieurs applications Web. Nous  avons d\u00e9j\u00e0 eu l'occasion de nous connecter \u00e0 l'une d'elle lorsque nous avons  ouvert la page http://localhost:8080/.</p> <p>Dans la suite des le\u00e7ons, nous n'aurons pas besoin de ces applications. Par  cons\u00e9quent nous pouvons les retirer (mais ce n'est pas obligatoire). Pour ce  faire, ouvrez le r\u00e9pertoire <code>C:\\apps\\apache-tomcat-9.0.76\\webapps</code> et  supprimez les 5 dossiers qui y figurent.</p> <p>M\u00e9thode de d\u00e9ploiement</p> <p>Tout au long de ces tutoriels, nous restons neutres en terme de  m\u00e9thode de d\u00e9ploiement. Les le\u00e7ons ne sont pas orient\u00e9es vers un  syst\u00e8mes de d\u00e9ploiement en particulier et nous d\u00e9crivons les op\u00e9rations  de fa\u00e7on volontairement \"bas niveau\" pour ne pas imposer de technologie  particuli\u00e8re concernant le d\u00e9ploiement. Une automatisation des processus  \u00e0 l'aide d'outils plus avanc\u00e9s est possible mais ne fait pas l'objet des  pr\u00e9sentes le\u00e7ons.</p> <p>Profitons-en pour d\u00e9ployer Ewt. Pour ce faire, collez simplement le fichier  <code>ewt.war</code> dans ce dossier <code>webapps</code>. L'application sera automatiquement  d\u00e9ploy\u00e9e au prochain d\u00e9marrage de tomcat. On peut le v\u00e9rifier en d\u00e9marrant \u00e0  nouveau Tomcat, de la m\u00eame fa\u00e7on que nous l'avons fait pr\u00e9c\u00e9demment  (double-click sur le fichier <code>C:\\apps\\apache-tomcat-9.0.76\\bin\\startup.bat</code>).</p> <p>Gestion des accents dans la console Windows</p> <p>Il se peut que la console Windows n'affiche pas correctement les accents  et les caract\u00e8res sp\u00e9ciaux. Cela vient du fait que le batch  <code>catalina.bat</code> d\u00e9marre la console \u00e0 l'aide d'une instruction <code>start</code>. Une solution simple pour pallier ce d\u00e9faut consiste \u00e0 modifier le batch  de la mani\u00e8re suivante:</p> <ul> <li>\u00c9ditez le fichier <code>C:\\apps\\apache-tomcat-9.0.76\\bin\\catalina.bat</code></li> <li> <p>Ajoutez la ligne suivante juste en-dessous de l'instruction      <code>setlocal</code> au d\u00e9but du fichier:</p> <pre><code>chcp 65001\n</code></pre> </li> <li> <p>Recherchez et remplacez la ligne</p> <pre><code>set _EXECJAVA=start \"%TITLE%\" %_RUNJAVA%\n</code></pre> <p>par</p> <pre><code>set _EXECJAVA=%_RUNJAVA%\n</code></pre> </li> <li> <p>Sauvegardez les modifications et relancez Tomcat</p> </li> </ul> <p>Le log de d\u00e9marrage devrait alors indiquer que l'application \"ewt\" a d\u00e9marr\u00e9  \u00e0 l'aide d'un message de ce genre:</p> <pre><code>12:00:00.000 INFO  ch.epilogic.ewt.core.EwtMainInstance.&lt;init&gt;() @56 - === Creating new Ewt instance ===  \n12:00:00.000 INFO  ch.epilogic.ewt.core.EwtMainInstance.&lt;init&gt;() @57 -\n\n    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  \n    \u2588\u2588        \u2588\u2588    \u2588\u2588  \u2588\u2588  \u2588\u2588    \u2588\u2588\u2588\u2588\u2588\u2588  \n    \u2588\u2588    \u2588\u2588  \u2588\u2588    \u2588\u2588  \u2588\u2588  \u2588\u2588        \u2588\u2588  \n    \u2588\u2588        \u2588\u2588    \u2588\u2588  \u2588\u2588  \u2588\u2588    \u2588\u2588\u2588\u2588\u2588\u2588  \n    \u2588\u2588    \u2588\u2588\u2588\u2588\u2588\u2588            \u2588\u2588    \u2588\u2588  \u2588\u2588  \n    \u2588\u2588        \u2588\u2588            \u2588\u2588        \u2588\u2588  \n    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  \n    version 0.0.1 \ud83d\ude80 build 3992  \n\n12:00:00.000 INFO  ch.epilogic.ewt.core.EwtMainInstance.initialize() @118 - Ewt instance initialization  \n12:00:00.000 INFO  ch.epilogic.ewt.core.EwtMainInstance.initialize() @119 -   log debug mode status: ON  \n12:00:00.000 INFO  ch.epilogic.ewt.core.EwtMainInstance.initialize() @120 -   application root path: C:/opt/ewt/  \n12:00:00.000 INFO  ch.epilogic.ewt.core.EwtMainInstance.initialize() @121 -   work directory: C:/apps/apache-tomcat-9.0.76/work/Catalina/localhost/ewt/  \n29-Jun-2023 12:00:00.000 AVERTISSEMENT [main] org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom La cr\u00e9ation de l'instance de SecureRandom pour le g\u00e9n\u00e9rateur d'id de session en utilisant [SHA1PRNG] a pris [282] millisecondes  \n29-Jun-2023 12:00:00.000 INFOS [main] org.apache.catalina.startup.HostConfig.deployWAR Le d\u00e9ploiement de l'archive de l'application web [C:\\apps\\apache-tomcat-9.0.76\\webapps\\ewt.war] s'est termin\u00e9 en [6'283] ms  \n29-Jun-2023 12:00:00.000 INFOS [main] org.apache.coyote.AbstractProtocol.start D\u00e9marrage du gestionnaire de protocole [\"http-nio-8080\"]  \n29-Jun-2023 12:00:00.000 INFOS [main] org.apache.catalina.startup.Catalina.start Le d\u00e9marrage du serveur a pris [6675] millisecondes  \n</code></pre>"},{"location":"lessons/02_helloworld/","title":"Hello World","text":"<p>Comme tout bon tuto en ligne, commen\u00e7ons avec un exemple qui effectue un  simple \"Hello World!\". Ce projet permettra de mettre en place les bases d'une application.</p> <p>Si cela n'est pas d\u00e9j\u00e0 fait, veuillez d\u00e9buter avec le document  <code>01 - intro.md</code> qui construit l'environnement que nous  utilisons dans le pr\u00e9sent exercice. </p>"},{"location":"lessons/02_helloworld/#structure-de-lapplication","title":"Structure de l'application","text":"<p>On commence par cr\u00e9er l'arborescence de l'application. Dans le cas pr\u00e9sent,  on peut se contenter d'un fichier de configuration et d'un script. Dans la  version actuelle, Ewt est pr\u00e9-configur\u00e9 pour charger les applications depuis  le dossier <code>/opt/ewt/</code>. Nous allons donc construire notre application \u00e0 cet  endroit. L'arborescence aura la forme suivante:</p> <pre><code>C:\\opt\\ewt\n\u2514\u2500\u2500\u2500hello\n    \u251c\u2500\u2500\u2500policies\n    \u2502   \u2514\u2500\u2500\u2500main.policy\n    \u251c\u2500\u2500\u2500scripts\n    \u2502   \u2514\u2500\u2500\u2500hello.script\n    \u2514\u2500\u2500\u2500config.xml\n</code></pre>"},{"location":"lessons/02_helloworld/#fichier-de-configuration-configxml","title":"Fichier de configuration <code>config.xml</code>","text":"<p>Commen\u00e7ons par la configuration. Nous pouvons construire le fichier de  configuration ainsi:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;config&gt;\n  &lt;admin&gt;\n    &lt;runMode&gt;dev&lt;/runMode&gt;\n  &lt;/admin&gt;\n  &lt;notifications&gt;\n    &lt;notification name=\"incoming-get-request:web\"&gt;hello.script&lt;/notification&gt;\n  &lt;/notifications&gt;\n&lt;/config&gt;\n</code></pre> <p>Le bloc <code>admin</code> contient des param\u00e8tres d'administration de l'application.  Ici nous y d\u00e9finissons le mode d'ex\u00e9cution de l'application (\u00e9l\u00e9ment  <code>runMode</code>). Le mode <code>dev</code> est r\u00e9serv\u00e9 au d\u00e9veloppement. Si on ne le sp\u00e9cifie  pas explicitement, le moteur consid\u00e8re que l'application fonctionne en mode  production, ce qui est moins pratique pour le d\u00e9veloppement. </p> <p>Le bloc <code>notifications</code> permet d'indiquer que l'on veut notifier le script  <code>hello.script</code> lorsqu'une requ\u00eate arrive via GET sur la servlet <code>web</code>.</p>"},{"location":"lessons/02_helloworld/#script-helloscript","title":"Script <code>hello.script</code>","text":"<p>Le fichier <code>hello.script</code> est le c\u0153ur de notre application. Il a pour r\u00f4le  de traiter la requ\u00eate re\u00e7ue du client et d'y r\u00e9pondre. Nous pouvons le  construire ainsi:</p> <pre><code>var name = $request.getLogin();\n$response.addContent(\"Hello ${name} !\");\n</code></pre> <p>Le script est tr\u00e8s simple : il r\u00e9cup\u00e8re le login de l'utilisateur connect\u00e9 et retourne un message qui reprend cette valeur.</p> <p>Encoding</p> <p>Le script ci-dessus ne contient pas de caract\u00e8res sp\u00e9ciaux, mais il est  malgr\u00e9 tout recommand\u00e9 de le sauvegarder avec un encoding utf-8 car par  d\u00e9faut le moteur charge le script selon ce charset.</p> <p>Si toutefois il ne devait pas \u00eatre possible d'utiliser ce charset, vous  pouvez alors utiliser un autre charset et le d\u00e9clarer via une annotation,  par exemple <code>@encoding(\"iso-8859-1\")</code>. Cette annotation doit figurer en  tant que premi\u00e8re ligne du fichier. </p>"},{"location":"lessons/02_helloworld/#test","title":"Test","text":"<p>Pour tester l'application, il suffit de d\u00e9marrer Tomcat et de se connecter  sur l'application via l'URL  http://localhost:8080/ewt/web/hello.</p> <p>Normalement, le serveur d'application devrait afficher un prompt pour  demander un login et un mot de passe. Vous pouvez inscrire les \u00e9l\u00e9ments que  nous avons d\u00e9finis dans le fichier <code>tomcat-users.xml</code>. Dans notre exemple,  nous avons utilis\u00e9 les valeurs <code>user</code> et <code>1234</code>.</p> <p>Une fois l'authentification effectu\u00e9e, l'application devrait afficher une  page avec le texte <code>Hello user !</code>.</p>"},{"location":"lessons/02_helloworld/#interaction","title":"Interaction","text":"<p>Ajoutons un peu d'interaction entre la page web et l'application. Pour ce  faire, nous allons:</p> <ol> <li>modifier l'application pour permettre de saisir un champ</li> <li>ajouter une fonction d'envoi de formulaire par POST</li> <li>traiter le formulaire et y r\u00e9pondre</li> </ol> <p>Le traitement de formulaire re\u00e7u via POST suppose que notre script soit  notifi\u00e9 lorsque ce type d'\u00e9v\u00e9nement se produit. Nous commen\u00e7ons donc par  ajouter ce type de notification \u00e0 notre configuration. Pour cela, \u00e9ditez le  fichier <code>config.xml</code> et ajoutez la notification suivante \u00e0 la suite de la  notification d\u00e9j\u00e0 en place:</p> <pre><code>&lt;notification name=\"incoming-post-request:web\"&gt;hello.script&lt;/notification&gt;\n</code></pre> <p>Nous modifions ensuite le script pour qu'il soit en mesure de  r\u00e9aliser les trois op\u00e9rations d\u00e9crites ci-dessus (ajouter un  champ de formulaire, ajouter une fonction d'envoi de formulaire et traiter  sa valeur lorsque le formulaire est renvoy\u00e9). La nouvelle version du script  devient alors:</p> <pre><code>var name = $request.getLogin();\nif ($$.notification.name == \"incoming-post-request\") {\n  name = $request.getParameter(\"name\");\n}\n\n$response.setContentType(\"text/html\");\n\n$response.addContent(\n  `&lt;html&gt;&lt;body&gt;&lt;form method=\"post\"&gt;\n     &lt;h1&gt;Hello ${name} !&lt;/h1&gt;\n     &lt;p&gt;Your name: &lt;input type=\"text\" name=\"name\" value=\"${name}\"/&gt;&lt;/p&gt;\n     &lt;p&gt;&lt;button type=\"submit\"&gt;send&lt;/button&gt;&lt;/p&gt;\n   &lt;/form&gt;&lt;/body&gt;&lt;/html&gt;`::t);\n</code></pre> <p>La premi\u00e8re ligne est identique \u00e0 celle du script initial.</p> <p>Notre script \u00e9tant maintenant appel\u00e9 \u00e0 la fois dans le cas de requ\u00eates GET  et de requ\u00eates POST, il faut distinguer les deux cas. Le bloc  <code>if ($$.notification.name == \"incoming-post-request\") { ... }</code> permet de traiter le cas o\u00f9 le script est invoqu\u00e9 suite \u00e0 une requ\u00eate de  type POST (notification <code>incoming-post-request</code>). Dans ce cas, l'instruction  <code>$request.getParameter(\"name\")</code> permet de r\u00e9cup\u00e9rer la valeur du champ  <code>name</code> re\u00e7u dans le formulaire HTML.</p> <p>La suite du code sert \u00e0 construire la r\u00e9ponse HTML. En premier lieu,  l'instruction <code>$response.setContentType()</code> est ajout\u00e9e pour forcer le  <code>Content-Type</code> de l'ent\u00eate de notre r\u00e9ponse \u00e0 <code>text/html</code>. Cela permet de  s'assurer que la r\u00e9ponse sera bien interpr\u00e9t\u00e9e comme du HTML. \u00c0 noter au  passage que l'on aurait \u00e9galement pu noter</p> <pre><code>$response.setHeaders({\n  \"Content-Type\": \"text/html\"\n});\n</code></pre> <p>La suite du code consiste \u00e0 construire la r\u00e9ponse HTML. On y retrouve le code  qui affiche le message <code>Hello ... !</code> ainsi que les nouvelles lignes ajout\u00e9es  \u00e0 notre r\u00e9ponse HTML.</p> <p>Le champ de formulaire <code>&lt;input type=\"text\" name=\"name\" value=\"${name}\"/&gt;</code>  est le champ dans lequel l'utilisateur est invit\u00e9 \u00e0 saisir une valeur.  Il s'agit ni plus ni moins que du champ dont on a r\u00e9cup\u00e9r\u00e9 la valeur par  l'instruction <code>$request.getParameter(\"name\")</code> plus haut.</p> <p>Notez au passage les d\u00e9limiteurs <code>`</code> utilis\u00e9s pour le code HTML.  Ici, on utilise ce d\u00e9limiteur pour \u00e9viter de devoir \u00e9chapper les <code>\"</code> des  attributs d'\u00e9l\u00e9ments. Pour information, Ewt autorise 3 types de d\u00e9limiteurs:  <code>\"</code>, <code>'</code> et <code>`</code>. Tous les trois sont identiques et permettent de  d\u00e9finir une cha\u00eene de caract\u00e8res sur une ou plusieurs lignes.</p> <p>Le suffixe de cha\u00eene <code>::t</code> indique que l'on souhaite ignorer les retours  lignes et les indentations de la cha\u00eene dans la valeur finale. Le langage  supporte d'autres types de suffixes qui sont d\u00e9crits dans la documentation de  r\u00e9f\u00e9rence. </p>"},{"location":"lessons/02_helloworld/#test_1","title":"Test","text":"<p>Notre application \u00e9tant tr\u00e8s basique, elle n'int\u00e8gre pas de fonctionnalit\u00e9  permettant de recharger la configuration \u00e0 la vol\u00e9e. Par cons\u00e9quent, la  solution la plus simple pour forcer un rechargement de config consiste \u00e0  red\u00e9marrer le serveur d'application.</p> <p>Une fois que c'est fait, nous pouvons voir le r\u00e9sultat en ouvrant l'URL http://localhost:8080/ewt/web/hello  dans un navigateur. On peut alors  modifier la valeur du champ et soumettre le formulaire. La nouvelle valeur  est alors prise en compte dans le titre.</p> <p></p>"},{"location":"lessons/02_helloworld/#conclusion","title":"Conclusion","text":"<p>Nous avons vu ici comment construire une application tr\u00e8s basique. En  particulier, cela a permis de montrer comment un script peut construire des  pages et des formulaires. Cependant, le cas d'exemple montr\u00e9 ici n'est pas  repr\u00e9sentatif d'une application Ewt standard. On se rend assez vite compte  que construire une application de gestion de donn\u00e9es de cette fa\u00e7on  deviendrait vite fastidieux. De plus, la page que nous avons construite est  assez pauvre du point de vue du style.</p> <p>Dans la prochaine le\u00e7on, nous allons mettre en place une description m\u00e9tier  qui permet de g\u00e9rer des donn\u00e9es de fa\u00e7on plus pratique. L'application  utilisera un jeu de styles pr\u00e9-construits.</p>"},{"location":"lessons/03_coupon1/","title":"Coupon - partie 1","text":""},{"location":"lessons/03_coupon1/#introduction","title":"Introduction","text":"<p>Dans cette le\u00e7on, nous allons mettre en place une structure de donn\u00e9es  permettant de g\u00e9rer des coupons de r\u00e9duction. Le but est d'avoir un  r\u00e9pertoire de bons de r\u00e9duction. Nous verrons comment construire une  description m\u00e9tier et la lier \u00e0 une base de donn\u00e9es.</p> <p>Dans la suite de ce document, nous essaierons de d\u00e9crire les op\u00e9rations \u00e0  r\u00e9aliser et leur signification. Un symbole \ud83d\udc49 est indiqu\u00e9 au d\u00e9but de chaque  ligne d\u00e9crivant une op\u00e9ration \u00e0 effectuer. Vous pouvez directement sauter \u00e0  ces lignes si vous souhaitez mettre en place rapidement l'application. </p>"},{"location":"lessons/03_coupon1/#schema-de-donnees","title":"Sch\u00e9ma de donn\u00e9es","text":"<p>Nous allons mettre en place une structure tr\u00e8s simple permettant de g\u00e9rer  les donn\u00e9es suivantes:</p> <ul> <li>Identifiant de coupon</li> <li>Nom du magasin</li> <li>Date d'\u00e9ch\u00e9ance</li> <li>Valeur de rabais</li> <li>Montant minimal d'achat</li> <li>Code promotionnel</li> <li>Statut (1/0, pour disponible/consomm\u00e9)</li> <li>Remarque</li> </ul> <p>Nous allons commencer par \u00e9tablir le sch\u00e9ma de donn\u00e9es, c'est-\u00e0-dire les  tables et les colonnes. La structure de donn\u00e9es est simple et peut se  limiter \u00e0 une table unique.</p> <p>\ud83d\udc49 Commencez par cr\u00e9er un dossier d'application <code>coupon</code> dans <code>C:\\opt\\ewt</code>.  Cr\u00e9ez-y ensuite un fichier <code>schema.xml</code> avec le contenu suivant:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;schema&gt;\n    &lt;table name=\"Coupon\"&gt;\n        &lt;column name=\"idCoupon\" type=\"int\" isPrimaryKey=\"true\"/&gt;\n        &lt;column name=\"Magasin\" type=\"varchar(100)\"/&gt;\n        &lt;column name=\"Echeance\" type=\"date\"/&gt;\n        &lt;column name=\"Rabais\" type=\"varchar(50)\"/&gt;\n        &lt;column name=\"MontantMin\" type=\"decimal(10,2)\"/&gt;\n        &lt;column name=\"CodePromo\" type=\"varchar(50)\"/&gt;\n        &lt;column name=\"Statut\" type=\"int\"/&gt;\n        &lt;column name=\"Remarque\" type=\"clob\"/&gt;\n    &lt;/table&gt;\n&lt;/schema&gt;\n</code></pre> <p>La description de sch\u00e9ma ci-dessus d\u00e9crit les champs de la base de donn\u00e9es  qui serviront \u00e0 stocker les valeurs de nos coupons. Les noms de colonnes  sont suffisamment explicites pour savoir ce qu'ils contiennent. Revenons  toutefois sur certains d'autre eux:</p> <ul> <li><code>idCoupon</code>: L'attribut <code>isPrimaryKey=\"true\"</code> indique que ce champ est    l'identifiant principal qui fait office de cl\u00e9 primaire. On utilise ici    des entiers comme identifiants, d'o\u00f9 le <code>type=\"int\"</code>.</li> <li><code>Echeance</code>: Ce champ est une date. On utilise donc le type <code>date</code> g\u00e9r\u00e9    par le serveur de base de donn\u00e9es</li> <li><code>Remarque</code>: Ce champ peut avoir une longueur variable. Pour cette raison,    on lui attribue le type <code>clob</code> (Character Large OBject). Il s'agit d'un    type de donn\u00e9e pouvant contenir un texte long.</li> </ul>"},{"location":"lessons/03_coupon1/#description-de-champs","title":"Description de champs","text":"<p>Le sch\u00e9ma de donn\u00e9es a permis de d\u00e9finir la structure de la table et des  colonnes dans lesquelles seront stock\u00e9s nos coupons. Il faut \u00e0 pr\u00e9sent  d\u00e9crire comment ces champs seront pr\u00e9sent\u00e9s \u00e0 l'\u00e9cran. Pour ce faire, on  doit construire une description m\u00e9tier de nos coupons.</p> <p>Dans Ewt, la structure m\u00e9tier se pr\u00e9sente sous la forme d'une hi\u00e9rarchie \u00e0 3  niveaux: <code>mod\u00e8le &gt; groupe &gt; champ</code>:</p> <ul> <li>Le mod\u00e8le d\u00e9crit le type d'objet, on peut le voir comme une classe en java.   Dans notre cas, nous allons cr\u00e9er un mod\u00e8le \"coupon\".</li> <li>Le groupe d\u00e9crit une partie d'objet, on peut le voir comme un ensemble de    donn\u00e9es. Dans notre cas, le groupe sera associ\u00e9 \u00e0 la table <code>Coupon</code> que    nous avons d\u00e9fini dans notre sch\u00e9ma.</li> <li>Le champ d\u00e9crit un champ de formulaire. C'est l'\u00e9l\u00e9ment de formulaire dans    lequel un utilisateur pourra saisir une valeur. Chaque champ fera    r\u00e9f\u00e9rence \u00e0 une colonne de notre sch\u00e9ma.</li> </ul> <p>\ud83d\udc49 Cr\u00e9ez un fichier <code>descript.xml</code> dans le dossier de l'application et  placez-y le contenu suivant:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;descript&gt;\n  &lt;models&gt;\n    &lt;model name=\"coupon\" maingroup=\"base\" mainfield=\"idCoupon\"&gt;\n      &lt;groups&gt;\n        &lt;group name=\"base\" table=\"Coupon\" type=\"single\"&gt;\n          &lt;fields&gt;\n            &lt;field name=\"idCoupon\" type=\"hidden\" column=\"idCoupon\"/&gt;\n            &lt;field name=\"nomMagasin\" type=\"text\" column=\"Magasin\"/&gt;\n            &lt;field name=\"dateEcheance\" type=\"date\" column=\"Echeance\"/&gt;\n            &lt;field name=\"valeurRabais\" type=\"text\" column=\"Rabais\"/&gt;\n            &lt;field name=\"montantMinimal\" type=\"text\" column=\"MontantMin\"&gt;\n              &lt;formatting&gt;#,##0.00&lt;/formatting&gt;\n            &lt;/field&gt;\n            &lt;field name=\"codePromo\" type=\"text\" column=\"CodePromo\"/&gt;\n            &lt;field name=\"statut\" type=\"text\" column=\"Statut\"/&gt;\n            &lt;field name=\"remarque\" type=\"textarea\" column=\"Remarque\"/&gt;\n          &lt;/fields&gt;\n        &lt;/group&gt;\n      &lt;/groups&gt;\n      &lt;views&gt;\n        &lt;view name=\"default\" style=\"documents\"&gt;\n          &lt;group name=\"base\"/&gt;\n        &lt;/view&gt;\n      &lt;/views&gt;\n    &lt;/model&gt;\n  &lt;/models&gt;\n&lt;/descript&gt;\n</code></pre> <p>On y retrouve la structure de mod\u00e8les (<code>model</code>), groupes (<code>group</code>) et champs  (<code>field</code>) d\u00e9crite plus haut.</p> <p>Notre mod\u00e8le porte le nom <code>coupon</code> et contient deux attributs  suppl\u00e9mentaires. Les attributs <code>maingroup</code> et <code>mainfield</code> permettent  respectivement de sp\u00e9cifier le nom du groupe principal et le nom de  l'identifiant dans ce groupe principal. Ces \u00e9l\u00e9ments sont importants car ils  indiquent au moteur comment il peut identifier un coupon. Dans le cas  pr\u00e9sent, un coupon sera identifi\u00e9 au moyen de la valeur du champ <code>idCoupon</code>  prise dans le groupe <code>base</code>.</p> <p>Le groupe <code>base</code> fait r\u00e9f\u00e9rence \u00e0 la table <code>Coupon</code> d\u00e9crite dans notre  sch\u00e9ma. On indique \u00e9galement son <code>type</code>. Les groupes peuvent \u00eatre soit de  type <code>single</code> comme ci-dessus, soit de type <code>multi</code>. Un groupe de type <code>single</code> est un groupe simple qui s'appuie sur une unique  ligne dans une table de la base de donn\u00e9es. Au niveau de l'interface  utilisateur, ce type de groupe se pr\u00e9sente sous la forme d'un formulaire  standard constitu\u00e9 d'une s\u00e9rie de champs. Un groupe de type <code>multi</code> est un groupe qui s'appuie sur plusieurs lignes  d'une table de la base de donn\u00e9es. Au niveau de l'interface utilisateur, ce  type de groupe se pr\u00e9sente sous la forme d'une table de valeurs. Nous  revenons sur ce type de groupe plus tard. </p> <p>Chaque champ (<code>field</code>) est d\u00e9crit au moyen</p> <ul> <li>d'un nom (<code>name</code>) : on notera au passage que le nom de champ peut diff\u00e9rer    du nom de colonne correspondant au niveau de la base de donn\u00e9es</li> <li>d'un type (<code>type</code>) : ici le type est le type de champ HTML que nous    afficherons au niveau de l'interface utilisateur</li> <li>d'une colonne (<code>column</code>) : il s'agit du nom de la colonne d\u00e9finie dans le    fichier <code>schema.xml</code> dans laquelle la valeur du champ sera sauvegard\u00e9e;    cette colonne doit bien entendu faire partie de la table r\u00e9f\u00e9renc\u00e9e par le    groupe.</li> </ul> <p>Dans le cas du champ <code>MontantMin</code>, nous avons d\u00e9fini un pattern de formatage  car nous souhaitons que les chiffres soient mis en forme par le moteur. Nous  verrons plus bas l'impact de ce formatage sur l'interface utilisateur.  </p> <p>La partie <code>views</code> n'a pas \u00e9t\u00e9 abord\u00e9e jusqu'\u00e0 pr\u00e9sent. Cette partie sert \u00e0  d\u00e9crire les vues que propose notre application. Dans le cas pr\u00e9sent, nous  n'avons qu'une seule vue <code>default</code> bas\u00e9e sur un style <code>document</code> et qui se  charge d'afficher le contenu du groupe <code>base</code>.</p> <p>C'est l'occasion d'aborder la question des styles.</p>"},{"location":"lessons/03_coupon1/#styles","title":"Styles","text":"<p>L'application mise en place \u00e0 la le\u00e7on 2 ne contenait pas de styles.  L'application se contentait de produire du code HTML brut et laissait au  navigateur le soin de l'afficher. Dans le cadre de cette le\u00e7on, nous allons  utiliser un jeu de styles pr\u00e9-construis. Il s'agit d'un ensemble de feuilles  de style et de fichiers de ressources que nous allons reprendre dans notre  application pour avoir une interface utilisateur plus avanc\u00e9e.</p> <p>\ud83d\udc49 Commencez par d\u00e9zipper le contenu de l'archive  baseStyle.zip dans le dossier de l'application.  \u00c0 la fin de l'op\u00e9ration, votre application devrait avoir la structure  suivante:</p> <pre><code>hello\n\u251c\u2500\u2500\u2500i18n\n\u2502   \u251c\u2500\u2500\u2500base.properties\n\u2502   \u251c\u2500\u2500\u2500base_EN.properties\n\u2502   \u251c\u2500\u2500\u2500default.properties\n\u2502   \u251c\u2500\u2500\u2500default_EN.properties\n\u2502   \u251c\u2500\u2500\u2500documents.properties\n\u2502   \u2514\u2500\u2500\u2500documents_EN.properties\n\u251c\u2500\u2500\u2500resources\n\u2502   \u251c\u2500\u2500\u2500bootstrap\n\u2502   \u2502   \u251c\u2500\u2500\u2500css\n\u2502   \u2502   \u2514\u2500\u2500\u2500js\n\u2502   \u251c\u2500\u2500\u2500css\n\u2502   \u251c\u2500\u2500\u2500dropzone\n\u2502   \u251c\u2500\u2500\u2500images\n\u2502   \u251c\u2500\u2500\u2500jquery\n\u2502   \u251c\u2500\u2500\u2500js\n\u2502   \u251c\u2500\u2500\u2500popper\n\u2502   \u251c\u2500\u2500\u2500sounds\n\u2502   \u2514\u2500\u2500\u2500tinymce\n\u2502       \u2514\u2500\u2500\u2500...\n\u251c\u2500\u2500\u2500scripts\n\u2502   \u251c\u2500\u2500\u2500search.script\n\u2502   \u2514\u2500\u2500\u2500toolbox.script\n\u251c\u2500\u2500\u2500stylesheets\n\u2502   \u251c\u2500\u2500\u2500base.xsl\n\u2502   \u251c\u2500\u2500\u2500constants.xsl\n\u2502   \u251c\u2500\u2500\u2500default.xsl\n\u2502   \u251c\u2500\u2500\u2500document.xsl\n\u2502   \u2514\u2500\u2500\u2500templates.xsl\n\u251c\u2500\u2500\u2500descript.xml\n\u2514\u2500\u2500\u2500schema.xml\n</code></pre> <p>De nombreux r\u00e9pertoires et sous-r\u00e9pertoires ont \u00e9t\u00e9 cr\u00e9\u00e9s. Nous n'allons pas  passer en revue ces derniers dans le d\u00e9tail. Voici tout de m\u00eame quelques  informations g\u00e9n\u00e9rales:</p> <ul> <li><code>i18n</code>: Ce r\u00e9pertoire contient les fichiers de langues.</li> <li><code>resources</code>: Ce r\u00e9pertoire contient des ressources, c'est-\u00e0-dire des    images, des scripts, des styles CSS utilis\u00e9s pour mettre en forme    l'interface.</li> <li><code>scripts</code>: On conna\u00eet d\u00e9j\u00e0 ce r\u00e9pertoire : il contient les scripts de    traitement de l'application. Dans le cas pr\u00e9sent, deux scripts ont \u00e9t\u00e9    cr\u00e9\u00e9s. Le fichier <code>search.script</code> sert \u00e0 effectuer une recherche de    dossiers dans la base de donn\u00e9es et le script <code>toolbox.script</code> contient    une fonction sur laquelle nous revenons dans la prochaine le\u00e7on.</li> <li><code>stylesheets</code>: Ce r\u00e9pertoire contient des feuilles de style XSL. Elles    servent \u00e0 transformer l'arbre de sortie g\u00e9n\u00e9r\u00e9 par le moteur en    pages HTML. </li> </ul>"},{"location":"lessons/03_coupon1/#fichier-configxml","title":"Fichier <code>config.xml</code>","text":"<p>Pour que notre application sache comment utiliser ces nouveaux \u00e9l\u00e9ments, il  faut les d\u00e9clarer au niveau du fichier de configuration de notre application.</p> <p>\ud83d\udc49 Cr\u00e9ez un fichier <code>config.xml</code> contenant les \u00e9l\u00e9ments suivants:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;config&gt;\n  &lt;admin&gt;\n    &lt;runMode&gt;dev&lt;/runMode&gt;\n  &lt;/admin&gt;\n\n  &lt;styles&gt;\n    &lt;style name=\"default\"&gt;default.xsl&lt;/style&gt;\n    &lt;style name=\"documents\"&gt;documents.xsl&lt;/style&gt;\n    &lt;defaultStyle&gt;default&lt;/defaultStyle&gt;\n  &lt;/styles&gt;\n\n  &lt;bundles&gt;\n    &lt;style name=\"default\"&gt;base,default&lt;/style&gt;\n    &lt;style name=\"documents\"&gt;base,documents&lt;/style&gt;\n    &lt;defaultBundles&gt;base&lt;/defaultBundles&gt;\n    &lt;defaultLocale&gt;fr&lt;/defaultLocale&gt;\n  &lt;/bundles&gt;\n&lt;/config&gt;\n</code></pre> <p>Par rapport \u00e0 la le\u00e7on 2, on a ici ajout\u00e9 les \u00e9l\u00e9ments <code>styles</code> et <code>bundles</code>  (et on a retir\u00e9 le bloc <code>notifications</code>).</p> <p>Le premier d\u00e9finit les styles <code>default</code> et <code>documents</code> qui s'appuient  respectivement sur les feuilles de styles <code>default.xsl</code> et <code>documents.xsl</code>.  On a d\u00e9j\u00e0 vu le style <code>documents</code> plus haut au niveau de la d\u00e9finition de la  <code>view</code> dans notre fichier <code>descript.xml</code>.</p> <p>Le second d\u00e9finit les bundles, ou plut\u00f4t, il indique quels bundles le moteur  doit reprendre dans l'arbre de sortie en fonction du style. Dans le cas  ci-dessus, on indique que le style <code>default</code> aura besoin des bundles <code>base</code>  et <code>default</code> (ces derniers sont pr\u00e9sents dans le r\u00e9pertoire <code>i18n</code>), alors  que le style <code>documents</code> aura besoin des bundles <code>base</code> et <code>documents</code>.  L'\u00e9l\u00e9ment <code>defaultBundles</code> permet d'indiquer les bundles que l'on souhaite  toujours avoir dans l'arbre de sortie. Enfin, l'\u00e9l\u00e9ment <code>defaultLocale</code>  indique au moteur quelle locale utiliser par d\u00e9faut lorsqu'il n'existe pas de  bundle pour la locale du client.</p>"},{"location":"lessons/03_coupon1/#test","title":"Test","text":"<p>Nous avons mis en place beaucoup de choses. Il nous manque encore quelques  \u00e9l\u00e9ments (base de donn\u00e9es, s\u00e9curit\u00e9, libell\u00e9s) mais nous pouvons d\u00e9j\u00e0 tenter de voir \u00e0 quoi ressemble notre application.</p> <p>\ud83d\udc49 D\u00e9marrez le serveur d'application et effectuez une connexion sur l'URL  http://localhost:8080/ewt/web/coupon.  L'application devrait afficher une page de ce genre:</p> <p></p> <p>L'application est toutefois grandement limit\u00e9e du fait que nous n'avons pas  encore cr\u00e9\u00e9 la base de donn\u00e9es. La plupart des fonctionnalit\u00e9s propos\u00e9es par  vont g\u00e9n\u00e9rer des erreurs et/ou des exceptions. Vous pouvez faire un test  rapide en cliquant sur le bouton \"Rechercher\" de la page d'accueil. Un  message d'erreur indique qu'une erreur s'est produite. Le log devrait quant  \u00e0 lui signaler une exception ayant pour origine une absence de base de donn\u00e9es.</p>"},{"location":"lessons/03_coupon1/#base-de-donnees","title":"Base de donn\u00e9es","text":"<p>Ewt est compatible avec plusieurs types de bases de donn\u00e9es. Choisissez  le chapitre correspondant au serveur de base de donn\u00e9es que vous  souhaitez mettre en \u0153uvre, puis sautez au chapitre \"Connexion \u00e0 la base de  donn\u00e9es\".</p>"},{"location":"lessons/03_coupon1/#i-postgresql","title":"i) PostgreSQL","text":"<p>\ud83d\udc49 Commencez par cr\u00e9er la base de donn\u00e9es. Sur PostgreSQL, la cr\u00e9ation de la  base de donn\u00e9es peut se faire au moyen de la commande suivante:</p> <pre><code>createdb --encoding=UTF-8 --owner=postgres coupon\n</code></pre> <p>Il faut \u00e0 pr\u00e9sent adapter notre fichier de configuration pour y sp\u00e9cifier  les param\u00e8tres de connexion \u00e0 la base de donn\u00e9es.</p> <p>\ud83d\udc49 Ajoutez le bloc suivant dans votre fichier <code>config.xml</code>:</p> <pre><code>&lt;database&gt;\n  &lt;connection&gt;\n    &lt;engine&gt;postgres&lt;/engine&gt;\n    &lt;driver&gt;org.postgresql.Driver&lt;/driver&gt;\n    &lt;url&gt;jdbc:postgresql://dbhost:5432/coupon&lt;/url&gt;\n    &lt;property&gt;tcpKeepAlive=true&lt;/property&gt;\n    &lt;username&gt;username&lt;/username&gt;\n    &lt;password&gt;changeit&lt;/password&gt;\n  &lt;/connection&gt;\n&lt;/database&gt;\n</code></pre> <p>\ud83d\udc49 Adaptez les param\u00e8tres de connexion \u00e0 la base de donn\u00e9es selon votre  infrastructure.</p>"},{"location":"lessons/03_coupon1/#ii-sqlite","title":"ii) SQLite","text":"<p>\ud83d\udc49 Pour configurer l'application afin qu'elle utilise SQLite, ajoutez le bloc  suivant dans votre fichier <code>config.xml</code>:</p> <pre><code>&lt;database&gt;\n  &lt;connection&gt;\n    &lt;engine&gt;sqlite&lt;/engine&gt;\n    &lt;driver&gt;org.sqlite.JDBC&lt;/driver&gt;\n    &lt;url&gt;jdbc:sqlite:C:\\opt\\ewt\\coupon\\database.db&lt;/url&gt;\n    &lt;username&gt;&lt;/username&gt;\n    &lt;password&gt;&lt;/password&gt;\n  &lt;/connection&gt;\n&lt;/database&gt;\n</code></pre> <p>Ici, nous avons not\u00e9 le chemin <code>C:\\opt\\ewt\\coupon\\database.db</code>, mais vous  pouvez adapter ce chemin et le nom de fichier \u00e0 votre guise. SQLite se  chargera de cr\u00e9er automatiquement le fichier de la base de donn\u00e9es.</p>"},{"location":"lessons/03_coupon1/#iii-oracle","title":"iii) Oracle","text":"<p>\ud83d\udc49 Connectez-vous avec sqlplus sur le serveur Oracle et passez les requ\u00eates  suivantes, en adaptant les noms d'objets (login, mot de passe), les paths et  les droits:</p> <pre><code>CREATE TABLESPACE COUPON\n  DATAFILE '/home/user/app/user/oradata/orcl/coupon.dbf'\n  SIZE 10M\n  AUTOEXTEND ON\n  NEXT 5M\n  EXTENT MANAGEMENT LOCAL;\n\nCREATE USER coupon\n  IDENTIFIED BY coupon\n  ACCOUNT UNLOCK\n  DEFAULT TABLESPACE COUPON\n  TEMPORARY TABLESPACE TEMP;\n\nGRANT\n  CONNECT,\n  DBA,\n  IMP_FULL_DATABASE,\n  RECOVERY_CATALOG_OWNER,\n  BACKUP ANY TABLE,\n  CREATE ANY JOB,\n  CREATE EXTERNAL JOB,\n  CREATE JOB,\n  CREATE SESSION,\n  CREATE TABLE,\n  IMPORT FULL DATABASE,\n  UNLIMITED TABLESPACE\n  TO coupon;\n</code></pre> <p>Si vous obtenez une erreur du style \"ORA-65096: invalid common user or role  name\" sur la seconde requ\u00eate, passez alors la requ\u00eate suivante puis  r\u00e9essayez (source: https://stackoverflow.com/a/41490385/1585114):</p> <pre><code>ALTER SESSION SET \"_ORACLE_SCRIPT\"=true;\n</code></pre> <p>\ud83d\udc49 Ajoutez le bloc suivant dans votre fichier <code>config.xml</code> en adaptant les  param\u00e8tres:</p> <pre><code>&lt;database&gt;\n  &lt;connection&gt;\n    &lt;engine&gt;oracle&lt;/engine&gt;\n    &lt;driver&gt;oracle.jdbc.driver.OracleDriver&lt;/driver&gt;\n    &lt;url&gt;jdbc:oracle:thin:@host:1521:orcl&lt;/url&gt;\n    &lt;username&gt;username&lt;/username&gt;\n    &lt;password&gt;changeit&lt;/password&gt;\n  &lt;/connection&gt;\n&lt;/database&gt;\n</code></pre>"},{"location":"lessons/03_coupon1/#iv-mariadb","title":"iv) MariaDB","text":"<p>\ud83d\udc49 Cr\u00e9ez la base de donn\u00e9es via l'outil en ligne de commande <code>mysql</code> ou un  autre outil de requ\u00eatage au moyen des requ\u00eates suivantes:</p> <pre><code>create database coupon;\ngrant all privileges on coupon.* TO 'root'@'%' identified by 'root';\nflush privileges;\n</code></pre> <p>\ud83d\udc49 Ajoutez le bloc suivant dans votre fichier <code>config.xml</code> en adaptant les param\u00e8tres:</p> <pre><code>&lt;database&gt;\n  &lt;connection&gt;\n    &lt;engine&gt;mysql&lt;/engine&gt;\n    &lt;driver&gt;com.mysql.jdbc.Driver&lt;/driver&gt;\n    &lt;url&gt;jdbc:mysql://host:3306/coupon&lt;/url&gt;\n    &lt;property&gt;characterSetResults=utf8mb4&lt;/property&gt;\n    &lt;username&gt;username&lt;/username&gt;\n    &lt;password&gt;changeit&lt;/password&gt;\n  &lt;/connection&gt;\n&lt;/database&gt;\n</code></pre> <p>Ici nous sp\u00e9cifions la propri\u00e9t\u00e9 <code>characterSetResults=utf8mb4</code> pour  permettre l'utilisation de caract\u00e8res utf8 sur 4 bytes.</p>"},{"location":"lessons/03_coupon1/#v-ms-sql-server","title":"v) MS SQL Server","text":"<p>\ud83d\udc49 Vous pouvez cr\u00e9er la base de donn\u00e9es \u00e0 l'aide de SQL Server Management  Studio (SSMS) ou tout autre gestionnaire de base de donn\u00e9es (p.ex DBeaver).</p> <p>\ud83d\udc49 Ajoutez le bloc suivant dans votre fichier <code>config.xml</code> en adaptant les param\u00e8tres:</p> <pre><code>&lt;database&gt;\n  &lt;connection&gt;\n    &lt;engine&gt;mssql&lt;/engine&gt;\n    &lt;driver&gt;com.microsoft.sqlserver.jdbc.SQLServerDriver&lt;/driver&gt;\n    &lt;url&gt;jdbc:sqlserver://host:1433&lt;/url&gt;\n    &lt;property&gt;databaseName=coupon&lt;/property&gt;\n    &lt;property&gt;encrypt=false&lt;/property&gt;\n    &lt;property&gt;trustServerCertificate=true&lt;/property&gt;\n    &lt;username&gt;username&lt;/username&gt;\n    &lt;password&gt;changeit&lt;/password&gt;\n  &lt;/connection&gt;\n&lt;/database&gt;\n</code></pre> <p>Application multi-sgbd</p> <p>Il est possible de d\u00e9finir plusieurs types de connexions \u00e0 la fois dans le  fichier <code>config.xml</code> et de sp\u00e9cifier la configuration par d\u00e9faut. Cela  facilite les tests d'une application sur diff\u00e9rents serveurs de base de  donn\u00e9es et permet \u00e9galement de passer des requ\u00eates sur des serveurs autres  que le serveur de base de donn\u00e9es configur\u00e9 par d\u00e9faut.</p> <p>Pour ce faire, ajoutez un attribut <code>name</code> sur l'\u00e9l\u00e9ment <code>connection</code>, et  indiquez le nom de la connexion par d\u00e9faut au moyen de l'\u00e9l\u00e9ment  <code>defaultConnectionConfig</code>. La section <code>database</code> de votre configuration  aura donc la forme suivante:</p> <pre><code>&lt;database&gt;\n  &lt;defaultConnectionConfig&gt;connection-2&lt;/defaultConnectionConfig&gt;\n\n  &lt;connection name=\"connection-1\"&gt;\n    &lt;engine&gt;postgres&lt;/engine&gt;\n    &lt;driver&gt;org.postgresql.Driver&lt;/driver&gt;\n    &lt;url&gt;jdbc:postgresql://host/coupon&lt;/url&gt;\n    &lt;property&gt;tcpKeepAlive=true&lt;/property&gt;\n    &lt;username&gt;username&lt;/username&gt;\n    &lt;password&gt;changeit&lt;/password&gt;\n  &lt;/connection&gt;\n\n  &lt;connection name=\"connection-2\"&gt;\n    &lt;engine&gt;sqlite&lt;/engine&gt;\n    &lt;driver&gt;org.sqlite.JDBC&lt;/driver&gt;\n    &lt;url&gt;jdbc:sqlite:C:\\opt\\ewt\\coupon\\database.db&lt;/url&gt;\n    &lt;username&gt;&lt;/username&gt;\n    &lt;password&gt;&lt;/password&gt;\n  &lt;/connection&gt;\n\n  &lt;connection name=\"connection-3\"&gt;\n    &lt;engine&gt;mysql&lt;/engine&gt;\n    &lt;driver&gt;com.mysql.jdbc.Driver&lt;/driver&gt;\n    &lt;url&gt;jdbc:mysql://host:3306/coupon&lt;/url&gt;\n    &lt;property&gt;characterSetResults=utf8&lt;/property&gt;\n    &lt;username&gt;username&lt;/username&gt;\n    &lt;password&gt;changeit&lt;/password&gt;\n  &lt;/connection&gt;\n&lt;/database&gt;\n</code></pre>"},{"location":"lessons/03_coupon1/#connexion-a-la-base-de-donnees","title":"Connexion \u00e0 la base de donn\u00e9es","text":"<p>\ud83d\udc49 Une fois que cela est fait, retournez sur la page web de notre application  et forcez un rechargement de la configuration en s\u00e9lectionnant l'entr\u00e9e de  menu <code>Admin &gt; Reset</code>. Cela a pour effet de r\u00e9initialiser l'application: les  fichiers de l'application sont recharg\u00e9s et revalid\u00e9s, les ressources sont  re-d\u00e9ploy\u00e9es, etc.</p> <p>La console d'Apache Tomcat devrait alors mentionner les lignes suivantes et  ne pas afficher d'erreur. Dans le cas contraire, veuillez prendre note du  message d'erreur et effectuer les corrections de configuration en cons\u00e9quence.</p> <pre><code>12:15:23.360 DEBUG ch.epilogic.ewt.application.EwtApplication.initializeDatabase() @235 - [coupon] Create connection pool\n12:15:23.373 DEBUG ch.epilogic.ewt.database.EwtDatabaseConnectionPool.initialize() @123 - Connexion pool initialization\n12:15:23.384 DEBUG ch.epilogic.ewt.database.EwtDatabaseConnectionPool.initialize() @198 - Datasource initialization\n</code></pre> <p>Format des logs</p> <p>Dans ce document, les exemples de logs et de requ\u00eates seront donn\u00e9s pour  une connexion de type PostgreSQL. Ils peuvent donc \u00eatre l\u00e9g\u00e8rement  diff\u00e9rents de ceux que vous observerez sur votre environnement.</p> <p>Il nous reste \u00e0 cr\u00e9er la structure de la base de donn\u00e9es. Il serait possible  de le faire manuellement au moyen de requ\u00eates SQL, mais Ewt fournit des  fonctions qui simplifient ce travail. Le menu <code>Admin</code> propose les fonctions  suivantes:</p> <p></p> <p>Vous pouvez cliquer sur \"G\u00e9n\u00e9rer script SQL (create)\" pour obtenir un script  de cr\u00e9ation de tables bas\u00e9 sur le sch\u00e9ma que nous avons construit en d\u00e9but  de le\u00e7on. Cela va afficher une page contenant une s\u00e9rie de requ\u00eates SQL:</p> <pre><code>CREATE TABLE Coupon(idCoupon SERIAL PRIMARY KEY, Magasin VARCHAR(100), \nEcheance DATE, Rabais VARCHAR(50), MontantMin DECIMAL(10,2), CodePromo VARCHAR(50), Statut INT, Remarque TEXT, _locking BIGINT DEFAULT 0 NOT NULL);\nCREATE INDEX Coupon_idx0 ON Coupon(idCoupon, _locking);\nCREATE TABLE ewt_locking(idLocking BIGSERIAL PRIMARY KEY, modelName VARCHAR(32), docId INTEGER, subjectLogin VARCHAR(32), lockingDateTime TIMESTAMP);\nCREATE INDEX ewt_locking_idx0 ON ewt_locking(modelName, docId, idLocking);\nCREATE TABLE ewt_scheduler(taskName VARCHAR(50) PRIMARY KEY, scriptName VARCHAR(100), scriptParams TEXT, taskStart TIMESTAMP, taskPeriod INTEGER, taskPeriodUnit VARCHAR(10), taskActive INTEGER, instanceName VARCHAR(50));\nCREATE INDEX ewt_scheduler_idx0 ON ewt_scheduler(taskName);\nCREATE INDEX ewt_scheduler_idx1 ON ewt_scheduler(taskStart, taskActive, instanceName);\n</code></pre> <p>Il s'agit de requ\u00eates de cr\u00e9ation de tables adapt\u00e9es \u00e0 PostgreSQL. Si vous  avez opt\u00e9 pour un autre type de base de donn\u00e9es, les requ\u00eates peuvent \u00eatre  l\u00e9g\u00e8rement diff\u00e9rentes. On y retrouve la table <code>Coupon</code> que nous avons  d\u00e9finit dans le fichier <code>schema.xml</code>. D'autres tables techniques sont  \u00e9galement ajout\u00e9es par Ewt. Ces derni\u00e8res permettent notamment de g\u00e9rer la  concurrence et les t\u00e2ches planifi\u00e9es.</p> <p>La fonction \"G\u00e9n\u00e9rer script SQL (alter)\" est une variante qui construit un  script dans lequel les colonnes sont ajout\u00e9es au moyen de requ\u00eates de type  <code>ALTER TABLE</code>. Cela peut \u00eatre pratique si vous d\u00e9cidez d'ajouter de nouveaux  champs a posteriori.</p> <p>Les fonctions \"Cr\u00e9er la base de donn\u00e9es (create)\" et \"Cr\u00e9er la base de  donn\u00e9es (alter)\" se chargent de passer les requ\u00eates directement dans la base  de donn\u00e9es. Cela permet de cr\u00e9er les tables directement, sans avoir \u00e0 les  reprendre dans un requ\u00eateur SQL.</p> <p>\ud83d\udc49 Cliquez sur \"Cr\u00e9er la base de donn\u00e9es (create)\" pour d\u00e9clencher la cr\u00e9ation  de notre table <code>Coupon</code>.</p> <p>La base de donn\u00e9es est \u00e0 pr\u00e9sent pr\u00eat. Refaisons un test de l'application.</p>"},{"location":"lessons/03_coupon1/#test_1","title":"Test","text":"<p>\ud83d\udc49 Ouvrez la page de l'application et lancez une recherche en cliquant sur  \"Rechercher\" sur la page d'accueil. Le message d'erreur obtenu pr\u00e9c\u00e9demment  devrait \u00eatre remplac\u00e9 par un bandeau bleu.</p> <p>\ud83d\udc49 Cliquez \u00e0 pr\u00e9sent dans le menu <code>Fichier &gt; Nouveau &gt; model.coupon.label</code>.  L'application affiche alors une page repr\u00e9sentant un dossier \"coupon\".  Vous pouvez saisir des valeurs dans les champs, les enregistrer, fermer le  dossier, lancer une recherche et l'ouvrir \u00e0 nouveau: les libell\u00e9s ont bien  \u00e9t\u00e9 enregistr\u00e9s. Vous pouvez \u00e9galement consulter la table <code>Coupon</code>  directement au niveau de la base de donn\u00e9es pour vous en convaincre.</p> <p></p> <p>La chose qui frappe sur la version actuelle est le format des noms de mod\u00e8le, groupe et champs. Ewt n'ayant pas trouv\u00e9 de libell\u00e9, il a affich\u00e9  directement le nom des propri\u00e9t\u00e9s correspondantes.</p> <p>En effet, lorsque l'on d\u00e9finit le champ <code>nomMagasin</code> dans le groupe <code>base</code>  du mod\u00e8le <code>coupon</code>, Ewt va essayer de r\u00e9cup\u00e9rer un libell\u00e9 via l'entr\u00e9e de  bundle <code>field.coupon.base.nomMagasin.label</code>. Lorsqu'aucun libell\u00e9 n'est  trouv\u00e9, Ewt affiche le nom de la cl\u00e9 elle-m\u00eame.</p> <p>On notera au passage que les libell\u00e9s de l'interface (boutons, menus, etc.)  sont corrects car l'archive de styles d\u00e9zipp\u00e9e pr\u00e9c\u00e9demment contenait ces  libell\u00e9s (pour le fran\u00e7ais et l'anglais).</p>"},{"location":"lessons/03_coupon1/#libelles","title":"Libell\u00e9s","text":"<p>Ewt s'appuie sur les bundles de langue pour obtenir les libell\u00e9s des mod\u00e8les, groupes et champs. Il convient d\u00e8s lors de d\u00e9finir ces libell\u00e9s. Pour cette  le\u00e7on, nous le ferons pour le fran\u00e7ais et l'anglais.</p> <p>\ud83d\udc49 Cliquez dans le menu <code>Admin &gt; G\u00e9n\u00e9rer un canevas de langue\"</code>.  L'application devrait afficher un page avec le contenu suivant:</p> <pre><code># model coupon\nmodel.coupon.label = \n\ngroup.coupon.base.label = \nfield.coupon.base.idCoupon.label = \nfield.coupon.base.nomMagasin.label = \nfield.coupon.base.dateEcheance.label = \nfield.coupon.base.valeurRabais.label = \nfield.coupon.base.montantMinimal.label = \nfield.coupon.base.codePromo.label = \nfield.coupon.base.statut.label = \nfield.coupon.base.remarque.label =\n</code></pre> <p>Il s'agit de la liste des propri\u00e9t\u00e9s pour lesquels nous devrons donner un  libell\u00e9.</p> <p>\ud83d\udc49 Copiez ce texte et collez-le dans un fichier <code>language_fr.properties</code>,  dans le dossier <code>i18n</code> du projet (ce dernier a \u00e9t\u00e9 cr\u00e9\u00e9 lors de la  d\u00e9compression de l'archive contenant les styles).</p> <p>\ud83d\udc49 Renseignez une valeur pour chaque propri\u00e9t\u00e9, par exemple:</p> <pre><code># model coupon\nmodel.coupon.label = Coupon\n\ngroup.coupon.base.label = Donn\u00e9es de base\nfield.coupon.base.idCoupon.label = Identifiant coupon\nfield.coupon.base.nomMagasin.label = Nom du magasin\nfield.coupon.base.dateEcheance.label = Date d'\u00e9ch\u00e9ance\nfield.coupon.base.valeurRabais.label = Valeur de rabais\nfield.coupon.base.montantMinimal.label = Montant minimal d'achat\nfield.coupon.base.codePromo.label = Code du coupon\nfield.coupon.base.statut.label = Statut\nfield.coupon.base.remarque.label = Remarque\n</code></pre> <p>\ud83d\udc49 Sauvegardez le fichier (en utf-8), revenez sur l'application et cliquez  sur <code>Admin &gt; Reset</code>.</p> <p></p> <p>Les libell\u00e9s devraient \u00e0 pr\u00e9sent appara\u00eetre en fran\u00e7ais.</p> <p>Terminons cette le\u00e7on sur notre lanc\u00e9e et ajoutons \u00e9galement les libell\u00e9s en  anglais. Vous pouvez au choix utiliser la fonction \"G\u00e9n\u00e9rer un canevas de  langue\" comme pr\u00e9c\u00e9demment ou, plus simplement, cr\u00e9er une copie du fichier  <code>language.properties</code> que nous venons de cr\u00e9er.</p> <p>\ud83d\udc49 Copiez le fichier <code>language_fr.properties</code> sous le nom  <code>language_en.properties</code>, \u00e9ditez ce dernier et remplac\u00e9 les libell\u00e9s  fran\u00e7ais par des libell\u00e9s anglais.</p> <pre><code># model coupon\nmodel.coupon.label = Voucher\n\ngroup.coupon.base.label = Basic data\nfield.coupon.base.idCoupon.label = Voucher ID\nfield.coupon.base.nomMagasin.label = Store name\nfield.coupon.base.dateEcheance.label = Expiry date\nfield.coupon.base.valeurRabais.label = Discount value\nfield.coupon.base.montantMinimal.label = Minimum purchase\nfield.coupon.base.codePromo.label = Code\nfield.coupon.base.statut.label = Status\nfield.coupon.base.remarque.label = Notes\n</code></pre> <p>Nous venons ainsi de d\u00e9finir les libell\u00e9s de nos champs dans une nouvelle  langue. Comment le v\u00e9rifier ? En changeant les param\u00e8tres de langue par  d\u00e9faut au niveau de votre navigateur par exemple. Ewt s'appuie sur la langue du navigateur pour d\u00e9terminer quelle source de  libell\u00e9s utiliser. La plupart des navigateurs permettent de changer de  langue au niveau de leurs param\u00e8tres. Par exemple sur Edge, cela se fait  dans la section \"Langues\" des param\u00e8tres : il est possible d'ajouter des  langues pr\u00e9f\u00e9r\u00e9es. Faites figurer l'anglais en premier. Revenez sur la  page de notre application et cliquez sur \"Enregistrez\". Les libell\u00e9s  s'affichent alors automatiquement en anglais. </p> <p></p> <p>L'impact de la langue ne se limite pas aux libell\u00e9s. Il porte \u00e9galement  sur les valeurs format\u00e9es. Prenons le cas du champ <code>montantMinimal</code>.</p> <p>\ud83d\udc49 Modifiez la valeur du champ \"Minimal purchase\" \u00e0 \"1234.55\" puis cliquez sur \"Save\". Le montant est alors format\u00e9 selon la forme anglaise:  <code>1,234.55</code>. R\u00e9tablissez la langue \"Fran\u00e7ais\" comme langue par d\u00e9faut au  niveau du navigateur puis cliquez \u00e0 nouveau sur \"Save\". L'interface passe  alors en fran\u00e7ais et le montant est format\u00e9 selon la notation fran\u00e7aise:  <code>1'234.55</code> (il se peut que la valeur <code>1 234.55</code> s'affiche en fonction des  r\u00e8gles de formatage d\u00e9finies sur votre environnement).</p> <p>Remarque</p> <p>L'exp\u00e9rience r\u00e9alis\u00e9e ci-dessus est sans effet sur le champ  \"Date d'\u00e9ch\u00e9ance\" car nous avons utilis\u00e9 un champ de type \"date\"  (<code>&lt;input type=\"date\"&gt;</code>). Dans les navigateurs web actuels, ce  type de champ ne tient pas compte de la langue du document. Qu'il s'agisse  de navigateur bas\u00e9 sur Chrome ou Firefox, le contr\u00f4le utilise la locale de  base du navigateur.</p> <p>Une solution pour r\u00e9gler le probl\u00e8me est de pas utiliser de champ de type  \"date\" mais \"text\", et de demander au moteur de se charger du formatage.  Pour ce faire, il faut changer la d\u00e9finition du champ dans le fichier  <code>descript.xml</code> ainsi:</p> <pre><code>&lt;field name=\"dateEcheance\" type=\"text\" column=\"Echeance\"&gt;\n  &lt;formatting&gt;default&lt;/formatting&gt;\n&lt;/field&gt;\n</code></pre> <p>L'\u00e9l\u00e9ment <code>formatting</code> permet de d\u00e9finir le pattern de formatage de la  valeur. Il a d\u00e9j\u00e0 \u00e9t\u00e9 utilis\u00e9 pour le champ <code>montantMinimal</code>. Ici on  sp\u00e9cifie le pattern <code>default</code>. En r\u00e9alit\u00e9 il ne s'agit pas d'un \"vrai\"  pattern. Il ne serait d'ailleurs pas possible d'en d\u00e9finir un qui soit  valide pour toutes les variantes de format de dates : un pattern  <code>dd/MM/yyyy</code> serait bon pour des dates dans une locale francophone, mais  non valide pour une locale anglophone qui est plus habitu\u00e9e \u00e0 <code>MM/dd/yyyy</code>.  Le pattern <code>default</code> indique au moteur qu'il doit adapter la valeur pour  lui appliquer un formatage coh\u00e9rent avec la langue du document.</p> <p>Il est recommand\u00e9 d'effectuer le changement de langue sans dossier ouvert  car la date qui avait \u00e9t\u00e9 format\u00e9e pour la langue pr\u00e9c\u00e9dente (et qui se  retrouve dans le champ) pourrait \u00eatre mal interpr\u00e9t\u00e9e dans la nouvelle  langue par le moteur.</p>"},{"location":"lessons/03_coupon1/#conclusion","title":"Conclusion","text":"<p>Nous avons vu comment construire un mod\u00e8le de donn\u00e9es et le lier \u00e0 une base  de donn\u00e9es. Nous avons \u00e9galement vu comment internationaliser une  application au moyen de fichiers de langues.</p> <p>Cela nous a donn\u00e9 l'occasion de mettre en place une version minimale  d'application qui nous permet de g\u00e9rer des donn\u00e9es. Il reste encore de  nombreux aspects \u00e0 aborder pour rendre notre application plus pratique et  plus s\u00fbre. Nous avons \u00e9galement b\u00e9n\u00e9fici\u00e9 de styles pr\u00e9-construits sans  v\u00e9ritablement chercher \u00e0 comprendre comment ils sont construits.   </p> <p>Tous ces aspects font l'objet des le\u00e7ons suivantes.</p>"},{"location":"lessons/04_coupon2/","title":"Coupon - partie 2","text":"<p>Cette le\u00e7on fait suite \u00e0 la le\u00e7on \"03 - coupon1\" et n\u00e9cessite  que l'application d\u00e9velopp\u00e9e en partie 1 soit fonctionnelle. Reportez-vous  donc $ la premi\u00e8re partie si vous ne l'avez pas encore fait.</p> <p>Durant cette le\u00e7on, nous allons apporter diff\u00e9rentes retouches \u00e0  l'application pour \u00e9tendre la description, am\u00e9liorer l'interface de saisie  ainsi que la recherche et mettre en place une validation de donn\u00e9es.</p>"},{"location":"lessons/04_coupon2/#modele-magasin","title":"Mod\u00e8le \"Magasin\"","text":"<p>Notre description ne comporte actuellement qu'un seul mod\u00e8le \"coupon\". Nous  allons ajouter un nouveau mod\u00e8le \"magasin\" et faire en sorte que l'on puisse  r\u00e9f\u00e9rencer un magasin depuis un coupon.</p> <p>\ud83d\udc49 \u00c9ditez le fichier <code>schema.xml</code> et ajoutez la d\u00e9finition de table suivante  en-dessous de la table <code>Coupon</code>:</p> <pre><code>&lt;table name=\"Magasin\"&gt;\n  &lt;column name=\"idMagasin\" type=\"int\" isPrimaryKey=\"true\"/&gt;\n  &lt;column name=\"Nom\" type=\"varchar(100)\"/&gt;\n  &lt;column name=\"SiteInternet\" type=\"varchar(250)\"/&gt;\n&lt;/table&gt;\n</code></pre> <p>La nouvelle table est tr\u00e8s simple et se passe de commentaire. Il s'agit \u00e0  pr\u00e9sent de remplacer notre colonne <code>Magasin</code> dans la table <code>Coupon</code> par une  r\u00e9f\u00e9rence vers la nouvelle table. Le but recherch\u00e9 est d'avoir une liste  d\u00e9roulante de magasins \u00e0 s\u00e9lectionner lorsque l'on cr\u00e9e un coupon.  Pour ce faire:</p> <p>\ud83d\udc49 Dans le m\u00eame fichier au niveau de la table <code>Coupon</code>, remplacez la ligne</p> <pre><code>&lt;column name=\"Magasin\" type=\"varchar(100)\"/&gt;\n</code></pre> <p>par</p> <pre><code>&lt;column name=\"idMagasin\" type=\"int\" foreignTable=\"Magasin\"/&gt;\n</code></pre> <p>L'attribut <code>foreignTable</code> indique quelle table notre champ r\u00e9f\u00e9rence. Ainsi,  la colonne <code>idMagasin</code> sera une r\u00e9f\u00e9rence vers la cl\u00e9 primaire de la table  <code>Magasin</code>.</p> <p>La mise \u00e0 jour de la description est \u00e9galement relativement ais\u00e9e \u00e0 comprendre.</p> <p>\ud83d\udc49 \u00c9ditez le fichier <code>descript.xml</code> et ajoutez le mod\u00e8le suivant \u00e0 la suite du  mod\u00e8le <code>coupon</code>.</p> <pre><code>&lt;model name=\"magasin\" maingroup=\"base\" mainfield=\"idMagasin\"&gt;\n  &lt;groups&gt;\n    &lt;group name=\"base\" table=\"Magasin\" type=\"single\"&gt;\n      &lt;fields&gt;\n        &lt;field name=\"idMagasin\" type=\"hidden\" column=\"idMagasin\"/&gt;\n        &lt;field name=\"nom\" type=\"text\" column=\"Nom\"/&gt;\n        &lt;field name=\"siteInternet\" type=\"text\" column=\"SiteInternet\"/&gt;\n      &lt;/fields&gt;\n    &lt;/group&gt;\n  &lt;/groups&gt;\n  &lt;views&gt;\n    &lt;view name=\"default\" style=\"documents\"&gt;\n      &lt;group name=\"base\"/&gt;\n    &lt;/view&gt;\n  &lt;/views&gt;\n&lt;/model&gt;\n</code></pre> <p>\ud83d\udc49 Dans le m\u00eame fichier au niveau du mod\u00e8le <code>coupon</code>, remplacez la ligne</p> <pre><code>&lt;field name=\"nomMagasin\" type=\"text\" column=\"Magasin\"/&gt;\n</code></pre> <p>par</p> <pre><code>&lt;field name=\"idMagasin\" type=\"select\" column=\"idMagasin\"&gt;\n  &lt;options mode=\"sql\"&gt;\n    &lt;value&gt;select idMagasin,Nom from Magasin order by Nom&lt;/value&gt;\n  &lt;/options&gt;\n&lt;/field&gt;\n</code></pre> <p>Ce champ apporte une nouveaut\u00e9. Ce champ annonce un type \"select\". Le type  est indique \u00e0 la feuille de style qu'elle doit afficher une liste d\u00e9roulante. Pour alimenter la liste d\u00e9roulante, on s'appuie sur une requ\u00eate SQL.</p> <p>\ud83d\udc49 Ouvrez l'application depuis un navigateur via l'URL  http://localhost:8080/ewt/web/coupon.  Cliquez sur <code>Fichier &gt; Reset</code> pour  forcer un rechargement du sch\u00e9ma et de la description.</p> <p>\ud83d\udc49 Cliquez sur <code>Admin &gt; G\u00e9n\u00e9rer un canevas de langue</code>. S\u00e9lectionner les  nouvelles lignes du canevas, c'est-\u00e0-dire celles qui se trouvent \u00e0 partir de  <code># model magasin</code>, collez-les dans le fichier <code>i18n/language_fr.properties</code>  de l'application et ajoutez les libell\u00e9s.</p> <pre><code>[...]\n\n# model magasin\nmodel.magasin.label = \ud83d\uded2 Magasin\n\ngroup.magasin.base.label = Donn\u00e9es de base\nfield.magasin.base.idMagasin.label = Identifiant magasin\nfield.magasin.base.nom.label = Nom\nfield.magasin.base.siteInternet.label = Site internet\n</code></pre> <p>Dans l'exemple ci-dessus, nous avons d\u00e9cid\u00e9 d'ajouter une emoji sur le  mod\u00e8le \"Magasin\". Vous pouvez adapter le libell\u00e9 \u00e0 votre guise.</p> <p>\ud83d\udc49 Remplacez la ligne ayant pour cl\u00e9 <code>field.coupon.base.nomMagasin.label</code>  par </p> <pre><code>field.coupon.base.idMagasin.label = Magasin`\n</code></pre> <p>\ud83d\udc49 Revenez sur l'application, cliquez sur <code>Admin &gt; Reset</code></p> <p>Notre nouveau mod\u00e8le est pr\u00eat. Il reste \u00e0 pr\u00e9parer la base de donn\u00e9es.</p> <p>\ud83d\udc49 Cliquez sur <code>Admin &gt; Cr\u00e9er la base de donn\u00e9es (alter)</code></p> <p>La commande devrait g\u00e9n\u00e9rer passablement d'erreurs dans le log car certains  requ\u00eates vont chercher \u00e0 recr\u00e9er des \u00e9l\u00e9ments qui existent d\u00e9j\u00e0. Vous pouvez  ignorer ces erreurs.</p> <p>V\u00e9rifions \u00e0 pr\u00e9sent que notre nouveau mod\u00e8le fonctionne.</p> <p>\ud83d\udc49 Cliquez sur <code>Fichier &gt; Nouveau &gt; \ud83d\uded2 Magasin</code>. Vous pouvez saisir un nom de  magasin et une adresse internet. </p> <p>\ud83d\udc49 Cr\u00e9ez un second magasin de la m\u00eame fa\u00e7on.</p> <p>Multi-dossiers</p> <p>Si vous avez cr\u00e9\u00e9 le nouveau dossier alors que le premier \u00e9tait encore ouvert, vous noterez que les deux dossiers sont ouverts en m\u00eame temps.</p> <p></p> <p>En effet, par d\u00e9faut Ewt garde ouvert les dossiers jusqu'\u00e0 ce qu'ils soient  explicitement ferm\u00e9s (par l'utilisateur ou par un script) ou que la session  expire. C'est le fonctionnement par d\u00e9faut du moteur.</p> <p>Il est possible de demander au moteur de g\u00e9rer les dossiers de fa\u00e7on  unitaire. Pour cela, il faut d\u00e9finir la propri\u00e9t\u00e9 suivante dans le bloc  <code>admin</code>:</p> <pre><code>&lt;documentMode&gt;single&lt;/documentMode&gt;\n</code></pre> <p>Dans la version actuelle du moteur, la propri\u00e9t\u00e9 peut prendre les  valeurs <code>single</code>ou <code>multi</code>. Le mode par d\u00e9faut est le mode <code>single</code>.</p> <p>On notera au passage que la ligne d'ent\u00eate de l'interface affiche une  liste d\u00e9roulante avec la mention \"2 dossiers ouverts\". Le menu d\u00e9roulant  permet de r\u00e9-afficher les dossiers (par exemple s'ils ne sont plus  visibles \u00e0 l'\u00e9cran, ce qui arrive par exemple si on clique sur le nom  d'application dans le coin sup\u00e9rieur gauche) ou de les fermer tous.</p> <p>Voyons \u00e0 pr\u00e9sent ce qu'il en est du mod\u00e8le <code>coupon</code>.</p> <p>\ud83d\udc49 Fermez les dossiers de magasins et lancez une recherche. Ouvrez un  dossier du mod\u00e8le <code>coupon</code>.</p> <p>On remarque que le nouveau champ \"Magasin\" affiche \u00e0 pr\u00e9sent une liste  d\u00e9roulante qui reprend les magasins cr\u00e9\u00e9s pr\u00e9c\u00e9demment.</p> <p></p>"},{"location":"lessons/04_coupon2/#champ-statut","title":"Champ \"Statut\"","text":"<p>Nous allons \u00e0 pr\u00e9sent nous concentrer sur le champ \"Statut\". Ce champ est  cens\u00e9 enregistrer le statut du coupon et indiquer s'il est disponible ou  utilis\u00e9.</p>"},{"location":"lessons/04_coupon2/#type-switch","title":"Type \"switch\"","text":"<p>Nous allons travailler plusieurs \u00e9l\u00e9ments sur ce champ. Commen\u00e7ons par sa  forme. Le champ de type texte actuel n'est pas pratique et nous allons le  remplacer par un autre type de contr\u00f4le.</p> <p>\ud83d\udc49 \u00c9ditez le fichier <code>descript.xml</code> et modifiez le type du champ <code>statut</code> de  <code>text</code> \u00e0 <code>switch</code>.  </p> <p>\ud83d\udc49 Revenez sur l'application et cliquez sur <code>Fichier &gt; Reset</code>. Le champ  devrait aborder une nouvelle forme:</p> <p></p> <p>Lorsque l'on cr\u00e9e un nouveau coupon, on aimerait que celui-ci soit  imm\u00e9diatement disponible. Par cons\u00e9quent le statut par d\u00e9faut devrait \u00eatre 1  et non pas 0. Il est possible de demander \u00e0 Ewt de renseigner une valeur par  d\u00e9faut.</p>"},{"location":"lessons/04_coupon2/#valeur-par-defaut","title":"Valeur par d\u00e9faut","text":"<p>\ud83d\udc49 Modifiez la description du champ <code>Statut</code> pour lui donner la forme  ci-dessous. Effectuez un nouveau <code>Reset</code> puis cr\u00e9er un nouveau coupon via le  menu <code>Fichier</code>.</p> <pre><code>&lt;field name=\"statut\" type=\"switch\" column=\"Statut\"&gt;\n  &lt;default mode=\"text\"&gt;\n    &lt;value&gt;1&lt;/value&gt;\n  &lt;/default&gt;\n&lt;/field&gt;\n</code></pre> <p>Le coupon devrait \u00e0 pr\u00e9sent avoir un statut \"actif\" d\u00e8s la cr\u00e9ation.</p>"},{"location":"lessons/04_coupon2/#donnees-binaires","title":"Donn\u00e9es binaires","text":"<p>On aimerait \u00e0 pr\u00e9sent pouvoir rattacher \u00e0 notre coupon une copie num\u00e9rique  du coupon. Pour cela, nous allons ajouter un champ de type <code>blob</code>.</p> <p>\ud83d\udc49 Modifiez le fichier <code>schema.xml</code> et ajoutez les descriptions de colonnes  suivantes dans la table <code>Coupon</code>:</p> <pre><code>&lt;column name=\"Fichier\" type=\"blob\"/&gt;\n&lt;column name=\"NomFichier\" type=\"varchar(100)\"/&gt;\n&lt;column name=\"TailleFichier\" type=\"integer\"/&gt;\n&lt;column name=\"MimeTypeFichier\" type=\"varchar(100)\"/&gt;\n</code></pre> <p>Ces colonnes permettront de sauvegarder le fichier, son nom, sa taille et  son mime-type. Le mime-type permet de d\u00e9crire le type de fichier. Ainsi, un  fichier pdf sera d\u00e9crit au moyen du mime-type <code>application/pdf</code>, un fichier  jpg au moyen de <code>image/jpeg</code>, etc. Une liste des mime-types principaux est  disponible sur https://developer.mozilla.org/fr/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types.</p> <p>\ud83d\udc49 Modifiez le fichier <code>descript.xml</code> et ajoutez les lignes suivantes dans le  mod\u00e8le <code>coupon</code>:</p> <pre><code>&lt;field name=\"fichier\" type=\"file\" column=\"Fichier\"&gt;\n  &lt;metadata&gt;\n    &lt;attribute name=\"file:name\" column=\"NomFichier\"/&gt;\n    &lt;attribute name=\"file:size\" column=\"TailleFichier\"/&gt;\n    &lt;attribute name=\"file:mimetype\" column=\"MimeTypeFichier\"/&gt;\n  &lt;/metadata&gt;\n&lt;/field&gt;\n</code></pre> <p>Le champ <code>fichier</code> pr\u00e9sente plusieurs particularit\u00e9s:</p> <ul> <li>Il est du type <code>file</code>. Le moteur s'appuie sur ce type pour savoir que le    champ est un champ binaire.   Il indique au moteur et \u00e0 la feuille de style que le champ est de type    binaire. Le moteur a besoin de savoir que le champ est binaire pour des    questions d'optimisation.</li> <li>Il contient des m\u00e9tadonn\u00e9es. Les m\u00e9tadonn\u00e9es sont des valeurs associ\u00e9es au    champ lui-m\u00eame et stock\u00e9es dans des colonnes ind\u00e9pendantes du champ; les    noms de ces m\u00e9tadonn\u00e9es utilisent des pr\u00e9fixes <code>file:</code>, ce qui indique au    moteur comment il peut interpr\u00e9ter ces m\u00e9tadonn\u00e9es et les lier \u00e0 l'objet    \"File\" qu'il va se construire en m\u00e9moire.</li> </ul> <p>\ud83d\udc49 Ajoutez un libell\u00e9 de champ dans le fichier <code>i18n/language_fr.properties</code>  comme nous l'avons d\u00e9j\u00e0 fait auparavant</p> <p>\ud83d\udc49 Lancez \u00e0 nouveau un \"Reset\" puis utilisez la fonction <code>Admin &gt; Cr\u00e9er la  base de donn\u00e9es (alter)</code> pour forcer la cr\u00e9ation des champs en base de donn\u00e9es.</p> <p>L'interface du mod\u00e8le \"Coupon\" affiche \u00e0 pr\u00e9sent un champ \"Fichier\" ayant la  forme suivante:</p> <p></p>"},{"location":"lessons/04_coupon2/#validations","title":"Validations","text":"<p>La derni\u00e8re notion que nous allons aborder dans cette le\u00e7on est la notion de  validation. La validation consiste \u00e0 sp\u00e9cifier des r\u00e8gles de contr\u00f4le des  valeurs. Ces r\u00e8gles remplissent plusieurs objectifs : v\u00e9rifier que les  valeurs ont une forme convenable, v\u00e9rifier que les valeurs sont valides et  qu'elles sont s\u00fbres, c'est-\u00e0-dire qu'elles ne repr\u00e9sentent pas un risque de  s\u00e9curit\u00e9.</p> <p>Le moteur effectue un contr\u00f4le automatique du format de valeur apr\u00e8s  formatage. Par exemple qu'un champ li\u00e9 \u00e0 une colonne \"integer\" contient bien  une valeur enti\u00e8re. Il est toutefois possible de sp\u00e9cifier des r\u00e8gles de  validation personnalis\u00e9es.</p>"},{"location":"lessons/04_coupon2/#controle-check","title":"Contr\u00f4le (<code>check</code>)","text":"<p>Nous allons mettre en place un contr\u00f4le qui v\u00e9rifie qu'un libell\u00e9 est bien  saisi pour le champ \"Nom\" du mod\u00e8le \"Magasin\". Il existe plusieurs fa\u00e7ons de  r\u00e9aliser ce type de test. Nous allons passer en revue les diff\u00e9rentes  variantes possibles.</p> <p>\ud83d\udc49 Impl\u00e9mentez l'une des variantes ci-dessous dans votre application puis  effectuez un <code>reset</code> pour prendre en compte la modification.</p>"},{"location":"lessons/04_coupon2/#i-regle-mandatory","title":"i) R\u00e8gle \"MANDATORY\"","text":"<p>\ud83d\udc49 \u00c9ditez le fichier <code>descript.xml</code> et modifiez le champ <code>nom</code> du mod\u00e8le  <code>magasin</code> ainsi:</p> <pre><code>&lt;field name=\"nom\" type=\"text\" column=\"Nom\"&gt;\n  &lt;validation method=\"rule\"&gt;MANDATORY&lt;/validation&gt;\n&lt;/field&gt;\n</code></pre> <p>Ici, on utilise une r\u00e8gle interne du moteur pour v\u00e9rifier que le champ n'est  pas vide.</p>"},{"location":"lessons/04_coupon2/#ii-expression-reguliere","title":"ii) Expression r\u00e9guli\u00e8re","text":"<p>\ud83d\udc49 \u00c9ditez le fichier <code>descript.xml</code> et modifiez le champ <code>nom</code> du mod\u00e8le <code>magasin</code> ainsi:</p> <pre><code>&lt;field name=\"nom\" type=\"text\" column=\"Nom\"&gt;\n  &lt;validation method=\"regex\" source=\"raw\"&gt;^.+$&lt;/validation&gt;\n&lt;/field&gt;\n</code></pre> <p>Ici, on utilise une expression r\u00e9guli\u00e8re sur la valeur brute (<code>source=\"raw\"</code>). La valeur brute est la valeur telle que re\u00e7ue du formulaire html. Dans  certains cas, cette valeur brute peut diff\u00e9rer de la valeur enregistr\u00e9e en  base de donn\u00e9es (que l'on appellera \"valeur standardis\u00e9e\").</p> <p>Prenons le cas d'une date. La valeur brute pourrait \u00eatre \"31.12.2023\" dans  le cas d'une locale \"fr-CH\" ou \"12.31.2023\" dans le cas d'une locale \"en-US\". Le moteur traite cette valeur brute en fonction de la locale et en produit  une valeur standardis\u00e9e au format iso 8601 \"2023-12-31\".</p> <p>La validation s'effectuera donc sur la base d'une valeur diff\u00e9rente selon la  source indiqu\u00e9e:</p> <ul> <li><code>raw</code> : valeur brute</li> <li><code>std</code> : valeur standardis\u00e9e</li> </ul> <p>Pour les tests de valeur, il est recommand\u00e9 de s'appuyer sur la valeur  standardis\u00e9e car les r\u00e8gles de validation n'ont pas \u00e0 se soucier des  diff\u00e9rentes locales possibles.</p> <p>Dans le cas ci-dessus, nous r\u00e9f\u00e9ren\u00e7ons la source <code>raw</code> car le test de  validation que nous effectuons n'est pas influenc\u00e9 par la forme de la valeur.  </p>"},{"location":"lessons/04_coupon2/#iii-script","title":"iii) Script","text":"<p>\ud83d\udc49 \u00c9ditez le fichier <code>descript.xml</code> et modifiez le champ <code>nom</code> du mod\u00e8le <code>magasin</code> ainsi:</p> <pre><code>&lt;field name=\"nom\" type=\"text\" column=\"Nom\"&gt;\n  &lt;validation method=\"script\" source=\"raw\" action=\"check\"&gt;return data != \"\";&lt;/validation&gt;\n&lt;/field&gt;\n</code></pre> <p>Ici, on utilise le moteur de script pour effectuer le test de validation. La  valeur brute est disponible au niveau de la variable <code>data</code>. Le script doit  retourner la valeur <code>true</code> pour indiquer que la validation r\u00e9ussi et <code>false</code>  pour indiquer qu'elle \u00e9choue. </p>"},{"location":"lessons/04_coupon2/#nettoyage-sanitize","title":"Nettoyage (<code>sanitize</code>)","text":"<p>Nous allons ajouter une r\u00e8gle de validation pour nettoyer le champ  \"Remarque\" du mod\u00e8le \"Coupon\".</p> <p>\ud83d\udc49 \u00c9ditez le fichier <code>descript.xml</code> et modifiez le champ <code>remarque</code> du mod\u00e8le  <code>coupon</code> ainsi:</p> <pre><code>&lt;field name=\"remarque\" type=\"textarea\" column=\"Remarque\"&gt;\n  &lt;validation method=\"rule\" action=\"sanitize\" source=\"raw\"&gt;FORMATTING|BLOCKS|STYLES|LINKS|TABLES|IMAGES&lt;/validation&gt;\n&lt;/field&gt;\n</code></pre> <p>Ici, on applique une r\u00e8gle de nettoyage sur la valeur pour lui enlever tous les \u00e9l\u00e9ments susceptibles de contenir une injection XSS, \u00e0 l'exception de  certains \u00e9l\u00e9ments (\u00e9l\u00e9ments de formatage, \u00e9l\u00e9ments de blocs, etc.)</p> <p>Les r\u00e8gles d'autorisation correspondent aux sanitizers d\u00e9finis par la  librairie Owasp:  https://www.javadoc.io/doc/com.googlecode.owasp-java-html-sanitizer/owasp-java-html-sanitizer/20191001.1/org/owasp/html/Sanitizers.html</p> <p>\ud83d\udc49 Effectuez un reset pour prendre en compte la modification.</p> <p>\ud83d\udc49 Ouvrez ou cr\u00e9ez une fiche \"Coupon\" puis essayez de saisir la valeur  suivante dans le champ \"Remarque\":</p> <pre><code>hello &lt;script&gt;alert('xss')&lt;/script&gt; world\n</code></pre> <p>\ud83d\udc49 Cliquez sur \"Enregistrer\"</p> <p>Vous pouvez alors constater que la partie <code>&lt;script&gt;...&lt;/script&gt;</code> de la  remarque a \u00e9t\u00e9 retir\u00e9e et qu'un avertissement a \u00e9t\u00e9 \u00e9mis par l'application:</p> <p></p> <p>Le libell\u00e9 du message d'avertissement est un message pr\u00e9d\u00e9fini dans le  moteur. Il est possible de le personnaliser.</p> <p>\ud83d\udc49 Modifiez la r\u00e8gle de validation pour lui ajouter un attribut  <code>label=\"field.coupon.base.remarque.validation.warning\"</code></p> <p>\ud83d\udc49 \u00c9ditez le fichier de langue <code>i18n/language_fr.properties</code> et ajoutez une  entr\u00e9e pour la cl\u00e9 que nous avons r\u00e9f\u00e9renc\u00e9e:</p> <pre><code>field.coupon.base.remarque.validation.warning = Vous ne pouvez pas int\u00e9grer \\\n  d'\u00e9l\u00e9ment html dans la remarque\n</code></pre> <p>\ud83d\udc49 Effectuez un <code>reset</code> puis essayez \u00e0 nouveau de renseigner la valeur  contenant la partie <code>&lt;script&gt;...&lt;/script&gt;</code> dans le champ. Cliquez sur  \"Enregistrer\".</p> <p>Vous noterez que la valeur a \u00e9t\u00e9 nettoy\u00e9e mais que cette fois  l'avertissement correspond \u00e0 celui que vous avez d\u00e9fini.</p> <p>Use case de validation</p> <p>Ce paragraphe est optionnel. Il approfondit le use case de validation de  type <code>sanitize</code>. </p> <p>Le contexte de validation <code>sanitize</code> que nous avons mise en \u0153uvre ici  n'est pas repr\u00e9sentatif d'un cas r\u00e9aliste, car nous avons appliqu\u00e9 une  r\u00e8gle de nettoyage html \u00e0 un texte simple. Le but ici n'\u00e9tait pas tant  de d\u00e9montrer le fonctionnement du sanitize en condition r\u00e9elle, mais de  voir quel impact la r\u00e8gle de validation sanitize peut avoir sur une  valeur.</p> <p>D'ailleurs l'utilisation du sanitize dans ce cas de figure repr\u00e9sente un  risque de corruption de donn\u00e9es. Saisissez par exemple la valeur <code>hello &lt;  world</code> dans la remarque puis cliquez sur \"Enregistrer\". Vous constaterez  que la valeur est chang\u00e9e en <code>hello &amp;lt; world</code>. Cela vient du fait que le  sanitize a pour vocation de g\u00e9n\u00e9rer un code r\u00e9utilisable en tant que html  et non pas en tant que texte.</p> <p>La mise en place d'un use case plus r\u00e9aliste demande plus d'efforts car  le jeu de styles que nous utilisons est d\u00e9j\u00e0 construit pour \u00e9viter le plus  possible le risque de Cross Site Scripting (XSS). En effet, pour qu'une  injection XSS s'exprime, il faut que la valeur soit int\u00e9gr\u00e9e dans la page  html au moyen d'une instruction XSL du genre </p> <pre><code>&lt;xsl:value-of select=\"data\" disable-output-escaping=\"yes\"/&gt;\n</code></pre> <p>or le jeu de style que nous utilisons n'en effectue aucun pour des donn\u00e9es  provenant de champs (\u00e0 l'exception du type de champ <code>tinymce</code>, mais le  contr\u00f4le utilis\u00e9 dans ce cas int\u00e8gre son propre m\u00e9canisme de nettoyage). Pour mettre en place un use case repr\u00e9sentatif, il faut donc  construire un sc\u00e9nario qui provoque volontairement une faille permettant  l'injection XSS (ce qui n'est \u00e9videmment pas une bonne chose pour une  application). Pour ce faire, nous pouvons proc\u00e9der ainsi:</p> <p>\ud83d\udc49 Cr\u00e9ez un script <code>_test.script</code> avec le contenu suivant:</p> <pre><code>$msg.info(#coupon[1].info.remarque, null, { disableOutputEscaping: \"yes\" });\n</code></pre> <p>\ud83d\udc49 Adaptez le num\u00e9ro de dossier (le \"1\" entre crochets dans l'exemple  ci-dessus) au num\u00e9ro de votre dossier. Le num\u00e9ro de dossier appara\u00eet \u00e0  droite du libell\u00e9 \"Coupon\", au-dessus des boutons \"Enregistrer\", \"Fermer\"  et \"Supprimer\" de la fiche \"Coupon\".</p> <p>Ce script reprend la valeur du champ \"Remarque\" du dossier coupon ayant  l'identifiant \"1\" (que vous devrez adapter) dans un message de type \"info\",  en indiquant explicitement de d\u00e9sactiver l'\u00e9chappement. Ainsi, le texte de  la remarque sera interpr\u00e9t\u00e9 comme du html.</p> <p>\ud83d\udc49 D\u00e9sactivez la r\u00e8gle de validation (en la mettant en commentaire  dans le fichier <code>descript.xml</code>), effectuez un <code>reset</code> puis saisissez la  valeur suivante dans le champ \"Remarque\":</p> <pre><code>hello &lt;script&gt;alert('xss')&lt;/script&gt; &lt;b&gt;world&lt;/b&gt;\n</code></pre> <p>\u00c0 l'enregistrement, le champ \"Remarque\" devrait afficher une valeur  inchang\u00e9e. Cliquez \u00e0 pr\u00e9sent dans le menu \"Fichier &gt; Test\", ce qui aura  pour effet d'ex\u00e9cuter le script <code>_test.xml</code> que nous avons construit. Un popup d'alerte avec le texte \"xss\" devrait s'afficher apr\u00e8s  l'enregistrement. Cela signifie que l'application est \u00e0 pr\u00e9sent  sujette \u00e0 l'injection XSS. Notez au passage que le mot \"world\" appara\u00eet en  gras dans le message d'information.</p> <p>\ud83d\udc49 R\u00e9activez alors la r\u00e8gle de validation, effectuez un <code>reset</code> puis  cliquez \u00e0 nouveau sur \"Fichier &gt; Test\". </p> <p>Le popup affichant \"css\" ne devrait plus appara\u00eetre car la valeur de  remarque a \u00e9t\u00e9 nettoy\u00e9e. Par contre le mot \"world\" devrait continuer de  s'afficher en gras si la r\u00e8gle <code>FORMATTING</code> a bien \u00e9t\u00e9 reprise dans la  r\u00e8gle de validation.</p> <p>Cette illustration montre que le r\u00f4le du sanitize est de nettoyer un texte  pour qu'il puisse \u00eatre affich\u00e9 de mani\u00e8re sure sous forme HTML.</p>"},{"location":"lessons/04_coupon2/#conclusion","title":"Conclusion","text":"<p>Dans cette le\u00e7on, nous avons abord\u00e9 diff\u00e9rentes notions avanc\u00e9es de  d\u00e9finitions de champs. Cela n'est de loin pas exhaustif et d'autres notions  seront abord\u00e9es dans les prochaines le\u00e7ons.</p> <p>La prochaine le\u00e7on sera orient\u00e9e sur la gestion des permissions au moyen de  policies. Cela nous permettra de mieux g\u00e9rer l'affichage des champs en  fonction des \u00e9tats et des droits d'acc\u00e8s.</p>"},{"location":"lessons/05_coupon3/","title":"Coupon - partie 3","text":"<p>Cette le\u00e7on aborde la question des droits d'acc\u00e8s et des permissions qui s'y  rapportent. Nous continuons \u00e0 travailler sur l'application \"coupon\" mise en  place durant les le\u00e7ons \"03 - coupon1\" et  \"04 - coupon2\".</p>"},{"location":"lessons/05_coupon3/#introduction","title":"Introduction","text":"<p>L'application \"Coupon\" mise en place lors des le\u00e7ons pr\u00e9c\u00e9dente ne g\u00e8re  aucun droit d'acc\u00e8s : tous les utilisateurs peuvent acc\u00e9der \u00e0 tous les  coupons et tous les magasins, en cr\u00e9er, les modifier, les supprimer.</p> <p>D'autre part, les dossiers sont toujours modifiables, quel que soit le  statut. Nous allons commencer par mettre en place une gestion des  permissions en fonction du statut du coupon.</p> <p>Nomenclature</p> <p>Les policies d'Ewt font intervenir 4 notions qu'il peut \u00eatre n\u00e9cessaire  de clarifier:</p> <p>1)  Permissions : Les permissions indiquent si une donn\u00e9e est      disponible en lecture et/ou en \u00e9criture: les types de permissions      possibles sont donc <code>read</code> ou <code>write</code></p> <p>2)  Actions : Les actions font r\u00e9f\u00e9rence aux commandes envoy\u00e9es par      un client (un navigateur) pour agir sur un dossier ou sur le moteur      lui-m\u00eame. Le moteur supporte diff\u00e9rentes actions et la liste est      susceptible de s'accro\u00eetre au fil des versions de Ewt. On peut par      exemple citer les actions suivantes: <code>addTuple</code>, <code>admin</code>, <code>arrange</code>,      <code>close</code>, <code>create</code>, <code>clone</code>, <code>delete</code>, <code>delTuple</code>, <code>dummy</code>, <code>open</code>,      <code>reset</code>, <code>save</code>, <code>script</code>, <code>setState</code>, <code>setStyle</code>, <code>setView</code>.</p> <p>3)  Transitions : Les transitions sont des changements d'\u00e9tat d'un      dossier</p> <p>4)  Operations : Les op\u00e9rations sont des traitements propres \u00e0      l'application, mais non interpr\u00e9t\u00e9s par Ewt. Il s'agit d'une      possibilit\u00e9 offerte \u00e0 l'application pour apposer des policies \u00e0 des      processus qui lui sont sp\u00e9cifiques. On peut par exemple imaginer une      op\u00e9ration \"reindexCatalog\" qui est un processus m\u00e9tier. On peut      alors associer des policies \u00e0 cette op\u00e9ration, bien qu'il ne      s'agisse pas d'une op\u00e9ration du moteur.</p>"},{"location":"lessons/05_coupon3/#activation-des-policies","title":"Activation des policies","text":"<p>En premier lieu, nous devons activer le syst\u00e8me de policies afin d'avoir une  gestion de droits.</p> <p>Qu'est-ce qu'une policy ? Les policies sont largement d\u00e9crites dans la documentation de r\u00e9f\u00e9rence. En  bref, il s'agit de r\u00e8gles permettant de g\u00e9rer les droits d'acc\u00e8s. Les policies peuvent \u00eatre d\u00e9finies soit pour des groupes d'individus (on parle de policy d'identit\u00e9) soit pour des mod\u00e8les, des groupes ou des champs (on parle alors de policy de ressource).</p> <p>Comment active-t-on le syst\u00e8me de gestion des policies ? Le syst\u00e8me de gestion de policies s'active d\u00e8s lors que des policies sont  d\u00e9finies dans l'application et/ou que la configuration de l'application  r\u00e9f\u00e9rence une policy. Nous allons effectuer ces deux op\u00e9rations.</p>"},{"location":"lessons/05_coupon3/#mise-en-place-dune-policy-de-base","title":"Mise en place d'une policy de base","text":"<p>Nous allons mettre en place une policy de base.</p> <p>\ud83d\udc49 Cr\u00e9ez un r\u00e9pertoire <code>policies</code> dans le r\u00e9pertoire principal de  l'application <code>coupon</code> et ajoutez-y un fichier <code>main.xml</code> ayant le  contenu suivant:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;policy name=\"main\" type=\"identity\" priority=\"-100\"&gt;\n  &lt;description&gt;\n    Cette policy d'identit\u00e9 v\u00e9rifie le r\u00f4le technique permettant d'acc\u00e9der \n    \u00e0 l'application. Comme il s'agit de la policy de base, on lui donne\n    une priorit\u00e9 de -100, ce qu'il fait que n'importe quelle autre policy \n    primera sur celle-ci.\n  &lt;/description&gt;\n  &lt;appliesTo&gt;\n    &lt;role&gt;EWT&lt;/role&gt;\n  &lt;/appliesTo&gt;\n  &lt;statement effect=\"allow\"&gt;\n    &lt;permission&gt;read&lt;/permission&gt;\n    &lt;action&gt;dummy,save,close&lt;/action&gt;\n  &lt;/statement&gt;\n&lt;/policy&gt;\n</code></pre> <p>Vous pouvez \u00e9galement nommer le fichier <code>main.policy</code> si vous souhaitez lui  donner une extension plus parlante.</p> <p>Que fait cette policy ? Cette policy accorde une permission de lecture seule aux utilisateurs  poss\u00e9dant le r\u00f4le <code>EWT</code>. Elle autorise \u00e9galement l'usage des actions <code>dummy</code>  et <code>save</code>.</p> <p>Pour rappel, dans la le\u00e7on \"01 - intro\", nous avons configur\u00e9 le serveur  tomcat de sorte que le login <code>user</code> re\u00e7oive le r\u00f4le <code>EWT</code> (nous avons  fait cela au niveau du fichier <code>tomcat-users.xml</code> dans la config de Tomcat). Il s'agit d'un r\u00f4le technique n\u00e9cessaire pour acc\u00e9der \u00e0 l'application. Ce  r\u00f4le est r\u00e9f\u00e9renc\u00e9 au niveau du fichier <code>web.xml</code> d'Ewt en tant que  contrainte d'authentification (\u00e9l\u00e9ment <code>&lt;auth-constraint&gt;</code>), ce qui fait  qu'il est attendu par le serveur d'application: si un utilisateur  s'authentifie sur le serveur d'application mais ne poss\u00e8de pas ce r\u00f4le, il  recevra une erreur 403.</p> <p>L'action <code>dummy</code> est une action fictive qui n'effectue aucun traitement.  Elle n'en est pas pour autant inutile. En effet, lorsque l'on effectue une  requ\u00eate GET sur le moteur, c'est-\u00e0-dire lorsque l'on acc\u00e8de \u00e0 une  application au moyen d'une URL, le moteur v\u00e9rifie que le client est autoris\u00e9  \u00e0 effectuer au moins une action, quelle qu'elle soit. En accordant un droit  sur <code>dummy</code>, on remplit cette condition sans que cela n'ait d'impact m\u00e9tier  sur une application, du fait que <code>dummy</code> ne fait rien.</p> <p>L'action <code>save</code> est une action qui traite un formulaire html et <code>close</code> est  une action qui ferme un dossier ouvert. On accorde le droit sur ces actions  car elles sont n\u00e9cessaires \u00e0 la navigation dans une application, m\u00eame  lorsque celle-ci est en lecture seule.</p> <p>\ud83d\udc49 Effectuez un <code>reset</code> de l'application.</p> <p>Si vous avez lanc\u00e9 la commande <code>reset</code> depuis la page d'accueil de l'application, vous ne devriez pas remarquer grand chose. Par contre si vous avez lanc\u00e9 la commande depuis un dossier, vous remarquerez que tous les champs du dossier sont pass\u00e9s en lecture seule. Seule l'action \"Fermer\"  reste disponible (\u00e9tant donn\u00e9 qu'elle est autoris\u00e9e par la policy <code>main</code>).  L'action \"Enregistrer\" a disparu malgr\u00e9 le fait que l'action <code>save</code> est  autoris\u00e9e. Cela vient du fait que la policy n'accorde pas la permission  <code>write</code>. </p> <p></p> <p>\ud83d\udc49 Depuis la page d'accueil, lancez une recherche en cliquant sur le bouton \"Rechercher\". Un message d'erreur signalant que l'op\u00e9ration n'est pas  permise devrait appara\u00eetre.</p> <p></p> <p>\u00c9l\u00e9ment <code>&lt;appliesTo&gt;</code></p> <p>Au d\u00e9but de ce chapitre, nous avons \u00e9voqu\u00e9 les policies d'identit\u00e9 et les  policies de ressource. La policy <code>main</code> mise en place ici est une policy  d'identit\u00e9. Les policies d'identit\u00e9 contiennent une balise <code>&lt;appliesTo&gt;</code>  dans laquelle on \u00e9num\u00e8re les r\u00e9f\u00e9rences de sujets auxquels la policy doit  s'appliquer. Nous avons r\u00e9f\u00e9renc\u00e9 le r\u00f4le <code>EWT</code>. Les policies d'identit\u00e9  sont automatiquement \u00e9valu\u00e9es du moment que le sujet connect\u00e9 correspond  \u00e0 l'une des conditions <code>&lt;appliesTo&gt;</code> de la policy.</p> <p>Dans le cas des policies de ressources il en va diff\u00e9remment. Une policy  de ressource doit \u00eatre r\u00e9f\u00e9renc\u00e9e par une ressource. Prenons le cas de  la policy <code>main</code> d\u00e9finie en tant que policy de ressource:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;policy name=\"main\" type=\"resource\" priority=\"-100\"&gt;\n  &lt;description&gt;\n    Cette policy de ressource autorise un acc\u00e8s minimaliste sur\n    l'application \u00e0 tout utilisateur poss\u00e9dant le r\u00f4le technique.\n    Comme il s'agit de la policy de base, on lui donne une priorit\u00e9  \n    de -100, ce qu'il fait que n'importe quelle autre policy primera \n    sur celle-ci.\n  &lt;/description&gt;\n  &lt;statement effect=\"allow\"&gt;\n    &lt;subject&gt;\n      &lt;role&gt;EWT&lt;/role&gt;\n    &lt;/subject&gt;\n    &lt;action&gt;dummy,save,close&lt;/action&gt;\n    &lt;permission&gt;read&lt;/permission&gt;\n  &lt;/statement&gt;\n&lt;/policy&gt;\n</code></pre> <p>La policy de ressource n'int\u00e8gre pas d'\u00e9l\u00e9ment <code>&lt;appliesTo&gt;</code>. Par  cons\u00e9quent, comment faire si nous souhaitons appliquer cette policy \u00e0  l'application ? Il faut pour cela ajouter une r\u00e9f\u00e9rence au niveau du  fichier de configuration. Cela se fait en ajoutant la section suivante  dans le fichier <code>config.xml</code>: </p> <pre><code>&lt;policies&gt;\n  &lt;policy name=\"main\"/&gt;\n&lt;/policies&gt;\n</code></pre>"},{"location":"lessons/05_coupon3/#mise-en-place-dune-policy-didentite","title":"Mise en place d'une policy d'identit\u00e9","text":"<p>Nous avons mis en place une policy de base qui a eu pour effet de fortement  restreindre les droits de l'utilisateur \"user\" sur l'application. Nous  allons \u00e0 pr\u00e9sent \u00e9tendre les droits de ce dernier au moyen de policies  suppl\u00e9mentaires.</p> <p>Commen\u00e7ons par attribuer un r\u00f4le m\u00e9tier \u00e0 l'utilisateur \"user\".</p> <p>\ud83d\udc49 \u00c9ditez le fichier <code>tomcat-users.xml</code> (pr\u00e9sent dans  <code>C:\\apps\\apache-tomcat-9.0.76\\conf\\</code> si vous utilisez un environnement  similaire \u00e0 celui mis en place dans la le\u00e7on \"01 - intro\").</p> <p>\ud83d\udc49 Ajoutez les r\u00f4les m\u00e9tiers suivants:</p> <pre><code>&lt;role rolename=\"coupon-admin\"/&gt;\n&lt;role rolename=\"coupon-user\"/&gt;\n</code></pre> <p>Ici, nous avons cr\u00e9\u00e9 deux r\u00f4les : le r\u00f4le <code>coupon-admin</code> donnera acc\u00e8s aux  fonctions d'administration tandis que le r\u00f4le <code>coupon-user</code> donnera acc\u00e8s  aux fonctionnalit\u00e9s standard.</p> <p>\ud83d\udc49 Attribuez ces r\u00f4les \u00e0 l'utilisateur \"user\" en modifiant la ligne  correspondant \u00e0 ce \"user\" de la fa\u00e7on suivante:</p> <pre><code>&lt;user username=\"user\" password=\"1234\" roles=\"EWT,coupon-admin,coupon-user\"/&gt;\n</code></pre> <p>Pour tester les diff\u00e9rentes combinaisons de r\u00f4les, nous allons ajouter deux  utilisateurs suppl\u00e9mentaires:</p> <p>\ud83d\udc49 Ajoutez les comptes suivants:</p> <pre><code>&lt;user username=\"superuser\" password=\"1234\" roles=\"EWT,coupon-user,coupon-admin\"/&gt;\n&lt;user username=\"admin\" password=\"1234\" roles=\"EWT,coupon-admin\"/&gt;\n</code></pre> <p>\u00c0 la fin des modifications, votre fichier <code>tomcat-users.xml</code> devrait avoir  la forme suivante (les commentaires ont \u00e9t\u00e9 retir\u00e9s):</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;tomcat-users xmlns=\"http://tomcat.apache.org/xml\"\n              xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n              xsi:schemaLocation=\"http://tomcat.apache.org/xml tomcat-users.xsd\"\n              version=\"1.0\"&gt;\n  &lt;role rolename=\"EWT\"/&gt;\n  &lt;role rolename=\"coupon-user\"/&gt;\n  &lt;role rolename=\"coupon-admin\"/&gt;\n  &lt;user username=\"user\" password=\"1234\" roles=\"EWT,coupon-user\"/&gt;\n  &lt;user username=\"superuser\" password=\"1234\" roles=\"EWT,coupon-user,coupon-admin\"/&gt;\n  &lt;user username=\"admin\" password=\"1234\" roles=\"EWT,coupon-admin\"/&gt;\n&lt;/tomcat-users&gt;\n</code></pre> <p>Nous allons \u00e0 pr\u00e9sent d\u00e9finir les policies qui accordent les droits en  fonction des nouveaux r\u00f4les.</p> <p>\ud83d\udc49 Cr\u00e9ez un fichier <code>admin.xml</code> dans le dossier <code>policies</code> de l'application  et ins\u00e9rez-y le contenu suivant:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;policy name=\"admin\" type=\"identity\"&gt;\n  &lt;description&gt;\n    Cette policy accorde un droit sur les fonctions d'administration\n  &lt;/description&gt;\n  &lt;appliesTo&gt;\n    &lt;role&gt;coupon-admin&lt;/role&gt;\n  &lt;/appliesTo&gt;\n  &lt;statement effect=\"allow\"&gt;\n    &lt;action&gt;admin,reset&lt;/action&gt;\n  &lt;/statement&gt;\n&lt;/policy&gt;\n</code></pre> <p>\ud83d\udc49 Cr\u00e9ez un fichier <code>user.xml</code> dans le dossier <code>policies</code> de l'application  et ins\u00e9rez-y le contenu suivant:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;policy name=\"user\" type=\"identity\"&gt;\n  &lt;description&gt;\n    Cette policy accorde un droit sur toutes les fonctions, \u00e0 l'exception\n    des fonctions d'administration\n  &lt;/description&gt;\n  &lt;appliesTo&gt;\n     &lt;role&gt;coupon-user&lt;/role&gt;\n  &lt;/appliesTo&gt;\n  &lt;statement effect=\"allow\"&gt;\n    &lt;description&gt;\n      On accorde un droit sur toutes les actions, \u00e0 l'exception de\n      reset et admin\n    &lt;/description&gt;\n    &lt;permission&gt;read,write&lt;/permission&gt;\n    &lt;action&gt;addTuple&lt;/action&gt;\n    &lt;action&gt;arrange&lt;/action&gt;\n    &lt;action&gt;close&lt;/action&gt;\n    &lt;action&gt;create&lt;/action&gt;\n    &lt;action&gt;clone&lt;/action&gt;\n    &lt;action&gt;delete&lt;/action&gt;\n    &lt;action&gt;delTuple&lt;/action&gt;\n    &lt;action&gt;dummy&lt;/action&gt;\n    &lt;action&gt;open&lt;/action&gt;\n    &lt;action&gt;reset&lt;/action&gt;\n    &lt;action&gt;save&lt;/action&gt;\n    &lt;action&gt;script&lt;/action&gt;\n    &lt;action&gt;setState&lt;/action&gt;\n    &lt;action&gt;setStyle&lt;/action&gt;\n    &lt;action&gt;setView&lt;/action&gt;\n  &lt;/statement&gt;\n&lt;/policy&gt;\n</code></pre> <p>On remarquera au passage la diff\u00e9rence de syntaxe utilis\u00e9e pour \u00e9num\u00e9rer les  actions entre les deux policies. Ewt autorise d'\u00e9num\u00e9rer les actions (et les  permissions) en les pla\u00e7ant dans une liste s\u00e9par\u00e9e par une virgule, en les  \u00e9num\u00e9rant dans des balises <code>&lt;action&gt;</code> s\u00e9par\u00e9es ou en faisant un mix des deux  formes. Vous pouvez choisir la forme qui vous convient le mieux.</p> <p>Construction alternative</p> <p>Ce paragraphe est optionnel. Nous y discutons d'une fa\u00e7on  alternative de construire la policy <code>user</code>. Nous abordons quelques notions  utiles concernant les policies, mais nous aurons l'occasion d'y revenir  plus tard.</p> <p>Dans le cas du r\u00f4le <code>coupon-user</code> nous avons d\u00e9cid\u00e9 d'\u00e9num\u00e9rer toutes les  actions autoris\u00e9es. On aurait \u00e9galement pu construire la policy  diff\u00e9remment, en accordant les droits sur toutes les actions, puis en  retirant les actions <code>admin</code> et <code>reset</code> ensuite. La policy aurait pu \u00eatre  d\u00e9finie ainsi:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;policy name=\"user\" type=\"identity\" version=\"1.0\"&gt;\n  &lt;description&gt;\n    Cette policy accorde un droit sur toutes les fonctions, \u00e0 \n    l'exception des fonctions d'administration\n  &lt;/description&gt;\n  &lt;appliesTo&gt;\n    &lt;role&gt;coupon-user&lt;/role&gt;\n  &lt;/appliesTo&gt;\n  &lt;statement effect=\"allow\"&gt;\n    &lt;description&gt;\n      On accorde un droit sur toutes les actions...\n    &lt;/description&gt;\n    &lt;permission&gt;read,write&lt;/permission&gt;\n    &lt;action&gt;*&lt;/action&gt;\n  &lt;/statement&gt;\n  &lt;statement effect=\"deny\"&gt;\n    &lt;description&gt;\n      ... mais on le retire sur admin et reset\n    &lt;/description&gt;\n    &lt;permission&gt;read,write&lt;/permission&gt;\n    &lt;action&gt;admin,reset&lt;/action&gt;\n  &lt;/statement&gt;\n&lt;/policy&gt;\n</code></pre> <p>Attention, cette fa\u00e7on de proc\u00e9der pour g\u00e9rer les droits entra\u00eene  au moins deux cons\u00e9quences:</p> <ol> <li>Une adaptation de la policy <code>admin</code> est n\u00e9cessaire</li> <li>Une r\u00e9f\u00e9rence de version doit \u00eatre ajout\u00e9e \u00e0 la policy <code>user</code></li> </ol> <p>a) Adaptation de la policy <code>admin</code> La policy <code>admin</code> doit \u00eatre modifi\u00e9e ainsi :</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;policy name=\"admin\" type=\"identity\" priority=\"1\"&gt;\n  &lt;description&gt;\n    Cette policy accorde un droit sur les fonctions d'administration\n  &lt;/description&gt;\n  &lt;appliesTo&gt;\n    &lt;role&gt;coupon-admin&lt;/role&gt;\n  &lt;/appliesTo&gt;\n  &lt;statement effect=\"allow\"&gt;\n    &lt;action&gt;admin,reset&lt;/action&gt;\n  &lt;/statement&gt;\n&lt;/policy&gt;\n</code></pre> <p>La diff\u00e9rence se situe au niveau de la balise <code>&lt;policy&gt;</code> : nous avons ajout\u00e9 un attribut <code>priority=\"1\"</code>. Pourquoi ? Dans Ewt, les refus  priment sur les autorisations. Or, nous avons ici une policy <code>admin</code> qui  accorde un droit sur les actions <code>admin</code> et <code>reset</code> et dans le m\u00eame  temps une policy <code>user</code> qui la refuse. Le refus l'emporte et par  cons\u00e9quent les actions d'administration ne sont utilisables par personne.</p> <p>L'attribut <code>priority</code> permet de faire primer la policy <code>admin</code> sur la  policy <code>user</code>. La policy <code>admin</code> d\u00e9clare une priorit\u00e9 de 1, alors que la  policy <code>user</code> n'en d\u00e9clare aucune, ce qui revient \u00e0 avoir une priorit\u00e9 de 0. Une priorit\u00e9 plus haute l'emporte sur une priorit\u00e9 inf\u00e9rieure.</p> <p>b) Verrouillage de version Dans la policy <code>user</code> ci-dessus, nous avons int\u00e9gr\u00e9 une petite  diff\u00e9rence qui qui a son importance du point de vue de la s\u00e9curit\u00e9.  L'\u00e9l\u00e9ment racine <code>&lt;policy&gt;</code> a \u00e9t\u00e9 compl\u00e9t\u00e9 avec un attribut  <code>version=\"1.0\"</code>. Cet attribut indique que l'on souhaite appliquer le  mod\u00e8le de policy \"1.0\" dans ce cas. Il s'agit d'un garde-fou pour  \u00e9viter que l'entr\u00e9e <code>&lt;action&gt;*&lt;/action&gt;</code> ne soit mal interpr\u00e9t\u00e9e.  </p> <p>Explication Comme indiqu\u00e9 au d\u00e9but de cette remarque, la policy ci-dessus accorde un  droit sur toutes les actions dans un premier temps, puis retire le droit  pour les actions <code>admin</code> et <code>reset</code>. L'interpr\u00e9tation de \"toutes les  actions\" peut varier en fonction de la version du moteur Ewt. Imaginons en  effet qu'une version future du moteur ajoute une nouvelle action avanc\u00e9e.  La policy ci-dessus accorderait de facto cette nouvelle action. Cela  pourrait repr\u00e9senter un risque de s\u00e9curit\u00e9 pour l'application.</p> <p>Le fait de mentionner que la policy applique la version \"1.0\" du moteur  de policy fait que la r\u00e9f\u00e9rence wildcard <code>&lt;action&gt;*&lt;/action&gt;</code> repr\u00e9sente  \"toutes les actions connues de la version 1.0 du moteur de policy\". Cela  \u00e9vite qu'une action ajout\u00e9e dans la future version 1.1 ne soit prise en  compte. La documentation de r\u00e9f\u00e9rence relative aux policies sera  maintenue au fil des \u00e9volutions et indiquera \u00e0 quelle version chaque  action est associ\u00e9e.</p> <p>Conclusion La m\u00e9thode de d\u00e9finition par ajout/retrait de droits entra\u00eenent des  complications et des risques, raison pour laquelle elle n'est pas  recommand\u00e9e. La solution consistant \u00e0 proc\u00e9der uniquement par ajout de  droit est donc \u00e0 privil\u00e9gier lorsque cela est possible.</p> <p>Ces modifications \u00e9tant faites, il faut \u00e0 pr\u00e9sent red\u00e9marrer le serveur  d'application Tomcat : cela permettra de recharger la configuration de  <code>tomcat-users.xml</code> et effectuera dans le m\u00eame temps un <code>reset</code> de  l'application.</p> <p>\ud83d\udc49 Stoppez l'instance Tomcat puis d\u00e9marrez-la \u00e0 nouveau</p> <p>\u00c0 pr\u00e9sent, le compte \"user\" devrait \u00e0 nouveau pouvoir lancer des recherches,  cr\u00e9er et modifier des dossiers. Par contre il n'est pas autoris\u00e9 \u00e0 lancer  des <code>reset</code> ou \u00e0 acc\u00e9der aux fonctions d'administration.</p> <p>Le compte \"admin\" quant \u00e0 lui devrait \u00e0 l'inverse \u00eatre autoris\u00e9 sur les  actions d'administration et sur le <code>reset</code>, mais ne devrait pas pouvoir  cr\u00e9er ou modifier de dossiers, ni lancer de recherche.</p> <p>Enfin, le compte \"superuser\" devrait disposer de toutes les fonctionnalit\u00e9s.</p>"},{"location":"lessons/05_coupon3/#permission-dependant-du-statut","title":"Permission d\u00e9pendant du statut","text":"<p>L'id\u00e9e est de garder les champs en lecture/\u00e9criture tant qu'un coupon est  actif et de rendre ces champs uniquement lisibles lorsque le coupon est  inactif, \u00e0 l'exception du champ \"Statut\" qui devra rester modifiable.</p> <p>\ud83d\udc49 Cr\u00e9ez un fichier <code>statut.xml</code> dans le dossier <code>policies</code> de l'application  et ajoutez-y le contenu suivant:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;policy name=\"statut\" type=\"resource\" priority=\"1\"&gt;\n  &lt;description&gt;\n    Cette policy g\u00e8re les permissions en fonction du statut\n    d'un dossier\n  &lt;/description&gt;\n  &lt;statement effect=\"deny\" requireQualifiedContext=\"true\"&gt;\n    &lt;description&gt;\n      Ce statement retire le droit d'\u00e9criture sur un dossier dont\n      le statut est 0. Il retire \u00e9galement les droits sur les\n      actions susceptibles de modifier des valeurs sur un dossier.\n    &lt;/description&gt;\n    &lt;subject&gt;\n      &lt;role&gt;*&lt;/role&gt;\n    &lt;/subject&gt;\n    &lt;permission&gt;write&lt;/permission&gt;\n    &lt;action&gt;addTuple,delTuple,create,delete,setState&lt;/action&gt;\n    &lt;condition&gt;return (#base.statut == 0);&lt;/condition&gt;\n  &lt;/statement&gt;\n&lt;/policy&gt;\n</code></pre> <p>Cette policy de ressource s'applique \u00e0 tous les r\u00f4les utilisateur. Elle  retire le droit d'\u00e9criture et bloque certaines actions lorsque le champ  <code>statut</code> d'un dossier a la valeur 0. La condition sur la valeur du champ est  \u00e9crite en script. Nous reviendrons plus tard sur le langage de script, mais  la syntaxe de la condition ci-dessus est assez simple \u00e0 comprendre.</p> <p>Cette policy de ressource a une priorit\u00e9 de 1 (cf. attribut <code>priority=\"1\"</code>).  La priorit\u00e9 permet de classer les policies par niveaux. Cela permet de  passer outre la r\u00e8gle voulant qu'une policy de type <code>deny</code> prime sur une  policy de type <code>allow</code>. Ce point est d\u00e9velopp\u00e9 \u00e0 l'aide d'un exemple dans le  bloc de remarque 2 plus haut dans cette le\u00e7on. Nous y revenons \u00e9galement  plus bas.</p> <p>Au niveau du statement, nous avons sp\u00e9cifi\u00e9 un attribut  <code>requireQualifiedContext=\"true\"</code>. Il s'agit d'une optimisation et d'un  garde-fou pour \u00e9viter des erreurs inattendues. Il indique au moteur que le  statement n'est \u00e0 traiter que lorsque la policy est \u00e9valu\u00e9e dans un contexte  pleinement qualifi\u00e9. L'id\u00e9e est d'\u00e9viter d'\u00e9valuer le statement hors dossier, car dans ce cas la r\u00e9solution de <code>#base.statut</code> ne pourrait pas se  faire et g\u00e9n\u00e9rerait une erreur.</p> <p>Nous devons indiquer au moteur qu'il doit appliquer cette policy \u00e0 tout le  mod\u00e8le \"Coupon\".</p> <p>\ud83d\udc49 \u00c9ditez le fichier <code>descript.xml</code> et modifiez la d\u00e9finition du mod\u00e8le  <code>coupon</code> de fa\u00e7on \u00e0 lui ajouter le bloc <code>&lt;policies&gt;</code> comme ci-dessous:</p> <pre><code>&lt;model name=\"coupon\" maingroup=\"base\" mainfield=\"idCoupon\"&gt;\n  &lt;policies&gt;\n    &lt;policy name=\"statut\"/&gt;\n  &lt;/policies&gt;\n  &lt;groups&gt;\n    &lt;group name=\"base\" table=\"Coupon\" type=\"single\"&gt;\n    ...\n</code></pre> <p>\ud83d\udc49 Effectuez un <code>reset</code> de l'application au moyen d'un utilisateur disposant  du r\u00f4le <code>coupon-admin</code> (donc <code>admin</code> ou <code>superuser</code>)</p> <p>Une fois cette policy en place, tous les champs du dossier passent en  lecture seule lorsque le statut est \u00e0 0, y compris le champ \"Statut\"  lui-m\u00eame. \u00c7a peut \u00eatre un probl\u00e8me si le changement de statut a \u00e9t\u00e9 effectu\u00e9  par erreur. On va donc faire en sorte que le champ \"Statut\" reste modifiable  dans tous les cas.</p> <p>Il y a plusieurs fa\u00e7ons de le faire. Dans cette le\u00e7on, nous proposons la  solution suivante, mais elle n'est de loin pas la seule possible.</p> <p>\ud83d\udc49 \u00c9ditez le fichier <code>descript.xml</code> et modifiez le champ <code>statut</code> pour lui  donner la description suivante:</p> <pre><code>&lt;field name=\"statut\" type=\"switch\" column=\"Statut\"&gt;\n  &lt;default mode=\"text\"&gt;\n    &lt;value&gt;1&lt;/value&gt;\n  &lt;/default&gt;\n  &lt;policies&gt;\n    &lt;policy name=\"fieldStatut\" type=\"resource\" priority=\"2\"&gt;\n      &lt;statement effect=\"allow\" requireQualifiedContext=\"true\"&gt;\n        &lt;subject&gt;\n          &lt;role&gt;*&lt;/role&gt;\n        &lt;/subject&gt;\n        &lt;permission&gt;write&lt;/permission&gt;\n        &lt;action&gt;addTuple,delTuple,create,delete,setState&lt;/action&gt;\n        &lt;condition&gt;return (#base.statut == 0);&lt;/condition&gt;\n      &lt;/statement&gt;\n    &lt;/policy&gt;\n  &lt;/policies&gt;\n  &lt;properties&gt;\n    &lt;attribute name=\"onchange\"&gt;if (this.checked) doSubmit('save')&lt;/attribute&gt;\n  &lt;/properties&gt;\n&lt;/field&gt;\n</code></pre> <p>En premier lieu, nous avons ajout\u00e9 un \u00e9l\u00e9ment <code>policies</code> contenant une  description de policy \"inline\". En effet, Ewt permet de r\u00e9f\u00e9rencer par son  nom une policy d\u00e9finie dans le dossier <code>policies</code> de l'application comme  nous l'avons fait pour la policy <code>statut</code>, mais \u00e9galement directement dans la  description du champ. Ici nous optons pour cette variante car la policy que  nous d\u00e9finissons ne concerne que le champ \"Statut\" lui-m\u00eame.</p> <p>La structure de la policy en soi ne change pas par rapport \u00e0 une policy  d\u00e9finie via un fichier. Ici nous indiquons une priorit\u00e9 2 via l'attribut  <code>priority=\"2\"</code>. Cela est n\u00e9cessaire pour que le <code>allow</code> que nous d\u00e9finissons  ici prime sur le <code>deny</code> de la policy <code>statut</code> cr\u00e9\u00e9e plus t\u00f4t.</p> <p>Nous sp\u00e9cifions \u00e9galement un bloc <code>&lt;properties&gt;</code> dans lequel nous d\u00e9clarons  un <code>&lt;attribute&gt;</code>. Les properties sont des sortes de fourre-tout. Elles  permettent \u00e0 l'utilisateur d'y sp\u00e9cifier n'importe quel type de donn\u00e9es. Ces  donn\u00e9es seront reprises dans l'arbre de sortie et pourront \u00eatre interpr\u00e9t\u00e9es  par la feuille de style. L'\u00e9l\u00e9ment <code>&lt;attribute&gt;</code> n'est donc pas un mot-cl\u00e9  reconnu par Ewt. Le moteur ne fait que de transmettre cet \u00e9l\u00e9ment dans  l'arbre de sortie et c'est la feuille de style qui l'exploite \u00e0 sa guise.  Dans le cas pr\u00e9sent, la feuille de style reprend l'attribut en question en  tant qu'attribut de champ. Cela permet de forcer un rafra\u00eechissement de  l'\u00e9cran lorsque l'on change le statut de 0 \u00e0 1. Comme en mode \"lecture  seule\" l'interface n'affiche pas de bouton \"Enregistrer\", le code javascript  utilis\u00e9 ici facilite l'enregistrement du changement de statut. Une  alternative aurait pu consister \u00e0 rajouter un bouton \"Rafra\u00eechir\" dans  l'interface, mais cela n\u00e9cessite d'intervenir au niveau des styles et ce  n'est pas l'objet de la pr\u00e9sente le\u00e7on.</p> <p></p>"},{"location":"lessons/database/","title":"Base de donn\u00e9es","text":"<p>La plupart des applications Ewt utilisent une base de donn\u00e9es en tant que  support de persistence. Ewt est compatible avec diff\u00e9rents SGBD. Dans ce  document, nous nous concentrons sur PostgreSQL qui offre l'avantage d'\u00eatre  gratuit, robuste et disposant d'outils d'administration avanc\u00e9s.</p>"},{"location":"lessons/websocket/","title":"Websocket","text":"<p>Dans cette le\u00e7on nous allons mettre en place un syst\u00e8me de chat relativement  simple qui utilise les websockets.</p> <p></p>"},{"location":"lessons/websocket/#mise-en-place-de-la-partie-client","title":"Mise en place de la partie client","text":"<p>L'interface utilisateur peut \u00eatre r\u00e9alis\u00e9e \u00e0 l'aide des codes HTML,  JavaScript et CSS suivants. Ici le code HTML utilise l'API Bootstrap.</p> HTMLJavaScriptCSS <pre><code>&lt;div id=\"chat-controls\" class=\"container\"&gt;\n  &lt;div class=\"offset-md-3 col-md-6\"&gt;\n    &lt;div class=\"row mb-1\"&gt;\n      &lt;div class=\"col\"&gt;\n        &lt;div class=\"input-group\"&gt;\n          &lt;input type=\"text\" class=\"form-control\" id=\"websocket-server\"\n                value=\"ws://localhost:8084/ewt/websocket/{/output/application/name/@dir}/chat/{/output/session/@id}/{/output/documents/document[1]/@context}\"/&gt;\n          &lt;button type=\"button\" class=\"btn btn-outline-primary\"\n                  onclick=\"websocket.connect()\"&gt;Connecter&lt;/button&gt;\n          &lt;button type=\"button\" class=\"btn btn-outline-primary\"\n                  onclick=\"websocket.disconnect()\"&gt;D\u00e9connecter&lt;/button&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"row mb-1\"&gt;\n      &lt;div class=\"col\"&gt;\n        &lt;div id=\"messages-history\"&gt;&lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"row\"&gt;\n      &lt;div class=\"col\"&gt;\n        &lt;div class=\"input-group\"&gt;\n          &lt;input type=\"text\" class=\"form-control\" id=\"message-input\"\n                 placeholder=\"Saisir un message\"/&gt;\n          &lt;button type=\"button\" class=\"btn btn-outline-primary\"\n                  onclick=\"websocket.sendMessage()\"&gt;Envoyer&lt;/button&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n&lt;script src=\"{$resources-url}/js/websocket.js\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"{$resources-url}/css/websocket.css\"&gt;&lt;/link&gt;\n</code></pre> <pre><code>var websocket = {\n    session : undefined,\n\n    connect: function() {\n        this.session = new WebSocket(document.getElementById('websocket-server').value);\n\n        this.session.onmessage = (event) =&gt; {\n            const f = document.getElementById(\"messages-history\");\n            const msg = event.data;\n            let text = document.createElement('p');\n            text.appendChild(document.createTextNode(msg));\n\n            f.appendChild(text);\n        }\n    },\n\n    disconnect: function() {\n        this.session.close();\n    },\n\n    sendMessage: function() {\n        if (document.getElementById('message-input').value != \"\") {\n            this.session.send(document.getElementById('message-input').value);\n        }\n\n        document.getElementById('message-input').select();\n    }\n}\n</code></pre> <pre><code>#messages-history {\n  height: 200px;\n  border: solid 1px #cccccc;\n  overflow-y: auto;\n}\n\n#messages-history p {\n  margin: 0;\n}\n</code></pre>"},{"location":"lessons/websocket/#mise-en-place-de-la-partie-serveur","title":"Mise en place de la partie serveur","text":"<p>Il reste \u00e0 mettre en place la partie serveur. L'URL construite \u00e0 la ligne 7  du code HTML ci-dessus r\u00e9f\u00e9rence un script \"chat\". Nous allons donc cr\u00e9er un  fichier qui corresponde \u00e0 ce nom. Notre script s'appellera donc <code>chat.ewts</code>.  Il est \u00e9galement possible de l'appeler <code>chat.script</code> au besoin.</p> <p>Le script de la partie serveur est en r\u00e9alit\u00e9 tr\u00e8s simple : il doit  permettre de traiter les 4 types d'\u00e9v\u00e9nements susceptibles d'arriver en  websocket. Il s'agit des \u00e9v\u00e9nements <code>open</code>, <code>message</code>, <code>binary</code>, <code>close</code> et  <code>error</code>.</p> <p>Le script est le suivant:</p> <pre><code>@accept(servlet = \"websocket\")\n\nswitch ($$.event) {\n    case \"open\":\n        $websocket.send(\"\ud83e\udd16 hello \" &amp; $request.getPrincipal(), { dest: \"current\" });\n        $websocket.send(\"\ud83e\udd16 \" &amp; $request.getPrincipal() &amp; \" has joined\", { dest: \"others\" });\n        break;\n    case \"message\":\n        $websocket.send(\"\ud83d\ude00 \" &amp; $$.content, { dest: \"current\" });\n        $websocket.send(\"\ud83c\udf0d \" &amp; $$.content, { dest: \"others\" });\n        break;\n    case \"binary\":\n        // non impl\u00e9ment\u00e9\n        break;\n    case \"close\":\n        $websocket.send(\"\ud83e\udd16 \" &amp; $request.getPrincipal() &amp; \" has leaved\", { dest: \"all\" });\n        break;\n    case \"error\":\n        $logger.error($$);\n        break;\n}\n</code></pre> <p>La premi\u00e8re ligne indique que le script ne peut \u00eatre appel\u00e9 que pour des  requ\u00eates adress\u00e9es au servlet \"websocket\".</p> <p>Les lignes suivantes traitent les 4 types d'\u00e9v\u00e9nements possibles.</p> <p>En cas de <code>open</code>, on envoie un message de salutation \u00e0 l'utilisateur qui se  connecte, et on annonce \u00e0 tous les autres utilisateurs qu'une nouvelle  personne s'est connect\u00e9e.</p> <p>En cas de <code>message</code>, on envoie un message \u00e0 tous les participants. Ici on  utilise des emoji pour distinguer les interlocuteurs.</p> <p>En cas de <code>close</code>, on annonce \u00e0 tous les participants qu'une personne s'est  d\u00e9connect\u00e9e.</p> <p>En cas d'<code>error</code>, on ne fait rien de particulier si ce n'est de reprendre  l'erreur dans le log.</p>"},{"location":"lessons/websocket/#donnees-binaires","title":"Donn\u00e9es binaires","text":"<p>Jusqu'\u00e0 pr\u00e9sent, nous nous sommes limit\u00e9s \u00e0 des donn\u00e9es textuelles. Il est  \u00e9galement possible de g\u00e9rer des donn\u00e9es binaires. Pour cela deux solutions  s'offrent \u00e0 nous:</p> <ol> <li>Transmettre/Recevoir des donn\u00e9es binaires (de type <code>ArrayBuffer</code> ou      <code>Blob</code> en javascript)</li> <li>Encoder les donn\u00e9es binaires en base64 (ou autre codage utilisant un      alphabet standard) et les transmettre sous forme de texte, comme cela a      \u00e9t\u00e9 fait plus haut.</li> </ol> <p>Nous allons explorer ces deux solutions.</p>"},{"location":"lessons/websocket/#transmission-de-donnees-binaires","title":"Transmission de donn\u00e9es binaires","text":""},{"location":"lessons/websocket/#partie-client","title":"Partie client","text":"<p>L'upload de document binaire n\u00e9cessite une adaptation de l'interface  utilisateur. Au niveau de la partie HTML, nous ne faisons que d'ajouter un  champ \"file\" qui permettra de s\u00e9lectionner un fichier. Le reste du code  HTML ne change pas. Pour cette raison, nous ne reprenons ici qu'une partie  du code HTML. Les lignes ajout\u00e9es sont mises en \u00e9vidence.</p> <p>Le code javascript n\u00e9cessite plus de modifications. Le code CSS quant \u00e0 lui  ne change pas.</p> HTMLJavaScript <pre><code>...\n&lt;div class=\"row mb-1\"&gt;\n  &lt;div class=\"col\"&gt;\n    &lt;div id=\"messages-history\"&gt;&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"row\"&gt;\n  &lt;div class=\"col\"&gt;\n    &lt;div class=\"input-group\"&gt;\n      &lt;input type=\"file\" class=\"form-control\" id=\"binary-input\"/&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"row\"&gt;\n  &lt;div class=\"col\"&gt;\n    &lt;div class=\"input-group\"&gt;\n      &lt;input type=\"text\" class=\"form-control\" id=\"message-input\" placeholder=\"Saisir un message\"/&gt;\n      &lt;button type=\"button\" class=\"btn btn-outline-primary\" onclick=\"websocket.sendMessage()\"&gt;Envoyer&lt;/button&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n...\n</code></pre> <pre><code>var websocket = {\n    session : undefined,\n\n    connect: function() {\n        this.session = new WebSocket(document.getElementById('websocket-server').value);\n        this.session.binaryType = \"arraybuffer\";\n\n        this.session.onmessage = (event) =&gt; {\n            const f = document.getElementById(\"messages-history\");\n            const msg = event.data;\n\n            let text = document.createElement('p');\n            var content = \"\";\n            if (typeof msg == \"string\") {\n                content = document.createTextNode(msg);\n            }\n            else {\n                var binary = \"\";\n                var bytes = new Uint8Array(msg);\n                var len = bytes.byteLength;\n                for (var i = 0; i &lt; len; i++) {\n                    binary += String.fromCharCode(bytes[i]);\n                }\n                content = document.createElement(\"img\");\n                content.setAttribute(\"src\", \"data:image/png;base64, \" +\n                                            window.btoa(binary));\n            }\n\n            text.appendChild(content);\n            f.appendChild(text);\n        }\n    },\n\n    disconnect: function() {\n        this.session.close();\n    },\n\n    sendMessage: function() {\n        var file = document.getElementById('binary-input').files[0];\n        if (file) {\n            this.session.send(file);\n        }\n\n        if (document.getElementById('message-input').value != \"\") {\n            this.session.send(document.getElementById('message-input').value);\n        }\n\n        document.getElementById('message-input').select();\n    }\n}\n</code></pre> <p>JavaScript permet de g\u00e9rer les donn\u00e9es binaires de diff\u00e9rentes fa\u00e7ons. Ici,  nous utilisons le type Blob pour l'envoi au serveur et le type ArrayBuffer  pour traiter les donn\u00e9es re\u00e7ues.</p> <p>Les modifications portent sur la r\u00e9ception de donn\u00e9es et sur l'envoi de  donn\u00e9es.</p> <p>R\u00e9ception La ligne 6 indique que nous souhaitons recevoir des donn\u00e9es binaires de type  ArrayBuffer. Le bloc de lignes 14 \u00e0 16 reprend le comportement qui a d\u00e9j\u00e0  \u00e9t\u00e9 mis en place pr\u00e9c\u00e9demment pour les donn\u00e9es texte. Les lignes 18 \u00e0 25  quant \u00e0 elles g\u00e8re la r\u00e9ception de donn\u00e9es binaires. Ici nous faisons le  choix de traiter les donn\u00e9es comme des images PNG. C'est \u00e9videmment un choix  arbitraire qui ne peut fonctionner que si l'on sait explicitement que les  donn\u00e9es re\u00e7ues sont de ce type. Nous revenons sur la probl\u00e9matique du type  MIME plus bas.</p> <p>Envoi La m\u00e9thode <code>sendMessage</code> est modifi\u00e9e pour g\u00e9rer l'envoi de donn\u00e9es. Elle  v\u00e9rifie si l'input \"file\" contient un fichier et se charge de transmettre  celui-ci en tant que Blob le cas \u00e9ch\u00e9ant.</p>"},{"location":"lessons/websocket/#partie-serveur","title":"Partie serveur","text":"<p>De base, une application Ewt int\u00e8gre un buffer capable de stocker jusqu'\u00e0 1MB de donn\u00e9es binaires. Il est possible d'\u00e9largir ce buffer en ajoutant ou compl\u00e9tant le bloc suivant dans la configuration de l'application, en adaptant la taille du buffer. Ici la valeur est exprim\u00e9e en bytes. Dans l'exemple ci-dessous, on \u00e9tend donc la taille du buffer \u00e0 10MB.</p> <pre><code>&lt;websocket&gt;\n  &lt;maxBinaryMessageBufferSize&gt;10485760&lt;/maxBinaryMessageBufferSize&gt;\n&lt;/websocket&gt;\n</code></pre> <p>Le script <code>chat.ewts</code> n\u00e9cessite quant \u00e0 lui peut de modifications : on  impl\u00e9mente le cas \"binary\" qui n'\u00e9tait pas g\u00e9r\u00e9 dans la version pr\u00e9c\u00e9dente.  Le reste du code ne change pas.</p> <pre><code>...\ncase \"binary\":\n    $websocket.send($$.content, { dest: \"all\" });\n    break;\n...\n</code></pre>"},{"location":"lessons/websocket/#bilan","title":"Bilan","text":"<p>L'envoi et la r\u00e9ception de donn\u00e9es binaires sont fonctionnels, mais ils sont  limit\u00e9s par le fait que seule les donn\u00e9es sont transmises, sans les  m\u00e9tadonn\u00e9es qui gravitent autour. On perd ainsi des informations utiles  comme le nom de fichier et le type MIME. Pour pouvoir int\u00e9grer ces \u00e9l\u00e9ments  dans les requ\u00eates et r\u00e9ponses WebSocket, nous allons devoir construire un  objet JSON dans lequel les donn\u00e9es binaires sont encod\u00e9es.</p>"},{"location":"lessons/websocket/#encodage-des-donnees-binaires","title":"Encodage des donn\u00e9es binaires","text":"<p>L'id\u00e9e de cette variante est d'encoder les donn\u00e9es binaires en base64 et de  les inclure dans un objet JSON. Nous en profiterons pour y ajouter les  m\u00e9tadonn\u00e9es relatives au fichier (son nom et son type MIME) bien que dans le  cadre de cette le\u00e7on nous ne nous en servirons pas.</p> <p>L'objet JSON sera alors converti en String et transmise sous forme de texte  et non plus sous forme de donn\u00e9es binaires.</p> <p>Le volume des donn\u00e9es transmissibles sous forme de String est \u00e9galement  limit\u00e9. Par d\u00e9faut, il est de 8192 bytes par message. Si on souhaite  int\u00e9grer une repr\u00e9sentation base64 des donn\u00e9es, il convient d'augmenter la  limite du buffer. Pour ce faire, il faut d'ajouter ou compl\u00e9ter le groupe  <code>websocket</code> du fichier de configuration de l'application avec la propri\u00e9t\u00e9  suivante (adapter la valeur selon vos besoins):</p> <pre><code>&lt;websocket&gt;\n  &lt;maxTextMessageBufferSize&gt;10485760&lt;/maxTextMessageBufferSize&gt;\n&lt;/websocket&gt;\n</code></pre> <p>Ici nous avons augment\u00e9 la limite \u00e0 10MB.</p>"},{"location":"lessons/websocket/#partie-client_1","title":"Partie client","text":"<p>Le code HTML est inchang\u00e9 par rapport \u00e0 la version pr\u00e9c\u00e9dente. Par contre le  code javascript change sensiblement. En r\u00e9alit\u00e9 nous profitons d'am\u00e9liorer  le design de la zone de messages, m\u00eame si cela reste largement perfectible.  Le rendu final ressemble \u00e0 ceci:</p> <p></p> <p>Le nouveau code JavaScript est repris ci-apr\u00e8s en int\u00e9gralit\u00e9.</p> <pre><code>var websocket = {\n    session : undefined,\n\n    connect: function() {\n        this.session = new WebSocket(document.getElementById('websocket-server').value);\n        this.session.binaryType = \"arraybuffer\";\n\n        this.session.onmessage = (event) =&gt; {\n            const container = document.getElementById(\"messages-history\");                \n\n            // Le message en entr\u00e9e est un map qui a la forme suivante:\n            //     { from: \"x\",\n            //       isOwnMessage: false,\n            //       timestamp: \"2024-03-20 09:36:12.123\",\n            //       text: \"bla bla\",\n            //       file: { data: \"data:image/png;base64, iVBORRw0...\",\n            //               mimetype: \"image/png\", filename: \"somefile.png\" } }\n            // Les \u00e9l\u00e9ments text et file sont optionnels\n\n            let div = document.createElement(\"div\");\n\n            try {\n                let json = JSON.parse(event.data);\n\n                if (json.isOwnMessage) {\n                    div.setAttribute(\"class\", \"border m-2 p-2 float-end\");\n                }\n                else {\n                    div.setAttribute(\"class\", \"border m-2 p-2 float-start\");\n                }\n\n                let head = document.createElement(\"div\");\n                head.setAttribute(\"class\", \"d-flex\");\n\n                let author = document.createElement(\"span\");\n                author.setAttribute(\"class\", \"me-auto\")\n                author.appendChild(document.createTextNode(json.from));\n                head.appendChild(author);\n\n                let timestamp = document.createElement(\"small\");\n                timestamp.appendChild(document.createTextNode(json.timestamp));\n                head.appendChild(timestamp);\n\n                div.appendChild(head);\n\n                let body = document.createElement(\"div\");\n                if (json.file) {\n                    let img = document.createElement(\"img\");\n                    img.setAttribute(\"src\", json.file.data);\n                    body.appendChild(img);\n                    body.appendChild(document.createElement(\"br\"));\n                }\n\n                if (json.text) {\n                    body.appendChild(document.createTextNode(json.text));\n                }\n\n                div.appendChild(body);\n            }\n            catch (e) {\n                console.log(e);\n                let body = document.createTextNode(event.data);\n                div.appendChild(body);\n            }\n\n            container.appendChild(div);\n\n            // clearfix (pour forcer le message suivant \u00e0 s'afficher en-dessous\n            // et non pas \u00e0 c\u00f4t\u00e9 du message actuel)\n            div = document.createElement(\"div\");\n            div.setAttribute(\"class\", \"clearfix\");\n            container.appendChild(div);\n        }\n    },\n\n    disconnect: function() {\n        this.session.close();\n    },\n\n    sendMessage: function() {\n        var msg = {};\n\n        if (document.getElementById('message-input').value != \"\") {\n            msg.text = document.getElementById('message-input').value;\n        }\n\n        var file = document.getElementById('binary-input').files[0];\n        if (file) {\n            var self = this;\n            var reader = new FileReader();                \n            reader.onloadend = function() {\n                msg.file = {\n                    data: reader.result,\n                    filename: file.name,\n                    mimetype: file.type\n                }\n\n                // on envoie la requ\u00eate\n                self.session.send(JSON.stringify(msg));\n            }\n            reader.readAsDataURL(file);\n        }\n        else if (msg.text) {\n            // on envoie la requ\u00eate\n            this.session.send(JSON.stringify(msg));\n        }\n\n        document.getElementById('message-input').select();\n    }\n}\n</code></pre>"},{"location":"lessons/websocket/#partie-serveur_1","title":"Partie serveur","text":"<p>La partie serveur est \u00e9galement passablement remani\u00e9e pour que les requ\u00eates  et r\u00e9ponses soient trait\u00e9es comme des objets json.</p> <pre><code>@accept(servlet = \"websocket\")\n\nswitch ($$.event) {\n    case \"open\":\n        var response = {\n            from: \"\ud83e\udd16\",\n            timestamp: $cal.timestamp(),\n            isOwnMessage: false\n        };\n\n        response.text = \"hello \" &amp; $request.getPrincipal();\n        $websocket.send($json.toJson(response), { dest: \"current\" });\n\n        response.text = $request.getPrincipal() &amp; \" has joined\";\n        $websocket.send($json.toJson(response), { dest: \"others\" });\n        break;\n    case \"message\":\n        var request = $json.parse($$.content);\n\n        if (request != null) {\n            var response = request;\n            response.timestamp = $cal.timestamp();\n\n            response.from = \"\ud83d\ude00\";\n            response.isOwnMessage = true;\n            $websocket.send($json.toJson(response), { dest: \"current\" });\n\n            response.from = \"\ud83c\udf0d\";\n            response.isOwnMessage = false;\n            $websocket.send($json.toJson(response), { dest: \"others\" });\n        }\n        break;\n    case \"binary\":\n        $websocket.send($$.content, { dest: \"all\" });\n        break;\n    case \"close\":\n        $logger.debug(\"closing websocket session\");\n\n        var response = {\n            from: \"\ud83e\udd16\",\n            timestamp: $cal.timestamp(),\n            isOwnMessage: false,\n            text: $request.getPrincipal() &amp; \" has leaved\"\n        };\n        $websocket.send($json.toJson(response), { dest: \"all\" });\n        break;\n    case \"error\":\n        $logger.error($$);\n        break;\n}\n</code></pre>"},{"location":"lessons/websocket/#conclusion","title":"Conclusion","text":"<p>Nous avons vu comment mettre en place un syst\u00e8me de chat simple. En r\u00e9alit\u00e9  la majeure partie du travail consiste \u00e0 construire l'interface utilisateur en  HTML, JavaScript et CSS. La partie serveur quant \u00e0 elle est relativement  simple \u00e0 construire.</p>"},{"location":"lessons/xx_access1/","title":"Gestion des droits d'acc\u00e8s","text":"<p>Cette le\u00e7on impl\u00e9mente un exemple de gestion des droits d'acc\u00e8s avanc\u00e9.</p>"},{"location":"libs/","title":"Librairies","text":"<p>Cette section pr\u00e9sente les librairies de m\u00e9thodes mises \u00e0 disposition par  Ewt. Chaque librairie est un ensemble qui porte sur un type d'objet donn\u00e9.  Ainsi, la librairie <code>$app</code> fournit des m\u00e9thodes pour administrer  l'application, la librairie <code>$logger</code> fournit des m\u00e9thodes permettant  d'inscrire des \u00e9l\u00e9ments dans le log, etc.</p> <p>Chaque librairie est disponible sous la forme d'un objet. Ainsi la librairie  <code>$logger</code> est un objet fournissant diff\u00e9rentes m\u00e9thodes (<code>debug</code>, <code>info</code>,  <code>error</code>, etc.) que l'on invoquera simplement comme un appel de m\u00e9thode  standard:</p> <pre><code>$logger.info(\"Ceci est un exemple\");\n$logger.error(\"Ceci est un exemple\");\n</code></pre>"},{"location":"libs/%24app/","title":"<code>$app</code>","text":"<p>Alias: <code>$application</code></p> <p>Librairies de m\u00e9thodes portant sur l'application Ewt en cours d'ex\u00e9cution.</p>"},{"location":"libs/%24app/_getConfig/","title":"<code>$app.getConfig</code>","text":""},{"location":"libs/%24app/_getConfig/#description","title":"Description","text":"<p>Retourne la propri\u00e9t\u00e9 correspondant \u00e0 la cl\u00e9 pass\u00e9e en param\u00e8tre.</p> <p>Par d\u00e9faut, la m\u00e9thode retourne une valeur de type <code>string</code>. Veuillez donc  bien prendre garde au type de valeurs que vous souhaitez stocker dans la  config et \u00e0 la mani\u00e8re de traiter cette valeur.</p> <p>\u00c0 titre d'exemple, prenons le cas de l'entr\u00e9e suivante du <code>config.xml</code>:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;config&gt;\n    &lt;admin&gt;\n        ...\n        &lt;debuggerPort&gt;8000&lt;/debuggerPort&gt;\n        ...\n    &lt;/admin&gt;\n&lt;/config&gt;\n</code></pre> <p>Un test du genre <code>$app.getConfig(\"admin.debuggerPort\") &gt;= 10000</code> sera  consid\u00e9r\u00e9 comme <code>true</code>, ce qui peut \u00eatre contre intuitif. Cela vient du fait  que la m\u00e9thode <code>$app.getConfig</code> retourne une valeur textuelle. Le test  <code>\"8000\" &gt;= \"10000\"</code>est donc vrai (car le caract\u00e8re '8' est &gt;= '1').</p> <p>Il existe deux fa\u00e7ons de traiter ce cas de fa\u00e7on plus conforme \u00e0 la logique. </p> <ol> <li> <p>La premi\u00e8re fa\u00e7on consiste \u00e0 effectier un cast explicite de la valeur de     retour. Ainsi, le test <code>(number) $app.getConfig(\"admin.debuggerPort\") &gt;=     10000</code> retournera le r\u00e9sultat <code>false</code> attendu. </p> </li> <li> <p>La seconde fa\u00e7on consiste \u00e0 simplement ajouter une valeur par d\u00e9faut de type     num\u00e9rique. Par exemple, <code>$app.getConfig(\"admin.debuggerPort\", 0) &gt;= 10000</code>     sera \u00e9galement <code>false</code>. Cela vient du fait que la m\u00e9thode d\u00e9tecte que la     valeur par d\u00e9faut est de type num\u00e9rique et elle tente d'appliquer le m\u00eame     type \u00e0 sa valeur de retour.</p> </li> </ol>"},{"location":"libs/%24app/_getConfig/#syntaxe","title":"Syntaxe","text":"<p><code>$app.getConfig( property [ , defaultValue ] )</code></p>"},{"location":"libs/%24app/_getConfig/#parametres","title":"Param\u00e8tres","text":"<code>property</code> string Nom de la propri\u00e9t\u00e9 \u00e0 r\u00e9cup\u00e9rer. La propri\u00e9t\u00e9 doit avoir la forme  <code>section.property</code>, <code>section[name].property[name]</code>,  <code>section.property[name]</code> ou <code>section[name].property[name]</code> <code>defaultValue</code> any Facultatif. Valeur par d\u00e9faut \u00e0 retourner dans le cas o\u00f9 la propri\u00e9t\u00e9 demand\u00e9e n'existe pas; si elle existe mais est vide, c'est une cha\u00eene vide  qui est retourn\u00e9e"},{"location":"libs/%24app/_getConfig/#retour","title":"Retour","text":"<p>Retourne la valeur de la propri\u00e9t\u00e9 demand\u00e9e. La valeur par d\u00e9faut est  retourn\u00e9e si la propri\u00e9t\u00e9 n'est pas d\u00e9finie dans la configuration de  l'application.</p> <p>Type de valeur en sortie</p> <p>Attention, le type de la valeur de retour peut varier selon le type  d'utilisation de la m\u00e9thode. Voir description et exemples ci-apr\u00e8s.</p>"},{"location":"libs/%24app/_getConfig/#exemple","title":"Exemple","text":"<pre><code>// r\u00e9cup\u00e8re la valeur de la propri\u00e9t\u00e9 printService/key du config.xml\n$app.getConfig(\"printService.key\");\n\n// variante avec une valeur par d\u00e9faut\n$app.getConfig(\"printService.key\", \"abcxyz);\n</code></pre> <p>Exemples d\u00e9montrant l'impact de la valeur par d\u00e9faut sur le type de la  valeur de retour.</p> <pre><code>typeof $app.getConfig(\"admin.debuggerPort\");          // -&gt; string\ntypeof $app.getConfig(\"admin.debuggerPort\", \"8000\");  // -&gt; string\ntypeof $app.getConfig(\"admin.debuggerPort\", 8000);    // -&gt; number\n</code></pre>"},{"location":"libs/%24app/_getConfigMap/","title":"<code>$app.getConfigMap</code>","text":""},{"location":"libs/%24app/_getConfigMap/#description","title":"Description","text":"<p>Retourne un map de propri\u00e9t\u00e9s provenant du fichier de configuration de  l'application. Le but de cette m\u00e9thode est de permettre de r\u00e9cup\u00e9rer des  propri\u00e9t\u00e9s homonymes. Par exemple, prenons le cas de la section suivante:</p> <pre><code>&lt;custom&gt;\n    &lt;entry name=\"foo\"&gt;This is foo&lt;/entry&gt;\n    &lt;entry name=\"bar\"&gt;This is bar&lt;/entry&gt;\n&lt;/custom&gt;\n</code></pre> <p>La m\u00e9thode permet d'obtenir un map <code>{ foo: \"This is foo\", bar: \"This is bar\"}</code>  en faisant l'appel suivant:</p> <pre><code>$app.getConfigMap(\"custom.entry\");\n</code></pre> <p>L'ordre des \u00e9l\u00e9ments du map n'est pas garanti.</p>"},{"location":"libs/%24app/_getConfigMap/#syntaxe","title":"Syntaxe","text":"<p><code>$app.getConfigMap( property )</code></p>"},{"location":"libs/%24app/_getConfigMap/#parametres","title":"Param\u00e8tres","text":"<code>property</code> string Nom de la propri\u00e9t\u00e9 \u00e0 r\u00e9cup\u00e9rer. La forme du nom de propri\u00e9t\u00e9 est le m\u00eame  que pour la m\u00e9thode $app.getConfig."},{"location":"libs/%24app/_getConfigMap/#retour","title":"Retour","text":"<p>Map contenant les entr\u00e9es et valeurs trouv\u00e9es.  Voir description.</p>"},{"location":"libs/%24app/_getConfigMap/#exemple","title":"Exemple","text":"<pre><code>$app.getConfigMap(\"custom.entry\");\n</code></pre>"},{"location":"libs/%24app/_getHomeDirectory/","title":"<code>$app.getWorkDirectory</code>","text":""},{"location":"libs/%24app/_getHomeDirectory/#description","title":"Description","text":"<p>Retourne le chemin du r\u00e9pertoire de travail de l'application.</p>"},{"location":"libs/%24app/_getHomeDirectory/#syntaxe","title":"Syntaxe","text":"<p><code>$app.getWorkDirectory()</code></p>"},{"location":"libs/%24app/_getHomeDirectory/#parametres","title":"Param\u00e8tres","text":"<p>M\u00e9thode sans param\u00e8tre</p>"},{"location":"libs/%24app/_getHomeDirectory/#retour","title":"Retour","text":"<p>Objet de type <code>file</code> repr\u00e9sentant le r\u00e9pertoire de travail de l'application.</p>"},{"location":"libs/%24app/_getHomeDirectory/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24app/_getModels/","title":"<code>$app.getModels</code>","text":""},{"location":"libs/%24app/_getModels/#description","title":"Description","text":"<p>Retourne un tableau d'objets d\u00e9crivant les mod\u00e8les de dossiers de  l'application. Les mod\u00e8les sont d\u00e9crits au moyen des propri\u00e9t\u00e9s  suivantes:</p> <ul> <li><code>name</code>: nom du mod\u00e8le</li> <li><code>fullName</code>: nom complet du mod\u00e8le (incluant le nom de l'application)</li> <li><code>mainGroup</code>: nom du groupe principal</li> <li><code>mainField</code>: nom du champ principal</li> <li><code>mainTable</code>: nom de la table principale (peut \u00eatre <code>null</code>)</li> <li><code>mainColumn</code>: nom de la colonne primary key de la table principale (peut     \u00eatre <code>null</code>)</li> <li><code>stateField</code>: nom du champ enregistrant le statut (peut \u00eatre <code>null</code>)</li> <li><code>groups</code>: tableau d\u00e9crivant les groupes; ces derniers sont d\u00e9crits au     moyen des propri\u00e9t\u00e9s suivantes:</li> <li><code>name</code>: nom du groupe</li> <li><code>fullName</code>: nom complet du groupe (incluant le nom du mod\u00e8le)</li> <li><code>isMainGroup</code>: flag <code>true</code>/<code>false</code> indiquant si le groupe est le      groupe principal de son mod\u00e8le</li> <li><code>table</code>: table utilis\u00e9e par le groupe (peut \u00eatre <code>null</code>)</li> <li><code>isSingleGroup</code>: flag <code>true</code>/<code>false</code> indiquant si le groupe est un     groupe \"single\"</li> <li><code>isMultiGroup</code>: flag <code>true</code>/<code>false</code> indiquant si le groupe est un      group \"multi\"</li> <li><code>foreignColumn</code>: nom de la colonne r\u00e9f\u00e9renc\u00e9e par le groupe (peut      \u00eatre <code>null</code>)</li> </ul>"},{"location":"libs/%24app/_getModels/#syntaxe","title":"Syntaxe","text":"<p><code>$app.getModels()</code></p>"},{"location":"libs/%24app/_getModels/#retour","title":"Retour","text":"<p>Objet de type <code>array</code> d\u00e9crivant les mod\u00e8les de dossiers de l'application.</p>"},{"location":"libs/%24app/_getModels/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24app/_getResource/","title":"<code>$app.getResource</code>","text":""},{"location":"libs/%24app/_getResource/#description","title":"Description","text":"<p>Retourne une ressource (c'est-\u00e0-dire un fichier) de l'application.</p>"},{"location":"libs/%24app/_getResource/#syntaxe","title":"Syntaxe","text":"<p><code>$app.getResource( filepath )</code></p>"},{"location":"libs/%24app/_getResource/#parametres","title":"Param\u00e8tres","text":"<code>filepath</code> string Path de fichier, relatif au dossier de base de l'application"},{"location":"libs/%24app/_getResource/#retour","title":"Retour","text":"<p>Objet de type <code>file</code> r\u00e9f\u00e9ren\u00e7ant le fichier demand\u00e9.</p>"},{"location":"libs/%24app/_getResource/#exemple","title":"Exemple","text":"<pre><code>$app.getResource(\"templates/empty.xlsx\");\n</code></pre>"},{"location":"libs/%24app/_getWorkDirectory/","title":"<code>$app.getHomeDirectory</code>","text":""},{"location":"libs/%24app/_getWorkDirectory/#description","title":"Description","text":"<p>Retourne le chemin du r\u00e9pertoire de l'application.</p> <p>Le r\u00e9pertoire est nettoy\u00e9 \u00e0 l'arr\u00eat du moteur d'application.</p>"},{"location":"libs/%24app/_getWorkDirectory/#syntaxe","title":"Syntaxe","text":"<p><code>$app.getHomeDirectory()</code></p>"},{"location":"libs/%24app/_getWorkDirectory/#parametres","title":"Param\u00e8tres","text":"<p>M\u00e9thode sans param\u00e8tre</p>"},{"location":"libs/%24app/_getWorkDirectory/#retour","title":"Retour","text":"<p>Objet de type <code>file</code> repr\u00e9sentant le r\u00e9pertoire de l'application.</p>"},{"location":"libs/%24app/_getWorkDirectory/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24app/_indexDocuments/","title":"<code>$app.indexDocuments</code>","text":""},{"location":"libs/%24app/_indexDocuments/#description","title":"Description","text":"<p>Lance une indexation ou une r\u00e9indexation de tous les dossiers de  l'application.</p>"},{"location":"libs/%24app/_indexDocuments/#syntaxe","title":"Syntaxe","text":"<p><code>$app.indexDocuments( [ options ] )</code></p>"},{"location":"libs/%24app/_indexDocuments/#parametres","title":"Param\u00e8tres","text":"<code>options</code> map <p>Map d'options pour l'indexation. Les options reconnues sont:</p> <code>purge</code> boolean <p>Flag <code>true</code>/<code>false</code> indiquant si la m\u00e9thode peut proc\u00e9der \u00e0 une purge  pr\u00e9liminaire.</p> <p>La valeur par d\u00e9faut est <code>false</code>.</p>"},{"location":"libs/%24app/_indexDocuments/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si l'indexation a r\u00e9ussi, sinon <code>false</code></p>"},{"location":"libs/%24app/_indexDocuments/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24app/_reset/","title":"<code>$app.reset</code>","text":""},{"location":"libs/%24app/_reset/#description","title":"Description","text":"<p>Effectue un reset de l'application.</p>"},{"location":"libs/%24app/_reset/#syntaxe","title":"Syntaxe","text":"<p><code>$app.reset( [ options ] )</code></p>"},{"location":"libs/%24app/_reset/#parametres","title":"Param\u00e8tres","text":"<code>options</code> map <p>Options de reset. Les options disponibles sont:</p> <code>cleanWorkdir</code> boolean Flag <code>true</code>/<code>false</code> indiquant si le workdir doit \u00eatre  purg\u00e9. Par d\u00e9faut le flag est \u00e0 <code>false</code>."},{"location":"libs/%24app/_reset/#retour","title":"Retour","text":"<p>Objet de type <code>file</code> repr\u00e9sentant le r\u00e9pertoire de l'application.</p>"},{"location":"libs/%24app/_reset/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24app/_searchDocuments/","title":"<code>$app.searchDocuments</code>","text":""},{"location":"libs/%24app/_searchDocuments/#description","title":"Description","text":"<p>Lance une recherche de dossiers sur un index de recherche.</p>"},{"location":"libs/%24app/_searchDocuments/#syntaxe","title":"Syntaxe","text":"<p><code>$app.searchDocuments( query [ , index [ , options ] ] )</code></p>"},{"location":"libs/%24app/_searchDocuments/#parametres","title":"Param\u00e8tres","text":"<code>query</code> string Crit\u00e8re de recherche <code>index</code> string Nom de l'index sur lequel lancer la recherche. Si non renseign\u00e9, la  recherche est lanc\u00e9e sur l'index par d\u00e9faut. <code>options</code> map <p>Map d'options de recherche. La liste des options est d\u00e9pendante du moteur d'index utilis\u00e9.</p> <p>Veuillez vous reporter \u00e0 la documentation du param\u00e8tre <code>options</code> de  la m\u00e9thode <code>$search.search</code></p>"},{"location":"libs/%24app/_searchDocuments/#retour","title":"Retour","text":"<p>Tableau d'identifiants de dossiers sous la forme de string.</p>"},{"location":"libs/%24app/_searchDocuments/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24array/","title":"<code>$array</code>","text":"<p>Certaines op\u00e9rations de manipulation de tableaux sont d\u00e9j\u00e0 impl\u00e9ment\u00e9es au  sein du moteur de script. La librairie <code>$array</code> offre un certain nombre de m\u00e9thodes avanc\u00e9es.</p>"},{"location":"libs/%24array/_alloc/","title":"<code>$array.alloc</code>","text":""},{"location":"libs/%24array/_alloc/#description","title":"Description","text":"<p>Construit un tableau contenant le nombre d'\u00e9l\u00e9ments indiqu\u00e9s. Le tableau est initialis\u00e9 avec des objets <code>null</code>.</p> <p>Tableau ou map ?</p> <p>Le fait de pr\u00e9-allouer un certain nombre d'entr\u00e9es dans un tableau au  moyen de <code>$array.alloc</code> peut engendrer une surconsommation de m\u00e9moire.  Il convient donc de se demander si l'usage d'un map n'est pas plus  pertinent dans ce cas.</p>"},{"location":"libs/%24array/_alloc/#syntaxe","title":"Syntaxe","text":"<p><code>$array.alloc( size )</code></p>"},{"location":"libs/%24array/_alloc/#parametres","title":"Param\u00e8tres","text":"<code>size</code> integer Taille du tableau \u00e0 allouer. Doit \u00eatre un nombre sup\u00e9rieur \u00e0 0."},{"location":"libs/%24array/_alloc/#retour","title":"Retour","text":"<p>Tableau de la taille demand\u00e9e. La m\u00e9thode retourne alors un objet <code>null</code> et  g\u00e9n\u00e8re une erreur si la valeur du param\u00e8tre <code>size</code> n'est pas valide.</p>"},{"location":"libs/%24array/_alloc/#exemple","title":"Exemple","text":"<pre><code>var allData = $array.alloc(9999);\n</code></pre>"},{"location":"libs/%24array/_contains/","title":"<code>$array.contains</code>","text":""},{"location":"libs/%24array/_contains/#description","title":"Description","text":"<p>Indique si le tableau d'\u00e9l\u00e9ments contient l'\u00e9l\u00e9ment indiqu\u00e9.</p>"},{"location":"libs/%24array/_contains/#syntaxe","title":"Syntaxe","text":"<p><code>$array.contains( array , object )</code></p>"},{"location":"libs/%24array/_contains/#parametres","title":"Param\u00e8tres","text":"<code>array</code> array Tableau d'\u00e9l\u00e9ments <code>object</code> any \u00c9l\u00e9ment \u00e0 rechercher dans le tableau"},{"location":"libs/%24array/_contains/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si l'\u00e9l\u00e9ment est pr\u00e9sent dans le tableau, sinon <code>false</code>.</p>"},{"location":"libs/%24array/_contains/#exemple","title":"Exemple","text":"<pre><code>$array.contains( [1, 2], 1 );        // retourne true\n</code></pre>"},{"location":"libs/%24array/_dimension/","title":"<code>$array.dimension</code>","text":""},{"location":"libs/%24array/_dimension/#description","title":"Description","text":"<p>D\u00e9termine la dimension, ou la profondeur d'une table. Exemples:</p> <pre><code>dimension 1: [ 1, 2, 3, 4 ]\n\ndimension 2: [ [1, 2, 3, 4],\n               [1, 2, 3, 4],\n               [1, 2, 3, 4],\n               [1, 2, 3, 4] ]\n\ndimension 3: [ [ [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4] ],\n               [ [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4] ],\n               [ [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4] ],\n               [ [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4] ] ]\n</code></pre>"},{"location":"libs/%24array/_dimension/#syntaxe","title":"Syntaxe","text":"<p><code>$array.dimension( array )</code></p>"},{"location":"libs/%24array/_dimension/#parametres","title":"Param\u00e8tres","text":"<code>array</code> array Tableau \u00e0 analyser"},{"location":"libs/%24array/_dimension/#retour","title":"Retour","text":"<p>Nombre de dimensions du tableau donn\u00e9 en param\u00e8tre.</p>"},{"location":"libs/%24array/_dimension/#exemple","title":"Exemple","text":"<pre><code>$array.dimension( [ 1 ] );              // retourne 1\n$array.dimension( [ [ 1 ], [ 2 ] ] );   // retourne 2\n</code></pre>"},{"location":"libs/%24array/_isEmpty/","title":"<code>$array.isEmpty</code>","text":""},{"location":"libs/%24array/_isEmpty/#description","title":"Description","text":"<p>Indique si le tableau est vide.</p>"},{"location":"libs/%24array/_isEmpty/#syntaxe","title":"Syntaxe","text":"<p><code>$array.isEmpty( array )</code></p>"},{"location":"libs/%24array/_isEmpty/#parametres","title":"Param\u00e8tres","text":"<code>array</code> array Tableau d'\u00e9l\u00e9ments"},{"location":"libs/%24array/_isEmpty/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le tableau est vide ou null, sinon <code>false</code>.</p>"},{"location":"libs/%24array/_isEmpty/#exemple","title":"Exemple","text":"<pre><code>$array.isEmpty( [ ] );          // retourne true\n$array.isEmpty( [ 'a' ] );      // retourne false\n</code></pre>"},{"location":"libs/%24array/_join/","title":"<code>$array.join</code>","text":""},{"location":"libs/%24array/_join/#description","title":"Description","text":"<p>Concat\u00e8ne les \u00e9l\u00e9ments d'un tableau en une string.</p>"},{"location":"libs/%24array/_join/#syntaxe","title":"Syntaxe","text":"<p><code>$array.join( array [ , delimiter ] )</code></p>"},{"location":"libs/%24array/_join/#parametres","title":"Param\u00e8tres","text":"<code>array</code> array Tableau d'\u00e9l\u00e9ments <code>delimiter</code> string Caract\u00e8re de d\u00e9limitation des \u00e9l\u00e9ments.   Le d\u00e9limiteur est optionnel, mais dans ce cas toutes les valeurs seront    mises bout \u00e0 bout."},{"location":"libs/%24array/_join/#retour","title":"Retour","text":"<p>Retourne une cha\u00eene de caract\u00e8res form\u00e9e de la concat\u00e9nation des \u00e9l\u00e9ments du tableau.</p>"},{"location":"libs/%24array/_join/#exemple","title":"Exemple","text":"<pre><code>$array.join( [ 1, 2, 3 ], \",\" );    // retourne \"1,2,3\"\n</code></pre>"},{"location":"libs/%24array/_remove/","title":"<code>$array.remove</code>","text":""},{"location":"libs/%24array/_remove/#description","title":"Description","text":"<p>Supprime un ou plusieurs \u00e9l\u00e9ments d'un tableau</p>"},{"location":"libs/%24array/_remove/#syntaxe","title":"Syntaxe","text":"<p><code>$array.remove( array , index [ , num ] )</code></p>"},{"location":"libs/%24array/_remove/#parametres","title":"Param\u00e8tres","text":"<code>array</code> array Array \u00e0 traiter <code>index</code> number Indice 0-based de l'\u00e9l\u00e9ment \u00e0 partir duquel faire la ou les suppressions <code>num</code> number Nombre d'\u00e9l\u00e9ments \u00e0 supprimer \u00e0 partir de la position <code>index</code>.    Vaut 1 si non d\u00e9fini."},{"location":"libs/%24array/_remove/#retour","title":"Retour","text":"<p>Nouveau tableau sans les \u00e9l\u00e9ments supprim\u00e9s</p>"},{"location":"libs/%24array/_remove/#exemple","title":"Exemple","text":"<pre><code>$array.remove( [ 0, 1, 2, 3 ], 1);       // retourne [0, 2, 3 ]\n$array.remove( [ 0, 1, 2, 3 ], 1, 2);    // retourne [0, 3 ]\n</code></pre>"},{"location":"libs/%24array/_size/","title":"<code>$array.size</code>","text":""},{"location":"libs/%24array/_size/#description","title":"Description","text":"<p>Retourne le nombre d'\u00e9l\u00e9ments du tableau</p>"},{"location":"libs/%24array/_size/#syntaxe","title":"Syntaxe","text":"<p><code>$array.size( array )</code></p>"},{"location":"libs/%24array/_size/#parametres","title":"Param\u00e8tres","text":"<code>array</code> array Tableau d'\u00e9l\u00e9ments"},{"location":"libs/%24array/_size/#retour","title":"Retour","text":"<p>Retourne la taille du tableau d'\u00e9l\u00e9ments ou -1 si le tableau donn\u00e9 en  param\u00e8tre n'est pas valide.</p>"},{"location":"libs/%24array/_size/#exemple","title":"Exemple","text":"<pre><code>$array.size( [ ] );            // retourne 0\n$array.size( [ 0 ] );          // retourne 1\n$array.size( [ [ 1, 2 ] ] );   // retourne 1\n</code></pre>"},{"location":"libs/%24array/_sort/","title":"<code>$array.sort</code>","text":""},{"location":"libs/%24array/_sort/#description","title":"Description","text":"<p>Construit et retourne une version tri\u00e9e du tableau.</p> <p>Il est possible de demander \u00e0 la m\u00e9thode de trier le tableau lui-m\u00eame.  Pour ce faire, il faut passer le tableau par r\u00e9f\u00e9rence plut\u00f4t que par valeur. Voir les exemples.</p>"},{"location":"libs/%24array/_sort/#syntaxe","title":"Syntaxe","text":"<p><code>$array.join( array [ , options ] )</code></p>"},{"location":"libs/%24array/_sort/#parametres","title":"Param\u00e8tres","text":"<code>array</code> array Tableau d'\u00e9l\u00e9ments <code>options</code> map <p>Options de tri. Les options reconnues sont:</p> <code>mode</code> string / function <p>Mode de tri. Peut valoir \"string\" pour indiquer que l'on souhaite  effectuer un tri alphab\u00e9tique ou \"number\" pour indiquer que l'on  souhaite effectuer un tri num\u00e9rique.</p> <p>Peut \u00e9galement \u00eatre une fonction. Celle-ci sera alors invoqu\u00e9e pour chaque paire d'\u00e9l\u00e9ments \u00e0 comparer. La fonction recevra deux  param\u00e8tres (<code>p1</code>, <code>p2</code>) et devra effectuer une comparaison de  ceux-ci. On s'attend \u00e0 ce que la fonction retourner:</p> <ul> <li>0 lorsque <code>p1 == p2</code></li> <li>&lt;0 lorsque <code>p1 &lt; p2</code> (lorsque <code>p1</code> doit \u00eatre plac\u00e9 avant <code>p2</code>      dans la table tri\u00e9e)</li> <li>&gt;0 lorsque <code>p2 &lt; p1</code>(lorsque <code>p1</code> doit \u00eatre plac\u00e9 apr\u00e8s <code>p2</code>      dans la table tri\u00e9e)</li> </ul> <p>Le mode par d\u00e9faut est \"string\".</p> <code>order</code> string Valeur lit\u00e9rale \"asc\" ou \"desc\" indiquant l'ordre de tri (sans effet  si le mode d\u00e9signe une fonction). Le tri par d\u00e9faut est \"asc\"."},{"location":"libs/%24array/_sort/#retour","title":"Retour","text":"<p>Retourne une version tri\u00e9e du tableau re\u00e7u en param\u00e8tre.</p> <p>Retourne <code>null</code> en cas d'erreur, typiquement si on demande un tri num\u00e9rique  alors que le tableau contient des valeurs non num\u00e9riques ou nulles.</p>"},{"location":"libs/%24array/_sort/#exemple","title":"Exemple","text":"<pre><code>var values = [ 2, 3, 1, 10, 9 ];\n\n$logger.info($array.sort(values));                                      // affiche [1, 10, 2, 3, 9]\n$logger.info($array.sort(values, { mode: \"string\" }));                  // affiche [1, 10, 2, 3, 9]\n$logger.info($array.sort(values, { mode: \"string\", order: \"asc\" }));    // affiche [1, 10, 2, 3, 9]\n$logger.info($array.sort(values, { mode: \"string\", order: \"desc\" }));   // affiche [9, 3, 2, 10, 1]\n$logger.info($array.sort(values, { mode: \"number\" }));                  // affiche [1, 2, 3, 9, 10]\n$logger.info($array.sort(values, { mode: \"number\", order: \"asc\" }));    // affiche [1, 2, 3, 9, 10]\n$logger.info($array.sort(values, { mode: \"number\", order: \"desc\" }));   // affiche [10, 9, 3, 2, 1]\n$logger.info($array.sort(values, { mode: compare }));                   // affiche [1, 2, 3, 9, 10]\n\nfunction compare(v1, v2) {\n    return v1 - v2;\n}\n\n// exemple de passage par r\u00e9f\u00e9rence\n$logger.info(values);       // affiche [2, 3, 1, 10, 9] (inchang\u00e9 par rapport \u00e0 la valeur initiale)\n$array.sort(&amp;values, { mode: \"number\" });            // le \"&amp;\" indique un passage par r\u00e9f\u00e9rence\n$logger.info(values);       // affiche [1, 2, 3, 9, 10]\n</code></pre>"},{"location":"libs/%24array/_stringify/","title":"<code>$array.stringify</code>","text":""},{"location":"libs/%24array/_stringify/#description","title":"Description","text":"<p>G\u00e9n\u00e8re une repr\u00e9sentation textuelle 2D d'un tableau.</p> <p>La m\u00e9thode g\u00e8re deux cas de figure:</p> <ol> <li>Les tableaux construits comme un tableau de tableaux, c.-\u00e0-d. un tableau    ayant la forme <code>[ [ 'a', 'b' ], [ 1, 2 ] ]</code></li> <li>Les tableaux de maps, c.-\u00e0-d. un tableau contenant une s\u00e9rie de maps</li> </ol> <p>La m\u00e9thode se charge alors de g\u00e9n\u00e9rer une repr\u00e9sentation de la forme:</p> <pre><code>    col1 | col2\n   ------+------\n    a    | b\n   ------+------\n    1    | 2\n</code></pre> <p>Mise en forme de donn\u00e9es SQL</p> <p>La m\u00e9thode <code>$sql.mselect</code> s'appuie sur  <code>$xml.stringify</code> lorsqu'elle est appel\u00e9e avec une option de formatage  <code>text</code>. Cela permet facilement de reprendre le r\u00e9sultat d'une requ\u00eate  SQL dans le log \u00e0 des fins de debug par exemple.</p>"},{"location":"libs/%24array/_stringify/#syntaxe","title":"Syntaxe","text":"<p><code>$array.stringify( array [ , options ] )</code></p>"},{"location":"libs/%24array/_stringify/#parametres","title":"Param\u00e8tres","text":"<code>array</code> array Tableau de valeurs. La table doit \u00eatre une liste de listes, ce qui forme    une table 2D. <code>options</code> map <p>Options de mise en forme du tableau de sortie. Les options sont:</p> <code>grid</code> string Valeur <code>none</code>/<code>first</code>/<code>full</code> indiquant le type de grille  souhait\u00e9. Par d\u00e9faut, l'option est d\u00e9sactiv\u00e9e. <code>header</code> array / string <p>Table 1D contenant les ent\u00eates de colonnes \u00e0 reprendre.</p> <p>La propri\u00e9t\u00e9 peut aussi prendre la valeur \"inline\". Dans ce cas, cela signifie que le header est \u00e0 extraire de la premi\u00e8re ligne  de donn\u00e9es.</p>"},{"location":"libs/%24array/_stringify/#retour","title":"Retour","text":"<p>Cha\u00eene de caract\u00e8re contenant la repr\u00e9sentation 2D du tableau.</p>"},{"location":"libs/%24array/_stringify/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24barcode/","title":"<code>$barcode</code>","text":""},{"location":"libs/%24barcode/_decode/","title":"<code>$barcode.decode</code>","text":""},{"location":"libs/%24barcode/_decode/#description","title":"Description","text":"<p>D\u00e9code une image contenant un code barres ou un qr-code et retourne le texte associ\u00e9.</p> <p>Note</p> <p>L'impl\u00e9mentation actuelle ne supporte qu'un seul code par image.</p>"},{"location":"libs/%24barcode/_decode/#syntaxe","title":"Syntaxe","text":"<p><code>$barcode.decode( file [ , options ] )</code></p>"},{"location":"libs/%24barcode/_decode/#parametres","title":"Param\u00e8tres","text":"<code>file</code> file R\u00e9f\u00e9rence du fichier \u00e0 d\u00e9coder <code>options</code> map <p>Options de d\u00e9codage. Les options reconnues sont:</p> <code>charset</code> string Charset du texte \u00e0 g\u00e9n\u00e9rer"},{"location":"libs/%24barcode/_decode/#retour","title":"Retour","text":"<p>Texte contenu dans le code barres/qr-code ou <code>null</code> si une erreur de d\u00e9codage est d\u00e9tect\u00e9e.</p>"},{"location":"libs/%24barcode/_decode/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24barcode/_encode/","title":"<code>$barcode.encode</code>","text":""},{"location":"libs/%24barcode/_encode/#description","title":"Description","text":"<p>Encode une donn\u00e9e textuelle sous forme de code barres ou de QR-code</p>"},{"location":"libs/%24barcode/_encode/#syntaxe","title":"Syntaxe","text":"<p><code>$barcode.encode( text , width , height [ , options ] )</code></p>"},{"location":"libs/%24barcode/_encode/#parametres","title":"Param\u00e8tres","text":"<code>text</code> string Texte \u00e0 encoder <code>width</code> number Largeur de l'image \u00e0 produire en pixels <code>height</code> number Hauteur de l'image \u00e0 produire en pixels <code>options</code> map <p>Options d'encodage. Les options reconnues sont:</p> <code>format</code> string Format de code barres ou de qr-code. Les valeurs possibles sont    <code>EAN13</code> (ou <code>EAN_13</code>), <code>UPCA</code> (ou <code>UPC_A</code>), <code>QRCODE</code> (ou <code>QR_CODE</code>),    <code>CODE39</code> (ou <code>CODE_39</code>), <code>CODE128</code> (ou <code>CODE_128</code>), <code>ITF</code> ou <code>PDF417</code>    (ou <code>PDF_417</code>). Le format par d\u00e9faut est <code>QRCODE</code>. <code>type</code> string Type d'image \u00e0 fournir en output. Les valeurs possibles de l'option    sont <code>png</code>, <code>jpg</code>, <code>svg</code>, <code>text</code>. La valeur par d\u00e9faut est <code>png</code>. Le    type <code>text</code> sert surtout au debug. Il repr\u00e9sente le code en texte,    avec des espaces et des carr\u00e9s noirs \"\u2588\". <code>out</code> string Type d'output attendu. Les valeurs de l'option possibles sont <code>file</code>   (la m\u00e9thode retournera un fichier pr\u00e9-g\u00e9n\u00e9r\u00e9 dans le dossier de    travail) ou <code>text</code> (la m\u00e9thode retourne le flux de donn\u00e9es en    r\u00e9sultat - cela peut poser probl\u00e8me dans le cas des types <code>png</code> ou    <code>jpg</code>). Par d\u00e9faut, le format est <code>file</code> <code>inclProperties</code> boolean Flag <code>true</code>/<code>false</code> indiquant si la r\u00e9ponse doit inclure les    propri\u00e9t\u00e9s de l'image g\u00e9n\u00e9r\u00e9e. Si le flag est activ\u00e9, la valeur de    retour de la m\u00e9thode sera une map contenant la sortie standard    (valeur lit\u00e9rale ou file en fonction du param\u00e8tre <code>out</code>) + des    propri\u00e9t\u00e9s d\u00e9crivant les dimensions de l'image, le padding, etc.    Le flag est par d\u00e9faut \u00e0 <code>false</code>. <code>margin</code> number Taille de la marge \u00e0 ajouter (en pixels). La marge par d\u00e9faut est de    0. \u00c0 noter qu'une marge variable peut toutefois \u00eatre appliqu\u00e9e en    fonction de la taille du QR-code g\u00e9n\u00e9r\u00e9. <code>correction</code> string Niveau de codes correcteurs \u00e0 int\u00e9grer au qr-code. Les niveaux   support\u00e9s sont <code>H</code> (~30% de correction), <code>Q</code> (~25% de correction},    <code>M</code> (~15% de correction) et <code>L</code> (~7% de correction). <code>charset</code> string Charset du texte \u00e0 reprendre dans le qr-code <code>svgPathOnly</code> boolean Demande \u00e0 la m\u00e9thode de retourner le path svg, sans les ent\u00eates xml    (uniquement si le fichier de sortie est un svg) <code>delPadding</code> boolean Demande \u00e0 la m\u00e9thode d'\u00e9liminer le padding (actuellement, uniquement    si le fichier de sortie est un svg). L'option est par d\u00e9faut \u00e0 <code>true</code>."},{"location":"libs/%24barcode/_encode/#retour","title":"Retour","text":"<p>La valeur de retour d\u00e9pend du type d'image demand\u00e9 dans les param\u00e8tres.</p>"},{"location":"libs/%24barcode/_encode/#exemple","title":"Exemple","text":"<pre><code>$barcode.encode(str, 256, 256, { type: \"svg\", out: \"text\", correction: \"M\" });\n</code></pre>"},{"location":"libs/%24base64/","title":"<code>$base64</code>","text":""},{"location":"libs/%24base64/_decode/","title":"<code>$base64.decode</code>","text":""},{"location":"libs/%24base64/_decode/#description","title":"Description","text":"<p>D\u00e9code une valeur base64</p>"},{"location":"libs/%24base64/_decode/#syntaxe","title":"Syntaxe","text":"<p><code>$base64.decode( value [ , options ] )</code></p>"},{"location":"libs/%24base64/_decode/#parametres","title":"Param\u00e8tres","text":"<code>param</code> string Valeur \u00e0 d\u00e9coder <code>options</code> map <p>Options de conversion. Les options reconnues sont:</p> <code>charset</code> string Charset dans lequel exprimer la valeur de retour.   Par d\u00e9faut, le charset est \"utf-8\" <code>file</code> boolean / file Indique que la m\u00e9thode doit inscrire la valeur d\u00e9cod\u00e9e   dans un fichier. L'option peut prendre une valeur <code>true</code>/<code>false</code> pour    indiquer s'il faut ou non produire un fichier en sortie. Dans ce cas,    le nom du fichier est g\u00e9n\u00e9r\u00e9 al\u00e9atoirement et la m\u00e9thode retourne un    objet de type <code>file</code>. <p>Si l'option est de type <code>file</code>, alors la m\u00e9thode inscrira les donn\u00e9es    dans le fichier r\u00e9f\u00e9renc\u00e9 (s'il est d\u00e9j\u00e0 existant, le fichier sera    \u00e9cras\u00e9) et retourne ce m\u00eame fichier.</p>"},{"location":"libs/%24base64/_decode/#retour","title":"Retour","text":"<p>Objet (valeur ou fichier) contenant la version d\u00e9cod\u00e9e de la valeur d'entr\u00e9e.</p>"},{"location":"libs/%24base64/_decode/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24base64/_encode/","title":"<code>$base64.encode</code>","text":""},{"location":"libs/%24base64/_encode/#description","title":"Description","text":"<p>Encode une valeur sous la forme d'une cha\u00eene en base64</p>"},{"location":"libs/%24base64/_encode/#syntaxe","title":"Syntaxe","text":"<p><code>$base64.encode( value [ , options ] )</code></p>"},{"location":"libs/%24base64/_encode/#parametres","title":"Param\u00e8tres","text":"<code>value</code> file / string Valeur \u00e0 encoder. Peut \u00eatre une valeur lit\u00e9rale (cha\u00eene de caract\u00e8res)  ou une r\u00e9f\u00e9rence de fichier (type <code>file</code>). <code>options</code> map <p>Options de conversion. Les options reconnues sont:</p> <code>charset</code> string <p>Charset \u00e0 utiliser pour le traitement de la valeur en entr\u00e9e, lorsque  celle-ci est donn\u00e9e sous forme de string (dans le cas d'un fichier,  on lit les bytes sans les interpr\u00e9ter, donc le charset ne joue aucun  r\u00f4le). </p> <p>Par d\u00e9faut, le charset est \"utf-8\"</p> <code>chunkLength</code> integer <p>Demande de d\u00e9couper la valeur base64 produite en morceaux. Si d\u00e9fini, l'option doit sp\u00e9cifier la longueur des morceaux.</p> <p>Par d\u00e9faut la valeur en sortie n'est pas d\u00e9coup\u00e9e.</p> <code>chunkSeparator</code> string Caract\u00e8re de s\u00e9paration des morceaux. Par d\u00e9faut le caract\u00e8re de  s\u00e9paration est \"\\n\" (caract\u00e8re ascii 10)."},{"location":"libs/%24base64/_encode/#retour","title":"Retour","text":"<p>Valeur chiffr\u00e9e</p>"},{"location":"libs/%24base64/_encode/#exemple","title":"Exemple","text":"<p>Encodage base64 de la valeur \"Hello World!\".</p> <pre><code>$base64.encode(\"Hello World!\");\n</code></pre> <p>Exemple d'encodage base64 d'une image png. La valeur base64 de sortie est  d\u00e9coup\u00e9 en lignes de 80 caract\u00e8res dans le fichier html de sortie.</p> <pre><code>var img = $file.load(\"C:/Temp/carto.png\");\nvar b64 = $base64.encode(img, { chunkLength: 80 });\n$file.write(\"C:/Temp/img01.html\", `&lt;img src=\"data:image/png;base64,${b64}\"/&gt;`);\n</code></pre>"},{"location":"libs/%24cal/","title":"<code>$cal</code>","text":"<p>Alias: <code>$calendar</code>, <code>$datetime</code></p>"},{"location":"libs/%24cal/_add/","title":"<code>$cal.add</code>","text":""},{"location":"libs/%24cal/_add/#description","title":"Description","text":"<p>M\u00e9thode d'addition de dates, heures ou timestamps.</p>"},{"location":"libs/%24cal/_add/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.add( ref , amount , unit )</code></p>"},{"location":"libs/%24cal/_add/#parametres","title":"Param\u00e8tres","text":"<code>ref</code> date / time / timestamp Date, heure ou timestamp de r\u00e9f\u00e9rence <code>amount</code> number Nombre d'ann\u00e9es/mois/jours/heures/minutes/secondes/millisecondes \u00e0 ajouter (valeur positive) ou retirer (valeur n\u00e9gative) <code>unit</code> string <p>Unit\u00e9 de <code>amount</code>. Les unit\u00e9s reconnues sont:</p> <ul> <li><code>y</code> ou <code>year</code> </li> <li><code>m</code> ou <code>month</code></li> <li><code>d</code> ou <code>day</code></li> <li><code>h</code> ou <code>hour</code></li> <li><code>min</code> ou <code>minute</code></li> <li><code>sec</code> ou <code>second</code></li> <li><code>ms</code> ou <code>millisecond</code></li> <li><code>microsecond</code></li> <li><code>n</code> ou <code>nanosecond</code></li> </ul>"},{"location":"libs/%24cal/_add/#retour","title":"Retour","text":"<p>Nouvel objet du m\u00eame type que <code>ref</code> contenant la nouvelle date, la nouvelle  heure ou le nouveau timestamp r\u00e9sultat de l'addition.</p>"},{"location":"libs/%24cal/_add/#exemple","title":"Exemple","text":"<pre><code>$cal.add( $cal.date(), 15, \"day\" );\n</code></pre>"},{"location":"libs/%24cal/_date/","title":"<code>$cal.date</code>","text":""},{"location":"libs/%24cal/_date/#description","title":"Description","text":"<p>Construit un objet de type <code>date</code>.</p>"},{"location":"libs/%24cal/_date/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.date( [ date ] )</code></p>"},{"location":"libs/%24cal/_date/#parametres","title":"Param\u00e8tres","text":"<code>date</code> string <p>Valeur \u00e0 convertir en date. La date pass\u00e9e en param\u00e8tre doit respecter  le format ISO-8601 de date, \u00e0 savoir \"yyyy-MM-dd\".</p> <p>Si le param\u00e8tre est <code>null</code>, la m\u00e9thode g\u00e9n\u00e8re une date \u00e0 partir de la  date du jour, selon le fuseau horaire dans lequel se trouve le serveur  d'application.</p>"},{"location":"libs/%24cal/_date/#retour","title":"Retour","text":"<p>Objet de type <code>date</code>.</p>"},{"location":"libs/%24cal/_date/#exemple","title":"Exemple","text":"<pre><code>$cal.date();\n\n$cal.date(\"2023-12-31\");\n</code></pre>"},{"location":"libs/%24cal/_day/","title":"<code>$cal.day</code>","text":""},{"location":"libs/%24cal/_day/#description","title":"Description","text":"<p>Retourne le jour du mois actuel, de 1 \u00e0 31.</p>"},{"location":"libs/%24cal/_day/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.day( [ format ] )</code></p>"},{"location":"libs/%24cal/_day/#parametres","title":"Param\u00e8tres","text":"<code>format</code> string <p>Format de string \u00e0 retourner. La valeur attend une r\u00e8gle de formatage  selon le format d\u00e9crit dans Formatter#syntax</p> <p>Ainsi, on peut demander \u00e0 obtenir le jour sur 2 chiffres avec la syntaxe <code>$cal.day(\"%02d\")</code>.</p>"},{"location":"libs/%24cal/_day/#retour","title":"Retour","text":"<p>Jour du mois en cours</p>"},{"location":"libs/%24cal/_day/#exemple","title":"Exemple","text":"<pre><code>$cal.day();\n\n$cal.day(\"%02d\");\n</code></pre>"},{"location":"libs/%24cal/_dayOfWeek/","title":"<code>$cal.dayOfWeek</code>","text":""},{"location":"libs/%24cal/_dayOfWeek/#description","title":"Description","text":"<p>Retourne le jour de semaine pour la date indiqu\u00e9e (ou pour la date actuelle  si aucune date n'est indiqu\u00e9e).</p> <p>La m\u00e9thode retourne le jour de semaine sous la forme d'une valeur enti\u00e8re:</p> <ul> <li>1 : lundi</li> <li>2 : mardi</li> <li>3 : mercredi</li> <li>4 : jeudi</li> <li>5 : vendredi</li> <li>6 : samedi</li> <li>7 : dimanche</li> </ul>"},{"location":"libs/%24cal/_dayOfWeek/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.dayOfWeek( [ date ] )</code></p>"},{"location":"libs/%24cal/_dayOfWeek/#parametres","title":"Param\u00e8tres","text":"<code>date</code> date Date ou timestamp \u00e0 traiter."},{"location":"libs/%24cal/_dayOfWeek/#retour","title":"Retour","text":"<p>Jour de la semaine num\u00e9rot\u00e9 de 1 (lundi) \u00e0 7 (dimanche).</p>"},{"location":"libs/%24cal/_dayOfWeek/#exemple","title":"Exemple","text":"<pre><code>$cal.dayOfWeek( $cal.date() );\n</code></pre>"},{"location":"libs/%24cal/_diff/","title":"<code>$cal.diff</code>","text":""},{"location":"libs/%24cal/_diff/#description","title":"Description","text":"<p>Calcule l'\u00e9cart entre deux dates, heures ou timestamps. La m\u00e9thode retourne  le r\u00e9sultat de la diff\u00e9rence <code>ref2 - ref1</code>.</p>"},{"location":"libs/%24cal/_diff/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.diff( ref1 , ref2 [ , unit ] )</code></p>"},{"location":"libs/%24cal/_diff/#parametres","title":"Param\u00e8tres","text":"<code>ref1</code> date / time / timestamp Date/heure/timestamp de d\u00e9but de la p\u00e9riode/dur\u00e9e \u00e0 calculer <code>ref2</code> date / time / timestamp Date/heure/timestamp de fin de la p\u00e9riode/dur\u00e9e \u00e0 calculer. Si <code>ref2</code> est  sup\u00e9rieur \u00e0 <code>ref1</code>, la m\u00e9thode retournera une valeur positive. <code>unit</code> string <p>Unit\u00e9 de <code>amount</code>. Les unit\u00e9s reconnues sont:</p> <ul> <li><code>y</code> ou <code>year</code> </li> <li><code>m</code> ou <code>month</code></li> <li><code>d</code> ou <code>day</code></li> <li><code>h</code> ou <code>hour</code></li> <li><code>min</code> ou <code>minute</code></li> <li><code>sec</code> ou <code>second</code></li> <li><code>ms</code> ou <code>millisecond</code></li> <li><code>microsecond</code></li> <li><code>n</code> ou <code>nanosecond</code></li> </ul> <p>Si l'unit\u00e9 n'est pas sp\u00e9cifi\u00e9e, la m\u00e9thode retourne la dur\u00e9e selon le format ISO-8601 (p.ex PT27.03S pour d\u00e9signer une p\u00e9riode de 27.03 secondes)</p>"},{"location":"libs/%24cal/_diff/#retour","title":"Retour","text":"<p>Valeur enti\u00e8re repr\u00e9sentant le nombre d'unit\u00e9s qui s\u00e9parent les deux  dates/heures/timestamps.</p>"},{"location":"libs/%24cal/_diff/#exemple","title":"Exemple","text":"<pre><code>$cal.diff( $cal.date(\"2023-01-01\"), $cal.date(\"2023-12-31\"), \"d\" );\n</code></pre>"},{"location":"libs/%24cal/_format/","title":"<code>$cal.format</code>","text":""},{"location":"libs/%24cal/_format/#description","title":"Description","text":"<p>Formate une date au moyen d'un pattern.</p>"},{"location":"libs/%24cal/_format/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.format( value , pattern )</code></p>"},{"location":"libs/%24cal/_format/#parametres","title":"Param\u00e8tres","text":"<code>value</code> date / time / timestamp Date/Time/Timestamp \u00e0 formater <code>pattern</code> string Pattern de formatage \u00e0 appliquer"},{"location":"libs/%24cal/_format/#retour","title":"Retour","text":"<p>Cha\u00eene de caract\u00e8re contenant la valeur format\u00e9e.</p>"},{"location":"libs/%24cal/_format/#exemple","title":"Exemple","text":"<pre><code>$cal.format($cal.date(), \"dd/MM/yyyy\");\n// 06/02/2024\n</code></pre>"},{"location":"libs/%24cal/_getDay/","title":"<code>$cal.getDay</code>","text":""},{"location":"libs/%24cal/_getDay/#description","title":"Description","text":"<p>Extrait le jour de la date pass\u00e9e en param\u00e8tre.</p>"},{"location":"libs/%24cal/_getDay/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.getDay( date [ , format ] )</code></p>"},{"location":"libs/%24cal/_getDay/#parametres","title":"Param\u00e8tres","text":"<code>date</code> date / timestamp Date \u00e0 traiter. Peut \u00eatre une <code>date</code> ou un <code>timestamp</code>. <code>format</code> string <p>Format de string \u00e0 retourner. La valeur attend une r\u00e8gle de formatage selon le format d\u00e9crit dans Formatter#syntax</p> <p>Ainsi, on peut demander \u00e0 obtenir le jour sur 2 chiffres avec la syntaxe <code>$cal.getDay($cal.date(), \"%02d\")</code>.</p>"},{"location":"libs/%24cal/_getDay/#retour","title":"Retour","text":"<p>Jour du mois de la date indiqu\u00e9e.</p>"},{"location":"libs/%24cal/_getDay/#exemple","title":"Exemple","text":"<pre><code>$cal.getDay( $cal.date() );\n\n$cal.getDay( $cal.timestamp() );\n</code></pre>"},{"location":"libs/%24cal/_getHour/","title":"<code>$cal.getHour</code>","text":""},{"location":"libs/%24cal/_getHour/#description","title":"Description","text":"<p>Extrait l'heure de l'heure indiqu\u00e9e.</p>"},{"location":"libs/%24cal/_getHour/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.getHour( time [ , format ] )</code></p>"},{"location":"libs/%24cal/_getHour/#parametres","title":"Param\u00e8tres","text":"<code>time</code> time / timestamp Heure \u00e0 traiter. Peut \u00eatre une valeur <code>time</code> ou <code>timestamp</code>. <code>format</code> string <p>Format de string \u00e0 retourner. La valeur attend une r\u00e8gle de formatage selon le format d\u00e9crit dans Formatter#syntax</p> <p>Ainsi, on peut demander \u00e0 obtenir l'heure sur 2 chiffres avec la syntaxe <code>$cal.getHour($cal.time(), \"%02d\")</code>.</p>"},{"location":"libs/%24cal/_getHour/#retour","title":"Retour","text":"<p>Partie \"heure\" de l'heure indiqu\u00e9e</p>"},{"location":"libs/%24cal/_getHour/#exemple","title":"Exemple","text":"<pre><code>$cal.getHour( $cal.time() );\n\n$cal.getHour( $cal.timestamp() );\n</code></pre>"},{"location":"libs/%24cal/_getMicrosecond/","title":"<code>$cal.getMicrosecond</code>","text":""},{"location":"libs/%24cal/_getMicrosecond/#description","title":"Description","text":"<p>Retourne les microsecondes de l'heure ou du timestamp indiqu\u00e9.</p>"},{"location":"libs/%24cal/_getMicrosecond/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.getMicrosecond( time [ , format ] )</code></p>"},{"location":"libs/%24cal/_getMicrosecond/#parametres","title":"Param\u00e8tres","text":"<code>time</code> time / timestamp Date \u00e0 traiter. Peut \u00eatre un objet de type <code>time</code> ou <code>timestamp</code>. <code>format</code> string <p>Format de string \u00e0 retourner. La valeur attend une r\u00e8gle de formatage selon le format d\u00e9crit dans Formatter#syntax</p> <p>Ainsi, on peut demander \u00e0 obtenir les microsecondes sur 6 chiffres avec la syntaxe <code>$cal.getMicrosecond($cal.timestamp(), \"%06d\")</code>.</p>"},{"location":"libs/%24cal/_getMicrosecond/#retour","title":"Retour","text":"<p>Microsecondes de l'heure ou du timestamp indiqu\u00e9.</p>"},{"location":"libs/%24cal/_getMicrosecond/#exemple","title":"Exemple","text":"<pre><code>$cal.getMicrosecond( $cal.time() );\n\n$cal.getMicrosecond( $cal.timestamp() );\n</code></pre>"},{"location":"libs/%24cal/_getMillisecond/","title":"<code>$cal.getMillisecond</code>","text":""},{"location":"libs/%24cal/_getMillisecond/#description","title":"Description","text":"<p>Retourne les millisecondes de l'heure ou du timestamp indiqu\u00e9.</p>"},{"location":"libs/%24cal/_getMillisecond/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.getMillisecond( time [ , format ] )</code></p>"},{"location":"libs/%24cal/_getMillisecond/#parametres","title":"Param\u00e8tres","text":"<code>time</code> time / timestamp Date \u00e0 traiter. Peut \u00eatre un objet de type <code>time</code> ou <code>timestamp</code>. <code>format</code> string <p>Format de string \u00e0 retourner. La valeur attend une r\u00e8gle de formatage selon le format d\u00e9crit dans Formatter#syntax</p> <p>Ainsi, on peut demander \u00e0 obtenir les millisecondes sur 3 chiffres avec  la syntaxe <code>$cal.getMillisecond($cal.timestamp(), \"%03d\")</code>.</p>"},{"location":"libs/%24cal/_getMillisecond/#retour","title":"Retour","text":"<p>Millisecondes de l'heure ou du timestamp indiqu\u00e9.</p>"},{"location":"libs/%24cal/_getMillisecond/#exemple","title":"Exemple","text":"<pre><code>$cal.getMillisecond( $cal.time() );\n\n$cal.getMillisecond( $cal.timestamp() );\n</code></pre>"},{"location":"libs/%24cal/_getMinute/","title":"<code>$cal.getMinute</code>","text":""},{"location":"libs/%24cal/_getMinute/#description","title":"Description","text":"<p>Retourne les minutes de l'heure indiqu\u00e9e.</p>"},{"location":"libs/%24cal/_getMinute/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.getMinute( time [ , format ] )</code></p>"},{"location":"libs/%24cal/_getMinute/#parametres","title":"Param\u00e8tres","text":"<code>time</code> time / timestamp Heure \u00e0 traiter. Peut \u00eatre une valeur <code>time</code> ou <code>timestamp</code>. <code>format</code> string <p>Format de string \u00e0 retourner. La valeur attend une r\u00e8gle de formatage selon le format d\u00e9crit dans Formatter#syntax</p> <p>Ainsi, on peut demander \u00e0 obtenir les minutes sur 2 chiffres avec la syntaxe <code>$cal.getMinute($cal.time(), \"%02d\")</code>.</p>"},{"location":"libs/%24cal/_getMinute/#retour","title":"Retour","text":"<p>Minutes de l'heure indiqu\u00e9e</p>"},{"location":"libs/%24cal/_getMinute/#exemple","title":"Exemple","text":"<pre><code>$cal.getMinute( $cal.time() );\n\n$cal.getMinute( $cal.timestamp() );\n</code></pre>"},{"location":"libs/%24cal/_getMonth/","title":"<code>$cal.getMonth</code>","text":""},{"location":"libs/%24cal/_getMonth/#description","title":"Description","text":"<p>Retourne le mois de la date indiqu\u00e9e.</p>"},{"location":"libs/%24cal/_getMonth/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.getMonth( date [ , format ] )</code></p>"},{"location":"libs/%24cal/_getMonth/#parametres","title":"Param\u00e8tres","text":"<code>date</code> date / timestamp Date \u00e0 traiter. Peut \u00eatre une <code>date</code> ou un <code>timestamp</code>. <code>format</code> string <p>Format de string \u00e0 retourner. La valeur attend une r\u00e8gle de formatage selon le format d\u00e9crit dans Formatter#syntax</p> <p>Ainsi, on peut demander \u00e0 obtenir le mois sur 2 chiffres avec la syntaxe <code>$cal.getMonth($cal.date(), \"%02d\")</code>.</p>"},{"location":"libs/%24cal/_getMonth/#retour","title":"Retour","text":"<p>Mois de la date indiqu\u00e9e.</p>"},{"location":"libs/%24cal/_getMonth/#exemple","title":"Exemple","text":"<pre><code>$cal.getMonth( $cal.date() );\n\n$cal.getMonth( $cal.timestamp() );\n</code></pre>"},{"location":"libs/%24cal/_getNanosecond/","title":"<code>$cal.getNanosecond</code>","text":""},{"location":"libs/%24cal/_getNanosecond/#description","title":"Description","text":"<p>Retourne les nanosecondes de l'heure ou du timestamp indiqu\u00e9.</p>"},{"location":"libs/%24cal/_getNanosecond/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.getNanosecond( time [ , format ] )</code></p>"},{"location":"libs/%24cal/_getNanosecond/#parametres","title":"Param\u00e8tres","text":"<code>time</code> time / timestamp Heure ou timestamp \u00e0 traiter. Peut \u00eatre un objet de type <code>time</code> ou  <code>timestamp</code>. <code>format</code> string <p>Format de string \u00e0 retourner. La valeur attend une r\u00e8gle de formatage selon le format d\u00e9crit dans Formatter#syntax</p> <p>Ainsi, on peut demander \u00e0 obtenir les nanosecondes sur 9 chiffres avec la syntaxe <code>$cal.getNanosecond($cal.timestamp(), \"%09d\")</code>.</p>"},{"location":"libs/%24cal/_getNanosecond/#retour","title":"Retour","text":"<p>Nanosecondes de l'heure ou du timestamp indiqu\u00e9.</p>"},{"location":"libs/%24cal/_getNanosecond/#exemple","title":"Exemple","text":"<pre><code>$cal.getNanosecond( $cal.time() );\n\n$cal.getNanosecond( $cal.timestamp() );\n</code></pre>"},{"location":"libs/%24cal/_getSecond/","title":"<code>$cal.getSecond</code>","text":""},{"location":"libs/%24cal/_getSecond/#description","title":"Description","text":"<p>Retourne les secondes de l'heure indiqu\u00e9e.</p>"},{"location":"libs/%24cal/_getSecond/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.getSecond( time [ , format ] )</code></p>"},{"location":"libs/%24cal/_getSecond/#parametres","title":"Param\u00e8tres","text":"<code>time</code> time / timestamp Heure \u00e0 traiter. Peut \u00eatre une valeur <code>time</code> ou <code>timestamp</code>. <code>format</code> string <p>Format de string \u00e0 retourner. La valeur attend une r\u00e8gle de formatage selon le format d\u00e9crit dans Formatter#syntax</p> <p>Ainsi, on peut demander \u00e0 obtenir les secondes sur 2 chiffres avec la syntaxe <code>$cal.getSecond($cal.time(), \"%02d\")</code>.</p>"},{"location":"libs/%24cal/_getSecond/#retour","title":"Retour","text":"<p>Secondes de l'heure indiqu\u00e9e</p>"},{"location":"libs/%24cal/_getSecond/#exemple","title":"Exemple","text":"<pre><code>$cal.getSecond( $cal.time() );\n\n$cal.getSecond( $cal.timestamp() );\n</code></pre>"},{"location":"libs/%24cal/_getYear/","title":"<code>$cal.getYear</code>","text":""},{"location":"libs/%24cal/_getYear/#description","title":"Description","text":"<p>Retourne l'ann\u00e9e de la date indiqu\u00e9e.</p>"},{"location":"libs/%24cal/_getYear/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.getYear( date [ , format ] )</code></p>"},{"location":"libs/%24cal/_getYear/#parametres","title":"Param\u00e8tres","text":"<code>date</code> date / timestamp Date \u00e0 traiter. Peut \u00eatre une <code>date</code> ou un <code>timestamp</code>. <code>format</code> string Format de string \u00e0 retourner. La valeur attend une r\u00e8gle de formatage selon le format d\u00e9crit dans Formatter#syntax"},{"location":"libs/%24cal/_getYear/#retour","title":"Retour","text":"<p>Ann\u00e9e de la date indiqu\u00e9e.</p>"},{"location":"libs/%24cal/_getYear/#exemple","title":"Exemple","text":"<pre><code>$cal.getYear( $cal.date() );\n\n$cal.getYear( $cal.timestamp() );\n</code></pre>"},{"location":"libs/%24cal/_hour/","title":"<code>$cal.hour</code>","text":""},{"location":"libs/%24cal/_hour/#description","title":"Description","text":"<p>Retourne l'heure actuelle de 0 \u00e0 23.</p>"},{"location":"libs/%24cal/_hour/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.hour( [ format ] )</code></p>"},{"location":"libs/%24cal/_hour/#parametres","title":"Param\u00e8tres","text":"<code>format</code> string <p>Format de string \u00e0 retourner. La valeur attend une r\u00e8gle de formatage selon le format d\u00e9crit dans Formatter#syntax</p> <p>Ainsi, on peut demander \u00e0 obtenir l'heure sur 2 chiffres avec la syntaxe <code>$cal.hour(\"%02d\")</code>.</p>"},{"location":"libs/%24cal/_hour/#retour","title":"Retour","text":"<p>Heure en cours (sur 24h)</p>"},{"location":"libs/%24cal/_hour/#exemple","title":"Exemple","text":"<pre><code>$cal.hour();\n\n$cal.hour(\"%02d\");\n</code></pre>"},{"location":"libs/%24cal/_microsecond/","title":"<code>$cal.microsecond</code>","text":""},{"location":"libs/%24cal/_microsecond/#description","title":"Description","text":"<p>Retourne les microsecondes actuelles.</p>"},{"location":"libs/%24cal/_microsecond/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.microsecond( [ format ] )</code></p>"},{"location":"libs/%24cal/_microsecond/#parametres","title":"Param\u00e8tres","text":"<code>format</code> string <p>Format de string \u00e0 retourner. La valeur attend une r\u00e8gle de formatage selon le format d\u00e9crit dans Formatter#syntax</p> <p>Ainsi, on peut demander \u00e0 obtenir les microsecondes sur 6 chiffres avec la syntaxe <code>$cal.microsecond(\"%06d\")</code>.</p>"},{"location":"libs/%24cal/_microsecond/#retour","title":"Retour","text":"<p>Microsecondes en cours</p>"},{"location":"libs/%24cal/_microsecond/#exemple","title":"Exemple","text":"<pre><code>$cal.microsecond();\n\n$cal.microsecond(\"%06d\");\n</code></pre>"},{"location":"libs/%24cal/_millisecond/","title":"<code>$cal.millisecond</code>","text":""},{"location":"libs/%24cal/_millisecond/#description","title":"Description","text":"<p>Retourne les millisecondes actuelles.</p>"},{"location":"libs/%24cal/_millisecond/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.millisecond( [ format ] )</code></p>"},{"location":"libs/%24cal/_millisecond/#parametres","title":"Param\u00e8tres","text":"<code>format</code> string <p>Format de string \u00e0 retourner. La valeur attend une r\u00e8gle de formatage selon le format d\u00e9crit dans Formatter#syntax</p> <p>Ainsi, on peut demander \u00e0 obtenir les millisecondes sur 3 chiffres avec la syntaxe <code>$cal.millisecond(\"%03d\")</code>.</p>"},{"location":"libs/%24cal/_millisecond/#retour","title":"Retour","text":"<p>Millisecondes en cours</p>"},{"location":"libs/%24cal/_millisecond/#exemple","title":"Exemple","text":"<pre><code>$cal.millisecond();\n\n$cal.millisecond(\"%03d\");\n</code></pre>"},{"location":"libs/%24cal/_minute/","title":"<code>$cal.minute</code>","text":""},{"location":"libs/%24cal/_minute/#description","title":"Description","text":"<p>Retourne les minutes actuelles, de 0 \u00e0 59.</p>"},{"location":"libs/%24cal/_minute/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.minute( [ format ] )</code></p>"},{"location":"libs/%24cal/_minute/#parametres","title":"Param\u00e8tres","text":"<code>format</code> string <p>Format de string \u00e0 retourner. La valeur attend une r\u00e8gle de formatage selon le format d\u00e9crit dans Formatter#syntax</p> <p>Ainsi, on peut demander \u00e0 obtenir les minutes sur 2 chiffres avec la syntaxe <code>$cal.minute(\"%02d\")</code>.</p>"},{"location":"libs/%24cal/_minute/#retour","title":"Retour","text":"<p>Minutes en cours</p>"},{"location":"libs/%24cal/_minute/#exemple","title":"Exemple","text":"<pre><code>$cal.minute();\n\n$cal.minute(\"%02d\");\n</code></pre>"},{"location":"libs/%24cal/_month/","title":"<code>$cal.month</code>","text":""},{"location":"libs/%24cal/_month/#description","title":"Description","text":"<p>Retourne le mois actuel, de 1 \u00e0 12.</p>"},{"location":"libs/%24cal/_month/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.month( [ format ] )</code></p>"},{"location":"libs/%24cal/_month/#parametres","title":"Param\u00e8tres","text":"<code>format</code> string <p>Format de string \u00e0 retourner. La valeur attend une r\u00e8gle de formatage selon le format d\u00e9crit dans Formatter#syntax</p> <p>Ainsi, on peut demander \u00e0 obtenir le mois sur 2 chiffres avec la syntaxe <code>$cal.month(\"%02d\")</code>.</p>"},{"location":"libs/%24cal/_month/#retour","title":"Retour","text":"<p>Mois en cours</p>"},{"location":"libs/%24cal/_month/#exemple","title":"Exemple","text":"<pre><code>$cal.month();\n\n$cal.month(\"%02d\");\n</code></pre>"},{"location":"libs/%24cal/_nanosecond/","title":"<code>$cal.nanosecond</code>","text":""},{"location":"libs/%24cal/_nanosecond/#description","title":"Description","text":"<p>Retourne les nanosecondes actuelles. Il est possible que la jvm du  serveur ne g\u00e8re pas les heures avec une pr\u00e9cision de l'ordre de la  nanoseconde. </p>"},{"location":"libs/%24cal/_nanosecond/#syn","title":"Syn","text":"<p><code>$cal.nanosecond( [ format ] )</code></p>"},{"location":"libs/%24cal/_nanosecond/#parametres","title":"Param\u00e8tres","text":"<code>format</code> string Format de string \u00e0 retourner. La valeur attend une r\u00e8gle de formatage    selon le format d\u00e9crit dans    Formatter#syntax <p>Ainsi, on peut demander \u00e0 obtenir les nanosecondes sur 9 chiffres avec    la syntaxe <code>$cal.nanosecond(\"%09d\")</code>.</p>"},{"location":"libs/%24cal/_nanosecond/#retour","title":"Retour","text":"<p>Nanosecondes en cours</p>"},{"location":"libs/%24cal/_nanosecond/#exemple","title":"Exemple","text":"<pre><code>$cal.nanosecond();\n\n$cal.nanosecond(\"%09d\");\n</code></pre>"},{"location":"libs/%24cal/_second/","title":"<code>$cal.second</code>","text":""},{"location":"libs/%24cal/_second/#description","title":"Description","text":"<p>Retourne les secondes actuelles, de 0 \u00e0 59.</p>"},{"location":"libs/%24cal/_second/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.second( [ format ] )</code></p>"},{"location":"libs/%24cal/_second/#parametres","title":"Param\u00e8tres","text":"<code>format</code> string <p>Format de string \u00e0 retourner. La valeur attend une r\u00e8gle de formatage selon le format d\u00e9crit dans Formatter#syntax</p> <p>Ainsi, on peut demander \u00e0 obtenir les secondes sur 2 chiffres avec la syntaxe <code>$cal.second(\"%02d\")</code>.</p>"},{"location":"libs/%24cal/_second/#retour","title":"Retour","text":"<p>Secondes en cours</p>"},{"location":"libs/%24cal/_second/#exemple","title":"Exemple","text":"<pre><code>$cal.second();\n\n$cal.second(\"%02d\");\n</code></pre>"},{"location":"libs/%24cal/_time/","title":"<code>$cal.time</code>","text":""},{"location":"libs/%24cal/_time/#description","title":"Description","text":"<p>Construit un objet de type <code>time</code>.</p>"},{"location":"libs/%24cal/_time/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.time( [ time ] )</code></p>"},{"location":"libs/%24cal/_time/#parametres","title":"Param\u00e8tres","text":"<code>time</code> string <p>Valeur \u00e0 convertir en heure. L'heure pass\u00e9e en param\u00e8tre doit respecter le format ISO-8601 pour les heures, \u00e0 savoir \"hh:mm:ss\".</p> <p>Si le param\u00e8tre est <code>null</code>, la m\u00e9thode g\u00e9n\u00e8re une heure \u00e0 partir de  l'heure actuelle, selon le fuseau horaire dans lequel se trouve le serveur d'application.</p>"},{"location":"libs/%24cal/_time/#retour","title":"Retour","text":"<p>Objet de type <code>time</code>.</p>"},{"location":"libs/%24cal/_time/#exemple","title":"Exemple","text":"<pre><code>$cal.time();\n\n$cal.time(\"13:45:30\");\n</code></pre>"},{"location":"libs/%24cal/_timestamp/","title":"<code>$cal.timestamp</code>","text":""},{"location":"libs/%24cal/_timestamp/#description","title":"Description","text":"<p>Construit un objet de type <code>timestamp</code>.</p>"},{"location":"libs/%24cal/_timestamp/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.timestamp( [ part1 [ , part2 ] ] )</code></p>"},{"location":"libs/%24cal/_timestamp/#parametres","title":"Param\u00e8tres","text":"<code>part1</code> string <p>Valeur repr\u00e9sentant soit un timestamp, soit une date au format ISO-8601.  Le timestamp sera \u00e0 noter selon la forme \"yyyy-MM-dd hh:mm:ss.nnn\" et  la date selon la forme \"yyyy-MM-dd\".</p> <p>Si le param\u00e8tre d\u00e9signe un timestamp, le param\u00e8tre <code>part2</code> est ignor\u00e9.  S'il repr\u00e9sente une date, le timestamp final est construit en concat\u00e9nant  <code>part1</code> (qui repr\u00e9sente une date) et <code>part2</code>(qui repr\u00e9sente une heure).</p> <p>Si le param\u00e8tre est <code>null</code>, la m\u00e9thode g\u00e9n\u00e8re un timestamp \u00e0 partir de la  date et l'heure actuelle, selon le fuseau horaire dans lequel se trouve  le serveur d'application. Le param\u00e8tre <code>part2</code> est ignor\u00e9 dans ce cas.</p> <code>part2</code> string Valeur repr\u00e9sentant une heure au format ISO-8601, \u00e0 savoir \"hh:mm:ss.nnn\",  mais uniquement pris en consid\u00e9ration si <code>part1</code> est une date."},{"location":"libs/%24cal/_timestamp/#retour","title":"Retour","text":"<p>Objet de type <code>timestamp</code>.</p>"},{"location":"libs/%24cal/_timestamp/#exemple","title":"Exemple","text":"<pre><code>$cal.timestamp();\n\n$cal.timestamp(\"2023-12-31 13:45:30.123\");\n</code></pre>"},{"location":"libs/%24cal/_weekOfMonth/","title":"<code>$cal.weekOfMonth</code>","text":""},{"location":"libs/%24cal/_weekOfMonth/#description","title":"Description","text":"<p>Retourne le num\u00e9ro de semaine dans le mois pour la date indiqu\u00e9e (ou pour la  date actuelle si aucune date n'est indiqu\u00e9e)</p>"},{"location":"libs/%24cal/_weekOfMonth/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.weekOfMonth( [ date ] )</code></p>"},{"location":"libs/%24cal/_weekOfMonth/#parametres","title":"Param\u00e8tres","text":"<code>date</code> date Date ou timestamp \u00e0 traiter"},{"location":"libs/%24cal/_weekOfMonth/#retour","title":"Retour","text":"<p>Num\u00e9ro de semaine dans le moiss</p>"},{"location":"libs/%24cal/_weekOfMonth/#exemple","title":"Exemple","text":"<pre><code>$cal.weekOfMonth();\n</code></pre>"},{"location":"libs/%24cal/_weekOfYear/","title":"<code>$cal.weekOfYear</code>","text":""},{"location":"libs/%24cal/_weekOfYear/#description","title":"Description","text":"<p>Retourne le num\u00e9ro de semaine dans l'ann\u00e9e pour la date indiqu\u00e9e (ou pour  la date actuelle si aucune date n'est indiqu\u00e9e).</p> <p>L'impl\u00e9mentation s'appuie sur  WeekField#weekOfWeekBasedYear.  Ainsi une date comme le 01/01/2023 correspondra \u00e0 la semaine 52 de 2022.</p>"},{"location":"libs/%24cal/_weekOfYear/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.weekOfYear( [ date [ , format ] ] )</code></p>"},{"location":"libs/%24cal/_weekOfYear/#parametres","title":"Param\u00e8tres","text":"<code>date</code> date Date ou timestamp \u00e0 traiter. <code>format</code> string <p>Format de string \u00e0 retourner. La valeur attend une r\u00e8gle de formatage selon le format d\u00e9crit dans Formatter#syntax</p> <p>Ainsi, on peut demander \u00e0 obtenir le num\u00e9ro sur 2 chiffres avec la syntaxe <code>$cal.weekOfYear($cal.date(), \"%02d\")</code>.</p>"},{"location":"libs/%24cal/_weekOfYear/#retour","title":"Retour","text":"<p>Num\u00e9ro de semaine dans l'ann\u00e9e</p>"},{"location":"libs/%24cal/_weekOfYear/#exemple","title":"Exemple","text":"<pre><code>$cal.weekOfYear( $cal.date() );\n</code></pre>"},{"location":"libs/%24cal/_year/","title":"<code>$cal.year</code>","text":""},{"location":"libs/%24cal/_year/#description","title":"Description","text":"<p>Retourne l'ann\u00e9e actuelle.</p>"},{"location":"libs/%24cal/_year/#syntaxe","title":"Syntaxe","text":"<p><code>$cal.year( [ format ] )</code></p>"},{"location":"libs/%24cal/_year/#parametres","title":"Param\u00e8tres","text":"<code>format</code> string Format de string \u00e0 retourner. La valeur attend une r\u00e8gle de formatage selon le format d\u00e9crit dans Formatter#syntax"},{"location":"libs/%24cal/_year/#retour","title":"Retour","text":"<p>Ann\u00e9e en cours</p>"},{"location":"libs/%24cal/_year/#exemple","title":"Exemple","text":"<pre><code>$cal.year();        // ann\u00e9e sur 4 chiffres\n$cal.year() % 100;  // ann\u00e9e sur 2 chiffres\n</code></pre>"},{"location":"libs/%24cipher/","title":"<code>$cipher</code>","text":"<p>Alias: <code>$crypto</code></p>"},{"location":"libs/%24cipher/_decrypt/","title":"<code>$cipher.decrypt</code>","text":""},{"location":"libs/%24cipher/_decrypt/#description","title":"Description","text":"<p>D\u00e9chiffre un texte \u00e0 l'aide d'une cl\u00e9 personnalis\u00e9e.</p>"},{"location":"libs/%24cipher/_decrypt/#syntaxe","title":"Syntaxe","text":"<p><code>$cipher.decrypt( base64CiphertextAndNonceAndSalt , password )</code></p>"},{"location":"libs/%24cipher/_decrypt/#parametres","title":"Param\u00e8tres","text":"<code>base64CiphertextAndNonceAndSalt</code> string Valeur chiffr\u00e9e contenant la donn\u00e9e, le nounce et le sel <code>password</code> string Mot de passe ou cha\u00eene contenant le mot de passe \u00e0 utiliser pour  d\u00e9chiffrement. Si non d\u00e9fini, la m\u00e9thode s'appuie sur le mot de passe  d\u00e9fini dans la config de l'application (entr\u00e9e <code>admin.cipherPassword</code>)."},{"location":"libs/%24cipher/_decrypt/#retour","title":"Retour","text":"<p>Valeur d\u00e9chiffr\u00e9e</p>"},{"location":"libs/%24cipher/_decrypt/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24cipher/_encrypt/","title":"<code>$cipher.encrypt</code>","text":""},{"location":"libs/%24cipher/_encrypt/#description","title":"Description","text":"<p>Chiffre un texte \u00e0 l'aide d'une cl\u00e9 personnalis\u00e9e.</p>"},{"location":"libs/%24cipher/_encrypt/#syntaxe","title":"Syntaxe","text":"<p><code>$cipher.encrypt( plaintext , password )</code></p>"},{"location":"libs/%24cipher/_encrypt/#parametres","title":"Param\u00e8tres","text":"<code>plaintext</code> string Texte \u00e0 chiffrer <code>password</code> string Mot de passe ou cha\u00eene contenant le mot de passe \u00e0 utiliser pour  chiffrement. Si non d\u00e9fini, la m\u00e9thode s'appuie sur le mot de passe  d\u00e9fini dans la config de l'application (entr\u00e9e <code>admin.cipherPassword</code>)."},{"location":"libs/%24cipher/_encrypt/#retour","title":"Retour","text":"<p>Valeur chiffr\u00e9e</p>"},{"location":"libs/%24cipher/_encrypt/#exemple","title":"Exemple","text":"<pre><code>$cipher.encrypt(\"mavaleur\", $sys.getEnv(\"EWT_ENCRYPT_PASSWORD\"));\n</code></pre>"},{"location":"libs/%24cipher/_genKeyPair/","title":"<code>$cipher.genKeyPair</code>","text":""},{"location":"libs/%24cipher/_genKeyPair/#description","title":"Description","text":"<p>G\u00e9n\u00e8re une paire de cl\u00e9s.</p>"},{"location":"libs/%24cipher/_genKeyPair/#syntaxe","title":"Syntaxe","text":"<p><code>$cipher.genKeyPair( [ algo [ , size ] ] )</code></p>"},{"location":"libs/%24cipher/_genKeyPair/#parametres","title":"Param\u00e8tres","text":"<code>algo</code> string Type de cl\u00e9 \u00e0 g\u00e9n\u00e9rer (par d\u00e9faut: <code>RSA</code>). Les algorithmes support\u00e9s sont <code>DiffieHellman</code>, <code>DSA</code>, <code>RSA</code>, <code>RSASSA-PSS</code> et <code>EC</code>. <code>size</code> number Taille de la cl\u00e9 (par d\u00e9faut: 4096)"},{"location":"libs/%24cipher/_genKeyPair/#retour","title":"Retour","text":"<p>Retourne un objet <code>pojo</code> de type <code>KeyPair</code> ou <code>null</code> en cas d'erreur</p>"},{"location":"libs/%24cipher/_genKeyPair/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24cipher/_hash/","title":"<code>$cipher.hash</code>","text":""},{"location":"libs/%24cipher/_hash/#description","title":"Description","text":"<p>G\u00e9n\u00e8re un hash de la valeur donn\u00e9e en param\u00e8tre.</p>"},{"location":"libs/%24cipher/_hash/#syntaxe","title":"Syntaxe","text":"<p><code>$cipher.hash( string [ , algo [ , options ] ] )</code></p>"},{"location":"libs/%24cipher/_hash/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string Valeur \u00e0 traiter <code>algo</code> string Algorithme de hashage \u00e0 utiliser (<code>MD2</code>, <code>MD5</code>, <code>SHA-1</code>, <code>SHA-256</code>, <code>SHA-384</code>, <code>SHA-512</code>); par d\u00e9faut: <code>MD5</code> <code>options</code> map <p>Options de hashage. Les options disponibles sont:</p> <code>charset</code> string Charset \u00e0 utiliser, par d\u00e9faut \"UTF-8\" <code>output</code> string Format de sortie (<code>BASE64</code>, <code>HEX</code>); par d\u00e9faut: <code>HEX</code>"},{"location":"libs/%24cipher/_hash/#retour","title":"Retour","text":"<p>Hash de la string d'entr\u00e9e ou <code>null</code> si le hash ne peut pas \u00eatre calcul\u00e9</p>"},{"location":"libs/%24cipher/_hash/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24csv/","title":"<code>$csv</code>","text":"<p>M\u00e9thodes de parsing de fichiers CSV.</p> <p>La librairie propose deux m\u00e9thodes pour le parsing de fichier. La m\u00e9thode  <code>$csv.parse</code> parcourt l'int\u00e9gralit\u00e9 d'un fichier CSV et fait  appel \u00e0 une fonction de callback pour traiter les donn\u00e9es. La m\u00e9thode  <code>$csv.nextRecord</code> quant \u00e0 elle permet de lire les  enregistrements du CSV de mani\u00e8re it\u00e9rative. C'est ce cas, c'est le script  qui pilote la lecture des enregistrements, alors que dans le cas de la  m\u00e9thode <code>$csv.parse</code> c'est le moteur qui g\u00e8re le parcourt des  enregistrements.</p> <p>Dans la version actuelle la librairie ne fournit pas de m\u00e9thode pour g\u00e9n\u00e9rer  un fichier CSV. Ce type d'op\u00e9ration peut \u00eatre r\u00e9alis\u00e9 en \u00e9ditant le fichier  en tant que texte. La m\u00e9thode <code>$file.write</code> permet par  exemple de construire un fichier CSV en y ajoutant du texte.</p>"},{"location":"libs/%24csv/_close/","title":"<code>$csv.close</code>","text":""},{"location":"libs/%24csv/_close/#description","title":"Description","text":"<p>Cl\u00f4ture un fichier CSV</p>"},{"location":"libs/%24csv/_close/#syntaxe","title":"Syntaxe","text":"<p><code>$csv.close( referenceCsv )</code></p>"},{"location":"libs/%24csv/_close/#parametres","title":"Param\u00e8tres","text":"<code>referenceCsv</code> pojo R\u00e9f\u00e9rence de CSV obtenue \u00e0 l'aide de <code>$csv.load</code>"},{"location":"libs/%24csv/_close/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la fermeture a pu se faire sans erreur, sinon <code>false</code></p>"},{"location":"libs/%24csv/_close/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24csv/_load/","title":"<code>$csv.load</code>","text":""},{"location":"libs/%24csv/_load/#description","title":"Description","text":"<p>Charge un contenu CSV (fichier ou cha\u00eene de caract\u00e8res) en vue de son parsing.</p> <p>L'objet obtenu de la m\u00e9thode doit \u00eatre cl\u00f4tur\u00e9 au moyen de la m\u00e9thode <code>$csv.close</code>.</p>"},{"location":"libs/%24csv/_load/#syntaxe","title":"Syntaxe","text":"<p><code>$csv.load( csv [ , options ] )</code></p>"},{"location":"libs/%24csv/_load/#parametres","title":"Param\u00e8tres","text":"<code>csv</code> file / string Fichier CSV ou texte contenant le CSV <code>options</code> map <p>Map d'options pour le chargement du CSV. Les options reconnues sont:</p> <code>format</code> pojo / map Format de CSV. Doit \u00eatre un objet <code>pojo</code> construit au moyen de <code>$csv.makeFormat</code> ou un map qui reprend les  m\u00eames r\u00e8gles que celles attendues par  <code>$csv.makeFormat</code> <code>charset</code> string Charset des donn\u00e9es du CSV. Si non sp\u00e9cifi\u00e9, les donn\u00e9es sont trait\u00e9es selon le charset UTF-8."},{"location":"libs/%24csv/_load/#retour","title":"Retour","text":"<p>Objet r\u00e9f\u00e9ren\u00e7ant le CSV ou <code>null</code> si le CSV n'a pas pu \u00eatre charg\u00e9.</p>"},{"location":"libs/%24csv/_load/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24csv/_makeFormat/","title":"<code>$csv.makeFormat</code>","text":""},{"location":"libs/%24csv/_makeFormat/#description","title":"Description","text":"<p>Construit un objet de description de format de CSV.</p> <p>L'objet en question est un ensemble de param\u00e8tres qui d\u00e9crivent les  principales caract\u00e9ristiques du CSV (le type de d\u00e9limiteur, le type  de retour ligne, l'existence d'une ligne d'ent\u00eate, etc.)</p> <p>La m\u00e9thode propose une s\u00e9rie de formats pr\u00e9d\u00e9finis (option <code>format</code>). Il  s'agit d'ensembles de param\u00e8tres pr\u00e9d\u00e9finis propres \u00e0 diff\u00e9rents g\u00e9n\u00e9rateurs  de CSV.</p> format delimiter escapeCharacter quote quoteMode recordSeparator ignoreEmptyLines duplicateHeaderMode skipHeaderRecord nullString trim ignoreSurroundingSpaces <code>default</code> <code>,</code> <code>\"</code> <code>\\r\\n</code> <code>true</code> <code>allow_all</code> <code>excel</code> <code>,</code> <code>\"</code> <code>\\r\\n</code> <code>false</code> <code>allow_all</code> <code>informix_unload</code> <code>,</code> <code>\\\\</code> <code>\"</code> <code>\\n</code> <code>informix_unload_csv</code> <code>,</code> <code>\"</code> <code>\\n</code> <code>mongodb_csv</code> <code>,</code> <code>\"</code> <code>\"</code> <code>all_non_null</code> <code>false</code> <code>mongodb_tsv</code> <code>\\t</code> <code>\"</code> <code>\"</code> <code>all_non_null</code> <code>false</code> <code>mysql</code> <code>\\t</code> <code>\\\\</code> <code>null</code> <code>all_non_null</code> <code>\\n</code> <code>false</code> <code>false</code> <code>\\\\N</code> <code>oracle</code> <code>,</code> <code>\\\\</code> <code>\"</code> <code>minimal</code> <code>system</code> <code>false</code> <code>\\\\N</code> <code>true</code> <code>postgresql_csv</code> <code>,</code> <code>null</code> <code>\"</code> <code>all_non_null</code> <code>\\n</code> <code>true</code> string vide <code>postgresql_tsv</code> <code>\\t</code> <code>\\\\</code> <code>null</code> <code>all_non_null</code> <code>\\n</code> <code>true</code> <code>\\\\N</code> <code>rfc4180</code> <code>,</code> <code>\"</code> <code>\\r\\n</code> <code>false</code> <code>tdf</code> <code>\\t</code> <code>\"</code> <code>\\r\\n</code> <code>true</code>"},{"location":"libs/%24csv/_makeFormat/#syntaxe","title":"Syntaxe","text":"<p><code>$csv.makeFormat( rules )</code></p>"},{"location":"libs/%24csv/_makeFormat/#parametres","title":"Param\u00e8tres","text":"<code>rules</code> map <p>Ensemble de r\u00e8gles de formatage d'un CSV. Les r\u00e8gles reconnues sont:</p> <code>format</code> <p>Format pr\u00e9d\u00e9fini. Cette option permet de sp\u00e9cfier un ensemble de param\u00e8tres pr\u00e9d\u00e9finis au moyen d'un terme unique. Les formats reconnus sont:</p> <ul> <li><code>default</code></li> <li><code>excel</code></li> <li><code>informix_unload</code></li> <li><code>informix_unload_csv</code></li> <li><code>mongodb_csv</code></li> <li><code>mongodb_tsv</code></li> <li><code>mysql</code></li> <li><code>oracle</code></li> <li><code>postgresql_csv</code></li> <li><code>postgresql_text</code></li> <li><code>rfc4180</code></li> <li><code>tdf</code></li> </ul> <p>Voir le tableau donn\u00e9 dans la description pour le d\u00e9tail des  param\u00e8tres.</p> <p>Il est possible de sp\u00e9cifier un format pr\u00e9d\u00e9fini tel que ci-dessus et  de passer des r\u00e8gles suppl\u00e9mentaires (telles que ci-dessous) pour  surcharger le format. Les r\u00e8gles explicites priment sur le format  pr\u00e9d\u00e9fini.</p> <code>allowMissingColumnNames</code> Valeur <code>true</code>/<code>false</code> qui d\u00e9finit le comportement em cas de mom de  colonne manquant. La valeur <code>true</code> autorise le nom de colonne  manquant alors que <code>false</code> provoque une exception. <code>autoFlush</code> Valeur <code>true</code>/<code>false</code> indiquant s'il faut effectuer un flush \u00e0 la fermeture. <code>commentMarker</code> D\u00e9finit le caract\u00e8re qui marque un d\u00e9but de commentaire. Doit \u00eatre  un caract\u00e8re unique. Passer <code>null</code> ou une cha\u00eene vide pour d\u00e9sactiver (c'est-\u00e0-dire pour annuler un param\u00e8tre par d\u00e9faut activ\u00e9 par un format pr\u00e9-d\u00e9fini). <code>delimiter</code> D\u00e9limiteur de colonne sous forme de <code>string</code> <code>duplicateHeaderMode</code> Indique le comportement en cas de doublon sur les noms de colonne.  Les valeurs possibles sont <code>allow_all</code>, <code>allow_empty</code>, <code>disallow</code> <code>escapeCharacter</code> Caract\u00e8re d'\u00e9chappement. Doit \u00eatre un caract\u00e8re unique. <code>headerComments</code> D\u00e9finit les commentaires d'ent\u00eate. Par exemple le fait de passer un tableau <code>[ \"Generated by Ewt\", $cal.date() ]</code> va ajouter des  commentaires avant la ligne d'ent\u00eate. <code>headers</code> Indique le nom des en\u00eates. La valeur doit \u00eatre un tableau de  <code>string</code>. <code>ignoreEmptyLines</code> Valeur <code>true</code>/<code>false</code> qui d\u00e9crit le comportement de saut de ligne  vide. La valeur <code>true</code> permet d'ignorer les lignes vides alors que  <code>false</code> convertit la ligne vide en enregistrement vide. <code>ignoreHeaderCase</code> Valeur <code>true</code>/<code>false</code> qui d\u00e9finit le comportement de l'analyseur en  mati\u00e8re de correspondance de majuscules/minuscules. Indiquer <code>true</code>  pour acc\u00e9der aux noms/valeurs, <code>false</code> pour laisser la correspondance  telle quelle. <code>ignoreSurroundingSpaces</code> Valeur <code>true</code>/<code>false</code> qui d\u00e9finit le comportement de d\u00e9coupage de  l'analyseur. Indiquer <code>true</code> pour supprimer les espaces environnants,  <code>false</code> pour laisser les espaces tels quels. <code>nullString</code> Valeur \u00e0 utiliser en remplacement de valeur null. <code>quoteCharacter</code> Caract\u00e8re de d\u00e9limitation de texte. Ne doit contenir qu'un seul caract\u00e8re. <code>quoteMode</code> Mode de cotation \u00e0 utiliser lors de la g\u00e9n\u00e9ration de CSV. Les valeurs  possibles sont <code>all</code>, <code>all_non_null</code>, <code>minimal</code>, <code>non_numeric</code>, <code>none</code>. <code>recordSeparator</code> <p>S\u00e9parateur d'enregistrements \u00e0 utiliser en sortie.</p> <p>Utiliser la valeur <code>system</code> pour indiquer d'utiliser le  s\u00e9parateur par d\u00e9faut li\u00e9 au syst\u00e8me. </p> <code>skipHeaderRecord</code> Valeur <code>true</code>/<code>false</code> indiquant d'ignorer l'ent\u00eate. <code>trailingDelimiter</code> Valeur <code>true</code>/<code>false</code> qui indique s'il faut ajouter un d\u00e9limiteur  de fin. <code>trim</code> Valeur <code>true</code>/<code>false</code> qui indique s'il faut effectuer un trim des valeurs (suppression des blancs en d\u00e9but et fin de valeur)."},{"location":"libs/%24csv/_makeFormat/#retour","title":"Retour","text":"<p>Retourne un objet <code>pojo</code> contenant les r\u00e8gles de formatage pr\u00e9d\u00e9finies.</p>"},{"location":"libs/%24csv/_makeFormat/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24csv/_nextRecord/","title":"<code>$csv.nextRecord</code>","text":""},{"location":"libs/%24csv/_nextRecord/#description","title":"Description","text":"<p>Retourne l'enregistrement suivant lu du CSV donn\u00e9 en r\u00e9f\u00e9rence.</p> <p><code>$csv.parse</code> vs <code>$csv.nextRecord</code></p> <p>Les m\u00e9thodes <code>$csv.parse</code> et  <code>$csv.nextRecord</code> permettent toutes les deux de  parcourir un CSV et d'effectuer un traitement pour chaque enregistrement. Les deux m\u00e9thodes varient quant \u00e0 l'approche pour r\u00e9aliser le  traitement.</p> <p>Le choix de l'approche appartient donc au d\u00e9veloppeur, d'autant que les  performances des deux m\u00e9thodes sont sensiblement identiques.</p>"},{"location":"libs/%24csv/_nextRecord/#syntaxe","title":"Syntaxe","text":"<p><code>$csv.nextRecord( referenceCsv )</code></p>"},{"location":"libs/%24csv/_nextRecord/#parametres","title":"Param\u00e8tres","text":"<code>referenceCsv</code> pojo R\u00e9f\u00e9rence de CSV obtenue \u00e0 l'aide de <code>$csv.load</code>"},{"location":"libs/%24csv/_nextRecord/#retour","title":"Retour","text":"<p>Retourne un tableau contenant les valeurs du record, ou <code>null</code> si le parser a atteint la fin du fichier.</p>"},{"location":"libs/%24csv/_nextRecord/#exemple","title":"Exemple","text":"<p>L'exemple ci-dessous est un code complet effectuant l'importation des  donn\u00e9es \"entr\u00e9es\" du registre f\u00e9d\u00e9ral des b\u00e2timents et des logements.</p> <p>L'id\u00e9e est de parser le CSV en it\u00e9rant sur les enregistrements (c.-\u00e0-d. les  lignes du CSV) et d'envoyer les donn\u00e9es dans une table par lots. Pour ce  faire, on construit une requ\u00eate de la forme:</p> <pre><code>insert into (col1, col2, ...) values('valA1', 'valB1', ...),('valA2', 'valB2', ...)\n</code></pre> <p>Le nombre de lignes enregistr\u00e9es \u00e0 la fois est d\u00e9termin\u00e9 par la constante  <code>maxCounter</code>. Cette variable joue un grand r\u00f4le sur les performances car  elle influe sur le nombre de requ\u00eates envoy\u00e9es \u00e0 la base de donn\u00e9es. Elle  est fix\u00e9e \u00e0 250 dans l'exemple ci-dessous. Lors des tests, cela a permis  d'importer un peu plus de 15'000 enregistrement \u00e0 la seconde. Dans les m\u00eames  conditions, une valeur de 500 permet d'importer environ 18'000  enregistrement par seconde.</p> <p>La solution propos\u00e9e ci-dessous n'est toutefois pas optimale. Une importation  par batch serait plus adapt\u00e9 \u00e0 ce type de traitement.</p> <pre><code>// pr\u00e9paration de la table de destination\n$sql.update(\"create table tmpCsv(EGID varchar(9),\n                                 EDID varchar(2),\n                                 EGAID varchar(9),\n                                 DEINR varchar(12),\n                                 ESID varchar(8),\n                                 STRNAME varchar(120),\n                                 STRNAMK varchar(48),\n                                 STRINDX varchar(6),\n                                 STRSP varchar(4),\n                                 STROFFIZIEL varchar(1),\n                                 DPLZ4 varchar(4),\n                                 DPLZZ varchar(2),\n                                 DPLZNAME varchar(80),\n                                 DKODE varchar(11),\n                                 DKODN varchar(11),\n                                 DOFFADR varchar(1),\n                                 DEXPDAT varchar(10))\"::T);\n$sql.update(\"delete from tmpCsv\");  // note: SQLite ne supporte pas \"truncate\"\n\n// nombre max de records envoy\u00e9s en DB \u00e0 la fois\nconst maxCounter = 250;\n\n// prototype de requ\u00eate d'insertion\nconst sqlProto = \"insert into tmpCsv(EGID,EDID,EGAID,DEINR,ESID,STRNAME,STRNAMK,STRINDX,STRSP,STROFFIZIEL,DPLZ4,DPLZZ,DPLZNAME,DKODE,DKODN,DOFFADR,DEXPDAT) values \";\n\n// fonction d'\u00e9criture des donn\u00e9es en DB\nfunction flushData(data) {\n    $sql.insert(sqlProto &amp; data);\n}\n\n// chargement du CSV\nvar src = $file.load(\"C:/Temp/ch/eingang_entree_entrata.csv\");\nvar csv = $csv.load(src, { format: { format: \"tdf\", skipHeaderRecord: true } });\n\ntry {\n    var nrows = 0;\n    var counter = maxCounter;\n    var sqlData = \"\";   // lot de valeurs \u00e0 passer \u00e0 la requ\u00eate INSERT\n\n    var beg = $cal.timestamp(); // juste pour calculer le temps de traitement total\n\n    // d\u00e9but des it\u00e9rations\n    while (true) {\n        var row = $csv.nextRecord(csv);\n        if (row != null) {\n            // string qui aura la forme \",('valA1','valB1',...)\"\n            var values = \"\";\n            for (var col : row) {\n                values &amp;= \",'${col::Q}'\";\n            }\n\n            // on ajoute les valeurs \u00e0 notre lot de values\n            sqlData &amp;= \",(\" &amp; $string.substring(values, 1) &amp; \")\";\n\n            // on contr\u00f4le s'il y a lieu de faire un flush\n            if (--counter == 0) {\n                flushData($string.substring(sqlData, 1));  // on skip la 1re virgule\n                counter = maxCounter;   // reset du compteur\n                sqlData = \"\";           // reset du lot de values\n            }\n\n            // comptage de ligne et affichage d'un log tous les 10'000 records\n            if (++nrows % 10000 == 0) $logger.info(nrows);\n        }\n        else {\n            // fin de fichier\n            break;\n        }\n    }\n\n    // on flush le solde de data\n    if (sqlData != \"\") {\n        flushData($string.substring(sqlData, 1));\n    }\n\n    $logger.info(\"Duration: \" &amp; $cal.diff(beg, $cal.timestamp());\n}\nfinally {\n    // fermeture du parser\n    $csv.close(csv);\n}\n</code></pre> <p>Voir \u00e9galement l'exemple de la m\u00e9thode <code>$csv.parse</code> qui r\u00e9alise  le m\u00eame traitement, mais de fa\u00e7on diff\u00e9rente. </p>"},{"location":"libs/%24csv/_parse/","title":"<code>$csv.parse</code>","text":""},{"location":"libs/%24csv/_parse/#description","title":"Description","text":"<p>Parse un fichier CSV et appelle une fonction de callback pour chaque  enregistrement lu.</p> <p><code>$csv.parse</code> vs <code>$csv.nextRecord</code></p> <p>Les m\u00e9thodes <code>$csv.parse</code> et  <code>$csv.nextRecord</code> permettent toutes les deux de  parcourir un CSV et d'effectuer un traitement pour chaque enregistrement. Les deux m\u00e9thodes varient quant \u00e0 l'approche pour r\u00e9aliser le  traitement.</p> <p>Le choix de l'approche appartient donc au d\u00e9veloppeur, d'autant que les  performances des deux m\u00e9thodes sont sensiblement identiques.</p>"},{"location":"libs/%24csv/_parse/#syntaxe","title":"Syntaxe","text":"<p><code>$csv.parse( csv , callback [ , options ] )</code></p>"},{"location":"libs/%24csv/_parse/#parametres","title":"Param\u00e8tres","text":"<code>csv</code> pojo <p>Fichier CSV ou texte contenant le CSV.</p> <p>Peut \u00e9galement \u00eatre une r\u00e9f\u00e9rence de CSV obtenue via  <code>$csv.load</code>. Attention toutefois: si le script utilise une  r\u00e9f\u00e9rence de CSV, il a la responsabilit\u00e9 de la fermer correctement \u00e0  l'aide de <code>$csv.close</code>. Il est recommand\u00e9 dans ce cas  d'effectuer le <code>$csv.close</code> dans clause <code>finally</code>.</p> <code>callback</code> function <p>Fonction de callback \u00e0 appeler pour chaque enregistrement lu du CSV. La fonction de callback re\u00e7oit un tableau contenant les valeurs du  record ainsi que le num\u00e9ro du record. La fonction de callback doit donc  \u00eatre d\u00e9clar\u00e9e ainsi:</p> <pre><code>function(data, index) { ... }\n</code></pre> <p>Si la fonction de callback retourne la valeur <code>false</code>, cela met fin au  traitement du parseur.</p> <code>options</code> map <p>Map d'options pour le chargement du CSV. Les options reconnues sont:</p> <code>format</code> pojo / map Format de CSV. Doit \u00eatre un objet <code>pojo</code> construit au moyen de <code>$csv.makeFormat</code> ou un map qui reprend les  m\u00eames r\u00e8gles que celles attendues par  <code>$csv.makeFormat</code> <code>charset</code> string Charset des donn\u00e9es du CSV. Si non sp\u00e9cifi\u00e9, les donn\u00e9es sont trait\u00e9es selon le charset UTF-8."},{"location":"libs/%24csv/_parse/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le parsing a pu se faire en int\u00e9gralit\u00e9 et sans erreur,  sinon <code>false</code></p>"},{"location":"libs/%24csv/_parse/#exemple","title":"Exemple","text":"<p>L'exemple ci-dessous effectue le m\u00eame traitement que celui donn\u00e9 pour la  m\u00e9thode <code>$csv.nextRecord</code>.</p> <p>Les performances de cette variante sont sensiblement identiques \u00e0 la version  qui utilise <code>$csv.nextRecord</code>.</p> <pre><code>// pr\u00e9paration de la table de destination\n$sql.update(\"create table tmpCsv(EGID varchar(9),\n                                 EDID varchar(2),\n                                 EGAID varchar(9),\n                                 DEINR varchar(12),\n                                 ESID varchar(8),\n                                 STRNAME varchar(120),\n                                 STRNAMK varchar(48),\n                                 STRINDX varchar(6),\n                                 STRSP varchar(4),\n                                 STROFFIZIEL varchar(1),\n                                 DPLZ4 varchar(4),\n                                 DPLZZ varchar(2),\n                                 DPLZNAME varchar(80),\n                                 DKODE varchar(11),\n                                 DKODN varchar(11),\n                                 DOFFADR varchar(1),\n                                 DEXPDAT varchar(10))\"::T);\n$sql.update(\"delete from tmpCsv\");  // note: SQLite ne supporte pas \"truncate\"\n\n// nombre max de records envoy\u00e9s en DB \u00e0 la fois\nconst maxCounter = 250;\n\n// prototype de requ\u00eate d'insertion\nconst sqlProto = \"insert into tmpCsv(EGID,EDID,EGAID,DEINR,ESID,STRNAME,STRNAMK,STRINDX,STRSP,STROFFIZIEL,DPLZ4,DPLZZ,DPLZNAME,DKODE,DKODN,DOFFADR,DEXPDAT) values \";\n\n// fonction d'\u00e9criture des donn\u00e9es en DB\nfunction flushData(data) {\n    $sql.insert(sqlProto &amp; data);\n}\n\n// chargement du CSV\nvar src = $file.load(\"C:/Temp/ch/eingang_entree_entrata.csv\");\nvar sqlData = \"\";   // lot de valeurs \u00e0 passer \u00e0 la requ\u00eate INSERT\n\nvar beg = $cal.timestamp(); // juste pour calculer le temps de traitement total\n\n$csv.parse(src,\n    function(row, idx) {\n        var values = \"\";\n        for (var col : row) {\n            values &amp;= \",'${col::Q}'\";\n        }\n\n        // on ajoute les valeurs \u00e0 notre lot de values\n        sqlData &amp;= \",(\" &amp; $string.substring(values, 1) &amp; \")\";\n\n        // on contr\u00f4le s'il y a lieu de faire un flush\n        if (idx % maxCounter == 0) {\n            flushData($string.substring(sqlData, 1));  // on skip la 1re virgule\n            sqlData = \"\";           // reset du lot de values\n        }\n\n        // comptage de ligne et affichage d'un log tous les 10'000 records\n        if (idx % 10000 == 0) $logger.info(idx);\n    },\n    {\n        format: { format: \"tdf\", skipHeaderRecord: true }\n    });\n\n// on flush le solde de data\nif (sqlData != \"\") {\n    flushData($string.substring(sqlData, 1));\n}\n\n$logger.info(\"Duration: \" &amp; $cal.diff(beg, $cal.timestamp()));\n</code></pre>"},{"location":"libs/%24data/","title":"<code>$data</code>","text":"<p>Ensemble de m\u00e9thodes pour la manipulation de donn\u00e9es de dossier.</p>"},{"location":"libs/%24data/_flush/","title":"<code>$data.flush</code>","text":""},{"location":"libs/%24data/_flush/#description","title":"Description","text":"<p>Force l'enregistrement des donn\u00e9es du dossier en base de donn\u00e9es, pour  tous les dossiers actuellement ouverts dans la session.</p>"},{"location":"libs/%24data/_flush/#syntaxe","title":"Syntaxe","text":"<p><code>$data.flush( [ options ] )</code></p>"},{"location":"libs/%24data/_flush/#parametres","title":"Param\u00e8tres","text":"<code>context</code> map <p>Map d'options. Les options reconnues sont:</p> <code>index</code> Flag <code>true</code>/<code>false</code> indiquant si le dossier doit \u00eatre mis \u00e0 jour  au niveau de l'index de recherche. Par d\u00e9faut la valeur est <code>false</code>."},{"location":"libs/%24data/_flush/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code></p>"},{"location":"libs/%24data/_flush/#exemple","title":"Exemple","text":"<pre><code>$data.flush();\n</code></pre>"},{"location":"libs/%24data/_get/","title":"<code>$data.get</code>","text":"<p>Alias: <code>$data.getData</code></p>"},{"location":"libs/%24data/_get/#description","title":"Description","text":"<p>Retourne la valeur d'un champ d'un dossier ouvert. \u00c0 noter que l'appel  de m\u00e9thode <code>$data.get(\"monchamp\")</code> donne le m\u00eame de r\u00e9sultat que  <code>${data:monchamp}</code> ou <code>#monchamp</code>.</p>"},{"location":"libs/%24data/_get/#syntaxe","title":"Syntaxe","text":"<p><code>$data.get( context )</code></p>"},{"location":"libs/%24data/_get/#parametres","title":"Param\u00e8tres","text":"<code>context</code> string / map Expression de contexte permettant d'identifier le champ \u00e0 r\u00e9cup\u00e9rer. Si le contexte d\u00e9signe un dossier, l'expression de contexte peut se limiter au groupe, \u00e0 son tupleId et au nom de champ. Si le champ fait partir du groupe principal, on pourra se limiter au nom de champ. Par contre si aucun contexte n'est d\u00e9fini, l'expression devrait \u00eatre suffisamment pr\u00e9cise pour permettre d'identifier le champ \u00e0 r\u00e9cup\u00e9rer."},{"location":"libs/%24data/_get/#retour","title":"Retour","text":"<p>Valeur du champ</p>"},{"location":"libs/%24data/_get/#exemple","title":"Exemple","text":"<pre><code>$data.get(\"personne[12].base[12].nom\");\n$data.get({ modelName: \"personne\",\n            docId: 12,\n            groupName: \"base\",\n            tupleId: 12,\n            fieldName: \"nom\");\n</code></pre>"},{"location":"libs/%24data/_reload/","title":"<code>$data.reload</code>","text":""},{"location":"libs/%24data/_reload/#description","title":"Description","text":"<p>Force le rechargement des donn\u00e9es du dossier \u00e0 partir de la base de donn\u00e9es.</p>"},{"location":"libs/%24data/_reload/#syntaxe","title":"Syntaxe","text":"<p><code>$data.reload( [ context ] )</code></p>"},{"location":"libs/%24data/_reload/#parametres","title":"Param\u00e8tres","text":"<code>context</code> string Contexte de dossier pour lequel on souhaite effectuer le rechargement. Si le context est <code>null</code>, la m\u00e9thode s'applique au dossier courant."},{"location":"libs/%24data/_reload/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le chargement a pu se faire, sinon <code>false</code></p>"},{"location":"libs/%24data/_reload/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24data/_set/","title":"<code>$data.set</code>","text":"<p>Alias: <code>$data.setData</code></p>"},{"location":"libs/%24data/_set/#description","title":"Description","text":"<p>Enregistre la valeur d'un champ d'un dossier ouvert.</p>"},{"location":"libs/%24data/_set/#syntaxe","title":"Syntaxe","text":"<p><code>$data.set( context , value [ , options ] )</code></p>"},{"location":"libs/%24data/_set/#parametres","title":"Param\u00e8tres","text":"<code>context</code> string / map Expression de contexte permettant d'identifier le champ \u00e0 mettre \u00e0 jour <code>value</code> any Valeur \u00e0 enregistrer <code>options</code> map <p>Map d'options relatives \u00e0 la modification de champ.  Les options reconnues sont:</p> <code>ignoreValidation</code> boolean Flag <code>true</code>/<code>false</code>  demandant de ne pas effectuer les contr\u00f4les de  validation de la valeur, c'est-\u00e0-dire de ne pas appliquer les  contr\u00f4les de validation d\u00e9finis dans la descript pour le champ. Par  d\u00e9faut ce flag est <code>false</code>.  <code>checkPolicies</code> boolean Flag indiquant de v\u00e9rifier les policies avant traitement. Par d\u00e9faut  le flag est \u00e0 <code>false</code>. Est sans effet si l'application n'utilise pas  de policies."},{"location":"libs/%24data/_set/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la mise \u00e0 jour a r\u00e9ussi, sinon <code>false</code></p>"},{"location":"libs/%24data/_set/#exemple","title":"Exemple","text":"<p>Exemple simple de mise \u00e0 jour d'un champ.</p> <pre><code>$data.set(\"personne[12].base[12].nom\", \"Dupont\");\n</code></pre> <p>Illustration du comportement lorsque l'on tente d'inscrire une valeur  inappropri\u00e9e. Dans l'exemple ci-dessous, le champ \"code\" attend une  valeur textuelle de 5 caract\u00e8res max, mais nous allons tenter de lui  passe une valeur plus longue. Note: L'exemple par du principe que le contexte courant est  celui du dossier contenant le champ, raison pour laquelle l'expression de  contexte qui d\u00e9signe le champ ne comporte pas d'\u00e9l\u00e9ment relatif au mod\u00e8le et  au groupe.</p> <pre><code>$data.set(\"code\", \"abcdefghijkl\");\n$logger.info(#code);        // -&gt; retourne null\n</code></pre> <p>L'expression <code>#code</code> retourne <code>null</code> car la valeur n'est pas adapt\u00e9e au  champ et ne peut pas y \u00eatre stock\u00e9e. Toutefois, la valeur \"abcdefghijkl\"  n'est pas simplement ignor\u00e9e. Elle est plac\u00e9e dans un buffer en m\u00e9moire et  affich\u00e9e \u00e0 l'\u00e9cran en indiquant qu'elle doit \u00eatre corrig\u00e9e. Ici le moteur  applique une m\u00e9canique qui est \u00e9galement en place pour les valeurs provenant  d'un formulaire HTML : une valeur inadapt\u00e9e n'est pas simplement ignor\u00e9e.  Elle est certes non enregistr\u00e9e en base de donn\u00e9es (cela provoquerait une  erreur SQL ou un troncage de valeur), mais elle reste pr\u00e9sente en m\u00e9moire  pour permettre \u00e0 l'utilisateur de la corriger.</p> <p>Il est possible de passer outre le contr\u00f4le de validit\u00e9 de la valeur au  moyen de l'option <code>ignoreValidation</code>.</p> <pre><code>$data.set(\"code\", \"abcdefghijkl\", { ignoreValidation: true });\n$logger.info(#code);        // -&gt; retourne \"abcdefghijkl\"\n</code></pre>"},{"location":"libs/%24desc/","title":"<code>$desc</code>","text":"<p>Alias: <code>$descript</code></p>"},{"location":"libs/%24desc/_descModel/","title":"<code>$desc.descModel</code>","text":""},{"location":"libs/%24desc/_descModel/#description","title":"Description","text":"<p>Retourne une table d\u00e9crivant les mod\u00e8les d\u00e9finis dans la descript.</p>"},{"location":"libs/%24desc/_descModel/#syntaxe","title":"Syntaxe","text":"<p><code>$desc.descModel( modelName )</code></p>"},{"location":"libs/%24desc/_descModel/#parametres","title":"Param\u00e8tres","text":"<code>modelName</code> string Nom du mod\u00e8le \u00e0 d\u00e9tailler"},{"location":"libs/%24desc/_descModel/#retour","title":"Retour","text":"<p>Map contenant les propri\u00e9t\u00e9s suivantes:</p> <ul> <li><code>name</code> : nom du mod\u00e8le,</li> <li><code>group</code> : nom du groupe principal,</li> <li><code>field</code> : nom du champ principal</li> <li><code>table</code> : nom de la table principale</li> </ul>"},{"location":"libs/%24desc/_descModel/#exemple","title":"Exemple","text":"<pre><code>$desc.descModel( \"personne\" );\n</code></pre>"},{"location":"libs/%24desc/_listModels/","title":"<code>$desc.listModels</code>","text":""},{"location":"libs/%24desc/_listModels/#description","title":"Description","text":"<p>Retourne une table d\u00e9crivant les mod\u00e8les d\u00e9finis dans la descript.</p>"},{"location":"libs/%24desc/_listModels/#syntaxe","title":"Syntaxe","text":"<p><code>$desc.listModels()</code></p>"},{"location":"libs/%24desc/_listModels/#retour","title":"Retour","text":"<p>Tableau contenant des map ayant les \u00e9l\u00e9ments suivants:</p> <ul> <li><code>name</code> : nom du mod\u00e8le,</li> <li><code>group</code> : nom du groupe principal,</li> <li><code>field</code> : nom du champ principal</li> <li><code>table</code> : nom de la table principale</li> </ul>"},{"location":"libs/%24desc/_listModels/#exemple","title":"Exemple","text":"<pre><code>$desc.listModels();\n</code></pre>"},{"location":"libs/%24doc/","title":"<code>$doc</code>","text":"<p>Alias: <code>$document</code></p> <p>Librairie g\u00e9rant des op\u00e9rations sur les dossiers. Pour les op\u00e9rations sur les donn\u00e9es, se r\u00e9f\u00e9rer \u00e0 <code>$data</code>.</p>"},{"location":"libs/%24doc/_addTuple/","title":"<code>$doc.addTuple</code>","text":""},{"location":"libs/%24doc/_addTuple/#description","title":"Description","text":"<p>Ajoute un tuple sur le dossier</p>"},{"location":"libs/%24doc/_addTuple/#syntaxe","title":"Syntaxe","text":"<p><code>$doc.addTuple( context [ , defvals [ , options ] ] )</code></p>"},{"location":"libs/%24doc/_addTuple/#parametres","title":"Param\u00e8tres","text":"<code>context</code> string / map <p>Object d\u00e9crivant le contexte du tuple \u00e0 cr\u00e9er (doit contenir le mod\u00e8le,  le docId et le groupe auquel on souhaite ajouter un tuple). Le param\u00e8tre  peut d\u00e9signer soit un contexte (exprim\u00e9 en tant que string en clair,  p.ex. <code>\"listeArticle[123].article\"</code> ou sous forme de uuid) ou un map  d\u00e9crivant le contexte. Dans ce cas, le map doit a minima contenir une valeur pour les propri\u00e9t\u00e9s <code>modelName</code>, <code>docId</code> et <code>groupName</code>,  p.ex:</p> <pre><code>{ modelName: 'listeArticle', docId: 123, groupName: 'article' }`\n</code></pre> <code>defvals</code> map Map d\u00e9crivant les valeurs par d\u00e9faut \u00e0 assigner au nouveau tuple. Le  map doit contenir des paires champ/valeur \u00e0 reprendre dans le tuple <code>options</code> map <p>Map d'options. Les options reconnues sont:</p> <code>ignorePolicies</code> boolean Flag indiquant de ne pas tenir compte des policies lors du traitement.  Par d\u00e9faut le flag est \u00e0 <code>false</code>, pour autant que l'application  utilise des policies; sinon il est <code>true</code>."},{"location":"libs/%24doc/_addTuple/#retour","title":"Retour","text":"<p>La m\u00e9thode retourne le contexte d\u00e9crivant le nouveau tuple (sous forme de  map), ou <code>null</code> si le tuple n'a pas pu \u00eatre cr\u00e9\u00e9.</p>"},{"location":"libs/%24doc/_addTuple/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24doc/_close/","title":"<code>$doc.close</code>","text":""},{"location":"libs/%24doc/_close/#description","title":"Description","text":"<p>Ferme un dossier et force l'enregistrement des donn\u00e9es en base de donn\u00e9es.  Le dossier ferm\u00e9 ne sera plus affich\u00e9 au refresh de l'interface.</p>"},{"location":"libs/%24doc/_close/#syntaxe","title":"Syntaxe","text":"<p><code>$doc.close( context [ , options ] )</code></p>"},{"location":"libs/%24doc/_close/#parametres","title":"Param\u00e8tres","text":"<code>context</code> string / map Object d\u00e9crivant le contexte. Le param\u00e8tre peut d\u00e9signer soit un contexte (exprim\u00e9 en tant que string en clair, p.ex. <code>\"vendeur[123]\"</code> ou sous  forme de uuid) ou un map d\u00e9crivant le contexte. Dans ce cas, le map doit  a minima contenir une valeur pour les propri\u00e9t\u00e9s <code>modelName</code> et <code>docId</code>. <code>options</code> map <p>Map d'options relatives \u00e0 l'ouverture de dossier. Les options reconnues sont:</p> <code>updateContext</code> boolean Flag <code>true</code>/<code>false</code> indiquant si la m\u00e9thode doit mettre \u00e0 jour le  contexte avec le dossier courant. Si <code>true</code>, le contexte est mis \u00e0  jour, pour autant que le dossier peut \u00eatre ferm\u00e9. L'option est <code>true</code>  par d\u00e9faut. <code>flush</code> boolean Flag <code>true</code>/<code>false</code> indiquant si les donn\u00e9es doivent \u00eatre flush\u00e9es en DB avant la fermeture. Le flag est activ\u00e9 par d\u00e9faut. <code>ignorePolicies</code> boolean Flag indiquant de ne pas tenir compte des policies lors du traitement.  Par d\u00e9faut le flag est \u00e0 <code>false</code>, pour autant que l'application utilise  des policies; sinon il est <code>true</code>."},{"location":"libs/%24doc/_close/#retour","title":"Retour","text":"<p>La m\u00e9thode retourne la valeur <code>true</code> si le dossier a pu \u00eatre ferm\u00e9  correctement, ou <code>false</code> si le dossier est d\u00e9j\u00e0 ferm\u00e9.</p>"},{"location":"libs/%24doc/_close/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24doc/_closeAll/","title":"<code>$doc.closeAll</code>","text":""},{"location":"libs/%24doc/_closeAll/#description","title":"Description","text":"<p>Ferme tous les dossiers ouverts dans la session, en for\u00e7ant \u00e0 chaque fois  l'enregistrement des donn\u00e9es en base de donn\u00e9es.</p> <p>Les dossiers ferm\u00e9s ne seront plus affich\u00e9s au refresh de l'interface.</p>"},{"location":"libs/%24doc/_closeAll/#syntaxe","title":"Syntaxe","text":"<p><code>$doc.closeAll( [ options ] )</code></p>"},{"location":"libs/%24doc/_closeAll/#parametres","title":"Param\u00e8tres","text":"<code>options</code> map <p>Map d'options relatives \u00e0 l'ouverture de dossier. Les options reconnues sont:</p> <code>updateContext</code> boolean Flag <code>true</code>/<code>false</code> indiquant si la m\u00e9thode doit mettre \u00e0 jour le  contexte avec le dossier courant. Si <code>true</code>, le contexte est mis \u00e0  jour, pour autant que le dossier peut \u00eatre ferm\u00e9. L'option est <code>true</code>  par d\u00e9faut. <code>flush</code> boolean Flag <code>true</code>/<code>false</code> indiquant si les donn\u00e9es doivent \u00eatre flush\u00e9es  en DB avant la fermeture. Par d\u00e9faut, la valeur du flag d\u00e9pend des  infos d'autoflush d\u00e9finies pour le mod\u00e8le de dossier. <code>ignorePolicies</code> boolean <p>Flag indiquant de ne pas tenir compte des policies lors du traitement.  Par d\u00e9faut, le flag d\u00e9pend du mode de gestion des dossiers: en mode  \"multi\" ou \"cross\" il est \u00e0 <code>false</code> et en mode \"single\" il est \u00e0  <code>true</code> (une description des diff\u00e9rents modes est donn\u00e9e dans le  chapitre documentMode).</p> <p>Il est \u00e9galement par d\u00e9faut \u00e0 <code>true</code> si l'application n'a pas de  policies. </p>"},{"location":"libs/%24doc/_closeAll/#retour","title":"Retour","text":"<p>La m\u00e9thode retourne <code>true</code> si, apr\u00e8s ex\u00e9cution, il n'y a plus de dossier  ouvert, sinon <code>false</code>.</p>"},{"location":"libs/%24doc/_closeAll/#exemple","title":"Exemple","text":"<pre><code>$doc.closeAll();\n</code></pre>"},{"location":"libs/%24doc/_create/","title":"<code>$doc.create</code>","text":""},{"location":"libs/%24doc/_create/#description","title":"Description","text":"<p>Cr\u00e9e un dossier du mod\u00e8le indiqu\u00e9.</p>"},{"location":"libs/%24doc/_create/#syntaxe","title":"Syntaxe","text":"<p><code>$doc.create( modelName [ , options ] )</code></p>"},{"location":"libs/%24doc/_create/#parametres","title":"Param\u00e8tres","text":"<code>modelName</code> string Nom du mod\u00e8le de dossier \u00e0 cr\u00e9er <code>options</code> map <p>Map d'options relatives \u00e0 l'ouverture de dossier. Les options  reconnues sont:</p> <code>updateContext</code> boolean Flag <code>true</code>/<code>false</code> indiquant si la m\u00e9thode doit mettre \u00e0 jour le  contexte avec le dossier courant. Si <code>true</code>, le contexte est mis \u00e0  jour, pour autant que le dossier peut \u00eatre cr\u00e9\u00e9. L'option est <code>true</code>  par d\u00e9faut. <code>ignorePolicies</code> boolean <p>Flag indiquant de ne pas tenir compte des policies lors du traitement.  Par d\u00e9faut le flag est \u00e0 <code>false</code>, pour autant que l'application utilise  des policies; sinon il est <code>true</code>.</p> <p>Lorsque le flag est <code>false</code>, le moteur \u00e9value les  policies \u00e0 la cr\u00e9ation. Si vous devez effectuer un traitement de masse,  l'\u00e9valuation des policies peut avoir un impact sur les performances.  Il peut donc dans ce cas \u00eatre recommand\u00e9 d'activer le flag.</p>"},{"location":"libs/%24doc/_create/#retour","title":"Retour","text":"<p>Le contexte d\u00e9crivant le nouveau dossier, sous forme de map</p>"},{"location":"libs/%24doc/_create/#exemple","title":"Exemple","text":"<pre><code>$doc.create( \"vendeur\", { updateContext: false, ignorePolicies: true } );\n</code></pre>"},{"location":"libs/%24doc/_delTuple/","title":"<code>$doc.delTuple</code>","text":""},{"location":"libs/%24doc/_delTuple/#description","title":"Description","text":"<p>Supprime un tuple du dossier</p>"},{"location":"libs/%24doc/_delTuple/#syntaxe","title":"Syntaxe","text":"<p><code>$doc.delTuple( context [ , options ] )</code></p>"},{"location":"libs/%24doc/_delTuple/#parametres","title":"Param\u00e8tres","text":"<code>context</code> string / map Object d\u00e9crivant le contexte du tuple \u00e0 supprimer. Le param\u00e8tre peut  d\u00e9signer soit un contexte (exprim\u00e9 en tant que string en clair, p.ex.  <code>\"listeArticle[123].article\"</code> ou sous forme de uuid) ou un map d\u00e9crivant  le contexte. Dans ce cas, le map doit a minima contenir une valeur pour  les propri\u00e9t\u00e9s <code>modelName</code>, <code>docId</code>, <code>groupName</code> et <code>tupleId</code>. <code>options</code> map <p>Map d'options. Les options reconnues sont:</p> <code>ignorePolicies</code> boolean Flag indiquant de ne pas tenir compte des policies lors du traitement.  Par d\u00e9faut le flag est \u00e0 <code>false</code>, pour autant que l'application utilise  des policies; sinon il est <code>true</code>."},{"location":"libs/%24doc/_delTuple/#retour","title":"Retour","text":"<p>...</p>"},{"location":"libs/%24doc/_delTuple/#exemple","title":"Exemple","text":"<pre><code>$doc.delTuple(...)\n</code></pre>"},{"location":"libs/%24doc/_delete/","title":"<code>$doc.delete</code>","text":""},{"location":"libs/%24doc/_delete/#description","title":"Description","text":"<p>Ferme un dossier et supprime celui-ci de la base de donn\u00e9es. La m\u00e9thode g\u00e8re  autant les dossiers ouverts en m\u00e9moire que ceux qui ne sont pas ouverts en  m\u00e9moire. Dans le cas o\u00f9 un dossier n'est pas ouvert, la m\u00e9thode se charge de  supprimer le dossier directement au niveau de la base de donn\u00e9es.</p>"},{"location":"libs/%24doc/_delete/#syntaxe","title":"Syntaxe","text":"<p><code>$doc.delete( context [ , options ] )</code></p>"},{"location":"libs/%24doc/_delete/#parametres","title":"Param\u00e8tres","text":"<code>context</code> string / map Object d\u00e9crivant le contexte, ou tableau d'objets d\u00e9crivant le contexte  de dossier \u00e0 supprimer. Le param\u00e8tre peut \u00eatre soit une valeur unique,  soit un tableau de valeurs. La ou les valeurs peuvent d\u00e9signer soit un0 contexte (exprim\u00e9 en tant que string en clair, p.ex. <code>\"vendeur[123]\"</code> ou  sous forme de uuid) ou un map d\u00e9crivant le contexte. Dans ce cas, le map  doit a minima contenir une valeur pour les propri\u00e9t\u00e9s <code>modelName</code> et  <code>docId</code>. Dans le cas o\u00f9 le param\u00e8tre est un tableau, ce dernier peut  contenir soit des contextes sous forme de string, soit sous forme de  map, soit un m\u00e9lange des deux. <code>options</code> map <p>Map d'options. Les options reconnues sont:</p> <code>ignorePolicies</code> boolean Flag indiquant de ne pas tenir compte des policies lors du traitement.  Par d\u00e9faut le flag est \u00e0 <code>false</code>, pour autant que l'application  utilise des policies; sinon il est <code>true</code>."},{"location":"libs/%24doc/_delete/#retour","title":"Retour","text":"<p>La m\u00e9thode retourne le nombre de dossiers supprim\u00e9s.</p>"},{"location":"libs/%24doc/_delete/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24doc/_fireStateTransition/","title":"<code>$doc.fireStateTransition</code>","text":""},{"location":"libs/%24doc/_fireStateTransition/#description","title":"Description","text":"<p>D\u00e9clenche une transition d'\u00e9tat</p>"},{"location":"libs/%24doc/_fireStateTransition/#syntaxe","title":"Syntaxe","text":"<p><code>$doc.fireStateTransition( context , transition )</code></p>"},{"location":"libs/%24doc/_fireStateTransition/#parametres","title":"Param\u00e8tres","text":"<code>context</code> string / map Object d\u00e9crivant le contexte du dossier \u00e0 traiter. Le param\u00e8tre peut d\u00e9signer soit un contexte (exprim\u00e9 en tant que string en clair, p.ex. <code>\"listeArticle[123]\"</code> ou sous forme de uuid) ou un map d\u00e9crivant le contexte. Dans ce cas, le map doit a minima contenir une valeur pour les entr\u00e9es <code>modelName</code> et <code>docId</code>. <code>transition</code> string Nom de la transition \u00e0 d\u00e9clencher"},{"location":"libs/%24doc/_fireStateTransition/#retour","title":"Retour","text":"<p>Retourne le nom du nouvel \u00e9tat ou <code>null</code> en cas d'erreur.</p>"},{"location":"libs/%24doc/_fireStateTransition/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24doc/_flush/","title":"<code>$doc.flush</code>","text":""},{"location":"libs/%24doc/_flush/#description","title":"Description","text":"<p>Flush les donn\u00e9es du dossier en base de donn\u00e9es.</p>"},{"location":"libs/%24doc/_flush/#syntaxe","title":"Syntaxe","text":"<p><code>$doc.flush( context [ , options ] )</code></p>"},{"location":"libs/%24doc/_flush/#parametres","title":"Param\u00e8tres","text":"<code>context</code> string / map Object d\u00e9crivant le contexte. Le param\u00e8tre peut d\u00e9signer soit un  contexte (exprim\u00e9 en tant que string en clair, p.ex. <code>\"vendeur[123]\"</code>  ou sous forme de uuid) ou un map d\u00e9crivant le contexte. Dans ce cas,  le map doit a minima contenir une valeur pour les entr\u00e9es <code>modelName</code>  et <code>docId</code>. <code>context</code> map <p>Map d'options. Les options reconnues sont:</p> <code>index</code> Flag <code>true</code>/<code>false</code> indiquant si le dossier doit \u00eatre mis \u00e0 jour  au niveau de l'index de recherche. Par d\u00e9faut la valeur est <code>false</code>."},{"location":"libs/%24doc/_flush/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le contexte est valide et r\u00e9f\u00e9rence un dossier  existant et ouvert, sinon <code>false</code>.</p>"},{"location":"libs/%24doc/_flush/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24doc/_getPermissions/","title":"<code>$doc.getPermissions</code>","text":""},{"location":"libs/%24doc/_getPermissions/#description","title":"Description","text":"<p>Retourne une map contenant les droits actuels sur le dossier.</p> <p>Important</p> <p>Dans la version actuelle, ces droits ne d\u00e9pendent que des policies et non du statut.</p>"},{"location":"libs/%24doc/_getPermissions/#syntaxe","title":"Syntaxe","text":"<p><code>$doc.getPermissions( context [ , options ] )</code></p>"},{"location":"libs/%24doc/_getPermissions/#parametres","title":"Param\u00e8tres","text":"<code>context</code> string / map Objet d\u00e9crivant l'\u00e9l\u00e9ment pour lequel on souhaite obtenir les droits. Le param\u00e8tre peut d\u00e9signer soit un contexte (exprim\u00e9 en tant que string en clair ou sous forme de uuid) ou un map d\u00e9crivant le contexte. <code>options</code> map <p>Map d'options. Les options reconnues sont:</p> <code>refreshPolicies</code> boolean Valeur <code>true</code> ou <code>false</code>indiquant si un re-calcul des policies pour  le dossier doit \u00eatre forc\u00e9. Par d\u00e9faut le re-calcul est d\u00e9sactiv\u00e9."},{"location":"libs/%24doc/_getPermissions/#retour","title":"Retour","text":"<p>Map associant une valeur bool\u00e9enne aux propri\u00e9t\u00e9s <code>read</code> et <code>write</code>.</p>"},{"location":"libs/%24doc/_getPermissions/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24doc/_getTuples/","title":"<code>$doc.getTuples</code>","text":""},{"location":"libs/%24doc/_getTuples/#description","title":"Description","text":"<p>Retourne tous les tuples du dossier pour le groupe indiqu\u00e9 sous forme  d'objet typ\u00e9.</p>"},{"location":"libs/%24doc/_getTuples/#syntaxe","title":"Syntaxe","text":"<p><code>$doc.getTuples( context [ , options ] )</code></p>"},{"location":"libs/%24doc/_getTuples/#parametres","title":"Param\u00e8tres","text":"<code>context</code> string / map <p>Object d\u00e9crivant le contexte du groupe \u00e0 r\u00e9cup\u00e9rer. Le param\u00e8tre doit d\u00e9signer un contexte. Celui-ci peut \u00eatre fourni sous forme de string en clair (p.ex. <code>\"listeArticle[123].article\"</code>), sous forme de uuid ou sous forme d'un map d\u00e9crivant le contexte.</p> <p>Dans tous les cas, la valeur doit contenir ou r\u00e9f\u00e9rencer un contexte incluant les entr\u00e9es <code>modelName</code>, <code>docId</code> et <code>groupName</code>.</p> <code>options</code> map <p>Map d'options. Les options reconnues sont:</p> <code>ignorePolicies</code> boolean Flag indiquant de ne pas tenir compte des policies lors du traitement.  Par d\u00e9faut le flag est \u00e0 <code>false</code>, pour autant que l'application utilise  des policies; sinon il est <code>true</code>."},{"location":"libs/%24doc/_getTuples/#retour","title":"Retour","text":"<p>Tableau dont les entr\u00e9es sont des maps cl\u00e9/valeur avec le nom de champ en cl\u00e9 et le contenu du champ en valeur.</p>"},{"location":"libs/%24doc/_getTuples/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24doc/_list/","title":"<code>$doc.list</code>","text":""},{"location":"libs/%24doc/_list/#description","title":"Description","text":"<p>Retourne la liste des dossiers ouverts dans la session. La m\u00e9thode retourne  un tableau dont les entr\u00e9es sont des maps contenant deux propri\u00e9t\u00e9s: <code>docId</code>  et <code>modelName</code>. Exemple:</p> <pre><code>[ { \"docId\": \"foo\", \"modelName\": \"demo\" },\n  { \"docId\": \"bar\", \"modelName\": \"customer\" } ]\n</code></pre> <p>La m\u00e9thode retourne un tableau vide si aucun dossier n'est ouvert ou si  aucune session client n'est d\u00e9finie au niveau du processeur.</p>"},{"location":"libs/%24doc/_list/#syntaxe","title":"Syntaxe","text":"<p><code>$doc.list()</code></p>"},{"location":"libs/%24doc/_list/#retour","title":"Retour","text":"<p>Voir description</p>"},{"location":"libs/%24doc/_list/#exemple","title":"Exemple","text":"<pre><code>$doc.list();\n</code></pre>"},{"location":"libs/%24doc/_open/","title":"<code>$doc.open</code>","text":""},{"location":"libs/%24doc/_open/#description","title":"Description","text":"<p>Charge un dossier en m\u00e9moire. Le dossier ouvert depuis un script reste  ouvert au refresh s'il n'est pas ferm\u00e9, pour autant que le traitement  soit effectu\u00e9 pour la m\u00eame session que celle utilis\u00e9e pour l'affichage  (ce qui n'est pas le cas par exemple si la requ\u00eate ne fournit pas  d'identifiant de session).</p> <p>Attention, ce n'est pas parce que le dossier est ouvert que le contexte  actuel pointe sur ce nouveau dossier. Par d\u00e9faut la m\u00e9thode ne change  pas le contexte actuel (pour rappel Ewt permet d'ouvrir plusieurs dossiers  \u00e0 la fois), mais il est possible de demander \u00e0 la m\u00e9thode de le faire au  moyen de l'option <code>updateContext</code>. Il est \u00e9galement possible de changer  manuellement de contexte au moyen de la m\u00e9thode</p>"},{"location":"libs/%24doc/_open/#syntaxe","title":"Syntaxe","text":"<p><code>$doc.open( context [ , options ] )</code></p>"},{"location":"libs/%24doc/_open/#parametres","title":"Param\u00e8tres","text":"<code>context</code> string / map Object d\u00e9crivant le contexte. Le param\u00e8tre peut d\u00e9signer soit un  contexte (exprim\u00e9 en tant que string en clair, p.ex. <code>\"vendeur[123]\"</code>  ou sous forme de uuid) ou un map d\u00e9crivant le contexte. Dans ce cas,  le map doit a minima contenir une valeur pour les propri\u00e9t\u00e9s  <code>modelName</code> et <code>docId</code>. <code>options</code> map <p>Map d'options relatives \u00e0 l'ouverture de dossier. Les options  reconnues sont:</p> <code>updateContext</code> boolean Flag <code>true</code>/<code>false</code> indiquant si la m\u00e9thode doit mettre \u00e0 jour le  contexte avec le dossier courant. Si <code>true</code>, le contexte est mis \u00e0  jour, pour autant que le dossier peut \u00eatre ouvert. L'option est <code>true</code>  par d\u00e9faut. <code>ignorePolicies</code> boolean <p>Flag indiquant de ne pas tenir compte des policies lors de  l'ouverture. Par d\u00e9faut le flag est \u00e0 <code>true</code>, pour autant que l'application utilise des policies; sinon il est <code>false</code>.</p> <p>Lorsque le flag est <code>false</code> le moteur \u00e9value les policies \u00e0  l'ouverture. Si vous devez effectuer un traitement de masse,  l'\u00e9valuation des policies peut avoir un impact sur les performances.  Il peut donc dans ce cas \u00eatre recommand\u00e9 d'activer le flag.</p> <code>loadBinaries</code> boolean Flag <code>true</code>/<code>false</code> indiquant si la m\u00e9thode doit charger les champs  binaires. La valeur par d\u00e9faut est <code>false</code> car dans la mesure du  possible on \u00e9vitera de charger inutilement la m\u00e9moire avec les  binaires. Le flag est \u00e0 d\u00e9finir \u00e0 <code>true</code> si l'on souhaite  explicitement charger le dossier dans le but de traiter les  fichiers binaires qu'il contient. \u00c0 noter que les binaires  sont automatiquement charg\u00e9s lorsque l'on r\u00e9f\u00e9rence un champ qui en  contient \u00e0 l'aide des notations <code>#champ</code> ou <code>$data.get(\"champ\")</code>. \u00c0  noter \u00e9galement que les \u00e9ventuelles m\u00e9tadonn\u00e9es li\u00e9es au champ en  question sont charg\u00e9es, ind\u00e9pendamment de la valeur pass\u00e9e \u00e0 cette  option."},{"location":"libs/%24doc/_open/#retour","title":"Retour","text":"<p>La m\u00e9thode retourne le contexte du nouveau dossier sous forme de map si  celui-ci a pu \u00eatre cr\u00e9\u00e9, ou <code>null</code> si le dossier n'a pas pu \u00eatre cr\u00e9\u00e9.</p>"},{"location":"libs/%24doc/_open/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24doc/_sendNotification/","title":"<code>$doc.sendNotification</code>","text":""},{"location":"libs/%24doc/_sendNotification/#description","title":"Description","text":"<p>D\u00e9clenche une notification explicite pour le dossier.</p>"},{"location":"libs/%24doc/_sendNotification/#syntaxe","title":"Syntaxe","text":"<p><code>$doc.sendNotification( context , name [ , suffix [ , parameters ] ] )</code></p>"},{"location":"libs/%24doc/_sendNotification/#parametres","title":"Param\u00e8tres","text":"<code>context</code> string / map Objet d\u00e9crivant l'\u00e9l\u00e9ment pour lequel on souhaite obtenir les droits. Le param\u00e8tre peut d\u00e9signer soit un contexte (exprim\u00e9 en tant que string en clair ou sous forme de uuid) ou une map d\u00e9crivant le contexte. <code>name</code> string Nom de la notification. La valeur doit correspondre \u00e0 une notification  d\u00e9clar\u00e9e dans le fichier de configuration. Le moteur autorise toutefois  l'emploi de notifications personnalis\u00e9es. <code>suffix</code> string Suffixe de notification (p.ex <code>before</code>, <code>after</code>, etc.) <code>parameters</code> map Ensemble de param\u00e8tres \u00e0 passer \u00e0 la notification. Attention, dans le  cas de notifications standards (c.-\u00e0-d. des notifications reconnues  par le moteur Ewt), l'application est responsable de reprendre les  bonnes valeurs de param\u00e8tres, c'est-\u00e0-dire des valeurs qui correspondent  \u00e0 ce que le moteur utilise lorsqu'il envoie lui-m\u00eame les notifications."},{"location":"libs/%24doc/_sendNotification/#retour","title":"Retour","text":"<p>Map contenant toutes les variables du scope racine du dernier script \u00e9valu\u00e9.  Ce map contient toutes les variables export\u00e9es par le script. La m\u00e9thode  retourne <code>null</code> si aucun \u00e9v\u00e9nement correspondant n'est d\u00e9fini dans le  fichier de config.</p>"},{"location":"libs/%24doc/_sendNotification/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24doc/_setState/","title":"<code>$doc.setState</code>","text":""},{"location":"libs/%24doc/_setState/#description","title":"Description","text":"<p>Modifie l'\u00e9tat du dossier.</p>"},{"location":"libs/%24doc/_setState/#syntaxe","title":"Syntaxe","text":"<p><code>$doc.setState( context , state [, options ] )</code></p>"},{"location":"libs/%24doc/_setState/#parametres","title":"Param\u00e8tres","text":"<code>context</code> string / map Object d\u00e9crivant le contexte du dossier \u00e0 traiter. Le param\u00e8tre peut  d\u00e9signer soit un contexte (exprim\u00e9 en tant que string en clair, p.ex.  <code>\"listeArticle[123]\"</code> ou sous forme de uuid) ou un map d\u00e9crivant le  contexte. Dans ce cas, le map doit a minima contenir une valeur pour  les entr\u00e9es <code>modelName</code> et <code>docId</code>. <code>state</code> string Nom de l'\u00e9tat \u00e0 atteindre <code>options</code> map <p>Map d'options. Les options reconnues sont:</p> <code>ignorePolicies</code> boolean Flag indiquant de ne pas tenir compte des policies lors du traitement.  Par d\u00e9faut le flag est \u00e0 <code>false</code>, pour autant que l'application utilise  des policies; sinon il est <code>true</code> <code>force</code> boolean <p>Flag indiquant de faire un changement d'\u00e9tat en force, c'est-\u00e0-dire sans tenir compte des transitions (i.e. sans tenir compte du fait  qu'il existe une transition permettant de passer de l'\u00e9tat actuel \u00e0  l'\u00e9tat demand\u00e9)</p> <p>En activant ce flag, on peut bypasser le contr\u00f4le sur l'existence  de transition permettant de passer de l'\u00e9tat actuel \u00e0 l'\u00e9tat demand\u00e9.</p>"},{"location":"libs/%24doc/_setState/#retour","title":"Retour","text":"<p>Retourne la valeur <code>true</code> si le changement d'\u00e9tat a r\u00e9ussi ou <code>false</code> en  cas d'erreur.</p>"},{"location":"libs/%24doc/_setState/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24doc/_xmlize/","title":"<code>$doc.xmlize</code>","text":""},{"location":"libs/%24doc/_xmlize/#description","title":"Description","text":"<p>Retourne une version XML du dossier.</p> <p>L'arbre XML g\u00e9n\u00e9r\u00e9 est le m\u00eame que celui que l'on retrouve dans l'arbre  de sortie du moteur.</p>"},{"location":"libs/%24doc/_xmlize/#syntaxe","title":"Syntaxe","text":"<p><code>$doc.xmlize( context [ , options ] )</code></p>"},{"location":"libs/%24doc/_xmlize/#parametres","title":"Param\u00e8tres","text":"<code>context</code> string / map Object d\u00e9crivant le contexte d'un ou plusieurs dossiers. Le param\u00e8tre  peut d\u00e9signer un tableau ou un contexte unique. Le ou les contextes  peuvent \u00eatre exprim\u00e9s en tant que string en clair, p.ex.  <code>\"vendeur[123]}\"</code>, sous la forme d'uuid, ou en tant que map. Dans ce  cas, le map doit a minima contenir une valeur pour les entr\u00e9es  <code>modelName</code> et <code>docId</code>. <code>options</code> map <p>Map d'options. Les options reconnues sont:</p> <code>ignorePolicies</code> boolean Flag indiquant de ne pas tenir compte des policies lors de l'ouverture.  Par d\u00e9faut le flag est \u00e0 <code>false</code>, pour autant que l'application utilise  des policies; sinon il est <code>true</code>. <code>updatePolicies</code> boolean Flag indiquant si les policies relatives aux permissions et actions  doivent \u00eatre mises \u00e0 jour avant de produire la sortie xml. <code>keepDocumentOpen</code> boolean Dans le cas o\u00f9 la m\u00e9thode doit traiter un dossier qui n'est pas d\u00e9j\u00e0  ouvert, le flag indique si le dossier en question doit \u00eatre conserv\u00e9 ouvert. <code>fullReload</code> boolean Flag <code>true</code>/<code>false</code> indiquant d'effectuer un rechargement complet, y  compris le tuple principal. Par d\u00e9faut cette option est \u00e0 <code>false</code>. <code>loadBinaries</code> boolean Flag <code>true</code>/<code>false</code> indiquant si la m\u00e9thode doit charger les champs  binaires. La valeur par d\u00e9faut est <code>false</code> car dans la mesure du  possible on \u00e9vitera de charger inutilement la m\u00e9moire avec les  binaires. Le flag est \u00e0 d\u00e9finir \u00e0 <code>true</code> si l'on souhaite explicitement  charger le dossier dans le but de traiter les fichiers binaires qu'il  contient. \u00c0 noter que les binaires sont automatiquement charg\u00e9s  lorsque l'on r\u00e9f\u00e9rence un champ qui en contient \u00e0 l'aide des  notations <code>#champ</code> ou <code>$data.get(\"champ\")</code>. \u00c0 noter \u00e9galement que  les \u00e9ventuelles m\u00e9tadonn\u00e9es li\u00e9es au champ en question sont charg\u00e9es, ind\u00e9pendamment de la valeur pass\u00e9e \u00e0 cette option. <code>locale</code> string Locale \u00e0 utiliser pour les libell\u00e9s \u00e0 reprendre dans le document xml.  La locale est \u00e0 sp\u00e9cifier selon la syntaxe IETF BCP 47, par exemple  \"fr\", fr-CH\", \"en-US\", etc."},{"location":"libs/%24doc/_xmlize/#retour","title":"Retour","text":"<p>Arbre xml repr\u00e9sentant le ou les dossiers</p>"},{"location":"libs/%24doc/_xmlize/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/","title":"<code>$excel</code>","text":"<p>Traitement de fichiers Excel.</p> <p>Dans cette librairie, toutes les m\u00e9thodes utilisent des index de lignes  ou de colonnes 1-based.</p>"},{"location":"libs/%24excel/_addSheet/","title":"<code>$excel.addSheet</code>","text":""},{"location":"libs/%24excel/_addSheet/#description","title":"Description","text":"<p>Ajoute une ou plusieurs sheets au workbook.</p>"},{"location":"libs/%24excel/_addSheet/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.addSheet( workbook , names )</code></p>"},{"location":"libs/%24excel/_addSheet/#parametres","title":"Param\u00e8tres","text":"<code>workbook</code> pojo Workbook \u00e0 traiter <code>names</code> string / array Nom de la ou des sheets \u00e0 cr\u00e9er. La valeur peut \u00eatre une simple   string ou un tableau de strings. En fonction du format du param\u00e8tre,   la m\u00e9thode retournera une sheet ou un tableau de sheets."},{"location":"libs/%24excel/_addSheet/#retour","title":"Retour","text":"<p>R\u00e9f\u00e9rence \u00e0 la nouvelle sheet. S'il existe d\u00e9j\u00e0 une sheet avec le nom indiqu\u00e9, la m\u00e9thode signale un avertissement dans le log et retourne la  sheet en question. La m\u00e9thode retourne null si le nom de la sheet n'est  pas valide. Se reporter \u00e0 la documentation de  Workbook#createSheet  pour avoir le d\u00e9tail des limitations relatives au nom de sheet.</p>"},{"location":"libs/%24excel/_addSheet/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/_autosize/","title":"<code>$excel.autosize</code>","text":""},{"location":"libs/%24excel/_autosize/#description","title":"Description","text":"<p>Ajuste automatiquement les largeurs de colonnes de la sheet.</p>"},{"location":"libs/%24excel/_autosize/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.autosize( workbook , rules [, options ] )</code></p>"},{"location":"libs/%24excel/_autosize/#parametres","title":"Param\u00e8tres","text":"<code>workbook</code> pojo Workbook \u00e0 traiter <code>rules</code> map / array <p>R\u00e8gle de redimensionnement, pass\u00e9e sous la forme d'un objet de type map  contenant les propri\u00e9t\u00e9s suivantes:</p> <code>sheet</code> Nom de la sheet que l'on veut traiter <code>columns</code> <p>Facultatif. Colonne(s) \u00e0 redimensionner. La ou les colonnes sont \u00e0  r\u00e9f\u00e9rencer par leur position (1-based).</p> <p>Le param\u00e8tre peut prendre une valeur seule, dans ce cas seule cette  colonne est adapt\u00e9e.</p> <p>Le param\u00e8tre peut prendre la valeur \"*\", dans ce cas toutes les  colonnes sont adapt\u00e9es. Le r\u00e9sultat est le m\u00eame si on ne sp\u00e9cifie pas  de colonnes du tout.</p> <p>Le param\u00e8tre peut avoir la forme <code>x-y</code>, dans ce cas les colonnes x \u00e0  y (compris) sont adapt\u00e9es. Les valeurs x et/ou y peuvent \u00eatre  remplac\u00e9es par \"*\".</p> <p>Le param\u00e8tre peut \u00e9galement \u00eatre un tableau de <code>string</code>, auquel cas  la m\u00e9thode boucle sur le tableau et traite chaque entr\u00e9e comme d\u00e9crit  ci-dessus.</p> <p>Le param\u00e8tre <code>rules</code> peut \u00eatre un tableau contenant les r\u00e8gles d'autosize ci-dessus.</p> <code>options</code> map <p>Options de traitement. Les propri\u00e9t\u00e9s suivantes sont trait\u00e9es:</p> <code>mode</code> string <p>Mode de traitement \u00e0 appliquer. La propri\u00e9t\u00e9 peut prendre les valeurs <code>poi</code> ou <code>int</code>. Par d\u00e9faut, le mode <code>poi</code> est utilis\u00e9.</p> <p>La m\u00e9thode <code>poi</code> utilise le m\u00e9canisme interne de POI.</p> <p>La m\u00e9thode <code>int</code> applique une solution interne qui calcule une  approximation de la largeur de colonne. Cela permet donne un r\u00e9sultat  moins pr\u00e9cis, mais le traitement est beaucoup plus rapide.</p> <code>maxLength</code> number Largeur max des colonnes. Cette propri\u00e9t\u00e9 n'est trait\u00e9e que lorsque  le mode <code>int</code> est utilis\u00e9. La largeur est d\u00e9finie en nombre de  caract\u00e8res. Par exemple si on d\u00e9finit une valeur 50, la m\u00e9thode  dimensionnera les colonnes avec une largeur max correspondant \u00e0  environ 50 caract\u00e8res (dans la police Serif)."},{"location":"libs/%24excel/_autosize/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le redimensionnement a pu se faire sans erreur,  sinon <code>false</code>.</p>"},{"location":"libs/%24excel/_autosize/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/_cloneSheet/","title":"<code>$excel.cloneSheet</code>","text":""},{"location":"libs/%24excel/_cloneSheet/#description","title":"Description","text":"<p>Duplique une ou plusieurs sheets dans le workbook.</p>"},{"location":"libs/%24excel/_cloneSheet/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.cloneSheet( workbook , rules )</code></p>"},{"location":"libs/%24excel/_cloneSheet/#parametres","title":"Param\u00e8tres","text":"<code>workbook</code> pojo Workbook \u00e0 traiter <code>rules</code> map / array <p>R\u00e8gle(s) de clonage. Les r\u00e8gles sont \u00e0 passer sous la forme d'un objet  de type <code>map</code> contenant les propri\u00e9t\u00e9s suivantes:</p> <code>srcSheet</code> Nom de la sheet \u00e0 dupliquer <code>newSheet</code> Nom de la nouvelle sheet cr\u00e9\u00e9e <p>Le param\u00e8tre peut \u00eatre un tableau de r\u00e8gles d\u00e9finies telles que ci-dessus</p>"},{"location":"libs/%24excel/_cloneSheet/#retour","title":"Retour","text":"<p>Retourne la nouvelle sheet ou <code>null</code> si l'op\u00e9ration a \u00e9chou\u00e9. Dans le cas o\u00f9  le param\u00e8tre est un tableau, la m\u00e9thode retourne un tableau de sheets de la  m\u00eame taille que le tableau d'entr\u00e9e. Les sheets qui n'auraient pas pu \u00eatre  clon\u00e9es sont remplac\u00e9es par un <code>null</code> au niveau du tableau de retour.</p>"},{"location":"libs/%24excel/_cloneSheet/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/_create/","title":"<code>$excel.create</code>","text":""},{"location":"libs/%24excel/_create/#description","title":"Description","text":"<p>Cr\u00e9e un nouveau workbook Excel vide. Le workbook cr\u00e9\u00e9 est vide, c'est-\u00e0-dire qu'il ne contient aucun worksheet. Le script devra alors invoquer la m\u00e9thode <code>$excel.addSheet</code> pour y ajouter une nouvelle feuille de  calcul.</p>"},{"location":"libs/%24excel/_create/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.create( [ xlsx ] )</code></p>"},{"location":"libs/%24excel/_create/#parametres","title":"Param\u00e8tres","text":"<code>xlsx</code> boolean <p>Flag <code>true</code>/<code>false</code> indiquant si l'on souhaite cr\u00e9er un workbook au  format xlsx (<code>true</code>) ou xls (<code>false</code>).</p> <p>Si le param\u00e8tre n'est pas sp\u00e9cifi\u00e9, la m\u00e9thode cr\u00e9e un workbook au format xlsx. La valeur par d\u00e9faut est donc <code>true</code>.</p>"},{"location":"libs/%24excel/_create/#retour","title":"Retour","text":"<p>Workbook nouvellement cr\u00e9\u00e9 ou null en cas d'erreur. L'objet en retour est  un objet de type <code>pojo</code>.</p>"},{"location":"libs/%24excel/_create/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/_createStyle/","title":"<code>$excel.createStyle</code>","text":""},{"location":"libs/%24excel/_createStyle/#description","title":"Description","text":"<p>Cr\u00e9e un nouveau style applicable \u00e0 des cellules. Le style cr\u00e9\u00e9 peut ensuite  \u00eatre attribu\u00e9 \u00e0 une ou plusieurs cellules avec la m\u00e9thode  <code>$data.setStyle</code>.</p>"},{"location":"libs/%24excel/_createStyle/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.createStyle( workflow , rules )</code></p>"},{"location":"libs/%24excel/_createStyle/#parametres","title":"Param\u00e8tres","text":"<code>workbook</code> pojo Workbook \u00e0 traiter <code>rules</code> map <p>R\u00e8gles de d\u00e9finition du style \u00e0 cr\u00e9er. Les param\u00e8tres sont \u00e0 passer  sous la forme de propri\u00e9t\u00e9s. Les propri\u00e9t\u00e9s reconnues sont:</p> <code>fontSize</code> Taille de police en points <code>fontWeight</code> <ul> <li>400 -&gt; normal</li> <li>700 -&gt; gras</li> </ul> <code>fontStyle</code> La seule valeur support\u00e9e est <code>italic</code> <code>textDecoration</code> Peut prendre les valeurs <code>underline</code> ou <code>line-through</code> <code>borderStyle</code> Type de bordure; la valeur peut reprendre le nom ou l'identifiant  num\u00e9rique de la bordure parmi la liste suivante:<pre>\n   NONE(0x0),\n   THIN(0x1),\n   MEDIUM(0x2),\n   DASHED(0x3),\n   DOTTED(0x4),\n   THICK(0x5),\n   DOUBLE(0x6),\n   HAIR(0x7),\n   MEDIUM_DASHED(0x8),\n   DASH_DOT(0x9),\n   MEDIUM_DASH_DOT(0xA),\n   DASH_DOT_DOT(0xB),\n   MEDIUM_DASH_DOT_DOT(0xC),\n   SLANTED_DASH_DOT(0xD)</pre> <code>leftBorderStyle</code> cf. <code>borderStyle</code> <code>rightBorderStyle</code> cf. <code>borderStyle</code> <code>topBorderStyle</code> cf. <code>borderStyle</code> <code>bottomBorderStyle</code> cf. <code>borderStyle</code> <code>textAlign</code> Les valeurs disponibles sont:    <code>GENERAL</code>, <code>LEFT</code>, <code>CENTER</code>, <code>RIGHT</code>, <code>FILL</code>,    <code>JUSTIFY</code>, <code>CENTER_SELECTION</code> ou <code>DISTRIBUTED</code> <code>verticalAlign</code> Les valeurs disponibles sont:    <code>TOP</code>, <code>CENTER</code>, <code>BOTTOM</code> ou <code>DISTRIBUTED</code> <code>color</code> Couleur du texte (voir la palette des couleurs plus bas) <code>borderColor</code> Couleur de la bordure (voir la palette des couleurs plus bas) <code>backgroundColor</code> <p>Couleur de fond du motif de la cellule (voir la palette des  couleurs plus bas)</p> <p>Attention, la m\u00e9thode triche un peu ici: on ne d\u00e9finit pas  une couleur de fond de la cellule, mais on d\u00e9finit en r\u00e9alit\u00e9  la couleur d'un motif \"solid background\".</p> <code>fillBackgroundColor</code> Couleur de fond du motif de la cellule (voir la palette des  couleurs plus bas) <code>fillForegroundColor</code> Couleur du motif de la cellule (voir la palette des couleurs  plus bas) <code>fillPattern</code> Motif de remplissage de la cellule; les motifs disponibles  peuvent \u00eatre sp\u00e9cifi\u00e9s soit au moyen du libell\u00e9, soit au moyen  de la valeur parmi la liste suivante:<pre>\n        NO_FILL(0)\n        SOLID_FOREGROUND(1)\n        FINE_DOTS(2)\n        ALT_BARS(3)\n        SPARSE_DOTS(4)\n        THICK_HORZ_BANDS(5)\n        THICK_VERT_BANDS(6)\n        THICK_BACKWARD_DIAG(7)\n        THICK_FORWARD_DIAG(8)\n        BIG_SPOTS(9)\n        BRICKS(10)\n        THIN_HORZ_BANDS(11)\n        THIN_VERT_BANDS(12)\n        THIN_BACKWARD_DIAG(13)\n        THIN_FORWARD_DIAG(14)\n        SQUARES(15)\n        DIAMONDS(16)\n        LESS_DOTS(17)\n        LEAST_DOTS(18)</pre> <code>dataFormat</code> Format des donn\u00e9es (le format doit \u00eatre d\u00e9fini selon la syntaxe  d\u00e9crite sur  https://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormat.html) <code>cellType</code> Les valeurs possibles sont <code>numeric</code>, <code>string</code>, <code>formula</code>, <code>blank</code>,  <code>boolean</code> ou <code>error</code> <code>wrapText</code> <ul> <li><code>true</code> -&gt; active le retour \u00e0 la ligne automatique</li> <li><code>false</code> -&gt; valeur par d\u00e9faut</li> </ul> <code>rotation</code> Change l'orientation du texte (valeur en degr\u00e9s) <p>Palette des couleurs:<pre>\n  BLACK(8)             WHITE(9)         RED(10)                    BRIGHT_GREEN(11)\n  BLUE(12)             YELLOW(13)       PINK(14)                   TURQUOISE(15)\n  DARK_RED(16)         GREEN(17)        DARK_BLUE(18)              DARK_YELLOW(19)\n  VIOLET(20)           TEAL(21)         GREY_25_PERCENT(22)        GREY_50_PERCENT(23)\n  CORNFLOWER_BLUE(24)  MAROON(25)       LEMON_CHIFFON(26)          ORCHID(28)\n  CORAL(29)            ROYAL_BLUE(30)   LIGHT_CORNFLOWER_BLUE(31)  SKY_BLUE(40)\n  LIGHT_TURQUOISE(41)  LIGHT_GREEN(42)  LIGHT_YELLOW(43)           PALE_BLUE(44)\n  ROSE(45)             LAVENDER(46)     TAN(47)                    LIGHT_BLUE(48)\n  AQUA(49)             LIME(50)         GOLD(51)                   LIGHT_ORANGE(52)\n  ORANGE(53)           BLUE_GREY(54)    GREY_40_PERCENT(55)        DARK_TEAL(56)\n  SEA_GREEN(57)        DARK_GREEN(58)   OLIVE_GREEN(59)            BROWN(60)\n  PLUM(61)             INDIGO(62)       GREY_80_PERCENT(63)        AUTOMATIC(64)</pre></p>"},{"location":"libs/%24excel/_createStyle/#retour","title":"Retour","text":"<p>Retourne un identifiant sour forme d'entier, ou <code>null</code> si le style ne peut  pas \u00eatre cr\u00e9\u00e9. L'identifiant peut \u00eatre r\u00e9utilis\u00e9 pour appliquer un style \u00e0  une ou plusieurs cellules.</p> <p>Voir <code>$data.setStyle</code></p>"},{"location":"libs/%24excel/_createStyle/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/_deleteColumn/","title":"<code>$excel.deleteColumn</code>","text":""},{"location":"libs/%24excel/_deleteColumn/#description","title":"Description","text":"<p>Supprime une colonne dans une sheet</p>"},{"location":"libs/%24excel/_deleteColumn/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.deleteColumn( workbook , rules )</code></p>"},{"location":"libs/%24excel/_deleteColumn/#parametres","title":"Param\u00e8tres","text":"<code>workbook</code> pojo Workbook \u00e0 traiter <code>rules</code> map / array <p>R\u00e8gle de suppression, pass\u00e9e sous la forme d'un objet de type map contenant les propri\u00e9t\u00e9s suivantes:</p> <code>sheet</code> Nom de la sheet \u00e0 traiter <code>column</code> Colonne(s) \u00e0 supprimer (1-based). Le param\u00e8tre peut \u00eatre soit  une valeur enti\u00e8re, soit un tableau de valeurs <p>Le param\u00e8tre <code>rules</code> peut \u00eatre un tableau contenant les r\u00e8gles de  suppression ci-dessus.</p>"},{"location":"libs/%24excel/_deleteColumn/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la m\u00e9thode a pu s'ex\u00e9cuter sans erreur, sinon <code>false</code>.</p>"},{"location":"libs/%24excel/_deleteColumn/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/_deleteRow/","title":"<code>$excel.deleteRow</code>","text":""},{"location":"libs/%24excel/_deleteRow/#description","title":"Description","text":"<p>Supprime une ligne dans une sheet</p>"},{"location":"libs/%24excel/_deleteRow/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.deleteRow( workbook , rules )</code></p>"},{"location":"libs/%24excel/_deleteRow/#parametres","title":"Param\u00e8tres","text":"<code>workbook</code> pojo Workbook \u00e0 traiter <code>rules</code> map / array <p>R\u00e8gle de suppression, pass\u00e9e sous la forme d'un objet de type map contenant les propri\u00e9t\u00e9s suivantes:</p> <code>sheet</code> Nom de la sheet \u00e0 traiter <code>rows</code> Ligne(s) \u00e0 supprimer (1-based). Le param\u00e8tre peut \u00eatre soit  une valeur enti\u00e8re, soit un tableau de valeurs <p>Le param\u00e8tre <code>rules</code> peut \u00eatre un tableau contenant les r\u00e8gles de  suppression ci-dessus.</p>"},{"location":"libs/%24excel/_deleteRow/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la m\u00e9thode a pu s'ex\u00e9cuter sans erreur, sinon <code>false</code>.</p>"},{"location":"libs/%24excel/_deleteRow/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/_deleteSheet/","title":"<code>$excel.deleteSheet</code>","text":""},{"location":"libs/%24excel/_deleteSheet/#description","title":"Description","text":"<p>Retire une ou plusieurs sheets du workbook.</p>"},{"location":"libs/%24excel/_deleteSheet/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.deleteSheet( workbook , names )</code></p>"},{"location":"libs/%24excel/_deleteSheet/#parametres","title":"Param\u00e8tres","text":"<code>workbook</code> pojo Workbook \u00e0 traiter <code>workbook</code> string / array Nom de la ou des sheets \u00e0 retirer."},{"location":"libs/%24excel/_deleteSheet/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si l'op\u00e9ration a r\u00e9ussi, sinon <code>false</code></p>"},{"location":"libs/%24excel/_deleteSheet/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/_evaluate/","title":"<code>$excel.evaluate</code>","text":""},{"location":"libs/%24excel/_evaluate/#description","title":"Description","text":"<p>\u00c9value toutes les cellules de type FORMULA dans le workbook.</p>"},{"location":"libs/%24excel/_evaluate/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.evaluate( workbook )</code></p>"},{"location":"libs/%24excel/_evaluate/#parametres","title":"Param\u00e8tres","text":"<code>workbook</code> pojo Workbook \u00e0 traiter"},{"location":"libs/%24excel/_evaluate/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si l'op\u00e9ration a r\u00e9ussi, sinon <code>false</code></p>"},{"location":"libs/%24excel/_evaluate/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/_getSheet/","title":"<code>$excel.getSheet</code>","text":""},{"location":"libs/%24excel/_getSheet/#description","title":"Description","text":"<p>R\u00e9cup\u00e8re une r\u00e9f\u00e9rence de sheet du workbook.</p>"},{"location":"libs/%24excel/_getSheet/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.getSheet( workbook , name )</code></p>"},{"location":"libs/%24excel/_getSheet/#parametres","title":"Param\u00e8tres","text":"<code>workbook</code> pojo Workbook \u00e0 traiter <code>name</code> string Nom de la sheet \u00e0 retourner"},{"location":"libs/%24excel/_getSheet/#retour","title":"Retour","text":"<p>Objet <code>pojo</code> contenant une r\u00e9f\u00e9rence de sheet ou <code>null</code> si aucune sheet  trouv\u00e9e pour le nom indiqu\u00e9.</p>"},{"location":"libs/%24excel/_getSheet/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/_getSheetNames/","title":"<code>$excel.getSheetNames</code>","text":""},{"location":"libs/%24excel/_getSheetNames/#description","title":"Description","text":"<p>R\u00e9cup\u00e8re la liste des noms de sheets du workbook.</p>"},{"location":"libs/%24excel/_getSheetNames/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.getSheetNames( workbook )</code></p>"},{"location":"libs/%24excel/_getSheetNames/#parametres","title":"Param\u00e8tres","text":"<code>workbook</code> pojo Workbook \u00e0 traiter"},{"location":"libs/%24excel/_getSheetNames/#retour","title":"Retour","text":"<p>Table contenant les noms de sheets du workbook.</p>"},{"location":"libs/%24excel/_getSheetNames/#exemple","title":"Exemple","text":"<pre><code>var file = $file.load(\"c:/Temp/example.xlsx\");\n$excel.getSheetNames(file);\n</code></pre>"},{"location":"libs/%24excel/_getValue/","title":"<code>$excel.getValue</code>","text":""},{"location":"libs/%24excel/_getValue/#description","title":"Description","text":"<p>R\u00e9cup\u00e8re la valeur d'une cellule</p>"},{"location":"libs/%24excel/_getValue/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.getValue( workbook , sheetName , rules [ , defaultValueForNull [ , defaultValueForError ] ] )</code></p>"},{"location":"libs/%24excel/_getValue/#parametres","title":"Param\u00e8tres","text":"<code>workbook</code> pojo Workbook \u00e0 traiter <code>sheetName</code> string Nom de la worksheet dans laquelle se trouve la cellule \u00e0 traiter <code>rules</code> string / map <p>R\u00e8gle de r\u00e9f\u00e9rencement de la cellule ou des cellules \u00e0 extraire.  Le param\u00e8tre est soit:</p> <ul> <li>Une valeur lit\u00e9rale qui repr\u00e9sente une adresse de cellule selon    la notation Excel, par exemple \"B5\"</li> <li> <p>Un objet d\u00e9crivant une plage de cellule \u00e0 extraire au moyen des    propri\u00e9t\u00e9s suivantes:</p> <code>cell</code> Adresse de la cellule de d\u00e9part, au format Excel, par  exemple \"B5\" <code>rows</code> Nombre de lignes de la plage \u00e0 extraire; si la valeur est 1, seule la ligne de la cellule est trait\u00e9e; si non  d\u00e9fini, la valeur par d\u00e9faut est 1. Peut valoir \"*\" pour  indiquer de reprendre toutes les lignes situ\u00e9es apr\u00e8s la  cellule de d\u00e9part. <code>cols</code> Nombre de colonnes situ\u00e9es \u00e0 droite de <code>cell</code> \u00e0 extraire; si la valeur est 1, seule la colonne de la cellule est  trait\u00e9e; si non d\u00e9fini, la valeur par d\u00e9faut est 1. Peut  valoir \"*\" pour indiquer de reprendre toutes les colonnes  situ\u00e9es \u00e0 droite de la cellule de d\u00e9part. </li> </ul> <code>defaultValueForNull</code> any Valeur par d\u00e9faut \u00e0 retourner si une cellule ne contient pas de valeur <code>defaultValueForError</code> any Valeur par d\u00e9faut \u00e0 retourner en cas d'erreur"},{"location":"libs/%24excel/_getValue/#retour","title":"Retour","text":"<p>Retourne la valeur de la cellule ou une des valeurs par d\u00e9faut en fonction du comportement de la commande.</p>"},{"location":"libs/%24excel/_getValue/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/_groupColumns/","title":"<code>$excel.groupColumns</code>","text":""},{"location":"libs/%24excel/_groupColumns/#description","title":"Description","text":"<p>Effectue un regroupement de colonnes</p>"},{"location":"libs/%24excel/_groupColumns/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.groupColumns( workbook , rules )</code></p>"},{"location":"libs/%24excel/_groupColumns/#parametres","title":"Param\u00e8tres","text":"<code>workbook</code> pojo Workbook \u00e0 traiter <code>rules</code> map / array <p>R\u00e8gles de regroupement \u00e0 appliquer. Les r\u00e8gles doivent \u00eatre pass\u00e9es sous la forme d'un objet de type map avec les propri\u00e9t\u00e9s suivantes:</p> <code>sheet</code> Nom de la sheet \u00e0 traiter <code>first</code> Index 1-based de la premi\u00e8re colonne \u00e0 regrouper <code>last</code> Index 1-based de la derni\u00e8re colonne (incluse) \u00e0 regrouper <code>collapse</code> Flag <code>true</code>/<code>false</code> indiquant si le groupe doit \u00eatre ferm\u00e9 (<code>true</code>)  ou laiss\u00e9 ouvert (<code>false</code>) <p>Le param\u00e8tre <code>rules</code> peut \u00eatre un tableau contenant les r\u00e8gles de  suppression ci-dessus.</p>"},{"location":"libs/%24excel/_groupColumns/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si l'op\u00e9ration a r\u00e9ussi, sinon <code>false</code></p>"},{"location":"libs/%24excel/_groupColumns/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/_groupRows/","title":"<code>$excel.groupRows</code>","text":""},{"location":"libs/%24excel/_groupRows/#description","title":"Description","text":"<p>Effectue un regroupement de lignes.</p>"},{"location":"libs/%24excel/_groupRows/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.groupRows( workbook , rules )</code></p>"},{"location":"libs/%24excel/_groupRows/#parametres","title":"Param\u00e8tres","text":"<code>workbook</code> pojo Workbook \u00e0 traiter <code>rules</code> map / array <p>R\u00e8gles de regroupement \u00e0 appliquer. Les r\u00e8gles doivent \u00eatre pass\u00e9es sous la forme d'un objet de type map avec les propri\u00e9t\u00e9s suivantes:</p> <code>sheet</code> Nom de la sheet \u00e0 traiter <code>first</code> Index 1-based de la premi\u00e8re ligne \u00e0 regrouper <code>last</code> Index 1-based de la derni\u00e8re ligne (incluse) \u00e0 regrouper <code>collapse</code> Flag <code>true</code>/<code>false</code> indiquant si le groupe doit \u00eatre ferm\u00e9 (<code>true</code>)  ou laiss\u00e9 ouvert (<code>false</code>) <p>Le param\u00e8tre <code>rules</code> peut \u00eatre un tableau contenant les r\u00e8gles de  suppression ci-dessus.</p>"},{"location":"libs/%24excel/_groupRows/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si l'op\u00e9ration a r\u00e9ussi, sinon <code>false</code></p>"},{"location":"libs/%24excel/_groupRows/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/_mergeCells/","title":"<code>$excel.mergeCells</code>","text":""},{"location":"libs/%24excel/_mergeCells/#description","title":"Description","text":"<p>Effectue une fusion de cellules voisines.</p>"},{"location":"libs/%24excel/_mergeCells/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.mergeCells( workbook , rules )</code></p>"},{"location":"libs/%24excel/_mergeCells/#parametres","title":"Param\u00e8tres","text":"<code>workbook</code> pojo Workbook \u00e0 traiter <code>rules</code> map / array <p>R\u00e8gles de fusion. Les r\u00e8gles doivent \u00eatre pass\u00e9es sous la forme d'un  objet de type map avec les propri\u00e9t\u00e9s suivantes:</p> <code>sheet</code> Nom de la sheet \u00e0 traiter <code>cell</code> Adresse de la cellule de d\u00e9part, au format Excel, par exemple \"B4\" <code>rows</code> Nombre de cellules situ\u00e9es en-dessous de <code>cell</code> \u00e0 inclure dans la  fusion. Mettre 2 pour fusionner la cellule de d\u00e9part et sa voisine  de dessous. <code>cols</code> Nombre de cellules situ\u00e9es \u00e0 droite de <code>cell</code> \u00e0 inclure dans la  fusion. Mettre 2 pour fusionner la cellule de d\u00e9part et sa voisine  de droite. <p>Le param\u00e8tre <code>rules</code> peut \u00eatre un tableau contenant les r\u00e8gles de  suppression ci-dessus.</p>"},{"location":"libs/%24excel/_mergeCells/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si l'op\u00e9ration a r\u00e9ussi, sinon <code>false</code></p>"},{"location":"libs/%24excel/_mergeCells/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/_open/","title":"<code>$excel.open</code>","text":""},{"location":"libs/%24excel/_open/#description","title":"Description","text":"<p>Ouvre un workbook existant.</p>"},{"location":"libs/%24excel/_open/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.open( file )</code></p>"},{"location":"libs/%24excel/_open/#parametres","title":"Param\u00e8tres","text":"<code>file</code> file Fichier \u00e0 ouvrir"},{"location":"libs/%24excel/_open/#retour","title":"Retour","text":"<p>Workbook associ\u00e9 au fichier ou null en cas d'erreur. L'objet en retour est un objet de type <code>pojo</code>.</p> <p>Retourne <code>null</code> en cas d'erreur.</p>"},{"location":"libs/%24excel/_open/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/_save/","title":"<code>$excel.save</code>","text":""},{"location":"libs/%24excel/_save/#description","title":"Description","text":"<p>Sauvegarde le workbook dans le fichier de destination indiqu\u00e9.</p>"},{"location":"libs/%24excel/_save/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.save( workbook , destination )</code></p>"},{"location":"libs/%24excel/_save/#parametres","title":"Param\u00e8tres","text":"<code>workbook</code> pojo Workbook \u00e0 sauvegarder <code>destination</code> file Fichier de destination. Si le fichier existe d\u00e9j\u00e0, il est remplac\u00e9."},{"location":"libs/%24excel/_save/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la sauvegarde a pu se faire sans erreur, sinon <code>false</code>.</p>"},{"location":"libs/%24excel/_save/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/_setHeight/","title":"<code>$excel.setHeight</code>","text":""},{"location":"libs/%24excel/_setHeight/#description","title":"Description","text":"<p>D\u00e9finit la hauteur d'une ou plusieurs lignes dans un workbook</p>"},{"location":"libs/%24excel/_setHeight/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.setHeight( workbook , rules )</code></p>"},{"location":"libs/%24excel/_setHeight/#parametres","title":"Param\u00e8tres","text":"<code>workbook</code> pojo Workbook \u00e0 traiter <code>rules</code> map / array <p>R\u00e8gle de redimensionnement, pass\u00e9e sous la forme d'un objet de type map contenant les propri\u00e9t\u00e9s suivantes:</p> <code>sheet</code> Nom de la sheet \u00e0 traiter <code>row</code> Ligne \u00e0 redimensionner (1-based); peut \u00eatre une valeur enti\u00e8re,  ou une table de valeurs enti\u00e8res <code>height</code> <p>Hauteur de colonne, en 1/256e de caract\u00e8re</p> <p>Concr\u00e8tement pour une taille de police standard (taille 11 dans  Excel), on peut d\u00e9terminer la valeur \u00e0 utiliser en multipliant par  20 la hauteur de ligne indiqu\u00e9e par Excel. Ainsi pour avoir une une  hauteur de ligne de 30 dans Excel, on indiquera la valeur 600.</p> <p>Le param\u00e8tre <code>rules</code>peut \u00eatre un tableau contenant les r\u00e8gles de  redimensionnement ci-dessus</p>"},{"location":"libs/%24excel/_setHeight/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la m\u00e9thode a pu s'ex\u00e9cuter sans erreur, sinon <code>false</code>.</p>"},{"location":"libs/%24excel/_setHeight/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/_setStyle/","title":"<code>$excel.setStyle</code>","text":""},{"location":"libs/%24excel/_setStyle/#description","title":"Description","text":"<p>Applique un style \u00e0 une ou plusieurs cellules. Les styles sont \u00e0 d\u00e9finir  au moyen de la m\u00e9thode <code>$data.createStyle</code>.</p>"},{"location":"libs/%24excel/_setStyle/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.setStyle( workbook , rules )</code></p>"},{"location":"libs/%24excel/_setStyle/#parametres","title":"Param\u00e8tres","text":"<code>workbook</code> pojo Workbook \u00e0 traiter <code>rules</code> map / array <p>R\u00e8gle de style \u00e0 appliquer. Les r\u00e8gles doivent \u00eatre pass\u00e9es sous la  forme d'un objet de type map avec les propri\u00e9t\u00e9s suivantes:</p> <code>sheet</code> Nom de la sheet \u00e0 traiter <code>style</code> Identifiant du style \u00e0 appliquer aux cellules <code>cell</code> Adresse de la cellule de d\u00e9part, au format Excel, par exemple \"B4\" <code>rows</code> Nombre de cellules situ\u00e9es en-dessous de <code>cell</code> auxquelles appliquer le style. Mettre 2 pour appliquer le style \u00e0 la cellule  de d\u00e9part et sa voisine de dessous. Peut valoir \"*\" pour appliquer  le style \u00e0 toutes les cellules plac\u00e9es au-dessous de la cellule  de d\u00e9part. <code>cols</code> Nombre de cellules situ\u00e9es \u00e0 droite de <code>cell</code> auxquelles appliquer le style. Mettre 2 pour appliquer le style \u00e0 la cellule  de d\u00e9part et sa voisine de droite. Peut prendre la valeur \"*\"  pour appliquer le style \u00e0 toutes les cellules plac\u00e9es \u00e0 droite de  la cellule de d\u00e9part. <p>Il est possible de passer un tableau d'objets tels que d\u00e9crits ci-dessus.</p>"},{"location":"libs/%24excel/_setStyle/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si l'op\u00e9ration a r\u00e9ussi, sinon <code>false</code></p>"},{"location":"libs/%24excel/_setStyle/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/_setValue/","title":"<code>$excel.setValue</code>","text":""},{"location":"libs/%24excel/_setValue/#description","title":"Description","text":"<p>Inscrit une valeur ou un ensemble de valeurs dans une worksheet.</p>"},{"location":"libs/%24excel/_setValue/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.setValue( workbook , rules [ , options ] )</code></p>"},{"location":"libs/%24excel/_setValue/#parametres","title":"Param\u00e8tres","text":"<code>workbook</code> pojo Workbook \u00e0 traiter <code>rules</code> map / array <p>R\u00e8gles d\u00e9crivant la m\u00e9thode d'enregistrement de valeurs. Les r\u00e8gles  doivent \u00eatre pass\u00e9es sous la forme d'un objet de type map ayant les  propri\u00e9t\u00e9s suivantes:</p> <code>sheet</code> Nom de la sheet dans laquelle inscrire les valeurs <code>format</code> <p>Format de la valeur. Le format peut \u00eatre:</p> <code>value</code> La valeur est une valeur textuelle \u00e0 inscrire dans la cellule <code>text</code> Idem que <code>value</code> <code>html</code> La valeur est du html avec formatage. La m\u00e9thode se charge alors de convertir le html pour appliquer le formatage au texte  dans la cellule <code>sql</code> La valeur est une requ\u00eate SQL de type SELECT. La m\u00e9thode se charge alors d'\u00e9valuer la requ\u00eate et de reprendre le(s)  r\u00e9sultat(s) dans la cellule et \u00e9ventuellement dans ses voisines  \u00e9galement <code>cell</code> Adresse de la cellule de destination au format Excel, par  exemple \"B5\" <code>value</code> <p>Valeur. La propri\u00e9t\u00e9 peut \u00eatre une valeur unique ou un tableau de  valeurs (lui-m\u00eame pouvant \u00eatre un tableau de valeurs dans le cas  o\u00f9 l'on veut repr\u00e9senter une matrice).</p> <p>La nature de la valeur doit \u00eatre coh\u00e9rente avec le format annonc\u00e9  via la propri\u00e9t\u00e9 <code>format</code>.</p> <code>style</code> Facultatif. Style \u00e0 passer \u00e0 la cellule. Le fait de passer le style  directement au <code>$data.setValue</code> est un raccourci pour \u00e9viter de  devoir invoquer la m\u00e9thode <code>$data.setStyle</code>  s\u00e9par\u00e9ment. Par ailleurs, le fait de sp\u00e9cifier un style via cette  propri\u00e9t\u00e9 prime sur les \u00e9ventuels styles pass\u00e9s au niveau des  options."},{"location":"libs/%24excel/_setValue/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si l'op\u00e9ration a r\u00e9ussi, sinon <code>false</code></p>"},{"location":"libs/%24excel/_setValue/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/_setWidth/","title":"<code>$excel.setWidth</code>","text":""},{"location":"libs/%24excel/_setWidth/#description","title":"Description","text":"<p>D\u00e9finit la largeur d'une ou plusieurs colonnes dans un workbook</p>"},{"location":"libs/%24excel/_setWidth/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.setWidth( workbook , rules )</code></p>"},{"location":"libs/%24excel/_setWidth/#parametres","title":"Param\u00e8tres","text":"<code>workbook</code> pojo Workbook \u00e0 traiter <code>rules</code> map / array <p>R\u00e8gle de redimensionnement, pass\u00e9e sous la forme d'un objet de type  map contenant les propri\u00e9t\u00e9s suivantes:</p> <code>sheet</code> Nom de la sheet \u00e0 traiter <code>column</code> Colonne \u00e0 redimensionner (1-based); peut \u00eatre une valeur enti\u00e8re,  ou une table de valeurs enti\u00e8res <code>width</code> Largeur de colonne, en 1/256e de caract\u00e8re <p>Le param\u00e8tre <code>rules</code> peut \u00eatre un tableau contenant les r\u00e8gles de  redimensionnement ci-dessus.</p>"},{"location":"libs/%24excel/_setWidth/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la m\u00e9thode a pu s'ex\u00e9cuter sans erreur, sinon <code>false</code>.</p>"},{"location":"libs/%24excel/_setWidth/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/_sign/","title":"<code>$excel.sign</code>","text":""},{"location":"libs/%24excel/_sign/#description","title":"Description","text":"<p>VERSION DE TEST</p> <p>Ajoute une signature num\u00e9rique \u00e0 un fichier OpenXML. En r\u00e9alit\u00e9 la m\u00e9thode g\u00e8re n'importe quel type de fichier OpenXML, qu'il s'agisse d'un xlsx, d'un  docx ou d'un pptx.</p>"},{"location":"libs/%24excel/_sign/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.sign( file , signature )</code></p>"},{"location":"libs/%24excel/_sign/#parametres","title":"Param\u00e8tres","text":"<code>file</code> file Fichier OpenXML \u00e0 signer. Peut \u00eatre un fichier xlsx, mais \u00e9galement un docx ou un pptx. <code>signature</code> map <p>\u00c9l\u00e9ments \u00e0 utiliser pour la signature du document. La propri\u00e9t\u00e9 doit  elle-m\u00eame \u00eatre une map contenant les propri\u00e9t\u00e9s suivantes:</p> <code>keystore</code> Fichier de keystore PKCS12 <code>keystorePass</code> Facultatif. Mot de passe du keystore&lt; <code>keystoreType</code> Facultatif. Type de keystore; par d\u00e9faut \"PKCS12\" <code>certificate</code> Nom d'alias du certificat x509 \u00e0 utiliser&lt; <code>certificatePass</code> Facultatif. Mot de passe associ\u00e9 au certificat"},{"location":"libs/%24excel/_sign/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code></p>"},{"location":"libs/%24excel/_sign/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24excel/_toColName/","title":"<code>$excel.toColName</code>","text":""},{"location":"libs/%24excel/_toColName/#description","title":"Description","text":"<p>Convertit un num\u00e9ro de colonne en nom de colonne tel qu'utilis\u00e9 par Excel.</p> <p>La premi\u00e8re colonne porte le num\u00e9ro 1 et est convertie en \"A\" par la m\u00e9thode.</p>"},{"location":"libs/%24excel/_toColName/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.toColName( number )</code></p>"},{"location":"libs/%24excel/_toColName/#parametres","title":"Param\u00e8tres","text":"<code>number</code> number Num\u00e9ro de colonne 1-based \u00e0 convertir"},{"location":"libs/%24excel/_toColName/#retour","title":"Retour","text":"<p>Nom de colonne correspondant</p>"},{"location":"libs/%24excel/_toColName/#exemple","title":"Exemple","text":"<pre><code>$excel.toColName(12);\n</code></pre>"},{"location":"libs/%24excel/_toColNumber/","title":"<code>$excel.toColNumber</code>","text":""},{"location":"libs/%24excel/_toColNumber/#description","title":"Description","text":"<p>Convertit un nom de colonne Excel en num\u00e9ro.</p> <p>La premi\u00e8re colonne est la colonne \"A\", qui donne 1 une fois converti  en nombre.</p>"},{"location":"libs/%24excel/_toColNumber/#syntaxe","title":"Syntaxe","text":"<p><code>$excel.toColNumber( column )</code></p>"},{"location":"libs/%24excel/_toColNumber/#parametres","title":"Param\u00e8tres","text":"<code>column</code> string Nom de colonne \u00e0 convertir"},{"location":"libs/%24excel/_toColNumber/#retour","title":"Retour","text":"<p>Num\u00e9ro de colonne 1-based correspondant</p>"},{"location":"libs/%24excel/_toColNumber/#exemple","title":"Exemple","text":"<pre><code>$excel.toColNumber(\"AA\");\n</code></pre>"},{"location":"libs/%24exec/","title":"<code>$exec</code>","text":"<p>Librairies fournissant des m\u00e9thodes pour d\u00e9marrer et contr\u00f4ler un process externe sur le host, donc un autre programme que java qui est d\u00e9marr\u00e9 sur le host, pour autant que le user utilis\u00e9 par la jvm ait les droits suffisants.</p> <p>Les commandes utilisables par la m\u00e9thode <code>$exec.start()</code> doivent \u00eatre d\u00e9clar\u00e9es dans la section <code>&lt;commands&gt;</code> du fichier de configuration de  l'application. Par exemple, pour d\u00e9marrer <code>\"notepad.exe\"</code> sur le host,  il faudra au pr\u00e9alable d\u00e9clarer une entr\u00e9e de ce style dans le  <code>config.xml</code>:</p> <pre><code>  ...\n  &lt;commands&gt;\n    &lt;command name=\"note\"&gt;notepad.exe&lt;/command&gt;\n    &lt;command-argument-0 name=\"note\"&gt;.*&lt;/command-argument-0&gt;\n  &lt;/commands&gt;\n  ...\n</code></pre> <p>La ligne <code>&lt;command-argument-0&gt;</code> est en r\u00e9alit\u00e9 optionnelle.</p> <p>Ensuite, on pourra alors d\u00e9marrer \"notepad\" au moyen de l'instruction suivante:</p> <pre><code>var process = $exec.start(\"note\");\n</code></pre> <p>L'objet <code>process</code> pourra \u00eatre r\u00e9utilis\u00e9 sur les autres m\u00e9thodes de la  librairie.</p>"},{"location":"libs/%24exec/_isAlive/","title":"<code>$exec.isAlive</code>","text":""},{"location":"libs/%24exec/_isAlive/#description","title":"Description","text":"<p>V\u00e9rifie si le process indiqu\u00e9 est toujours vivant.</p>"},{"location":"libs/%24exec/_isAlive/#syntaxe","title":"Syntaxe","text":"<p><code>$exec.isAlive( process )</code></p>"},{"location":"libs/%24exec/_isAlive/#parametres","title":"Param\u00e8tres","text":"<code>process</code> pojo Objet <code>pojo</code> r\u00e9f\u00e9ren\u00e7ant le process"},{"location":"libs/%24exec/_isAlive/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le process est en vie, sinon <code>false</code>. Retourne <code>null</code> en cas d'erreur.</p>"},{"location":"libs/%24exec/_isAlive/#exemple","title":"Exemple","text":"<pre><code>$exec.isAlive(proc);\n</code></pre>"},{"location":"libs/%24exec/_kill/","title":"<code>$exec.kill</code>","text":""},{"location":"libs/%24exec/_kill/#description","title":"Description","text":"<p>Force l'arr\u00eat du process.</p>"},{"location":"libs/%24exec/_kill/#syntaxe","title":"Syntaxe","text":"<p><code>$exec.kill( process [ , forcibly ] )</code></p>"},{"location":"libs/%24exec/_kill/#parametres","title":"Param\u00e8tres","text":"<code>process</code> pojo Objet <code>pojo</code> r\u00e9f\u00e9ren\u00e7ant le process <code>forcibly</code> boolean Flag <code>true</code>/<code>false</code> indiquant si l'arr\u00eat doit \u00eatre forc\u00e9. Par d\u00e9faut le flag est <code>false</code>."},{"location":"libs/%24exec/_kill/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le processus a pu \u00eatre arr\u00eat\u00e9, sinon <code>false</code>.</p>"},{"location":"libs/%24exec/_kill/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24exec/_pid/","title":"<code>$exec.pid</code>","text":""},{"location":"libs/%24exec/_pid/#description","title":"Description","text":"<p>Retourne l'id du process.</p>"},{"location":"libs/%24exec/_pid/#syntaxe","title":"Syntaxe","text":"<p><code>$exec.pid( process )</code></p>"},{"location":"libs/%24exec/_pid/#parametres","title":"Param\u00e8tres","text":"<code>process</code> pojo Objet <code>pojo</code> r\u00e9f\u00e9ren\u00e7ant le process"},{"location":"libs/%24exec/_pid/#retour","title":"Retour","text":"<p>Retourne l'id du process ou <code>null</code> en cas d'erreur, par exemple si le process n'est plus actif.</p>"},{"location":"libs/%24exec/_pid/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24exec/_send/","title":"<code>$exec.send</code>","text":""},{"location":"libs/%24exec/_send/#description","title":"Description","text":"<p>Envoie une valeur sur le flux d'entr\u00e9e du process. Cela permet par exemple de r\u00e9pondre \u00e0 un prompt du process. Typiquement, si on ex\u00e9cute une commande <code>read</code> via un <code>bash</code>, le process attend une valeur en entr\u00e9e. La m\u00e9thode  <code>send</code> permet de renseigner cette valeur.</p>"},{"location":"libs/%24exec/_send/#syntaxe","title":"Syntaxe","text":"<p><code>$exec.send( process , value )</code></p>"},{"location":"libs/%24exec/_send/#parametres","title":"Param\u00e8tres","text":"<code>process</code> pojo Objet <code>pojo</code> r\u00e9f\u00e9ren\u00e7ant le process <code>value</code> string Valeur \u00e0 envoyer sur l'input stream du process"},{"location":"libs/%24exec/_send/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la valeur a pu \u00eatre envoy\u00e9e, sinon <code>false</code>. Retourne <code>null</code> en cas d'erreur.</p>"},{"location":"libs/%24exec/_send/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24exec/_start/","title":"<code>$exec.start</code>","text":""},{"location":"libs/%24exec/_start/#description","title":"Description","text":"<p>D\u00e9marre un process sur le host. Pour des raisons de s\u00e9curit\u00e9, il n'est pas possible de sp\u00e9cifier explicitement la commande \u00e0 d\u00e9marrer sur le host. Les commandes autoris\u00e9es doivent \u00eatre d\u00e9clar\u00e9es dans le fichier de configuration de l'application.</p>"},{"location":"libs/%24exec/_start/#syntaxe","title":"Syntaxe","text":"<p><code>$exec.start( commandName [ , args [ , options ] ] )</code></p>"},{"location":"libs/%24exec/_start/#parametres","title":"Param\u00e8tres","text":"<code>commandName</code> string Nom de la commande \u00e0 lancer sur le host. La valeur doit \u00eatre d\u00e9clar\u00e9e en tant que commande au niveau du fichier de configuration de l'application. <code>commandName</code> array Arguments de la commande. Les arguments sont valid\u00e9s par l'\u00e9ventuelle regex d\u00e9clar\u00e9e au niveau des propri\u00e9t\u00e9s <code>&lt;command-argument-#&gt;</code> du fichier de configuration de l'application. <code>options</code> map <p>Options \u00e0 passer \u00e0 la m\u00e9thode. Les options reconnues sont:</p> <code>directory</code> file / string Dossier \u00e0 partir duquel ex\u00e9cuter la commande <code>maxTTL</code> number Dur\u00e9e de vie maximum du process, en millisecondes. Si d\u00e9fini et &gt; 0, le process sera d\u00e9truit s'il s'ex\u00e9cute au-del\u00e0 du TTL imparti. <code>inheritIO</code> boolean Valeur <code>true</code>/<code>false</code> indiquant si les entr\u00e9es/sorties peuvent \u00eatre redirig\u00e9es sur les logs. Voir ProcessBuilder#inheritIO <code>redirectErrorStream</code> boolean Valeur <code>true</code>/<code>false</code> indiquant si le flux de sortie pour les  erreurs peut \u00eatre renvoyer sur le flux de sortie standard. Cela  permet d'avoir les sorties et les erreurs dans un m\u00eame flux. Voir ProcessBuilder#redirectErrorStream <code>onOutput</code> function Fonction de callback \u00e0 invoquer lorsque des donn\u00e9es sont g\u00e9n\u00e9r\u00e9es  par le process sur la sortie standard. La fonction de callback doit avoir la forme suivante: <code>function(data, target)</code> o\u00f9 <code>data</code> sera aliment\u00e9 avec les donn\u00e9es re\u00e7ues et <code>target</code> est un objet <code>pojo</code> r\u00e9f\u00e9ren\u00e7ant le process lui-m\u00eame. <code>onError</code> function Fonction de callback pour les erreurs. La fonction de callback doit avoir la m\u00eame forme que pour <code>onOutput</code> <code>getOutput</code> function <p>Flag <code>true</code>/<code>false</code> indiquant que l'on souhaite recevoir en retour  de m\u00e9thode non pas le process cr\u00e9\u00e9, mais l'output qu'il a g\u00e9n\u00e9r\u00e9.  Cette option est sans effet si <code>onOutput</code> est d\u00e9clar\u00e9.</p> <p>L'ex\u00e9cution du process devient alors synchrone puisque'on attend la fin de son ex\u00e9cution pour obtenir le r\u00e9sultat.</p> <code>environment</code> map Map de variables d'environnement \u00e0 mettre en place pour l'ex\u00e9cution  du process. Par exemple on peut d\u00e9finir les conditions pour  d\u00e9marrer un process sur X11 en d\u00e9finissant l'environnement  <code>{ \"DISPLAY\": \":0\" }</code>."},{"location":"libs/%24exec/_start/#retour","title":"Retour","text":"<p>Retourne un objet <code>pojo</code> r\u00e9f\u00e9ren\u00e7ant le processus d\u00e9marr\u00e9 sur le host, ou valeur <code>string</code> contenant le retour du process lorsque l'option <code>getOutput</code> est activ\u00e9e.</p>"},{"location":"libs/%24exec/_start/#exemple","title":"Exemple","text":"<pre><code>var proc = $exec.start(\"expect\",\n                       [ \"/opt/ewt/vpnmanager/startVPN.exp\",\n                         $app.getConfig(\"custom.vpnConnectionName\"),\n                         $app.getConfig(\"custom.vpnUsername\"),\n                         vpnpass ],\n                       { inheritIO: true });\n</code></pre> <pre><code>$exec.start(\"rdesktop\",\n            [\n              \"-uuser\",\n              \"-kfr-ch\",\n              \"-z\",\n              $app.getConfig(\"custom.rdp[${name}]\")\n            ],\n            {\n              inheritIO: true,\n              environment: { \"DISPLAY\": \":0\" }\n            });\n</code></pre>"},{"location":"libs/%24exec/_waitFor/","title":"<code>$exec.waitFor</code>","text":""},{"location":"libs/%24exec/_waitFor/#description","title":"Description","text":"<p>Attend la fin d'ex\u00e9cution du process indiqu\u00e9.</p>"},{"location":"libs/%24exec/_waitFor/#syntaxe","title":"Syntaxe","text":"<p><code>$exec.waitFor( process [ , timeout ] )</code></p>"},{"location":"libs/%24exec/_waitFor/#parametres","title":"Param\u00e8tres","text":"<code>process</code> pojo Objet <code>pojo</code> r\u00e9f\u00e9ren\u00e7ant le process <code>timeout</code> number D\u00e9lai d'attente max en millisecondes"},{"location":"libs/%24exec/_waitFor/#retour","title":"Retour","text":"<p>Retourne le code de retour retourn\u00e9 par le process en fin d'ex\u00e9cution. Par convention, un code 0 signifie que le process s'est termin\u00e9 normalement. En cas d'erreur ou en cas de d\u00e9passement de timeout, la valeur de retour est <code>null</code>.</p>"},{"location":"libs/%24exec/_waitFor/#exemple","title":"Exemple","text":"<pre><code>$exec.waitFor(...)\n</code></pre>"},{"location":"libs/%24file/","title":"<code>$file</code>","text":"<p>Librairie de gestion de fichiers</p>"},{"location":"libs/%24file/_copy/","title":"<code>$file.copy</code>","text":""},{"location":"libs/%24file/_copy/#description","title":"Description","text":"<p>Copie le fichier \u00e0 un nouvel emplacement</p>"},{"location":"libs/%24file/_copy/#syntaxe","title":"Syntaxe","text":"<p><code>$file.copy( source , destination )</code></p>"},{"location":"libs/%24file/_copy/#parametres","title":"Param\u00e8tres","text":"<code>source</code> file / string Fichier \u00e0 lire. <code>destination</code> file / string Fichier de destination."},{"location":"libs/%24file/_copy/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la copie a r\u00e9ussi, sinon <code>false</code>.</p>"},{"location":"libs/%24file/_copy/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24file/_create/","title":"<code>$file.create</code>","text":""},{"location":"libs/%24file/_create/#description","title":"Description","text":"<p>G\u00e9n\u00e8re un fichier ou un dossier</p> <p>Dans le cas d'une cr\u00e9ation de fichier, la m\u00e9thode ne cr\u00e9e pas de fichier  directement. Elle ne fait que de construire un objet de type <code>file</code> qui  r\u00e9f\u00e9rence un fichier. Le fichier ne sera r\u00e9ellement cr\u00e9\u00e9 qu'\u00e0 partir du  moment o\u00f9 on lui ajoutera des donn\u00e9es.</p> <p>Les dossiers par contre sont construits au moment de l'appel de la m\u00e9thode.</p>"},{"location":"libs/%24file/_create/#syntaxe","title":"Syntaxe","text":"<p><code>$file.create( name [ , folder [ , options ] ] )</code></p>"},{"location":"libs/%24file/_create/#parametres","title":"Param\u00e8tres","text":"<code>name</code> string Nom du fichier \u00e0 cr\u00e9er. Si <code>null</code> ou vide, la m\u00e9thode g\u00e9n\u00e8re un  nom de fichier sous forme de UUID. <code>folder</code> sting / file <p>Chemin du dossier de destination. Peut \u00eatre une cha\u00eene de  caract\u00e8res d\u00e9signant un path ou un objet <code>file</code>.</p> <p>Peut \u00e9galement \u00eatre non d\u00e9fini ou <code>null</code>. Dans ce cas, la m\u00e9thode  regarde si <code>name</code> d\u00e9signe un path absolu. Si c'est le cas, le fichier  est cr\u00e9\u00e9 sous le nom indiqu\u00e9 (ou sous une variante dans le cas o\u00f9 l'option <code>replace</code> est d\u00e9finie \u00e0 <code>false</code>). Si <code>name</code> est relatif, le fichier est cr\u00e9\u00e9 dans le workdir de l'application.</p> <code>options</code> map <p>Map d'options. Les options reconnues sont:</p> <code>replace</code> boolean Flag <code>true</code>/<code>false</code> indiquant si la m\u00e9thode peut \u00e9craser un fichier  d\u00e9j\u00e0 existant. Vaut <code>false</code> par d\u00e9faut. Cela signifie que par d\u00e9faut  la m\u00e9thode cherchera \u00e0 cr\u00e9er un fichier ou un r\u00e9pertoire qui n'existe  pas d\u00e9j\u00e0. <code>directory</code> boolean Flag <code>true</code>/<code>false</code> indiquant qu'on attend de la m\u00e9thode qu'elle  cr\u00e9e un dossier et non un fichier."},{"location":"libs/%24file/_create/#retour","title":"Retour","text":"<p>Objet <code>file</code> r\u00e9f\u00e9ren\u00e7ant le fichier ou dossier indiqu\u00e9.</p> <p>Retourne <code>null</code> si le dossier n'a pas pu \u00eatre cr\u00e9\u00e9.</p>"},{"location":"libs/%24file/_create/#exemple","title":"Exemple","text":"<pre><code>var f0 = $file.create();\nvar f1 = $file.create(\"C:/Temp/file01.txt\");\nvar f2 = $file.create(\"file02.txt\", \"C:/Temp/\");\nvar f3 = $file.create(\"C:/Temp/file01.txt\", null, { replace: true });\nvar f4 = $file.create(\"file02.txt\", \"C:/Temp/\", { replace: true });\n$logger.info(f0);\n$logger.info(f3);\n$logger.info(f4);\n\nvar d0 = $file.create(null, null, { directory: true });\nvar d1 = $file.create(\"C:/Temp/dir01\", null, { directory: true });\nvar d2 = $file.create(\"dir02\", \"C:/Temp/\", { directory: true });\n\n$logger.info(d0);\n$logger.info(d1);\n$logger.info(d2);\n\n$file.delete([ f0, f3, f4, d0, d1, d2 ]);\n</code></pre> <p>Les traces suivantes sont affich\u00e9es dans le log:</p> <pre><code>INFO - C:\\apps\\apache-tomcat-9.0.64\\work\\Catalina\\localhost\\ewt\\vpnmanager\\e3e5ffa6-cbd4-4644-a094-30c6d289d0f3\nINFO - C:\\Temp\\file01.txt\nINFO - C:\\Temp\\file02.txt\nINFO - C:\\apps\\apache-tomcat-9.0.64\\work\\Catalina\\localhost\\ewt\\vpnmanager\\f5a991b9-100b-4073-84cf-5eaed1bcc4e0\\\nINFO - C:\\Temp\\dir01\\\nINFO - C:\\Temp\\dir02\\\n</code></pre>"},{"location":"libs/%24file/_delete/","title":"<code>$file.delete</code>","text":""},{"location":"libs/%24file/_delete/#description","title":"Description","text":"<p>Supprime un ou plusieurs fichiers et/ou un r\u00e9pertoires.</p> <p>Dans le cas d'un r\u00e9pertoire, ce dernier est int\u00e9gralement supprim\u00e9  (r\u00e9cursivement).</p>"},{"location":"libs/%24file/_delete/#syntaxe","title":"Syntaxe","text":"<p><code>$file.delete( files )</code></p>"},{"location":"libs/%24file/_delete/#parametres","title":"Param\u00e8tres","text":"<code>param</code> file / string / array Fichier(s)/Dossier(s) \u00e0 supprimer. Le param\u00e8tre peut \u00eatre un fichier, un path ou un tableau de fichiers ou de paths."},{"location":"libs/%24file/_delete/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la suppression a r\u00e9ussi, sinon <code>false</code>.</p>"},{"location":"libs/%24file/_delete/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24file/_exists/","title":"<code>$file.exists</code>","text":""},{"location":"libs/%24file/_exists/#description","title":"Description","text":"<p>Indique si le fichier donn\u00e9 en param\u00e8tre existe.</p> <p>Note</p> <p>Il est \u00e9galement possible d'obtenir cette information , ainsi que  d'autres attributs du fichier via la m\u00e9thode <code>$file.getAttributes</code>.</p>"},{"location":"libs/%24file/_exists/#syntaxe","title":"Syntaxe","text":"<p><code>$file.exists( file )</code></p>"},{"location":"libs/%24file/_exists/#parametres","title":"Param\u00e8tres","text":"<code>param</code> file / string Fichier ou chemin du fichier \u00e0 analyser. Le param\u00e8tre peut \u00eatre du type <code>file</code> ou <code>string</code>."},{"location":"libs/%24file/_exists/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le fichier existe, sinon <code>false</code>.</p>"},{"location":"libs/%24file/_exists/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24file/_getAttributes/","title":"<code>$file.getAttributes</code>","text":""},{"location":"libs/%24file/_getAttributes/#description","title":"Description","text":"<p>\u00c9num\u00e8re les principaux attributs du fichier donn\u00e9 en param\u00e8tre (nom,  path, taille, derni\u00e8re modification, etc.)</p> <p>La m\u00e9thode construit un map contenant les propri\u00e9t\u00e9s suivantes:</p> <ul> <li><code>name</code></li> <li><code>absolutePath</code></li> <li><code>canonicalPath</code></li> <li><code>isDirectory</code></li> <li><code>isFile</code></li> <li><code>length</code></li> <li><code>lastModified</code></li> <li><code>exists</code></li> <li><code>isHidden</code></li> <li><code>parentFile</code></li> <li><code>canExecute</code></li> <li><code>canRead</code></li> <li><code>canWrite</code></li> </ul>"},{"location":"libs/%24file/_getAttributes/#syntaxe","title":"Syntaxe","text":"<p><code>$file.getAttributes( file )</code></p>"},{"location":"libs/%24file/_getAttributes/#parametres","title":"Param\u00e8tres","text":"<code>param</code> file / string Fichier ou chemin du fichier \u00e0 analyser. Le param\u00e8tre peut \u00eatre du type <code>file</code> ou <code>string</code>."},{"location":"libs/%24file/_getAttributes/#retour","title":"Retour","text":"<p>Retourne une map contenant les attributs du fichier, ou <code>null</code> si le fichier n'est pas valide.</p>"},{"location":"libs/%24file/_getAttributes/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24file/_getMimeType/","title":"<code>$file.getMimeType</code>","text":"<p>Alias: <code>$file.mimetype</code></p>"},{"location":"libs/%24file/_getMimeType/#description","title":"Description","text":"<p>Retourne le mimetype du fichier</p>"},{"location":"libs/%24file/_getMimeType/#syntaxe","title":"Syntaxe","text":"<p><code>$file.getMimeType( file )</code></p>"},{"location":"libs/%24file/_getMimeType/#parametres","title":"Param\u00e8tres","text":"<code>file</code> file Fichier \u00e0 traiter"},{"location":"libs/%24file/_getMimeType/#retour","title":"Retour","text":"<p>Mimetype du fichier ou <code>null</code> si le fichier n'existe pas</p>"},{"location":"libs/%24file/_getMimeType/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24file/_getName/","title":"<code>$file.getName</code>","text":"<p>Alias: <code>$file.name</code></p>"},{"location":"libs/%24file/_getName/#description","title":"Description","text":"<p>Retourne le nom du fichier</p>"},{"location":"libs/%24file/_getName/#syntaxe","title":"Syntaxe","text":"<p><code>$file.getName( file )</code></p>"},{"location":"libs/%24file/_getName/#parametres","title":"Param\u00e8tres","text":"<code>file</code> file / string Fichier \u00e0 traiter. Peut d\u00e9signer un <code>file</code> ou un path sous forme  de <code>string</code>."},{"location":"libs/%24file/_getName/#retour","title":"Retour","text":"<p>Nom du fichier ou <code>null</code> si le fichier n'existe pas</p>"},{"location":"libs/%24file/_getName/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24file/_getParent/","title":"<code>$file.getParent</code>","text":""},{"location":"libs/%24file/_getParent/#description","title":"Description","text":"<p>Retourne une r\u00e9f\u00e9rence de type <code>file</code> sur le dossier parent du path indiqu\u00e9.</p>"},{"location":"libs/%24file/_getParent/#syntaxe","title":"Syntaxe","text":"<p><code>$file.getParent( path )</code></p>"},{"location":"libs/%24file/_getParent/#parametres","title":"Param\u00e8tres","text":"<code>path</code> file / string Path \u00e0 traiter."},{"location":"libs/%24file/_getParent/#retour","title":"Retour","text":"<p>Retourne un objet <code>file</code> r\u00e9f\u00e9ren\u00e7ant le parent de <code>path</code>.</p>"},{"location":"libs/%24file/_getParent/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24file/_getPath/","title":"<code>$file.getPath</code>","text":""},{"location":"libs/%24file/_getPath/#description","title":"Description","text":"<p>Retourne le path du fichier ou du r\u00e9pertoire indiqu\u00e9.</p>"},{"location":"libs/%24file/_getPath/#syntaxe","title":"Syntaxe","text":"<p><code>$file.getPath( file [ , options ] )</code></p>"},{"location":"libs/%24file/_getPath/#parametres","title":"Param\u00e8tres","text":"<code>param</code> file Fichier ou r\u00e9pertoire \u00e0 traiter. Le param\u00e8tre doit \u00eatre un objet du type <code>file</code>. Dans le cas contraire, la m\u00e9thode g\u00e9n\u00e8re un avertissement  et retourne <code>null</code>. <code>options</code> map <p>Map d'options. Les options reconnues sont:</p> <code>relativeTo</code> file / string Indique que l'on souhaite recevoir un path relatif \u00e0 la valeur  indiqu\u00e9e. La valeur peut \u00eatre soit un objet du type <code>file</code>, soit  une valeur textuelle repr\u00e9sentant un path."},{"location":"libs/%24file/_getPath/#retour","title":"Retour","text":"<p>Path du fichier ou r\u00e9pertoire re\u00e7u en param\u00e8tre ou null si le param\u00e8tre n'est pas valide.</p>"},{"location":"libs/%24file/_getPath/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24file/_getSize/","title":"<code>$file.getSize</code>","text":"<p>Alias: <code>$file.size</code></p>"},{"location":"libs/%24file/_getSize/#description","title":"Description","text":"<p>Retourne la taille du fichier en bytes.</p> <p>Note</p> <p>Il est \u00e9galement possible d'obtenir la taille du fichier, ainsi que  d'autres attributs via la m\u00e9thode <code>$file.getAttributes</code>.</p>"},{"location":"libs/%24file/_getSize/#syntaxe","title":"Syntaxe","text":"<p><code>$file.getSize( file )</code></p>"},{"location":"libs/%24file/_getSize/#parametres","title":"Param\u00e8tres","text":"<code>param</code> file / string Fichier ou chemin du fichier \u00e0 analyser. Le param\u00e8tre peut \u00eatre du type <code>file</code> ou <code>string</code>."},{"location":"libs/%24file/_getSize/#retour","title":"Retour","text":"<p>Taille du fichier en bytes</p>"},{"location":"libs/%24file/_getSize/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24file/_isDirectory/","title":"<code>$file.isDirectory</code>","text":""},{"location":"libs/%24file/_isDirectory/#description","title":"Description","text":"<p>Indique si le fichier est un r\u00e9pertoire.</p> <p>Cette m\u00e9thode est un raccourci pour  <code>$file.getAttribute(path).isDirectory</code>.</p>"},{"location":"libs/%24file/_isDirectory/#syntaxe","title":"Syntaxe","text":"<p><code>$file.isDirectory( path )</code></p>"},{"location":"libs/%24file/_isDirectory/#parametres","title":"Param\u00e8tres","text":"<code>path</code> file / string Path \u00e0 analyser."},{"location":"libs/%24file/_isDirectory/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le path d\u00e9signe un r\u00e9pertoire, sinon <code>false</code></p>"},{"location":"libs/%24file/_isDirectory/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24file/_isFile/","title":"<code>$file.isFile</code>","text":""},{"location":"libs/%24file/_isFile/#description","title":"Description","text":"<p>Indique si le fichier est un fichier.</p> <p>Cette m\u00e9thode est un raccourci pour  <code>$file.isFile(path).isFile</code>.</p>"},{"location":"libs/%24file/_isFile/#syntaxe","title":"Syntaxe","text":"<p><code>$file.isFile( path )</code></p>"},{"location":"libs/%24file/_isFile/#parametres","title":"Param\u00e8tres","text":"<code>path</code> file / string Path \u00e0 analyser."},{"location":"libs/%24file/_isFile/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le path d\u00e9signe un fichier, sinon <code>false</code></p>"},{"location":"libs/%24file/_isFile/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24file/_list/","title":"<code>$file.list</code>","text":""},{"location":"libs/%24file/_list/#description","title":"Description","text":"<p>\u00c9num\u00e8re le contenu d'un dossier. La m\u00e9thode retourne un tableau d'objets de type <code>file</code>.</p>"},{"location":"libs/%24file/_list/#syntaxe","title":"Syntaxe","text":"<p><code>$file.list( directory [ , filter ] )</code></p>"},{"location":"libs/%24file/_list/#parametres","title":"Param\u00e8tres","text":"<code>directory</code> file / string Dossier dont on souhaite \u00e9num\u00e9rer le contenu <code>filter</code> string Filtre des \u00e9l\u00e9ments \u00e0 \u00e9num\u00e9rer. Le filtre peut contenir des wildcards."},{"location":"libs/%24file/_list/#retour","title":"Retour","text":"<p>Tableau de <code>file</code></p>"},{"location":"libs/%24file/_list/#exemple","title":"Exemple","text":"<p>Exemple de fonction r\u00e9cursive qui \u00e9num\u00e8re tout le contenu d'un r\u00e9pertoire:</p> <pre><code>function listContent(file) {\n    if ($file.getAttributes(file).isDirectory) {\n        for (var f : $file.list(file)) {\n            listContent(f);\n        }\n    }\n    else {\n        $logger.info(file);\n    }\n}\n</code></pre>"},{"location":"libs/%24file/_load/","title":"<code>$file.load</code>","text":""},{"location":"libs/%24file/_load/#description","title":"Description","text":"<p>Charge un fichier. </p> <p>La m\u00e9thode peut \u00eatre utilis\u00e9e pour r\u00e9f\u00e9rencer un fichier existant, mais  \u00e9galement pour r\u00e9f\u00e9rencer un fichier que l'on souhaite cr\u00e9er. L'exemple  de la m\u00e9thode <code>$file.move</code> illustre que l'on utilise la  m\u00e9thode <code>$file.load</code> pour g\u00e9n\u00e9rer une r\u00e9f\u00e9rence vers le fichier \u00e0 cr\u00e9er.</p>"},{"location":"libs/%24file/_load/#syntaxe","title":"Syntaxe","text":"<p><code>$file.load( name [ , folder ] )</code></p>"},{"location":"libs/%24file/_load/#parametres","title":"Param\u00e8tres","text":"<code>name</code> string Nom ou chemin du fichier \u00e0 charger. <code>folder</code> string / file Dossier parent. Peut \u00eatre <code>null</code>, auquel cas la m\u00e9thode s'attend \u00e0 ce  que le param\u00e8tre <code>name</code> contienne le path complet."},{"location":"libs/%24file/_load/#retour","title":"Retour","text":"<p>Objet <code>file</code> r\u00e9f\u00e9ren\u00e7ant le fichier ou dossier indiqu\u00e9.</p>"},{"location":"libs/%24file/_load/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24file/_move/","title":"<code>$file.move</code>","text":"<p>Alias: <code>file.rename</code></p>"},{"location":"libs/%24file/_move/#description","title":"Description","text":"<p>D\u00e9place le fichier \u00e0 un nouvel emplacement</p>"},{"location":"libs/%24file/_move/#syntaxe","title":"Syntaxe","text":"<p><code>$file.move( source , destination )</code></p>"},{"location":"libs/%24file/_move/#parametres","title":"Param\u00e8tres","text":"<code>source</code> file / string Fichier \u00e0 lire. <code>destination</code> file / string Fichier de destination."},{"location":"libs/%24file/_move/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le d\u00e9placement a r\u00e9ussi, sinon <code>false</code>.</p>"},{"location":"libs/%24file/_move/#exemple","title":"Exemple","text":"<p>Renomme un fichier en lui pr\u00e9fixant un \"_\".</p> <pre><code>$file.move(file,\n           $file.load(\"_\" &amp; $file.getName(file), $file.getParent(file)));\n</code></pre>"},{"location":"libs/%24file/_read/","title":"<code>$file.read</code>","text":""},{"location":"libs/%24file/_read/#description","title":"Description","text":"<p>Lit un fichier et r\u00e9cup\u00e8re son contenu.</p>"},{"location":"libs/%24file/_read/#syntaxe","title":"Syntaxe","text":"<p><code>$file.read( file [ , options ] )</code></p>"},{"location":"libs/%24file/_read/#parametres","title":"Param\u00e8tres","text":"<code>file</code> file / string Fichier ou chemin du fichier \u00e0 analyser. Le param\u00e8tre peut \u00eatre du type <code>file</code> ou <code>string</code>. <code>options</code> map <p>Options de chargement des donn\u00e9es.</p> <code>charset</code> string Charset \u00e0 utiliser pour charger le fichier sous forme textuelle <code>binary</code> boolean Flag <code>true</code>/<code>false</code> indiquant si le fichier doit \u00eatre trait\u00e9 comme  un fichier binaire. Par d\u00e9faut le param\u00e8tre est <code>false</code>"},{"location":"libs/%24file/_read/#retour","title":"Retour","text":"<p>Un objet de type <code>string</code> si le fichier est charg\u00e9 en tant  que texte, ou  <code>pojo</code> repr\u00e9sentant un tableau de bytes si le fichier est charg\u00e9 en tant  que binaire.</p>"},{"location":"libs/%24file/_read/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24file/_write/","title":"<code>$file.write</code>","text":""},{"location":"libs/%24file/_write/#description","title":"Description","text":"<p>\u00c9crit des donn\u00e9es dans un fichier.</p>"},{"location":"libs/%24file/_write/#syntaxe","title":"Syntaxe","text":"<p><code>$file.write( file , data [ , options ] )</code></p>"},{"location":"libs/%24file/_write/#parametres","title":"Param\u00e8tres","text":"<code>file</code> file / string <p>R\u00e9f\u00e9rence ou chemin du fichier \u00e0 \u00e9crire.</p> <p>Peut \u00eatre <code>null</code> si on souhaite que le  non de fichier soit g\u00e9n\u00e9r\u00e9 par la m\u00e9thode. Dans ce cas, indiquer le type au niveau des options.</p> <code>data</code> string / file Donn\u00e9e \u00e0 enregistrer dans le fichier. Seules les donn\u00e9es de type <code>string</code> (\u00e9ventuellement <code>number</code>) ou <code>file</code> sont support\u00e9es. Dans  le cas de <code>file</code>, la m\u00e9thode fonctionne comme une copie (les options  ne sont pas prises en compte dans ce cas) <code>options</code> map <p>Options d'enregistrement. Les options reconnues sont:</p> <code>append</code> boolean Valeur <code>true</code>/<code>false</code> indiquant si les donn\u00e9es doivent \u00eatre  ajout\u00e9es au contenu existant (<code>true</code>) ou si elles doivent remplacer le contenu existant (<code>false</code>). Par d\u00e9faut, l'option est consid\u00e9r\u00e9e comme d\u00e9sactiv\u00e9e, donc la m\u00e9thode effectue un  remplacement. <code>charset</code> string Charset des donn\u00e9es. Par d\u00e9faut: UTF-8 <code>type</code> string <p>Type de fichier \u00e0 produire. L'option n'est trait\u00e9e que si <code>file</code> est <code>null</code>, et donc que si la m\u00e9thode doit g\u00e9n\u00e9rer elle-m\u00eame un nouveau fichier. On indiquera ici l'extension que le fichier  devra porter.</p> <p>Si <code>file</code> est <code>null</code> et que l'extension n'est pas renseign\u00e9e, le fichier cr\u00e9\u00e9 portera l'extension \".dat\".</p> <code>binary</code> boolean Flag <code>true</code>/<code>false</code> indiquant si les donn\u00e9es sont \u00e0 traiter en  tant que donn\u00e9es binaires. Par d\u00e9faut l'option est \u00e0 <code>false</code>."},{"location":"libs/%24file/_write/#retour","title":"Retour","text":"<p>Fichier de destination</p>"},{"location":"libs/%24file/_write/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24hex/","title":"<code>$hex</code>","text":"<p>Librairie de m\u00e9thodes d'encodage/d\u00e9codage de valeurs hexa</p>"},{"location":"libs/%24hex/_decode/","title":"<code>$hex.decode</code>","text":""},{"location":"libs/%24hex/_decode/#description","title":"Description","text":"<p>D\u00e9code une valeur hexa</p>"},{"location":"libs/%24hex/_decode/#syntaxe","title":"Syntaxe","text":"<p><code>$hex.decode( source , [ , options ] )</code></p>"},{"location":"libs/%24hex/_decode/#parametres","title":"Param\u00e8tres","text":"<code>source</code> file / string Source \u00e0 d\u00e9coder. Peut d\u00e9signer un fichier ou une cha\u00eene de caract\u00e8res. <code>options</code> map <p>Map d'option \u00e0 prendre en consid\u00e9ration pour l'encodage. Les options reconnues sont:</p> <code>dest</code> file / string <p>Fichier dans lequel inscrire la valeur d\u00e9cod\u00e9e. La valeur peut \u00eatre soit un objet de type <code>file</code>, soit un path donn\u00e9 sous forme de <code>string</code>.</p> <p>Si non d\u00e9fini, la valeur d\u00e9cod\u00e9e est fournie sous forme de string en r\u00e9sultat de la fonction.</p> <code>charset</code> string Charset \u00e0 utiliser pour le traitement de la valeur. Par d\u00e9faut, le  charset est \"utf-8\""},{"location":"libs/%24hex/_decode/#retour","title":"Retour","text":"<p>Valeur d\u00e9cod\u00e9e. Le type de valeur en retour d\u00e9pend des options choisies.</p>"},{"location":"libs/%24hex/_decode/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24hex/_encode/","title":"<code>$hex.encode</code>","text":""},{"location":"libs/%24hex/_encode/#description","title":"Description","text":"<p>Encode un objet (cha\u00eene de caract\u00e8res ou fichier) en hexa</p>"},{"location":"libs/%24hex/_encode/#syntaxe","title":"Syntaxe","text":"<p><code>$hex.encode( source [ , options ] )</code></p>"},{"location":"libs/%24hex/_encode/#parametres","title":"Param\u00e8tres","text":"<code>source</code> file / string Objet \u00e0 encoder. Peut \u00eatre une valeur (texte, nombre) ou un fichier. <code>options</code> map <p>Map d'option \u00e0 prendre en consid\u00e9ration pour l'encodage. Les options reconnues sont:</p> <code>dest</code> file / string Fichier de destination. La valeur peut \u00eatre soit un objet de type <code>file</code>, soit une cha\u00eene de caract\u00e8res d\u00e9signant un path. <code>charset</code> string Si ce param\u00e8tre est d\u00e9fini, la fonction interpr\u00e8tera les donn\u00e9es d'entr\u00e9e selon le charset indiqu\u00e9. En l'absence de  charset, les donn\u00e9es seront trait\u00e9es selon le charset par d\u00e9faut du  moteur (utf-8)."},{"location":"libs/%24hex/_encode/#retour","title":"Retour","text":"<p>Objet contenant la valeur hexa repr\u00e9sentant l'objet donn\u00e9 en entr\u00e9e.</p>"},{"location":"libs/%24hex/_encode/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24html/","title":"<code>$html</code>","text":"<p>Librairie de gestion de donn\u00e9es html avec JSoup.</p>"},{"location":"libs/%24html/_select/","title":"<code>$html.select</code>","text":""},{"location":"libs/%24html/_select/#description","title":"Description","text":"<p>S\u00e9lectionne un ou plusieurs \u00e9l\u00e9ments dans l'arbre DOM d\u00e9crit par le code  HTML donn\u00e9.</p>"},{"location":"libs/%24html/_select/#syntaxe","title":"Syntaxe","text":"<p><code>$html.select( html , selector )</code></p>"},{"location":"libs/%24html/_select/#parametres","title":"Param\u00e8tres","text":"<code>html</code> string Code HTML \u00e0 traiter <code>selector</code> string Expression repr\u00e9sentant le s\u00e9lecteur"},{"location":"libs/%24html/_select/#retour","title":"Retour","text":"<p>Tableau contenant les noms des objets trouv\u00e9s correspondant au s\u00e9lecteur.</p>"},{"location":"libs/%24html/_select/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24http/","title":"<code>$http</code>","text":"<p>Librairies de m\u00e9thodes permettant d'invoquer un service HTTP.</p>"},{"location":"libs/%24http/_get/","title":"<code>$http.get</code>","text":""},{"location":"libs/%24http/_get/#description","title":"Description","text":"<p>M\u00e9thode raccourcie pour effectuer une requ\u00eate de type <code>GET</code>. </p> <p>La m\u00e9thode est identique \u00e0 $data.request, \u00e0 la diff\u00e9rence que l'option <code>method</code> est automatiquement d\u00e9finie \u00e0 <code>GET</code>.</p>"},{"location":"libs/%24http/_get/#syntaxe","title":"Syntaxe","text":"<p><code>$http.get( url [ , options ] )</code></p>"},{"location":"libs/%24http/_get/#parametres","title":"Param\u00e8tres","text":"<code>url</code> string URL \u00e0 appeler <code>options</code> map Param\u00e8tres suppl\u00e9mentaires d'appel. Le param\u00e8tre est identique au param\u00e8tre <code>options</code> de $data.request, \u00e0 l'exception  de la propri\u00e9t\u00e9 <code>method</code> qui est forc\u00e9e \u00e0 <code>GET</code>."},{"location":"libs/%24http/_get/#retour","title":"Retour","text":"<p>Objet de type <code>map</code> contenant les \u00e9l\u00e9ments de la r\u00e9ponse (statut, headers, payload, mimetype, charset, etc.)</p>"},{"location":"libs/%24http/_get/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24http/_post/","title":"<code>$http.post</code>","text":""},{"location":"libs/%24http/_post/#description","title":"Description","text":"<p>M\u00e9thode raccourcie pour effectuer une requ\u00eate de type <code>POST</code>.</p> <p>La m\u00e9thode est identique \u00e0 $data.request, \u00e0 la diff\u00e9rence que l'option <code>method</code> est automatiquement d\u00e9finie \u00e0 <code>POST</code>.</p>"},{"location":"libs/%24http/_post/#syntaxe","title":"Syntaxe","text":"<p><code>$http.post( url [ , options ] )</code></p>"},{"location":"libs/%24http/_post/#parametres","title":"Param\u00e8tres","text":"<code>url</code> string URL \u00e0 appeler <code>options</code> map Param\u00e8tres suppl\u00e9mentaires d'appel. Le param\u00e8tre est identique au param\u00e8tre <code>options</code> de $data.request, \u00e0 l'exception de la propri\u00e9t\u00e9 <code>method</code> qui est forc\u00e9e \u00e0 <code>POST</code>."},{"location":"libs/%24http/_post/#retour","title":"Retour","text":"<p>Objet de type <code>map</code> contenant les \u00e9l\u00e9ments de la r\u00e9ponse (statut, headers, payload, mimetype, charset, etc.)</p>"},{"location":"libs/%24http/_post/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24http/_request/","title":"<code>$http.request</code>","text":""},{"location":"libs/%24http/_request/#description","title":"Description","text":"<p>G\u00e9n\u00e8re une requ\u00eate HTTP.</p>"},{"location":"libs/%24http/_request/#syntaxe","title":"Syntaxe","text":"<p><code>$http.request( url [ , options ] )</code></p>"},{"location":"libs/%24http/_request/#parametres","title":"Param\u00e8tres","text":"<code>url</code> string URL \u00e0 appeler <code>options</code> map <p>Param\u00e8tres suppl\u00e9mentaires d'appel. En l'absence de param\u00e8tres, la m\u00e9thode effectue un simple GET sur l'URL. Les options reconnues  sont:</p> <code>method</code> string M\u00e9thode d'appel; peut valoir <code>GET</code>, <code>POST</code>, <code>DELETE</code>, <code>PUT</code> ou <code>PATCH</code>. Si non d\u00e9fini, la m\u00e9thode est d\u00e9termin\u00e9e en fonction des autres options: si un payload ou des inputs sont pr\u00e9sents, la m\u00e9thode par d\u00e9faut sera <code>POST</code>. Dans le cas contraire, la m\u00e9thode par d\u00e9faut sera <code>GET</code>. Cette derni\u00e8re est la m\u00e9thode par d\u00e9faut si aucune option n'est sp\u00e9cifi\u00e9e. <code>type</code> string Type de requ\u00eate \u00e0 construire; peut valoir <code>none</code>, <code>multipart</code>,  <code>form</code>, <code>data</code>. S'il n'est pas sp\u00e9cifi\u00e9, le type est d\u00e9termin\u00e9 en  fonction des autres options. Ainsi, si un <code>payload</code> est pr\u00e9sent, le  type sera consid\u00e9r\u00e9 comme <code>data</code>. Si des <code>inputs</code> sont fournis, le  type sera <code>form</code>, sauf en cas de pr\u00e9sence de fichiers parmi ces  inputs. Dans ce cas, le type sera <code>multipart</code>. En l'absence  d'inputs ou de payload, le type sera <code>none</code>. <code>parameters</code> map Param\u00e8tres d'URL; doit se pr\u00e9senter sous la forme d'une map  cl\u00e9/valeur; les param\u00e8tres d\u00e9finis ici seront ajout\u00e9s \u00e0 l'URL <code>inputs</code> map Champs de formulaire \u00e0 envoyer (dans le cas o\u00f9 le <code>type</code> est <code>form</code>  ou <code>multipart</code>); doit se pr\u00e9senter sous la forme d'une map  cl\u00e9/valeur (la valeur pouvant \u00eatre une valeur lit\u00e9rale ou un fichier) <code>payload</code> string / file Contenu \u00e0 envoyer (uniquement dans le cas o\u00f9 le <code>type</code> est <code>data</code>;  peut \u00eatre une valeur lit\u00e9rale ou un fichier <code>headers</code> map Map cl\u00e9/valeur d\u00e9crivant les headers \u00e0 reprendre dans la requ\u00eate <code>auth</code> map <p>Objet d\u00e9crivant la m\u00e9thode d'authentification sur le service; le contenu de l'objet varie en fonction du type d'authentification; les m\u00e9thodes d'authentification actuellement reconnues sont:</p> <ul> <li>Basic authentication: <code>{ type: \"basic\", username: \"abc\", password: \"xyz\" }</code></li> <li>Bearer token: <code>{ type: \"bearer\", token: \"abcxyz...\" }</code></li> </ul> <p>\u00c0 noter qu'il est \u00e9galement possible de g\u00e9rer l'authentification en agissant directement au niveau des headers de la requ\u00eate</p> <code>sslContext</code> array <p>Permet de r\u00e9f\u00e9rencer un certificat \u00e0 utiliser pour la connexion SSL.  Cette valeur doit \u00eatre une table contenant les \u00e9l\u00e9ments suivants:</p> <ul> <li><code>file</code>: Objet de type <code>file</code> r\u00e9f\u00e9ren\u00e7ant le keystore</li> <li><code>type</code>: Type de keystore (jceks, jks, dks, pkcs11, pkcs12) - voir     KeyStore Types</li> <li><code>storePassword</code>: Mot de passe du keystore</li> <li><code>keyPassword</code>: Mot de passe du certificat</li> </ul> <code>timeout</code> number Dur\u00e9e de timeout en secondes (par d\u00e9faut 0) <code>charset</code> string <p>Charset \u00e0 utiliser pour la requ\u00eate.</p> <p>Si la propri\u00e9t\u00e9 n'est pas d\u00e9finie, le charset utilis\u00e9 par d\u00e9faut  est UTF-8. Il est possible de sp\u00e9cifier un charset vide ou <code>null</code>. Cela peut \u00eatre n\u00e9cessaire pour certains serveurs distant qui ne  supportent pas la pr\u00e9sence d'un charset et d'un boundary dans un content-type multipart par exemple.</p> <code>boundary</code> string Boundary \u00e0 utiliser dans le cas de requ\u00eate multipart. Par d\u00e9faut le  boundary est g\u00e9n\u00e9r\u00e9 automatiquement. <code>multipartMode</code> string <p>Mode de requ\u00eate multipart. Les valeurs possibles sont:</p> <ul> <li>\"strict\": mode compatible RFC 822, RFC 2045, RFC 2046; c'est      ce mode qui est appliqu\u00e9 par d\u00e9faut</li> <li>\"lax\": mode browser-compatible, dans ce mode seul le     Content-Disposition est \u00e9crit; s'appuie sur le charset du contenu</li> <li>\"rfc6532\": mode compatible RFC 6532</li> </ul> <p>Voir HttpMultipartMode</p> <code>destfile</code> file / string Fichier dans lequel les donn\u00e9es de la r\u00e9ponse doivent \u00eatre inscrites  (peut d\u00e9signer soit un <code>file</code> soit un path de mani\u00e8re lit\u00e9rale). Il  est tr\u00e8s fortement recommand\u00e9 d'utiliser cette option pour le traitement de gros fichiers afin d'\u00e9viter des erreurs de type  \"OutOfMemory\". <code>onprogress</code> function <p>Fonction de callback \u00e0 invoquer pour donner \u00e0 l'application un  retour sur l'\u00e9tat d'avancement du traitement. La fonction de  callback, si d\u00e9finie, est invoqu\u00e9e toutes les secondes durant le  traitement de la requ\u00eate.</p> <p>Exemple d'utilisation:</p> <pre><code>$http.request(\"some_online_url\", {\n  method: \"GET\",\n  destfile: $file.load(\"C:/Temp/sample.zip\"),\n  onprogress: function(event) {\n    $logger.info($str.format(event.progress, { type: \"double\", mode: \"percent\", pattern: \"0.00\" }) &amp; \"%\");\n  }\n});\n</code></pre> <p>Le param\u00e8tre <code>event</code> de la fonction de callback est un map contenant propri\u00e9t\u00e9s suivantes:</p> <ul> <li><code>loaded</code>: quantit\u00e9 de donn\u00e9es d\u00e9j\u00e0 trait\u00e9es</li> <li><code>total</code>: quantit\u00e9 total de donn\u00e9es attendues</li> <li><code>progress</code>: rapport <code>loaded / total</code></li> <li><code>target</code>: valeur donnant une indication sur la cible de l'event</li> </ul> <p>La fonction de callback peut interrompre le traitement en retournant la valeur <code>false</code>.</p> <code>interval</code> number Intervalle de temps en millisecondes entre deux appels de la fonction  de callback <code>onprogress</code>. Par d\u00e9faut, l'intervalle est fix\u00e9 \u00e0 1000  (1 seconde)."},{"location":"libs/%24http/_request/#retour","title":"Retour","text":"<p>Objet de type <code>map</code> contenant les \u00e9l\u00e9ments de la r\u00e9ponse (statut, headers,  payload, mimetype, charset, etc.)</p>"},{"location":"libs/%24http/_request/#exemple","title":"Exemple","text":"<p>Exemple de t\u00e9l\u00e9chargement d'un fichier avec affichage de l'\u00e9tat de  progression toutes les 2.5 secondes dans le log.</p> <pre><code>$http.request(\n    \"https://public.madd.bfs.admin.ch/ch.zip\", {\n        method: \"GET\",\n        destfile: $file.load(\"c:/Temp/ch.zip\"),\n        onprogress: function(event) {\n            $logger.info($str.format(event.progress, {\n                type: \"double\", mode: \"percent\", pattern: \"0.00\" }) &amp; \"%\");\n        },\n        interval: 2500\n    }\n);\n$logger.info(\"done\");\n</code></pre> <p>La trace g\u00e9n\u00e9r\u00e9e par le script ci-dessus est la suivante:</p> <pre><code>2024-01-06 17:41:38,973738 DEBUG ch.epilogic.ewt.utils.EwtHttpUtils.sendHttpRequest():357 - Invoke HTTP using default client builder\n2024-01-06 17:41:39,820300 DEBUG ch.epilogic.ewt.utils.EwtHttpUtils.sendHttpRequest():586 - HTTP request status: 200 (OK)\n2024-01-06 17:41:42,588705 INFO  ch.epilogic.ewt.scripts.library.EwtScriptLibLogger.infoApp():260 coupon - 0.79%\n2024-01-06 17:41:45,089226 INFO  ch.epilogic.ewt.scripts.library.EwtScriptLibLogger.infoApp():260 coupon - 2.80%\n2024-01-06 17:41:47,590814 INFO  ch.epilogic.ewt.scripts.library.EwtScriptLibLogger.infoApp():260 coupon - 5.80%\n2024-01-06 17:41:50,094181 INFO  ch.epilogic.ewt.scripts.library.EwtScriptLibLogger.infoApp():260 coupon - 8.29%\n...\n2024-01-06 17:42:57,695878 INFO  ch.epilogic.ewt.scripts.library.EwtScriptLibLogger.infoApp():260 coupon - 83.84%\n2024-01-06 17:43:00,198145 INFO  ch.epilogic.ewt.scripts.library.EwtScriptLibLogger.infoApp():260 coupon - 86.84%\n2024-01-06 17:43:02,698229 INFO  ch.epilogic.ewt.scripts.library.EwtScriptLibLogger.infoApp():260 coupon - 90.20%\n2024-01-06 17:43:05,200939 INFO  ch.epilogic.ewt.scripts.library.EwtScriptLibLogger.infoApp():260 coupon - 92.39%\n2024-01-06 17:43:07,703469 INFO  ch.epilogic.ewt.scripts.library.EwtScriptLibLogger.infoApp():260 coupon - 94.77%\n2024-01-06 17:43:10,206239 INFO  ch.epilogic.ewt.scripts.library.EwtScriptLibLogger.infoApp():260 coupon - 97.87%\n2024-01-06 17:43:11,648872 INFO  ch.epilogic.ewt.scripts.library.EwtScriptLibLogger.infoApp():260 coupon - 100.00%\n2024-01-06 17:43:11,669768 INFO  ch.epilogic.ewt.scripts.library.EwtScriptLibLogger.infoApp():260 coupon - done\n</code></pre>"},{"location":"libs/%24i18n/","title":"<code>$i18n</code>","text":"<p>Alias: <code>$locale</code></p> <p>Ensemble de m\u00e9thodes li\u00e9es \u00e0 l'internationalisation.</p>"},{"location":"libs/%24i18n/_getLabel/","title":"<code>$i18n.getLabel</code>","text":""},{"location":"libs/%24i18n/_getLabel/#description","title":"Description","text":"<p>Retourne la valeur du libell\u00e9 indiqu\u00e9, selon la locale actuelle.</p>"},{"location":"libs/%24i18n/_getLabel/#syntaxe","title":"Syntaxe","text":"<p><code>$i18n.getLabel( key [ , defaultValue [ , resourceName ] ] )</code></p>"},{"location":"libs/%24i18n/_getLabel/#parametres","title":"Param\u00e8tres","text":"<code>key</code> string Nom du libell\u00e9 \u00e0 r\u00e9cup\u00e9rer <code>defaultValue</code> string Valeur par d\u00e9faut \u00e0 retourner si le libell\u00e9 n'existe pas <code>resourceName</code> string Nom du bundle de ressource dans lequel r\u00e9cup\u00e9rer le libell\u00e9. Peut \u00eatre <code>null</code> ou vide, auquel cas le libell\u00e9 sera r\u00e9cup\u00e9r\u00e9 \u00e0 partir du bundle d\u00e9fini dans la propri\u00e9t\u00e9 <code>bundles.descriptBundle</code>  du fichier de configuration (ou <code>language</code> si la propri\u00e9t\u00e9 n'est pas  d\u00e9finie)."},{"location":"libs/%24i18n/_getLabel/#retour","title":"Retour","text":"<p>Voir description.</p>"},{"location":"libs/%24i18n/_getLabel/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24i18n/_getLabels/","title":"<code>$i18n.getLabels</code>","text":""},{"location":"libs/%24i18n/_getLabels/#description","title":"Description","text":"<p>Retourne une map de libell\u00e9s correspondant \u00e0 l'expression wildcard donn\u00e9e.</p> <p>Cette m\u00e9thode peut permettre d'envoyer des libell\u00e9s internationalis\u00e9s dans  l'arbre de sortie afin que la feuille de style puisse disposer des libell\u00e9s  dans la bonne langue.</p>"},{"location":"libs/%24i18n/_getLabels/#syntaxe","title":"Syntaxe","text":"<p><code>$i18n.getLabels( expr [ , resourceName ] )</code></p>"},{"location":"libs/%24i18n/_getLabels/#parametres","title":"Param\u00e8tres","text":"<code>expr</code> string Expression wildcard d\u00e9crivant le ou les libell\u00e9s \u00e0 r\u00e9cup\u00e9rer <code>resourceName</code> string Nom du bundle de ressource dans lequel r\u00e9cup\u00e9rer le libell\u00e9. Peut \u00eatre <code>null</code> ou vide, auquel cas le libell\u00e9 sera r\u00e9cup\u00e9r\u00e9 \u00e0 partir du bundle d\u00e9fini dans la propri\u00e9t\u00e9 <code>bundles.descriptBundle</code> du fichier de configuration (ou <code>language</code> si la propri\u00e9t\u00e9 n'est pas d\u00e9finie)."},{"location":"libs/%24i18n/_getLabels/#retour","title":"Retour","text":"<p>Map contenant les cl\u00e9s/valeurs de libell\u00e9s.</p>"},{"location":"libs/%24i18n/_getLabels/#exemple","title":"Exemple","text":"<p>L'exemple ci-dessous montre comment on r\u00e9cup\u00e8re tous les libell\u00e9s dont le nom d\u00e9bute par <code>style.mailing.</code> et qu'on les place dans un objet xml  \"labels\" apr\u00e8s les avoir convertis en xml.</p> <pre><code>$out.addContent(\"labels\", $xml.xmlize($i18n.getLabels(\"style.mailing.*\")), \"xml\");\n</code></pre>"},{"location":"libs/%24i18n/_getLocale/","title":"<code>$i18n.getLocale</code>","text":""},{"location":"libs/%24i18n/_getLocale/#description","title":"Description","text":"<p>Retourne la locale actuelle</p>"},{"location":"libs/%24i18n/_getLocale/#syntaxe","title":"Syntaxe","text":"<p><code>$i18n.getLocale()</code></p>"},{"location":"libs/%24i18n/_getLocale/#retour","title":"Retour","text":"<p>Nom de la locale actuelle</p>"},{"location":"libs/%24i18n/_getLocale/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24i18n/_setLocale/","title":"<code>$i18n.setLocale</code>","text":""},{"location":"libs/%24i18n/_setLocale/#description","title":"Description","text":"<p>Modifie la locale actuelle.</p> <p>La modification est valide pour le thread actuelle uniquement.</p>"},{"location":"libs/%24i18n/_setLocale/#syntaxe","title":"Syntaxe","text":"<p><code>$i18n.setLocale( locale )</code></p>"},{"location":"libs/%24i18n/_setLocale/#parametres","title":"Param\u00e8tres","text":"<code>locale</code> string Nom de la nouvelle locale"},{"location":"libs/%24i18n/_setLocale/#retour","title":"Retour","text":"<p>Nom de la locale en vigueur apr\u00e8s appel de la m\u00e9thode.</p>"},{"location":"libs/%24i18n/_setLocale/#exemple","title":"Exemple","text":"<pre><code>$i18n.setLocale(\"utf-8\")\n</code></pre>"},{"location":"libs/%24image/","title":"<code>$image</code>","text":"<p>Alias: <code>$img</code></p> <p>Cette librairie est en cours de d\u00e9veloppement.</p>"},{"location":"libs/%24json/","title":"<code>$json</code>","text":"<p>Outils de manipulation de donn\u00e9es JSON</p>"},{"location":"libs/%24json/_escape/","title":"<code>$json.escape</code>","text":""},{"location":"libs/%24json/_escape/#description","title":"Description","text":"<p>\u00c9chappe une string.</p>"},{"location":"libs/%24json/_escape/#syntaxe","title":"Syntaxe","text":"<p><code>$json.escape( value )</code></p>"},{"location":"libs/%24json/_escape/#parametres","title":"Param\u00e8tres","text":"<code>value</code> string Valeur \u00e0 traiter"},{"location":"libs/%24json/_escape/#retour","title":"Retour","text":"<p>Cha\u00eene de caract\u00e8res compatible json</p>"},{"location":"libs/%24json/_escape/#exemple","title":"Exemple","text":"<pre><code>$json.escape(`C'est un \"test\" !`);\n</code></pre>"},{"location":"libs/%24json/_free/","title":"<code>$json.free</code>","text":""},{"location":"libs/%24json/_free/#description","title":"Description","text":"<p>Lib\u00e8re un arbre json du cache pr\u00e9c\u00e9demment enregistr\u00e9</p>"},{"location":"libs/%24json/_free/#syntaxe","title":"Syntaxe","text":"<p><code>$json.free( key )</code></p>"},{"location":"libs/%24json/_free/#parametres","title":"Param\u00e8tres","text":"<code>key</code> string <p>Cl\u00e9 r\u00e9f\u00e9ren\u00e7ant une entr\u00e9e du cache</p> <p>Si la valeur vaut \"*\", le cache est enti\u00e8rement vid\u00e9</p>"},{"location":"libs/%24json/_free/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code></p>"},{"location":"libs/%24json/_free/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24json/_load/","title":"<code>$json.load</code>","text":""},{"location":"libs/%24json/_load/#description","title":"Description","text":"<p>Pr\u00e9charge un arbre json en m\u00e9moire en vue de son traitement. La dur\u00e9e de vie du cache se limite \u00e0 l'ex\u00e9cution du script.</p>"},{"location":"libs/%24json/_load/#syntaxe","title":"Syntaxe","text":"<p><code>$json.load( json [ , key , [ subset ] ] )</code></p>"},{"location":"libs/%24json/_load/#parametres","title":"Param\u00e8tres","text":"<code>json</code> string Arbre json \u00e0 charger <code>key</code> string Cl\u00e9 \u00e0 r\u00e9utiliser <code>subset</code> string Expression permettant de filtrer le contenu (pour n'enregistrer en cache qu'un sous-ensemble de l'arbre json)"},{"location":"libs/%24json/_load/#retour","title":"Retour","text":"<p>Cl\u00e9 correspondant \u00e0 l'arbre json, ou null si l'arbre json n'est pas valide.</p>"},{"location":"libs/%24json/_load/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24json/_parse/","title":"<code>$json.parse</code>","text":""},{"location":"libs/%24json/_parse/#description","title":"Description","text":"<p>Construit un objet typ\u00e9 \u00e0 partir d'une version s\u00e9rialis\u00e9e d'un objet json.</p> <p>Comparaison avec les m\u00e9thodes <code>$json.load</code> et <code>$json.path</code></p> <p>Les m\u00e9thodes <code>$json.load</code> et <code>$json.path</code> (ainsi que <code>$json.free</code>)  permettent d'extraire des \u00e9l\u00e9ments d'un objet json au moyen d'expression  json-path.</p> <p>La m\u00e9thode <code>$json.parse</code> quant \u00e0 elle construit un objet complet qui  reprend tous les \u00e9l\u00e9ments de l'arbre json donn\u00e9 en entr\u00e9e.</p> <p>Fondamentalement, les deux variantes permettent d'extraire des valeurs  d'un objet json, mais par des moyens diff\u00e9rents. La m\u00e9thode  <code>$json.parse</code> est plut\u00f4t destin\u00e9e \u00e0 extraire des donn\u00e9es dont on  conna\u00eet la position par avance.. La m\u00e9thode <code>$json.path</code> quant \u00e0 elle  permet de le faire au moyen d'une expression qui peut \u00eatre modifi\u00e9e  dynamiquement \u00e0 l'ex\u00e9cution. Par exemple on utilisera cette solution si  on souhaite que l'expression json-path soit modifiable via  l'infrastructure de l'application.</p>"},{"location":"libs/%24json/_parse/#syntaxe","title":"Syntaxe","text":"<p><code>$json.parse( json )</code></p>"},{"location":"libs/%24json/_parse/#parametres","title":"Param\u00e8tres","text":"<code>json</code> string Arbre json \u00e0 charger"},{"location":"libs/%24json/_parse/#retour","title":"Retour","text":"<p>Objet (g\u00e9n\u00e9ralement un map) reprenant les donn\u00e9es de l'arbre json sous forme  d'objets.</p>"},{"location":"libs/%24json/_parse/#exemple","title":"Exemple","text":"<pre><code>var json = `{ \"value\": \"Hello world\",\n              \"foo\": 1,\n              \"bar\": true,\n               \"more\": [\n                 { a: 1 },\n                 { a: 2 },\n                 \"end\"\n               ] }`;\n\nvar obj = $json.parse(json);\n$logger.info(obj.value);        // Hello world\n$logger.info(obj.foo);          // 1\n$logger.info(obj.bar);          // true\n$logger.info(obj.more[1].a);    // 2\n</code></pre>"},{"location":"libs/%24json/_path/","title":"<code>$json.path</code>","text":""},{"location":"libs/%24json/_path/#description","title":"Description","text":"<p>\u00c9value une expression JSON-Path</p>"},{"location":"libs/%24json/_path/#syntaxe","title":"Syntaxe","text":"<p><code>$json.path( json , expression [ , defaultValue ] )</code></p>"},{"location":"libs/%24json/_path/#parametres","title":"Param\u00e8tres","text":"<code>json</code> string Arbre json ou cl\u00e9 pr\u00e9c\u00e9demment obtenue via <code>$json.load</code> <code>expression</code> string Expression json-path \u00e0 \u00e9valuer <code>defaultValue</code> any Valeur par d\u00e9faut \u00e0 retourner en cas d'erreur, c.-\u00e0-d. typiquement si l'expression r\u00e9f\u00e9rence un \u00e9l\u00e9ment qui n'existe pas"},{"location":"libs/%24json/_path/#retour","title":"Retour","text":"<p>Valeur correspondant \u00e0 l'expression. En cas d'erreur (path non trouv\u00e9),  c'est la valeur par d\u00e9faut qui est retourn\u00e9e. Si aucun arbre json n'est donn\u00e9, la m\u00e9thode retourne <code>null</code>.</p>"},{"location":"libs/%24json/_path/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24json/_quote/","title":"<code>$json.quote</code>","text":""},{"location":"libs/%24json/_quote/#description","title":"Description","text":"<p>\u00c9chappe une string et place celle-ci dans des doubles-guillemets.</p>"},{"location":"libs/%24json/_quote/#syntaxe","title":"Syntaxe","text":"<p><code>$json.quote( value )</code></p>"},{"location":"libs/%24json/_quote/#parametres","title":"Param\u00e8tres","text":"<code>value</code> string Valeur \u00e0 traiter"},{"location":"libs/%24json/_quote/#retour","title":"Retour","text":"<p>Cha\u00eene de caract\u00e8res compatible json, plac\u00e9e entre guillemets.</p>"},{"location":"libs/%24json/_quote/#exemple","title":"Exemple","text":"<pre><code>$json.quote(`C'est un \"test\" !`);\n</code></pre>"},{"location":"libs/%24json/_toJson/","title":"<code>$json.toJson</code>","text":"<p>Alias: <code>$json.jsonify</code>, <code>$json.stringify</code>, <code>$json.toJSON</code></p>"},{"location":"libs/%24json/_toJson/#description","title":"Description","text":"<p>G\u00e9n\u00e8re une version json d'un objet.</p>"},{"location":"libs/%24json/_toJson/#syntaxe","title":"Syntaxe","text":"<p><code>$json.toJson( data )</code></p>"},{"location":"libs/%24json/_toJson/#parametres","title":"Param\u00e8tres","text":"<code>data</code> any Objet \u00e0 traiter"},{"location":"libs/%24json/_toJson/#retour","title":"Retour","text":"<p>Valeur de type <code>string</code> repr\u00e9sentant la version json de l'objet.</p>"},{"location":"libs/%24json/_toJson/#exemple","title":"Exemple","text":"<pre><code>var foo = { a: 1, b: `le \"test\" &amp; l'apostrophe` };\n$json.toJson(foo);\n</code></pre> <p>Le code ci-dessus construit une valeur json de ce genre:</p> <pre><code>{\"a\":1,\"b\":\"le \\\"test\\\" &amp; l'apostrophe\"}\n</code></pre>"},{"location":"libs/%24logger/","title":"<code>$logger</code>","text":"<p>Alias: <code>$log</code></p> <p>Librairie fournissant des m\u00e9thodes pour l'inscription de messages  dans le journal.</p>"},{"location":"libs/%24logger/_debug/","title":"<code>$logger.debug</code>","text":""},{"location":"libs/%24logger/_debug/#description","title":"Description","text":"<p>Inscrit une ligne de log de niveau DEBUG.</p>"},{"location":"libs/%24logger/_debug/#syntaxe","title":"Syntaxe","text":"<p><code>$logger.debug( message )</code></p>"},{"location":"libs/%24logger/_debug/#parametres","title":"Param\u00e8tres","text":"<code>message</code> any Message \u00e0 inscrire dans le log. La valeur peut \u00eatre une string ou un objet. Dans ce cas, c'est sa repr\u00e9sentation en string qui sera inscrite au log."},{"location":"libs/%24logger/_debug/#retour","title":"Retour","text":"<p>Retourne la valeur du param\u00e8tre <code>message</code>.</p>"},{"location":"libs/%24logger/_debug/#exemple","title":"Exemple","text":"<pre><code>$logger.debug(\"Hello World!\");\n</code></pre>"},{"location":"libs/%24logger/_error/","title":"<code>$logger.error</code>","text":""},{"location":"libs/%24logger/_error/#description","title":"Description","text":"<p>Inscrit une ligne de log de niveau ERROR.</p>"},{"location":"libs/%24logger/_error/#syntaxe","title":"Syntaxe","text":"<p><code>$logger.error( message )</code></p>"},{"location":"libs/%24logger/_error/#parametres","title":"Param\u00e8tres","text":"<code>message</code> any Message \u00e0 inscrire dans le log. La valeur peut \u00eatre une string ou un objet. Dans ce cas, c'est sa repr\u00e9sentation en string qui sera inscrite au log."},{"location":"libs/%24logger/_error/#retour","title":"Retour","text":"<p>Retourne la valeur du param\u00e8tre <code>message</code>.</p>"},{"location":"libs/%24logger/_error/#exemple","title":"Exemple","text":"<pre><code>$logger.error(\"Hello World!\");\n</code></pre>"},{"location":"libs/%24logger/_fatal/","title":"<code>$logger.fatal</code>","text":""},{"location":"libs/%24logger/_fatal/#description","title":"Description","text":"<p>Inscrit une ligne d'erreur bloquante. Attention, cette m\u00e9thode g\u00e9n\u00e8re un \u00e9cran d'erreur.</p>"},{"location":"libs/%24logger/_fatal/#syntaxe","title":"Syntaxe","text":"<p><code>$logger.fatal( message )</code></p>"},{"location":"libs/%24logger/_fatal/#parametres","title":"Param\u00e8tres","text":"<code>message</code> any Message \u00e0 inscrire dans le log. La valeur peut \u00eatre une string ou un objet. Dans ce cas, c'est sa repr\u00e9sentation en string qui sera inscrite au log."},{"location":"libs/%24logger/_fatal/#retour","title":"Retour","text":"<p>Cette m\u00e9thode n'a pas de valeur de retour \u00e9tant donn\u00e9 qu'elle provoque une exception explicite.</p>"},{"location":"libs/%24logger/_fatal/#exemple","title":"Exemple","text":"<pre><code>$logger.fatal(\"Hello World!\");\n</code></pre>"},{"location":"libs/%24logger/_info/","title":"<code>$logger.info</code>","text":""},{"location":"libs/%24logger/_info/#description","title":"Description","text":"<p>Inscrit une ligne de log de niveau INFO.</p>"},{"location":"libs/%24logger/_info/#syntaxe","title":"Syntaxe","text":"<p><code>$logger.info( message )</code></p>"},{"location":"libs/%24logger/_info/#parametres","title":"Param\u00e8tres","text":"<code>message</code> any Message \u00e0 inscrire dans le log. La valeur peut \u00eatre une string ou un objet. Dans ce cas, c'est sa repr\u00e9sentation en string qui sera inscrite au log."},{"location":"libs/%24logger/_info/#retour","title":"Retour","text":"<p>Retourne la valeur du param\u00e8tre <code>message</code>.</p>"},{"location":"libs/%24logger/_info/#exemple","title":"Exemple","text":"<pre><code>$logger.info(\"Hello World!\");\n</code></pre>"},{"location":"libs/%24logger/_log/","title":"<code>$logger.log</code>","text":""},{"location":"libs/%24logger/_log/#description","title":"Description","text":"<p>Inscrit une ligne de log selon le niveau indiqu\u00e9.</p> <p>De pr\u00e9f\u00e9rence, utiliser directement les autres m\u00e9thodes de logs, p.ex.  <code>$logger.info</code> pour g\u00e9n\u00e9rer une trace d'info.</p>"},{"location":"libs/%24logger/_log/#syntaxe","title":"Syntaxe","text":"<p><code>$logger.log( level , message )</code></p>"},{"location":"libs/%24logger/_log/#parametres","title":"Param\u00e8tres","text":"<code>level</code> string <p>Level du message \u00e0 logger. Le level peut \u00eatre d\u00e9fini au moyen des valeurs suivantes:</p> <ul> <li><code>trace</code> ou <code>1</code></li> <li><code>debug</code> ou <code>2</code></li> <li><code>info</code> ou <code>3</code></li> <li><code>warn</code> ou <code>4</code></li> <li><code>error</code> ou <code>5</code></li> </ul> <code>message</code> any Message \u00e0 inscrire dans le log. La valeur peut \u00eatre une string ou un objet. Dans ce cas, c'est sa repr\u00e9sentation en string qui sera inscrite au log."},{"location":"libs/%24logger/_log/#retour","title":"Retour","text":"<p>Retourne la valeur du param\u00e8tre <code>message</code>.</p>"},{"location":"libs/%24logger/_log/#exemple","title":"Exemple","text":"<pre><code>$logger.log(\"info\", Hello world!\");\n</code></pre>"},{"location":"libs/%24logger/_print/","title":"<code>$logger.print</code>","text":""},{"location":"libs/%24logger/_print/#description","title":"Description","text":"<p>Inscrit du texte sur la sortie standard (<code>System.out</code>).</p> <p>La m\u00e9thode utilise la m\u00e9thode java <code>System.out.print</code> pour  l'affichage du message. La ligne est donc inscrite sans retour de ligne.</p>"},{"location":"libs/%24logger/_print/#syntaxe","title":"Syntaxe","text":"<p><code>$logger.print( message )</code></p>"},{"location":"libs/%24logger/_print/#parametres","title":"Param\u00e8tres","text":"<code>message</code> any Message \u00e0 inscrire dans la sortie standard. La valeur peut \u00eatre  une string ou un objet. Dans ce cas, c'est sa repr\u00e9sentation en  string qui sera inscrite au log."},{"location":"libs/%24logger/_print/#retour","title":"Retour","text":"<p>Retourne la valeur du param\u00e8tre <code>message</code>.</p>"},{"location":"libs/%24logger/_print/#exemple","title":"Exemple","text":"<pre><code>$logger.print(\"Hello \");\n$logger.print(\"World!\\n\");\n</code></pre>"},{"location":"libs/%24logger/_println/","title":"<code>$logger.println</code>","text":""},{"location":"libs/%24logger/_println/#description","title":"Description","text":"<p>Inscrit une ligne de texte sur la sortie standard (<code>System.out</code>).</p> <p>La m\u00e9thode utilise la m\u00e9thode java <code>System.out.println</code> pour l'affichage du message. La ligne est donc inscrite avec un retour de ligne.</p>"},{"location":"libs/%24logger/_println/#syntaxe","title":"Syntaxe","text":"<p><code>$logger.println( message )</code></p>"},{"location":"libs/%24logger/_println/#parametres","title":"Param\u00e8tres","text":"<code>message</code> any Message \u00e0 inscrire dans la sortie standard. La valeur peut \u00eatre une string ou un objet. Dans ce cas, c'est sa repr\u00e9sentation en string qui sera inscrite au log."},{"location":"libs/%24logger/_println/#retour","title":"Retour","text":"<p>Retourne la valeur du param\u00e8tre <code>message</code>.</p>"},{"location":"libs/%24logger/_println/#exemple","title":"Exemple","text":"<pre><code>$logger.println(\"Hello World!\");\n</code></pre>"},{"location":"libs/%24logger/_rainbow/","title":"<code>$logger.rainbow</code>","text":""},{"location":"libs/%24logger/_rainbow/#description","title":"Description","text":"<p>Lance un test d'inscription de tous les types de messages.</p> <p>Cette m\u00e9thode est surtout utile pour v\u00e9rifier la configuration du logger.</p>"},{"location":"libs/%24logger/_rainbow/#syntaxe","title":"Syntaxe","text":"<p><code>$logger.rainbow()</code></p>"},{"location":"libs/%24logger/_rainbow/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24logger/_rainbow/#exemple","title":"Exemple","text":"<pre><code>$logger.rainbow();\n</code></pre>"},{"location":"libs/%24logger/_setLevel/","title":"<code>$logger.setLevel</code>","text":""},{"location":"libs/%24logger/_setLevel/#description","title":"Description","text":"<p>D\u00e9finit le nouveau log level de l'application</p>"},{"location":"libs/%24logger/_setLevel/#syntaxe","title":"Syntaxe","text":"<p><code>$logger.setLevel( level [ , dest ] )</code></p>"},{"location":"libs/%24logger/_setLevel/#parametres","title":"Param\u00e8tres","text":"<code>level</code> string / number <p>Level \u00e0 d\u00e9finir. Le level peut \u00eatre d\u00e9fini au moyen des valeurs suivantes:</p> <ul> <li><code>trace</code> ou <code>1</code></li> <li><code>debug</code> ou <code>2</code></li> <li><code>info</code> ou <code>3</code></li> <li><code>warn</code> ou <code>4</code></li> <li><code>error</code> ou <code>5</code></li> </ul> <code>dest</code> string / number <p>Nom du logger \u00e0 modifier.</p> <p>Si le nom est \"application\" (ou \"app\"), alors l'op\u00e9ration est appliqu\u00e9e  sur le logger de l'application. Sinon le nom doit \u00eatre un path de classe  (par exemple \"ch.epilogic.ewt.engine\").</p> <p>La valeur par d\u00e9faut est \"app\".</p>"},{"location":"libs/%24logger/_setLevel/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code></p>"},{"location":"libs/%24logger/_setLevel/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24logger/_trace/","title":"<code>$logger.trace</code>","text":""},{"location":"libs/%24logger/_trace/#description","title":"Description","text":"<p>Inscrit une ligne de log de niveau TRACE.</p>"},{"location":"libs/%24logger/_trace/#syntaxe","title":"Syntaxe","text":"<p><code>$logger.trace( message )</code></p>"},{"location":"libs/%24logger/_trace/#parametres","title":"Param\u00e8tres","text":"<code>message</code> any Message \u00e0 inscrire dans le log. La valeur peut \u00eatre une string ou un objet. Dans ce cas, c'est sa repr\u00e9sentation en string qui sera inscrite au log."},{"location":"libs/%24logger/_trace/#retour","title":"Retour","text":"<p>Retourne la valeur du param\u00e8tre <code>message</code>.</p>"},{"location":"libs/%24logger/_trace/#exemple","title":"Exemple","text":"<pre><code>$logger.trace(\"Hello World!\");\n</code></pre>"},{"location":"libs/%24logger/_warn/","title":"<code>$logger.warn</code>","text":""},{"location":"libs/%24logger/_warn/#description","title":"Description","text":"<p>Inscrit une ligne de log de niveau WARN.</p>"},{"location":"libs/%24logger/_warn/#syntaxe","title":"Syntaxe","text":"<p><code>$logger.warn( message )</code></p>"},{"location":"libs/%24logger/_warn/#parametres","title":"Param\u00e8tres","text":"<code>message</code> any Message \u00e0 inscrire dans le log. La valeur peut \u00eatre une string ou un objet. Dans ce cas, c'est sa repr\u00e9sentation en string qui sera inscrite au log."},{"location":"libs/%24logger/_warn/#retour","title":"Retour","text":"<p>Retourne la valeur du param\u00e8tre <code>message</code>.</p>"},{"location":"libs/%24logger/_warn/#exemple","title":"Exemple","text":"<pre><code>$logger.warn(\"Hello World!\");\n</code></pre>"},{"location":"libs/%24mail/","title":"<code>$mail</code>","text":"<p>Librairie de gestion des e-mails.</p>"},{"location":"libs/%24mail/_genLinkMailtoSupport/","title":"<code>$mail.genLinkMailtoSupport</code>","text":""},{"location":"libs/%24mail/_genLinkMailtoSupport/#description","title":"Description","text":"<p>G\u00e9n\u00e8re un lien html de type mailto \u00e0 destination de l'adresse e-mail  d\u00e9finie adresse de contact pour le support.</p>"},{"location":"libs/%24mail/_genLinkMailtoSupport/#syntaxe","title":"Syntaxe","text":"<p><code>$mail.genLinkMailtoSupport( content [ , options ])</code></p>"},{"location":"libs/%24mail/_genLinkMailtoSupport/#parametres","title":"Param\u00e8tres","text":"<code>content</code> string Contenu de l'e-mail \u00e0 transmettre <code>options</code> map <p>Map contenant les options. Il est possible de d\u00e9finir les options  suivantes:</p> <code>apos</code> boolean Valeur <code>true</code>/<code>false</code> indiquant si l'\u00e9l\u00e9ment html g\u00e9n\u00e9r\u00e9 doit utiliser l'apostrophe pour d\u00e9limiter les valeurs d'attributs.  Par d\u00e9faut ce param\u00e8tre est consid\u00e9r\u00e9 comme <code>false</code> et c'est  le guillemet qui est utilis\u00e9. <code>subject</code> string Texte \u00e0 utiliser comme sujet de l'e-mail. Par d\u00e9faut, la m\u00e9thode g\u00e9n\u00e8re un libell\u00e9 standard, incluant le nom de  l'application <code>text</code> string Texte du lien \u00e0 g\u00e9n\u00e9rer. Par d\u00e9faut, le texte reprend la m\u00eame  valeur que celle du param\u00e8tre \"content\""},{"location":"libs/%24mail/_genLinkMailtoSupport/#retour","title":"Retour","text":"<p>Retourne le lien \"mailto\" g\u00e9n\u00e9r\u00e9</p>"},{"location":"libs/%24mail/_genLinkMailtoSupport/#exemple","title":"Exemple","text":"<pre><code>$msg.error(`Une erreur a \u00e9t\u00e9 d\u00e9tect\u00e9e lors de l'acc\u00e8s \u00e0 votre fiche de vendeur.\n            Cela emp\u00eache la finalisation de l'enregistrement.&lt;br/&gt;\n            Si le probl\u00e8me persiste, `::T &amp;\n                $mail.genLinkMailtoSupport(errcode, { text: \"veuillez addresser un e-mail au support en cliquant ici\" }) &amp; \n           `.&lt;br/&gt;Informations techniques: &lt;code&gt;${errcode}&lt;/code&gt;`::T,\n           null, { disableOutputEscaping: 'yes' });\n</code></pre>"},{"location":"libs/%24mail/_read/","title":"<code>$mail.read</code>","text":""},{"location":"libs/%24mail/_read/#description","title":"Description","text":"<p>Lit une bo\u00eete e-mail.</p> <p>La m\u00e9thode permet de renseigner les param\u00e8tres du serveur d'e-mail  de diff\u00e9rentes mani\u00e8res:</p> <ul> <li>soit en passant un nom de mailbox d\u00e9fini dans le config</li> <li>soit en passant explicitement les param\u00e8tres de connexion    <code>type</code>, <code>host</code>, <code>port</code> et \u00e9ventuellement <code>security</code></li> <li>soit en d\u00e9finissant les <code>properties</code> explicitement; dans    ce cas, veuillez vous reporter \u00e0 la documentation de javamail    pour conna\u00eetre les propri\u00e9t\u00e9s \u00e0 d\u00e9finir</li> </ul>"},{"location":"libs/%24mail/_read/#syntaxe","title":"Syntaxe","text":"<p><code>$mail.read( options )</code></p>"},{"location":"libs/%24mail/_read/#parametres","title":"Param\u00e8tres","text":"<code>options</code> map <p>Map pouvant contenir les options suivantes:</p> <code>mailbox</code> string Nom de la mailbox \u00e0 utiliser. Fait r\u00e9f\u00e9rence \u00e0 un <code>name</code> d'entr\u00e9e <code>email.mailbox</code> du config. <code>type</code> string Type de bo\u00eete mail. Les types reconnus sont \"pop3\", \"pop3s\", \"imap\" et \"imaps\". <code>host</code> string URL du host \u00e0 utiliser (si d\u00e9fini, prime sur les autres  valeurs de host) <code>port</code> number Port du serveur smtp \u00e0 utiliser (si d\u00e9fini, prime sur les autres  valeurs de port) <code>username</code> string Nom d'utilisateur pour l'authentification sur le serveur smtp  (si d\u00e9fini, prime sur le username d\u00e9fini ailleurs) <code>password</code> string Mot de passe \u00e0 utiliser pour l'authentification sur le serveur  smtp (si d\u00e9fini, prime sur le password d\u00e9fini ailleurs) <code>security</code> string Type de s\u00e9curit\u00e9. Peut prendre une des valeurs \"none\", \"starttls\" ou \"ssl\" (ce dernier est mis pour le mode \"ssl/tls\") <code>properties</code> map <p>Map de propri\u00e9t\u00e9 \u00e0 passer \u00e0 la session. Cette option permet de  passer tous les param\u00e8tres de connexion (p.ex \"mail.pop3.host\",  \"mail.pop3.port\", \"mail.pop3.starttls.enable\", etc.) ainsi que  des propri\u00e9t\u00e9s suppl\u00e9mentaires (p.ex \"mail.debug\",  \"mail.imap.timeout\", \"mail.pop3.timeout\", etc.).</p> <p>La liste exhaustive des propri\u00e9t\u00e9s est disponible sur les pages https://javaee.github.io/javamail/docs/api/com/sun/mail/imap/package-summary.html et https://javaee.github.io/javamail/docs/api/com/sun/mail/pop3/package-summary.html.</p> <p>Les propri\u00e9t\u00e9s d\u00e9finies via cette option priment sur celles  \u00e9quivalentes d\u00e9finies par la m\u00e9thode. Par exemple, le fait de  sp\u00e9cifier une propri\u00e9t\u00e9 \"mail.imap.ssl.host\" prime sur le host  d\u00e9fini au niveau de la section mailbox r\u00e9f\u00e9renc\u00e9e ou via la  propri\u00e9t\u00e9 <code>host</code>.</p> <code>folder</code> string Nom du dossier \u00e0 lire (par d\u00e9faut: \"INBOX\") <code>setFlags</code> array / string Liste de flags \u00e0 d\u00e9finir sur les messages lus. La valeur attendue  est soit un tableau, soit une comma-separated list pouvant contenir  les flags suivants: <code>seen</code>, <code>flagged</code>, <code>answered</code>, <code>deleted</code>,  <code>draft</code>, <code>recent</code>, <code>user</code>. Il est possible d'utiliser des flags  personnalis\u00e9s, mais il se peut que le serveur d'e-mail ne supporte  pas l'usage de tels flags. <code>flags</code> array / string <p>Liste de flags \u00e0 utiliser comme filtre. Les messages ayant l'un des flags \u00e9num\u00e9r\u00e9s de la liste ne sont pas lus. La valeur attendue est  soit un tableau, soit une comma-separated list pouvant contenir les  flags suivant: <code>seen</code>, <code>flagged</code>, <code>answered</code>, <code>deleted</code>, <code>draft</code>,  <code>recent</code>, <code>user</code>. Il est possible d'utiliser des flags personnalis\u00e9s,  mais il est se peut que le serveur e-mail ne supporte pas l'usage de  tels flags.</p> <p>Notez que les flags ne sont utilisables qu'en imap. Le filtre est  sans effet sur une session pop3.</p> <code>fetchProfile</code> array / string Liste d'\u00e9l\u00e9ments \u00e0 r\u00e9cup\u00e9rer. Par d\u00e9faut la m\u00e9thode r\u00e9cup\u00e8re toutes les parties des messages, mais pour des raisons de performances il  est possible d'indiquer \u00e0 la m\u00e9thode de ne r\u00e9cup\u00e9rer qu'une partie  des \u00e9l\u00e9ments, par exemple uniquement l'enveloppe sans le contenu.  La valeur attendue est soit un tableau, soit une comma-separated  list pouvant contenir les \u00e9l\u00e9ments suivants: <code>enveloppe</code>, <code>contentinfo</code>, <code>flags</code>, <code>size</code> ainsi que n'importe quel nom de header \u00e0 r\u00e9cup\u00e9rer du message (p.ex <code>X-mailer</code>). <code>getContent</code> boolean Flag <code>true</code>/<code>false</code> indiquant si on souhaite r\u00e9cup\u00e9rer le contenu  du message (par d\u00e9faut: <code>false</code>). Le contenu du message est toujours  retourn\u00e9 sous la forme d'un tableau. En principe il ne contient  qu'un seul \u00e9l\u00e9ment, mais il se peut que certains messages multipart  englobent diff\u00e9rentes repr\u00e9sentation du texte. <code>getAttachments</code> boolean Flag <code>true</code>/<code>false</code> indiquant si on souhaite r\u00e9cup\u00e9rer les  \u00e9ventuelles pi\u00e8ces jointes (par d\u00e9faut: <code>false</code>). <code>firstNum</code> number Num\u00e9ro du premier message \u00e0 r\u00e9cup\u00e9rer. <code>firstNum</code> et <code>lastNum</code> permettent de r\u00e9cup\u00e9rer les messages par blocs.  Les deux param\u00e8tres sont num\u00e9rot\u00e9s \u00e0 partir de 1. <code>lastNum</code> number Num\u00e9ro du dernier message \u00e0 r\u00e9cup\u00e9rer. <code>firstNum</code> et <code>lastNum</code> permettent de r\u00e9cup\u00e9rer les messages par blocs. Les deux param\u00e8tres sont num\u00e9rot\u00e9s \u00e0 partir de 1. Si le param\u00e8tre vaut 0,  cela signifie qu'on veut uniquement faire un test de connexion,  sans r\u00e9cup\u00e9rer de message."},{"location":"libs/%24mail/_read/#retour","title":"Retour","text":"<p>Retourne un tableau d'objets contenant les emails lus du serveur.</p>"},{"location":"libs/%24mail/_read/#exemple","title":"Exemple","text":"<pre><code>for (var msg : $mail.read({\n                   type: params[1],\n                   host: params[2],\n                   port: params[3],\n                   username: params[4],\n                   password: params[5],\n                   security: params[6],\n                   ignoreFlags: [ \"seen\", \"answered\" ],\n                   setFlags: [ \"answered\" ] })) {\n    $logger.warn(\"${msg.from}\\t${msg.subject}\");\n    ...\n}\n</code></pre>"},{"location":"libs/%24mail/_send/","title":"<code>$mail.send</code>","text":""},{"location":"libs/%24mail/_send/#description","title":"Description","text":"<p>Envoie un e-mail</p>"},{"location":"libs/%24mail/_send/#syntaxe","title":"Syntaxe","text":"<p><code>$mail.send( to , subject , text [ , attachments [ , options ] ] )</code></p>"},{"location":"libs/%24mail/_send/#parametres","title":"Param\u00e8tres","text":"<code>to</code> string / array / map Adresse(s) e-mail de destination. Le param\u00e8tre peut \u00eatre une string, un tableau de strings, ou un map contenant les propri\u00e9t\u00e9s <code>to</code>, <code>cc</code> et/ou <code>bcc</code> . Ces propri\u00e9t\u00e9s peuvent prendre soit une valeur unique sous forme de string, soit un array de strings. <code>subject</code> string Sujet de l'e-mail <code>text</code> string Texte de l'e-mail <code>attachments</code> string / array / map <p>Chemin absolu du ou des fichiers \u00e0 ajouter en pi\u00e8ce jointe. Le param\u00e8tre peut prendre diff\u00e9rentes formes:</p> <ul> <li>string : d\u00e9signe le path absolu d'un fichier \u00e0 lier en pi\u00e8ce jointe      au mail</li> <li>tableau de string : d\u00e9signe une liste de path absolus de fichiers \u00e0      lier en pi\u00e8ce jointe au mail</li> <li>tableau de <code>file</code></li> <li> <p>map ayant la forme <code>{ path : \"string\", cid : \"string\", mimetype : \"string\" }</code>.     On utilisera cette notation dans le cas o\u00f9 l'on veut int\u00e9grer une      image ou un fichier au corps du mail. Par exemple, prenons le cas     du contenu de mail suivant:</p> <pre><code>&lt;html&gt;\n    &lt;body&gt;\n        &lt;p&gt;Hello World!&lt;/p&gt;\n        &lt;img src=\"cid:my-image-id\"/&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Pour sp\u00e9cifier le path correspondant \u00e0 l'image repr\u00e9sent\u00e9e par <code>cid:my-image-id</code>, on d\u00e9finira le param\u00e8tre <code>attachments</code> ainsi:</p> <pre><code>{ path: \"c:/temp/image.png\", cid: \"my-image-id\", mimetype: \"image/png\" }\n</code></pre> </li> <li> <p>tableau de map tel que d\u00e9crit ci-dessus, permettant de d\u00e9finir plusieurs     r\u00e9f\u00e9rences d'images ou de fichiers</p> </li> </ul> <code>options</code> map <p>Map pouvant contenir les options suivantes:</p> <code>smtpConfig</code> string Nom de la config du serveur smtp \u00e0 utiliser. Fait r\u00e9f\u00e9rence \u00e0 un  <code>name</code> d'entr\u00e9e <code>email.smtp</code> du config <code>from</code> string Adresse d'exp\u00e9diteur. Peut \u00eatre une simple adresse e-mail, ou une  valeur compos\u00e9e de la forme \"John Doe john@doe.com\" si on souhaite  faire appara\u00eetre un nom en clair dans l'adresse de l'e-mail <code>replyTo</code> string Adresse de r\u00e9ponse. Peut \u00eatre une simple adresse e-mail, ou une  valeur compos\u00e9e de la forme \"John Doe john@doe.com\" si on souhaite  faire appara\u00eetre un nom en clair <code>readConfirmation</code> boolean Flag demandant une confirmation de lecture. L'activation de ce flag entra\u00eene l'ajout d'un header <code>Disposition-Notification-To</code> dans  l'en-t\u00eate de l'e-mail, avec comme valeur l'adresse d\u00e9finie comme  <code>replyTo</code>. Le flag est ignor\u00e9 si l'option <code>replyTo</code> ne contient  pas une adresse. <code>receiptConfirmation</code> boolean <p>flag demandant un accus\u00e9 de r\u00e9ception de r\u00e9ception. L'activation  de ce flag entra\u00eene l'ajout d'un header <code>Return-Receipt-To</code> dans  l'en-t\u00eate de l'e-mail, avec comme valeur l'adresse d\u00e9finie comme  <code>replyTo</code>. Le flag est ignor\u00e9 si l'option <code>replyTo</code> ne contient  pas une adresse.</p> <p>En principe, le flag <code>readConfirmation</code> est suffisant pour demander  un accus\u00e9 de r\u00e9ception car le header utilis\u00e9 dans ce cas semble plus  pris en charge par les clients mail.</p> <code>host</code> string URL du host \u00e0 utiliser (si d\u00e9fini, prime sur les autres valeurs de  host, y compris celle d\u00e9finie au niveau de la smtpConfig) <code>port</code> number Port du serveur smtp \u00e0 utiliser (si d\u00e9fini, prime sur les autres  valeurs de port, y compris celle d\u00e9finie au niveau de la smtpConfig) <code>username</code> string Nom d'utilisateur pour l'authentification sur le serveur smtp (si  d\u00e9fini, prime sur le username d\u00e9fini ailleurs, y compris celui  d\u00e9fini au niveau de la smtpConfig) <code>password</code> string Mot de passe \u00e0 utiliser pour l'authentification sur le serveur smtp  (si d\u00e9fini, prime sur le password d\u00e9fini ailleurs, y compris celui  d\u00e9fini au niveau de la smtpConfig) <code>security</code> string Type de s\u00e9curit\u00e9; peut prendre une des valeurs \"none\", \"starttls\" ou \"ssl\" (ce dernier est mis pour le mode \"ssl/tls\"). Si d\u00e9fini, prime  sur la securit\u00e9 d\u00e9finie ailleurs, y compris celle d\u00e9finie au niveau  de la smtpConfig <code>headers</code> map Map contenant les valeurs de headers \u00e0 passer; ce map permet par exemple de surcharger les headers \"content-type\",  \"content-transfert-encoding\", etc. <code>properties</code> map Map contenant des propri\u00e9t\u00e9s \u00e0 passer \u00e0 la session. Permet par  exemple d'activer le mode debug <code>{ mail.debug : true }</code>."},{"location":"libs/%24mail/_send/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si l'e-mail a pu \u00eatre envoy\u00e9 au serveur smtp, sinon <code>false</code>.</p> <p>Attention, le fait que la m\u00e9thode retourne <code>true</code> ne signifie pas pour  autant que l'e-mail a \u00e9t\u00e9 achemin\u00e9 jusqu'au destinataire. Cela indique  uniquement que les param\u00e8tres d'envoi de l'e-mail sont corrects et que  l'e-mail a pu \u00eatre transmis au serveur smtp. C'est ce dernier qui se  chargera d'acheminer l'e-mail. En cas d'\u00e9chec (adresse inexistante,  bo\u00eete e-mail pleine, etc.), il renverra un e-mail d'erreur \u00e0 l'adresse  de l'exp\u00e9diteur.</p>"},{"location":"libs/%24mail/_send/#exemple","title":"Exemple","text":"<pre><code>$mail.send({ to: \"info@epilogic.ch\", bcc: $$.inputs.email },\n           $$.inputs.object,\n           `&lt;html&gt;\n              &lt;body&gt;\n                &lt;p&gt;Message envoy\u00e9 depuis le site internet epilogic.ch le `::t &amp;\n                  $cal.format(ts, \"dd/MM/yyyy\") &amp; ` \u00e0 ` &amp; $cal.format(ts, \"HH:mm\") &amp; `.&lt;/p&gt;\n                &lt;table&gt;\n                  &lt;tr&gt;\n                    &lt;th&gt;Nom de l'\u00e9metteur&lt;/th&gt;\n                    &lt;td&gt;${$$.inputs.name}&lt;/td&gt;\n                  &lt;/tr&gt;\n                  &lt;tr&gt;\n                    &lt;th&gt;E-mail de l'\u00e9metteur&lt;/th&gt;\n                    &lt;td&gt;${$$.inputs.email}&lt;/td&gt;\n                  &lt;/tr&gt;\n                  &lt;tr&gt;\n                    &lt;th&gt;T\u00e9l\u00e9phone de l'\u00e9metteur&lt;/th&gt;\n                    &lt;td&gt;${$$.inputs.tel}&lt;/td&gt;\n                  &lt;/tr&gt;\n                  &lt;tr&gt;\n                    &lt;th&gt;Message&lt;/th&gt;\n                    &lt;td&gt;`::t &amp; $str.replace($$.inputs.message, '\\n', \"&lt;br/&gt;\") &amp; `&lt;/td&gt;\n                  &lt;/tr&gt;\n                &lt;/table&gt;\n              &lt;/body&gt;\n            &lt;/html&gt;`::t,\n           null,\n           { replyTo: $$.inputs.email });\n</code></pre>"},{"location":"libs/%24map/","title":"<code>$map</code>","text":"<p>M\u00e9thodes avanc\u00e9es de manipulation d'objets de type <code>map</code>.</p>"},{"location":"libs/%24map/_extend/","title":"<code>$map.extend</code>","text":""},{"location":"libs/%24map/_extend/#description","title":"Description","text":"<p>Fusionne le contenu de deux maps ou plus. Le r\u00e9sultat de la fusion est  repris dans le premier map. </p> <p>Passage de param\u00e8tre par r\u00e9f\u00e9rence</p> <p>Penser \u00e0 utiliser le passage de param\u00e8tre par r\u00e9f\u00e9rence si l'intention est de mettre \u00e0 jour l'objet de destination. Sinon la m\u00e9thode ne modifiera pas l'objet mais en g\u00e9n\u00e9rera une copie. Les exemples reviennent sur cette notion.</p> <p>Op\u00e9rateurs <code>&amp;</code> et <code>&amp;=</code></p> <p>Les op\u00e9rateurs <code>&amp;</code> et <code>&amp;=</code>  permettent \u00e9galement de fusionner des maps. </p>"},{"location":"libs/%24map/_extend/#syntaxe","title":"Syntaxe","text":"<p><code>$map.extend( target [ , maps , ... ] )</code></p>"},{"location":"libs/%24map/_extend/#parametres","title":"Param\u00e8tres","text":"<code>target</code> map Map de destination <code>maps</code> map... Map(s) \u00e0 fusionner avec <code>target</code>. Le param\u00e8tre peut figurer 0 ou n fois."},{"location":"libs/%24map/_extend/#retour","title":"Retour","text":"<p>Retourne l'objet <code>target</code> (ou sa copie en cas de passage de param\u00e8tre par  valeur) apr\u00e8s fusion.</p>"},{"location":"libs/%24map/_extend/#exemple","title":"Exemple","text":"<pre><code>var map = { a: 1, b: 2 };\n\n// exemple avec passage de param\u00e8tre par valeur (ne modifie pas l'objet map)\n$map.extend(map, { c: 3 });\n$logger.info(map);          // affiche {\"a\": 1, \"b\": 2} \n\n// exemple avec passage de param\u00e8tre par r\u00e9f\u00e9rence (modifie l'objet map)\n$map.extend(&amp;map, { c: 3 });\n$logger.info(map);          // affiche {\"a\": 1, \"b\": 2, \"c\": 3}\n</code></pre>"},{"location":"libs/%24map/_get/","title":"<code>$map.get</code>","text":""},{"location":"libs/%24map/_get/#description","title":"Description","text":"<p>Retourne la valeur du membre indiqu\u00e9.</p> <p>Note</p> <p>Le langage de script impl\u00e9mente nativement la fonctionnalit\u00e9 via les  notations <code>map.key</code> ou <code>map[\"key\"]</code>. Voir les exemples plus pour le d\u00e9tail.</p>"},{"location":"libs/%24map/_get/#syntaxe","title":"Syntaxe","text":"<p><code>$map.get( map , key )</code></p>"},{"location":"libs/%24map/_get/#parametres","title":"Param\u00e8tres","text":"<code>map</code> map Map \u00e0 traiter <code>key</code> string Nom du membre \u00e0 rechercher"},{"location":"libs/%24map/_get/#retour","title":"Retour","text":"<p>Retourne la valeur du membre ou <code>null</code> si non trouv\u00e9</p>"},{"location":"libs/%24map/_get/#exemple","title":"Exemple","text":"<pre><code>var m = { a: 1, b: 2 };\n$map.get(m, \"a\");       // retourne 1\n\n// \u00e0 noter que les notations suivantes sont \u00e9quivalentes:\nm.a;                    // retourne 1\nm[\"a\"];                 // retourne 1\n</code></pre>"},{"location":"libs/%24map/_has/","title":"<code>$map.has</code>","text":""},{"location":"libs/%24map/_has/#description","title":"Description","text":"<p>Indique si la cl\u00e9 existe dans la map</p>"},{"location":"libs/%24map/_has/#syntaxe","title":"Syntaxe","text":"<p><code>$map.has( map , key )</code></p>"},{"location":"libs/%24map/_has/#parametres","title":"Param\u00e8tres","text":"<code>map</code> map Map \u00e0 traiter <code>key</code> string Nom de cl\u00e9 \u00e0 rechercher"},{"location":"libs/%24map/_has/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la cl\u00e9 existe, sinon <code>false</code></p>"},{"location":"libs/%24map/_has/#exemple","title":"Exemple","text":"<pre><code>$map.has(m, \"name\");\n</code></pre>"},{"location":"libs/%24map/_keys/","title":"<code>$map.keys</code>","text":""},{"location":"libs/%24map/_keys/#description","title":"Description","text":"<p>Retourne un tableau contenant les noms de propri\u00e9t\u00e9 du map.</p> <p>L'ordre des \u00e9l\u00e9ments n'est pas garanti d'un appel \u00e0 l'autre.</p>"},{"location":"libs/%24map/_keys/#syntaxe","title":"Syntaxe","text":"<p><code>$map.keys( map )</code></p>"},{"location":"libs/%24map/_keys/#parametres","title":"Param\u00e8tres","text":"<code>map</code> map Map \u00e0 traiter"},{"location":"libs/%24map/_keys/#retour","title":"Retour","text":"<p>Tableau contenant les noms de cl\u00e9s du map</p>"},{"location":"libs/%24map/_keys/#exemple","title":"Exemple","text":"<pre><code>$logger.info($map.keys($map));\n\n// affiche [extend, size, keys, get, has, remove, put]\n</code></pre>"},{"location":"libs/%24map/_put/","title":"<code>$map.put</code>","text":""},{"location":"libs/%24map/_put/#description","title":"Description","text":"<p>Ajoute ou met \u00e0 jour un \u00e9l\u00e9ment dans le map.</p> <p>Note</p> <p>Le langage de script impl\u00e9mente nativement la fonctionnalit\u00e9 via les  notations <code>map.key</code> ou <code>map[\"key\"]</code>. Voir les exemples plus pour le d\u00e9tail.</p> <p>Map pass\u00e9 par valeur ou r\u00e9f\u00e9rence</p> <p>Attention, l'impact de la m\u00e9thode sur l'objet map varie selon qu'il soit pass\u00e9 par valeur ou par r\u00e9f\u00e9rence en param\u00e8tre. Pour rappel, les objets sont syst\u00e9matiquement pass\u00e9s par valeur en param\u00e8tre de m\u00e9thodes (\u00e0 l'exception des objets <code>pojo</code>). Cela signifie que la m\u00e9thode re\u00e7oit une copie de l'objet de d\u00e9part.</p> <p>Il est possible de forcer un passage d'objet en r\u00e9f\u00e9rence au moyen du pr\u00e9fixe <code>&amp;</code>.</p> <p>Lorsque le map est pass\u00e9 par valeur, la m\u00e9thode ne modifie pas l'objet de d\u00e9part, elle ne fait que de construire un nouvel objet int\u00e9grant le nouvel \u00e9l\u00e9ment \u00e0 ajouter. Lorsque le map est pass\u00e9 par r\u00e9f\u00e9rence, la m\u00e9thode est capable de le modifier. Les exemples donn\u00e9es plus bas reviennent sur cette notion.</p> <p>Comme le fait d'utiliser la notation par r\u00e9f\u00e9rence peut facilement \u00eatre oubli\u00e9, l'usage de <code>$data.put</code> n'est pas recommand\u00e9. Les notations <code>map.key</code> ou <code>map[\"key\"]</code> sont donc \u00e0 privil\u00e9gier.</p>"},{"location":"libs/%24map/_put/#syntaxe","title":"Syntaxe","text":"<p><code>$map.put( map , key , value )</code></p>"},{"location":"libs/%24map/_put/#parametres","title":"Param\u00e8tres","text":"<code>map</code> map Map \u00e0 traiter <code>key</code> string Nom du membre \u00e0 rechercher <code>value</code> any Valeur \u00e0 inscrire dans le map"},{"location":"libs/%24map/_put/#retour","title":"Retour","text":"<p>Retourne la valeur associ\u00e9e \u00e0 <code>key</code> avant qu'elle ne soit mise \u00e0 jour dans  le map. Retourne <code>null</code> si la cl\u00e9 n'existait pas dans le map.</p>"},{"location":"libs/%24map/_put/#exemple","title":"Exemple","text":"<pre><code>var map = { a: 1, b: 2 };\n$logger.info(map);\n\n$logger.info(\"exemples de get\");\n$logger.info($map.get(map, \"a\"));\n$logger.info(map.a);\n$logger.info(map[\"a\"]);\n\n$logger.info(\"exemples de put\");\n$logger.info($map.put(map, \"c\", 3));    // cet appel ne modifie pas `map`\n$logger.info(\"r\u00e9sultat passage par valeur: ${map}\");\n$logger.info($map.put(&amp;map, \"c\", 3));    // passage par r\u00e9f\u00e9rence\n$logger.info(\"r\u00e9sultat passage par r\u00e9f\u00e9rence: ${map}\");\n\n// notation \"put\" simplifi\u00e9e\nmap.d = 4;\nmap[\"e\"] = 5;\n$logger.info(\"r\u00e9sultat notation simplifi\u00e9e: ${map}\");\n</code></pre> <p>Log correspondant \u00e0 l'exemple ci-dessus:</p> <pre><code>{\"a\": 1, \"b\": 2}\nexemples de get\n1\n1\n1\nexemples de put\nnull\nr\u00e9sultat passage par valeur: {\"a\": 1, \"b\": 2}\nnull\nr\u00e9sultat passage par r\u00e9f\u00e9rence: {\"a\": 1, \"b\": 2, \"c\": 3}\nr\u00e9sultat notation simplifi\u00e9e: {\"a\": 1, \"b\": 2, \"c\": 3, \"d\": 4, \"e\": 5}\n</code></pre> <p>Modification d'API</p> <p>De base les m\u00e9thodes fournies par Ewt sont \"immutables\". Cela signifie qu'il n'est pas possible de les modifier. Ainsi, l'instruction suivante provoquera une erreur:</p> <pre><code>$logger.info = function(x) { $logger.warn(x); };\n</code></pre> <p>Cette instruction cherche \u00e0 red\u00e9finir le fonctionnement de la m\u00e9thode <code>$logger.info</code>, ce qui n'est pas permis de base.</p> <p>Cependant, la m\u00e9thode <code>$map.put</code> permet de bypasser cette r\u00e8gle. Ainsi l'instruction suivante permettra de r\u00e9aliser l'op\u00e9ration:</p> <pre><code>$map.put(&amp;$logger, \"info\", function(x) { $logger.warn(x); });\n$logger.info(\"test\");       // affiche d\u00e9sormais un warn !\n</code></pre> <p>La m\u00e9thode n'est pas modifi\u00e9e de fa\u00e7on permanente, mais uniquement pour le traitement en cours.</p> <p>L'op\u00e9ration est permise dans la version actuelle du moteur, mais il  n'est pas exclu que cela soit retir\u00e9 dans les versions futures.</p>"},{"location":"libs/%24map/_remove/","title":"<code>$map.remove</code>","text":""},{"location":"libs/%24map/_remove/#description","title":"Description","text":"<p>Retire un \u00e9l\u00e9ment dans le map</p>"},{"location":"libs/%24map/_remove/#syntaxe","title":"Syntaxe","text":"<p><code>$map.remove( map , key )</code></p>"},{"location":"libs/%24map/_remove/#parametres","title":"Param\u00e8tres","text":"<code>map</code> map Map \u00e0 traiter <code>key</code> key Nom du membre \u00e0 supprimer"},{"location":"libs/%24map/_remove/#retour","title":"Retour","text":"<p>Retourne la valeur associ\u00e9e \u00e0 <code>key</code> avant suppression, ou <code>null</code> si  la cl\u00e9 ne figure pas dans le map.</p>"},{"location":"libs/%24map/_remove/#exemple","title":"Exemple","text":"<pre><code>var map = { a: 1, b: 2 };\n$logger.info(map);\n\n$logger.info(\"exemples de get\");\n$logger.info($map.remove(map, \"b\"));    // affiche 2, mais ne modifie pas \"map\"\n$logger.info(map);                      // {\"a\": 1, \"b\": 2}\n\n$logger.info($map.remove(&amp;map, \"b\"));   // affiche 2 et modifie pas \"map\"\n$logger.info(map);                      // {\"a\": 1}\n\n$logger.info($map.remove(map, \"b\"));    // affiche null\n</code></pre> <p>Modification d'API</p> <p>De base les m\u00e9thodes fournies par Ewt sont \"immutables\". Cela signifie qu'il n'est pas possible de les modifier. Ainsi, l'instruction suivante provoquera une erreur:</p> <pre><code>$logger.info = function(x) { $logger.warn(x); };\n</code></pre> <p>Cette instruction cherche \u00e0 red\u00e9finir le fonctionnement de la m\u00e9thode <code>$logger.info</code>, ce qui n'est pas permis de base.</p> <p>Cependant, la m\u00e9thode <code>$map.remove</code> permet malgr\u00e9 tout de supprimer une m\u00e9thode fournie par Ewt. Ainsi l'instruction suivante permettra de  supprimer la m\u00e9thode <code>$logger.info</code>:</p> <pre><code>$map.remove(&amp;$logger, \"info\");\n$logger.info(\"test\");       // provoque une erreur car la m\u00e9thode\n                            // n'existe plus (pour le traitement\n                            // en cours\n</code></pre> <p>L'op\u00e9ration est permise dans la version actuelle du moteur, mais il  n'est pas exclu que cela soit retir\u00e9 dans les versions futures.</p>"},{"location":"libs/%24map/_size/","title":"<code>$map.size</code>","text":""},{"location":"libs/%24map/_size/#description","title":"Description","text":"<p>Retourne la taille du map, c.-\u00e0-d. le nombre de paires cl\u00e9/valeur du map.</p>"},{"location":"libs/%24map/_size/#syntaxe","title":"Syntaxe","text":"<p><code>$map.size( map )</code></p>"},{"location":"libs/%24map/_size/#parametres","title":"Param\u00e8tres","text":"<code>map</code> map Map \u00e0 traiter"},{"location":"libs/%24map/_size/#retour","title":"Retour","text":"<p>Taille du map</p>"},{"location":"libs/%24map/_size/#exemple","title":"Exemple","text":"<pre><code>var m = { a: 1 };\nm.b = 2;\n$map.size(m);   // -&gt; 2\n</code></pre>"},{"location":"libs/%24math/","title":"<code>$math</code>","text":"<p>Librairies de m\u00e9thodes math\u00e9matiques.</p>"},{"location":"libs/%24math/_binAND/","title":"<code>$math.binAND</code>","text":""},{"location":"libs/%24math/_binAND/#description","title":"Description","text":"<p>Calcule le AND-binaire des op\u00e9randes.</p>"},{"location":"libs/%24math/_binAND/#syntaxe","title":"Syntaxe","text":"<p><code>$math.binAND( elements [ , ... ] )</code></p>"},{"location":"libs/%24math/_binAND/#parametres","title":"Param\u00e8tres","text":"<code>elements</code> number Op\u00e9randes"},{"location":"libs/%24math/_binAND/#retour","title":"Retour","text":"<p>AND-binaire des op\u00e9randes</p>"},{"location":"libs/%24math/_binAND/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24math/_binNOT/","title":"<code>$math.binNOT</code>","text":""},{"location":"libs/%24math/_binNOT/#description","title":"Description","text":"<p>Calcule le compl\u00e9ment binaire (inverse) de la valeur en param\u00e8tre</p>"},{"location":"libs/%24math/_binNOT/#syntaxe","title":"Syntaxe","text":"<p><code>$math.binNOT( element )</code></p>"},{"location":"libs/%24math/_binNOT/#parametres","title":"Param\u00e8tres","text":"<code>element</code> number Valeur \u00e0 traiter (en d\u00e9cimale)"},{"location":"libs/%24math/_binNOT/#retour","title":"Retour","text":"<p>Compl\u00e9ment binaire</p>"},{"location":"libs/%24math/_binNOT/#exemple","title":"Exemple","text":"<pre><code>$math.binNOT(3);        // -4\n$math.binNOT(123);      // -124\n</code></pre>"},{"location":"libs/%24math/_binOR/","title":"<code>$math.binOR</code>","text":""},{"location":"libs/%24math/_binOR/#description","title":"Description","text":"<p>Calcule le OR-binaire des op\u00e9randes.</p>"},{"location":"libs/%24math/_binOR/#syntaxe","title":"Syntaxe","text":"<p><code>$math.binOR( elements [ , ... ] )</code></p>"},{"location":"libs/%24math/_binOR/#parametres","title":"Param\u00e8tres","text":"<code>elements</code> number Op\u00e9randes"},{"location":"libs/%24math/_binOR/#retour","title":"Retour","text":"<p>OR-binaire des op\u00e9randes</p>"},{"location":"libs/%24math/_binOR/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24math/_binXOR/","title":"<code>$math.binXOR</code>","text":""},{"location":"libs/%24math/_binXOR/#description","title":"Description","text":"<p>Calcule le XOR-binaire des op\u00e9randes.</p>"},{"location":"libs/%24math/_binXOR/#syntaxe","title":"Syntaxe","text":"<p><code>$math.binXOR( elements [ , ... ] )</code></p>"},{"location":"libs/%24math/_binXOR/#parametres","title":"Param\u00e8tres","text":"<code>elements</code> number Op\u00e9randes"},{"location":"libs/%24math/_binXOR/#retour","title":"Retour","text":"<p>XOR-binaire des op\u00e9randes</p>"},{"location":"libs/%24math/_binXOR/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24math/_ceil/","title":"<code>$math.ceil</code>","text":""},{"location":"libs/%24math/_ceil/#description","title":"Description","text":"<p>Retourne la valeur arrondie vers le haut de la valeur en param\u00e8tre</p>"},{"location":"libs/%24math/_ceil/#syntaxe","title":"Syntaxe","text":"<p><code>$math.ceil( value [ , base ] )</code></p>"},{"location":"libs/%24math/_ceil/#parametres","title":"Param\u00e8tres","text":"<code>value</code> number Valeur \u00e0 arrondir <code>base</code> number <p>Base d'arrondi. Permet d'indiquer la base vers laquelle la valeur doit \u00eatre arrondie. Par exemple, le fait de sp\u00e9cifier \"0.05\" indique d'arrondir au 0.05 sup\u00e9rieur.</p> <p>Le param\u00e8tre ne peut pas valoir 0.</p>"},{"location":"libs/%24math/_ceil/#retour","title":"Retour","text":"<p>Valeur arrondie vers le haut</p>"},{"location":"libs/%24math/_ceil/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24math/_floor/","title":"<code>$math.floor</code>","text":""},{"location":"libs/%24math/_floor/#description","title":"Description","text":"<p>Retourne la valeur arrondie vers le bas de la valeur en param\u00e8tre</p>"},{"location":"libs/%24math/_floor/#syntaxe","title":"Syntaxe","text":"<p><code>$math.floor( value [ , base ] )</code></p>"},{"location":"libs/%24math/_floor/#parametres","title":"Param\u00e8tres","text":"<code>value</code> number Valeur \u00e0 arrondir <code>base</code> number <p>Base d'arrondi Permet d'indiquer la base vers laquelle la valeur doit \u00eatre arrondie. Par exemple, le fait de sp\u00e9cifier \"0.05\" indique d'arrondir au 0.05 inf\u00e9rieur.</p> <p>Le param\u00e8tre ne peut pas valoir 0.</p>"},{"location":"libs/%24math/_floor/#retour","title":"Retour","text":"<p>Valeur arrondie vers le bas</p>"},{"location":"libs/%24math/_floor/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24math/_max/","title":"<code>$math.max</code>","text":""},{"location":"libs/%24math/_max/#description","title":"Description","text":"<p>S\u00e9lectionne le max des valeurs pass\u00e9es en param\u00e8tre. Les valeurs <code>null</code> ne sont prises en compte dans la s\u00e9lection.</p>"},{"location":"libs/%24math/_max/#syntaxe","title":"Syntaxe","text":"<p><code>$math.max( elements [ , ... ] )</code></p>"},{"location":"libs/%24math/_max/#parametres","title":"Param\u00e8tres","text":"<code>elements</code> number Membres de l'op\u00e9ration"},{"location":"libs/%24math/_max/#retour","title":"Retour","text":"<p>Membre ayant la plus grande valeur.</p>"},{"location":"libs/%24math/_max/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24math/_min/","title":"<code>$math.min</code>","text":""},{"location":"libs/%24math/_min/#description","title":"Description","text":"<p>S\u00e9lectionne le min des valeurs pass\u00e9es en param\u00e8tre. Les valeurs <code>null</code> ne sont prises en compte dans la s\u00e9lection.</p>"},{"location":"libs/%24math/_min/#syntaxe","title":"Syntaxe","text":"<p><code>$math.min( elements [ , ... ] )</code></p>"},{"location":"libs/%24math/_min/#parametres","title":"Param\u00e8tres","text":"<code>elements</code> number Membres de l'op\u00e9ration"},{"location":"libs/%24math/_min/#retour","title":"Retour","text":"<p>Membre ayant la plus petite valeur.</p>"},{"location":"libs/%24math/_min/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24math/_random/","title":"<code>$math.random</code>","text":"<p>Alias: <code>$math.rnd</code></p>"},{"location":"libs/%24math/_random/#description","title":"Description","text":"<p>Retourne une valeur al\u00e9atoire en double entre 0 et 1.</p>"},{"location":"libs/%24math/_random/#syntaxe","title":"Syntaxe","text":"<p><code>$math.random( [ options ] )</code></p>"},{"location":"libs/%24math/_random/#parametres","title":"Param\u00e8tres","text":"<code>options</code> map <p>Options de calcul de la valeur random. Les options reconnues sont:</p> <code>type</code> string Type de valeur \u00e0 g\u00e9n\u00e9rer. Les types reconnus sont \"int\" (ou \"integer\"), \"long\", \"double\" (ou \"decimal\"), \"boolean\", \"string\", \"gaussian\". La valeur par d\u00e9faut est \"double\". <code>seed</code> number Valeur racine pour la g\u00e9n\u00e9ration de la valeur random. La valeur attendue doit \u00eatre un nombre compris entre -2<sup>63</sup> et 2<sup>63</sup>-1. <code>min</code> number <p>Limite inf\u00e9rieure de la plage de valeurs possibles. Sans effet pour  les types \"boolean\", gaussian\" et \"string\".</p> <p>La valeur par d\u00e9faut correspond \u00e0 la plus petite valeur possible  pour le type indiqu\u00e9. Si l'option <code>max</code> est sp\u00e9cifi\u00e9e, alors la valeur par d\u00e9faut de <code>min</code> est 0.</p> <code>max</code> number <p>Limite sup\u00e9rieure de la plage de valeurs possibles (non incluse). Sans effet pour les types \"boolean\", gaussian\" et \"string\".</p> <p>Si <code>max</code> est d\u00e9fini sans <code>min</code>, la m\u00e9thode force un <code>min</code> \u00e0 0.</p> <code>length</code> number Longueur de la cha\u00eene \u00e0 construire (uniquement valable lorsque <code>type</code> est d\u00e9fini \u00e0 \"string\". <code>alphabet</code> string Alphabet autoris\u00e9 pour la g\u00e9n\u00e9ration de c\u00e2ines de caract\u00e8res (type <code>string</code>). Si non d\u00e9fini, la m\u00e9thode s'appuie sur un alphabet  de 62 caract\u00e8res comprenant les lettres minuscules, les lettres  majuscules et les chiffres."},{"location":"libs/%24math/_random/#retour","title":"Retour","text":"<p>Valeur al\u00e9atoire prise entre les bornes indiqu\u00e9e. En l'absence d'options, la m\u00e9thode retourne une valeur al\u00e9atoire comprise entre 0 et 1 non compris.</p> <p>Retourne <code>null</code> en cas d'erreur.</p>"},{"location":"libs/%24math/_random/#exemple","title":"Exemple","text":"<pre><code>$math.random();                                           // 0.6302102257193494\n\n$math.random( { type: \"gaussian\"} );                      // -1.9952274222651456\n\n$math.random( { type: \"boolean\" } );                      // 0\n\n$math.random( { type: \"int\" } );                          // -1815405358\n$math.random( { type: \"int\", min: 0 } );                  // 812478457\n$math.random( { type: \"int\", max: 10000 } );              // 1905\n$math.random( { type: \"int\", min: 10, max: 20 } );        // 11\n$math.random( { type: \"int\", min: -20, max: -10 } );      // -13\n\n$math.random( { type: \"long\" } );                         // 8905176739385258068\n$math.random( { type: \"long\", min: 0 } );                 // 445361369305759989\n$math.random( { type: \"long\", max: 10000 } );             // 2431\n$math.random( { type: \"long\", min: 10, max: 20 } );       // 12\n$math.random( { type: \"long\", min: -20, max: -10 } );     // -18\n\n$math.random( { type: \"double\" } );                       // 0.7816274713140284\n$math.random( { type: \"double\", min: 0 } );               // 3.364167396432945E307\n$math.random( { type: \"double\", max: 10000 } );           // 6704.909306936824\n$math.random( { type: \"double\", min: 10, max: 20 } );     // 12.035434770170571\n$math.random( { type: \"double\", min: -20, max: -10 } );   // -14.080809724349376\n\n$math.random( { type: \"string\" } );                       // k\n$math.random( { type: \"string\", length: 10 } );           // WfEv4fCPoJ\n$math.random( { type: \"string\", length: 10,\n                alphabet: \"aeiou\u00e0\u00e2\u00ee\u00ef\u00f4\u00f6\u00fb\u00f9\u00fc\u00e9\u00e8\u00ea\u00eb\" } );       // \u00f4\u00f9u\u00ea\u00e0\u00ee\u00f6\u00eei\u00f6\n</code></pre>"},{"location":"libs/%24math/_round/","title":"<code>$math.round</code>","text":""},{"location":"libs/%24math/_round/#description","title":"Description","text":"<p>Retourne l'arrondi au plus proche de la valeur en param\u00e8tre.</p>"},{"location":"libs/%24math/_round/#syntaxe","title":"Syntaxe","text":"<p><code>$math.round( value [ , base ] )</code></p>"},{"location":"libs/%24math/_round/#parametres","title":"Param\u00e8tres","text":"<code>value</code> number Valeur \u00e0 arrondir <code>base</code> number <p>Base d'arrondi Permet d'indiquer la base vers laquelle la valeur doit \u00eatre arrondie. Par exemple, le fait de sp\u00e9cifier \"0.05\" indique d'arrondir au 0.05 le plus proche.</p> <p>Le param\u00e8tre ne peut pas valoir 0.</p>"},{"location":"libs/%24math/_round/#retour","title":"Retour","text":"<p>Valeur arrondie</p>"},{"location":"libs/%24math/_round/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24msg/","title":"<code>$msg</code>","text":"<p>Alias: <code>$message</code></p> <p>Gestion des messages, avertissements, erreurs, etc. destin\u00e9s \u00e0  l'utilisateur final.</p>"},{"location":"libs/%24msg/_clear/","title":"<code>$msg.clear</code>","text":""},{"location":"libs/%24msg/_clear/#description","title":"Description","text":"<p>Supprime les messages.</p>"},{"location":"libs/%24msg/_clear/#syntaxe","title":"Syntaxe","text":"<p><code>$msg.clear( [ levelFilter ] )</code></p>"},{"location":"libs/%24msg/_clear/#parametres","title":"Param\u00e8tres","text":"<code>levelFilter</code> string Niveau des messages que l'on souhaite supprimer. Les valeurs possibles sont \"error\", \"warn\" ou \"info\". En l'absence de filtre, tous les messages sont supprim\u00e9s."},{"location":"libs/%24msg/_clear/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code></p>"},{"location":"libs/%24msg/_clear/#exemple","title":"Exemple","text":"<pre><code>$msg.info(\"Ceci est un test d'info\");\n$msg.warn(\"Ceci est un test d'avertissement\");\n$msg.error(\"Ceci est un test d'erreur\");\n\n$msg.clear(\"info\");       \n$msg.count();             // retourne 2\n</code></pre> <p>Apr\u00e8s ex\u00e9cution du code ci-dessus, le message d'information n'est pas repris dans l'arbre de sortie.</p>"},{"location":"libs/%24msg/_count/","title":"<code>$msg.count</code>","text":""},{"location":"libs/%24msg/_count/#description","title":"Description","text":"<p>Retourne le nombre de messages pr\u00e9sents dans le buffer de messages.</p> <p>La m\u00e9thode <code>$msg.count</code> est en r\u00e9alit\u00e9 une version raccourcie pour <code>$array.size($msg.get())</code>.</p>"},{"location":"libs/%24msg/_count/#syntaxe","title":"Syntaxe","text":"<p><code>$msg.count( [ levelFilter ] )</code></p>"},{"location":"libs/%24msg/_count/#parametres","title":"Param\u00e8tres","text":"<code>levelFilter</code> string Niveau des messages que l'on souhaite compter. Les valeurs possibles sont \"error\", \"warn\" ou \"info\". En l'absence de filtre, tous les messages sont compt\u00e9s."},{"location":"libs/%24msg/_count/#retour","title":"Retour","text":"<p>Nombre de messages correspondants</p>"},{"location":"libs/%24msg/_count/#exemple","title":"Exemple","text":"<pre><code>$msg.info(\"Ceci est un test d'info\");\n$msg.warn(\"Ceci est un test d'avertissement\");\n$msg.error(\"Ceci est un test d'erreur\");\n\n$msg.count();       // retourne 3\n</code></pre>"},{"location":"libs/%24msg/_error/","title":"<code>$msg.error</code>","text":""},{"location":"libs/%24msg/_error/#description","title":"Description","text":"<p>Inscrit un message d'erreur \u00e0 l'\u00e9cran de l'utilisateur.</p>"},{"location":"libs/%24msg/_error/#syntaxe","title":"Syntaxe","text":"<p><code>$msg.error( text [ , target [ , attributes ] ] )</code></p>"},{"location":"libs/%24msg/_error/#parametres","title":"Param\u00e8tres","text":"<code>text</code> string <p>Message \u00e0 inscrire en tant qu'erreur.</p> <p>Techniquement le param\u00e8tre peut \u00eatre de n'importe quel type. Le message sera construit \u00e0 partir de la repr\u00e9sentation de l'objet en tant que <code>string</code>.</p> <code>target</code> map / string Contexte donn\u00e9 sous forme de map ou de cha\u00eene de caract\u00e8res et d\u00e9signant l'objet sur lequel le message porte. <code>attributes</code> map Map d'attributs \u00e0 associer au message dans l'arbre de sortie. On pourra  par exemple sp\u00e9cifier un attribut <code>disableOutputEscaping</code> pour indiquer  \u00e0 la feuille de style de d\u00e9sactiver l'\u00e9chappement des caract\u00e8res  sp\u00e9ciaux (pour autant que le message ne pr\u00e9sente pas de risque  d'injection XSS)."},{"location":"libs/%24msg/_error/#retour","title":"Retour","text":"<p>Le message d'erreur</p>"},{"location":"libs/%24msg/_error/#exemple","title":"Exemple","text":"<pre><code>$msg.error(\"J'ai un probl\u00e8me.\");\n\n$msg.error(\"J'ai un &lt;b&gt;gros&lt;/b&gt; probl\u00e8me.\",\n           null,\n           { disableOutputEscaping: \"yes\" });\n\n$msg.error(\"Le format de l'IBAN n'est pas valide :\n            il devrait contenir 21 caract\u00e8res (hors espaces)\n            mais n'en compte que ${len}\"::T, \"iban\");\n</code></pre>"},{"location":"libs/%24msg/_get/","title":"<code>$msg.get</code>","text":""},{"location":"libs/%24msg/_get/#description","title":"Description","text":"<p>Retourne la liste des messages pr\u00e9sents dans le buffer de messages</p>"},{"location":"libs/%24msg/_get/#syntaxe","title":"Syntaxe","text":"<p><code>$msg.get( [ levelFilter ] )</code></p>"},{"location":"libs/%24msg/_get/#parametres","title":"Param\u00e8tres","text":"<code>levelFilter</code> string Niveau de message que l'on souhaite r\u00e9cup\u00e9rer. Les valeurs possibles sont \"error\", \"warn\" ou \"info\". En l'absence de filtre,  tous les messages sont retourn\u00e9s."},{"location":"libs/%24msg/_get/#retour","title":"Retour","text":"<p>Tableau de messages</p>"},{"location":"libs/%24msg/_get/#exemple","title":"Exemple","text":"<pre><code>$msg.info(\"Ceci est un test d'info\");\n$msg.warn(\"Ceci est un test d'avertissement\");\n$msg.error(\"Ceci est un test d'erreur\");\n\n$msg.get();\n</code></pre> <p>Dans l'exemple ci-dessus, la derni\u00e8re instruction retourne un tableau  ayant la forme suivante:</p> <pre><code>[\n  {\"level\": \"info\", \"context\": \"\", \"text\": \"Ceci est un test d'info\"},\n  {\"level\": \"warn\", \"context\": \"\", \"text\": \"Ceci est un test d'avertissement\"},\n  {\"level\": \"error\", \"context\": \"\", \"text\": \"Ceci est un test d'erreur\" }\n]\n</code></pre>"},{"location":"libs/%24msg/_info/","title":"<code>$msg.info</code>","text":""},{"location":"libs/%24msg/_info/#description","title":"Description","text":"<p>Inscrit un message d'information \u00e0 l'\u00e9cran de l'utilisateur.</p>"},{"location":"libs/%24msg/_info/#syntaxe","title":"Syntaxe","text":"<p><code>$msg.info( text [ , target [ , attributes ] ] )</code></p>"},{"location":"libs/%24msg/_info/#parametres","title":"Param\u00e8tres","text":"<code>text</code> string <p>Message \u00e0 inscrire en tant qu'information.</p> <p>Techniquement le param\u00e8tre peut \u00eatre de n'importe quel type. Le message sera construit \u00e0 partir de la repr\u00e9sentation de l'objet en tant que <code>string</code>.</p> <code>target</code> map / string Contexte donn\u00e9 sous forme de map ou de cha\u00eene de caract\u00e8res et d\u00e9signant l'objet sur lequel le message porte. <code>attributes</code> map Map d'attributs \u00e0 associer au message dans l'arbre de sortie. On pourra par exemple sp\u00e9cifier un attribut <code>disableOutputEscaping</code> pour indiquer \u00e0 la feuille de style de d\u00e9sactiver l'\u00e9chappement des caract\u00e8res sp\u00e9ciaux (pour autant que le message ne pr\u00e9sente pas de risque d'injection XSS)."},{"location":"libs/%24msg/_info/#retour","title":"Retour","text":"<p>Le message d'information</p>"},{"location":"libs/%24msg/_info/#exemple","title":"Exemple","text":"<pre><code>$msg.info(\"Tout va bien.\");\n\n$msg.info(\"Tout va &lt;b&gt;merveilleusement&lt;/b&gt; bien.\",\n          null,\n          { disableOutputEscaping: \"yes\" });\n</code></pre>"},{"location":"libs/%24msg/_warn/","title":"<code>$msg.warn</code>","text":""},{"location":"libs/%24msg/_warn/#description","title":"Description","text":"<p>Inscrit un message d'avertissement \u00e0 l'\u00e9cran de l'utilisateur.</p>"},{"location":"libs/%24msg/_warn/#syntaxe","title":"Syntaxe","text":"<p><code>$msg.warn( text [ , target [ , attributes ] ] )</code></p>"},{"location":"libs/%24msg/_warn/#parametres","title":"Param\u00e8tres","text":"<code>text</code> string <p>Message \u00e0 inscrire en tant qu'avertissement.</p> <p>Techniquement le param\u00e8tre peut \u00eatre de n'importe quel type. Le message sera construit \u00e0 partir de la repr\u00e9sentation de l'objet en tant que <code>string</code>.</p> <code>target</code> map / string Contexte donn\u00e9 sous forme de map ou de cha\u00eene de caract\u00e8res et d\u00e9signant l'objet sur lequel le message porte. <code>attributes</code> map Map d'attributs \u00e0 associer au message dans l'arbre de sortie. On pourra par exemple sp\u00e9cifier un attribut <code>disableOutputEscaping</code> pour indiquer \u00e0 la feuille de style de d\u00e9sactiver l'\u00e9chappement des caract\u00e8res sp\u00e9ciaux (pour autant que le message ne pr\u00e9sente pas de risque d'injection XSS)."},{"location":"libs/%24msg/_warn/#retour","title":"Retour","text":"<p>Le message d'avertissement</p>"},{"location":"libs/%24msg/_warn/#exemple","title":"Exemple","text":"<pre><code>$msg.warn(\"Il faut faire attention.\");\n\n$msg.warn(\"Il faut faire &lt;b&gt;tr\u00e8s&lt;/b&gt; attention.\",\n          null,\n          { disableOutputEscaping: \"yes\" });\n</code></pre>"},{"location":"libs/%24out/","title":"<code>$out</code>","text":"<p>Alias: <code>$output</code></p> <p>Librairie de m\u00e9thodes permettant d'agir sur l'arbre de sortie.</p> <p>L'arbre de sortie est le document xml g\u00e9n\u00e9r\u00e9 par le moteur en fin de  traitement et servant de base \u00e0 la transformation xsl qui construit la page web affich\u00e9e \u00e0 l'utilisateur.</p>"},{"location":"libs/%24out/_addContent/","title":"<code>$out.addContent</code>","text":""},{"location":"libs/%24out/_addContent/#description","title":"Description","text":"<p>Ajoute un contenu nomm\u00e9 personnalis\u00e9 dans l'arbre de sortie. Cette m\u00e9thode permet d'ajouter du contenu personnalis\u00e9 et de l'inscrire dans l'arbre XML de sortie en tant que contenu nomm\u00e9, c'est-\u00e0-dire r\u00e9f\u00e9renc\u00e9 sous un nom.</p> <p>Le contenu sera repris dans le sous-arbre <code>/output/session/contents</code> du xml  de sortie.</p> <p>La m\u00e9thode peut \u00eatre appel\u00e9e plusieurs fois pour ajouter du contenu sous un m\u00eame nom. Le contenu est concat\u00e9n\u00e9 \u00e0 celui d\u00e9j\u00e0 ajout\u00e9 pr\u00e9c\u00e9demment.</p>"},{"location":"libs/%24out/_addContent/#syntaxe","title":"Syntaxe","text":"<p><code>$out.addContent( name , body [ , options ] )</code></p>"},{"location":"libs/%24out/_addContent/#parametres","title":"Param\u00e8tres","text":"<code>name</code> string Nom du contenu. Si le nom est vide ou <code>null</code>, cela signifie que l'on souhaite forcer le contenu indiqu\u00e9 comme contenu par d\u00e9faut.  Dans ce cas, le moteur ne g\u00e9n\u00e9rera plus d'arbre de sortie mais  retournera directement le contenu indiqu\u00e9. <code>body</code> string Corps du contenu <code>options</code> map / string <p>Options suppl\u00e9mentaires pass\u00e9es \u00e0 la m\u00e9thode. Le param\u00e8tre peut \u00eatre  soit un map contenant diff\u00e9rentes options, soit une valeur unique,  auquel cas elle est consid\u00e9r\u00e9e comme d\u00e9crivant la propri\u00e9t\u00e9 <code>format</code>.  Dans le cas o\u00f9 le param\u00e8tre est un map, les propri\u00e9t\u00e9s suivantes sont  trait\u00e9es:</p> <code>format</code> string Format du contenu. Les formats support\u00e9s sont \"text\" ou \"xml\". Le  format par d\u00e9faut est \"text\". <code>replace</code> boolean Flag <code>true</code>/<code>false</code> indiquant si le nouveau contenu doit remplacer  l'\u00e9ventuel contenu existant. Par d\u00e9faut cette option est <code>false</code>."},{"location":"libs/%24out/_addContent/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24out/_addContent/#exemple","title":"Exemple","text":"<pre><code>var tmp = $http.request($app.getConfig(\"printService.url\", \"\"), restParams);\n\n$out.addContent(\"imprimantes\", \"&lt;printers&gt;\", \"xml\");\n\nif ($str.startsWith(tmp.status, 2)) {\n    var jsonid = $json.load(tmp.data),\n        num = $json.path(jsonid, \"$.printers.length()\", 0);\n\n    for (var idx = 0; idx &lt; num; ++idx) {\n        var printName = $json.path(jsonid, \"$.printers[${idx}].name\"),\n            isDefaultPrinter = (printName == labelprinter ? 'true' : 'false');\n        $out.addContent(\"imprimantes\",\n                        `&lt;printer id=\"`&amp; \"${printName}\"::X &amp; `\" default=\"${isDefaultPrinter}\"&gt;` &amp;\n                            \"${printName}\"::X &amp;\n                        `&lt;/printer&gt;`);\n    }\n\n    $json.free(jsonid);\n}\nelse {\n    $logger.debug(tmp);\n    $msg.error(`Impossible d'obtenir la liste des imprimantes.&lt;br/&gt;\n                Informations techniques: &lt;code&gt;${tmp.status}&lt;/code&gt;`::t,\n               null, { disableOutputEscaping: 'yes' } );\n}\n\n$out.addContent(\"imprimantes\", \"&lt;/printers&gt;\");\n</code></pre>"},{"location":"libs/%24out/_delContent/","title":"<code>$out.delContent</code>","text":""},{"location":"libs/%24out/_delContent/#description","title":"Description","text":"<p>Supprime le contenu personnalis\u00e9 ajout\u00e9 avec <code>$out.addContent</code>.</p>"},{"location":"libs/%24out/_delContent/#syntaxe","title":"Syntaxe","text":"<p><code>$out.delContent( name )</code></p>"},{"location":"libs/%24out/_delContent/#parametres","title":"Param\u00e8tres","text":"<code>name</code> string Nom du contenu"},{"location":"libs/%24out/_delContent/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24out/_delContent/#exemple","title":"Exemple","text":"<pre><code>$out.delContent(\"imprimantes\");\n</code></pre>"},{"location":"libs/%24out/_getContent/","title":"<code>$out.getContent</code>","text":""},{"location":"libs/%24out/_getContent/#description","title":"Description","text":"<p>Retourne un contenu personnalis\u00e9</p>"},{"location":"libs/%24out/_getContent/#syntaxe","title":"Syntaxe","text":"<p><code>$out.getContent( name )</code></p>"},{"location":"libs/%24out/_getContent/#parametres","title":"Param\u00e8tres","text":"<code>name</code> string Nom du contenu"},{"location":"libs/%24out/_getContent/#retour","title":"Retour","text":"<p>Retourne la valeur du contenu demand\u00e9 s'il existe, sinon <code>null</code></p>"},{"location":"libs/%24out/_getContent/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24out/_setContentAttributes/","title":"<code>$out.setContentAttributes</code>","text":""},{"location":"libs/%24out/_setContentAttributes/#description","title":"Description","text":"<p>Sp\u00e9cifie les options d'un contenu nomm\u00e9. Les options permettent de  renseigner sur le content-type, le charset, etc.</p>"},{"location":"libs/%24out/_setContentAttributes/#syntaxe","title":"Syntaxe","text":"<p><code>$out.setContentAttributes( name , attributes )</code></p>"},{"location":"libs/%24out/_setContentAttributes/#parametres","title":"Param\u00e8tres","text":"<code>name</code> string Nom du contenu <code>attributes</code> map Tableau de cl\u00e9s-valeurs d\u00e9finissant les options"},{"location":"libs/%24out/_setContentAttributes/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24out/_setContentAttributes/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24out/_setContentFormat/","title":"<code>$out.setContentFormat</code>","text":""},{"location":"libs/%24out/_setContentFormat/#description","title":"Description","text":"<p>Sp\u00e9cifie le format de donn\u00e9e du contenu nomm\u00e9.</p>"},{"location":"libs/%24out/_setContentFormat/#syntaxe","title":"Syntaxe","text":"<p><code>$out.setContentFormat( name , format )</code></p>"},{"location":"libs/%24out/_setContentFormat/#parametres","title":"Param\u00e8tres","text":"<code>name</code> string Nom du contenu <code>format</code> string Format de donn\u00e9es. Les formats support\u00e9s sont \"text\" (par d\u00e9faut)  ou \"xml\"."},{"location":"libs/%24out/_setContentFormat/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24out/_setContentFormat/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24out/_setMainStyle/","title":"<code>$out.setMainStyle</code>","text":""},{"location":"libs/%24out/_setMainStyle/#description","title":"Description","text":"<p>D\u00e9finit le style principal.</p> <p>On distingue le style principal et le style temporaire. Le style principal  est utilis\u00e9 pour la requ\u00eate actuelle et les requ\u00eates futures. Cela signifie  qu'on d\u00e9finit le style de fa\u00e7on permanente (jusqu'au prochain changement de style explicite).</p>"},{"location":"libs/%24out/_setMainStyle/#syntaxe","title":"Syntaxe","text":"<p><code>$out.setMainStyle( style [ , priority ] )</code></p>"},{"location":"libs/%24out/_setMainStyle/#parametres","title":"Param\u00e8tres","text":"<code>style</code> string Nom du style \u00e0 utiliser. Doit r\u00e9f\u00e9rencer le nom d'une entr\u00e9e <code>styles/style</code> du config <code>priority</code> number <p>Priorit\u00e9 de style.</p> <p>La priorit\u00e9 de style sert \u00e0 g\u00e9rer les conflits o\u00f9 deux parties d'une application cherchent \u00e0 red\u00e9finir le style au niveau de la session. Par  exemple, un script veut forcer la feuille de style de session pour une  cat\u00e9gorie de sujet. En parall\u00e8le, un utilisateur force un appel \u00e0  l'action <code>setStyle</code>. On a donc un conflit car le script veut imposer  un style et l'action <code>setStyle</code> vient changer ce style. On utilise donc  la notion de priorit\u00e9 pour permettre au script de s'imposer. Les styles  d\u00e9finis par <code>setStyle</code> sont toujours effectu\u00e9s avec une priorit\u00e9 de 0.  Le script peut donc forcer une priorit\u00e9 sup\u00e9rieure pour \u00e9viter que le  style ne puisse \u00eatre modifi\u00e9 ensuite.</p> <p>Le niveau de priorit\u00e9 est r\u00e9initialis\u00e9 \u00e0 chaque nouvelle requ\u00eate.</p>"},{"location":"libs/%24out/_setMainStyle/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le style est d\u00e9fini, sinon <code>false</code></p>"},{"location":"libs/%24out/_setMainStyle/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24out/_setStyle/","title":"<code>$out.setStyle</code>","text":""},{"location":"libs/%24out/_setStyle/#description","title":"Description","text":"<p>D\u00e9finit le style \u00e0 utiliser pour effectuer la transformation de l'arbre  de sortie.</p>"},{"location":"libs/%24out/_setStyle/#syntaxe","title":"Syntaxe","text":"<p><code>$out.setStyle( style [ , asMainStyle ] )</code></p>"},{"location":"libs/%24out/_setStyle/#parametres","title":"Param\u00e8tres","text":"<code>style</code> string Nom du style \u00e0 utiliser. Doit r\u00e9f\u00e9rencer le nom d'une entr\u00e9e <code>styles/style</code> du config <code>asMainStyle</code> boolean <p>Flag <code>true</code>/<code>false</code> indiquant si le style est \u00e0 d\u00e9finir en tant que  style principal (c'est-\u00e0-dire en tant que style appliqu\u00e9 pour la requ\u00eate actuelle et pour les requ\u00eates futures) ou en tant que style  temporaire (uniquement pris en compte pour requ\u00eate en cours).</p> <p>La valeur par d\u00e9faut est <code>true</code>.</p>"},{"location":"libs/%24out/_setStyle/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le style peut \u00eatre d\u00e9fini (c.-\u00e0-d. qu'il est d\u00e9clar\u00e9 dans le fichier de config), sinon <code>false</code>.</p>"},{"location":"libs/%24out/_setStyle/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24out/_setTempStyle/","title":"<code>$out.setTempStyle</code>","text":""},{"location":"libs/%24out/_setTempStyle/#description","title":"Description","text":"<p>D\u00e9finit le style temporaire. Le style temporaire n'est utilis\u00e9 que pour  la requ\u00eate en cours. Les requ\u00eates futures n'utiliseront pas le style  temporaire, mais le style principal.</p> <p>L'utilisation de cette m\u00e9thode correspond \u00e0 un appel du genre  <code>$out.setStyle(\"someStyle\", false)</code>.</p>"},{"location":"libs/%24out/_setTempStyle/#syntaxe","title":"Syntaxe","text":"<p><code>$out.setTempStyle( style )</code></p>"},{"location":"libs/%24out/_setTempStyle/#parametres","title":"Param\u00e8tres","text":"<code>style</code> string Nom du style \u00e0 utiliser. Doit r\u00e9f\u00e9rencer le nom d'une entr\u00e9e <code>styles/style</code> du config"},{"location":"libs/%24out/_setTempStyle/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le style est d\u00e9fini, sinon <code>false</code></p>"},{"location":"libs/%24out/_setTempStyle/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24parser/","title":"<code>$parser</code>","text":"<p>Librairie fournissant des m\u00e9thodes de parsing de donn\u00e9es textuelles.</p>"},{"location":"libs/%24parser/_close/","title":"<code>$parser.close</code>","text":""},{"location":"libs/%24parser/_close/#description","title":"Description","text":"<p>Cl\u00f4ture une instance de parseur</p>"},{"location":"libs/%24parser/_close/#syntaxe","title":"Syntaxe","text":"<p><code>$parser.close( parser )</code></p>"},{"location":"libs/%24parser/_close/#parametres","title":"Param\u00e8tres","text":"<code>parser</code> pojo R\u00e9f\u00e9rence de parseur cr\u00e9\u00e9 au moyen de <code>$parser.load</code>"},{"location":"libs/%24parser/_close/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code></p>"},{"location":"libs/%24parser/_close/#exemple","title":"Exemple","text":"<p>Voir <code>$parser.load</code></p>"},{"location":"libs/%24parser/_hasNext/","title":"<code>$parser.hasNext</code>","text":""},{"location":"libs/%24parser/_hasNext/#description","title":"Description","text":"<p>V\u00e9rifie l'existence d'un token dans le flux d'entr\u00e9e.</p>"},{"location":"libs/%24parser/_hasNext/#syntaxe","title":"Syntaxe","text":"<p><code>$parser.hasNext( parser )</code></p>"},{"location":"libs/%24parser/_hasNext/#parametres","title":"Param\u00e8tres","text":"<code>parser</code> pojo R\u00e9f\u00e9rence de parseur cr\u00e9\u00e9 au moyen de <code>$parser.load</code>"},{"location":"libs/%24parser/_hasNext/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le parseur est en mesure de trouver un token sur  le flux d'entr\u00e9e, sinon <code>false</code>.</p> <p>La m\u00e9thode d\u00e9clenchera une exception dans le cas o\u00f9 elle  est invoqu\u00e9e alors que le parseur est d\u00e9j\u00e0 cl\u00f4tur\u00e9.</p>"},{"location":"libs/%24parser/_hasNext/#exemple","title":"Exemple","text":"<p>Voir <code>$parser.load</code></p>"},{"location":"libs/%24parser/_load/","title":"<code>$parser.load</code>","text":""},{"location":"libs/%24parser/_load/#description","title":"Description","text":"<p>Cr\u00e9e une nouvelle instance de parseur.</p> <p>Fermeture</p> <p>L'instance de parseur cr\u00e9\u00e9e ici DOIT \u00eatre cl\u00f4tur\u00e9e au moyen de la  m\u00e9thode <code>$parser.close</code>. Si un parseur n'est pas  correctement ferm\u00e9, le fichier ou le flux de donn\u00e9e pourrait  \u00eatre verrouill\u00e9 et rester modifiable.</p> <p>Pour garantir que la fermeture soit bien effectu\u00e9e, il est recommand\u00e9  de placer la commande <code>$parser.close</code> dans une clause  <code>finally</code>. Voir l'exemple donn\u00e9 plus bas.</p>"},{"location":"libs/%24parser/_load/#syntaxe","title":"Syntaxe","text":"<p><code>$parser.load( source , files [ , options ] )</code></p>"},{"location":"libs/%24parser/_load/#parametres","title":"Param\u00e8tres","text":"<code>source</code> file / string Objet \u00e0 parser. Le param\u00e8tre peut d\u00e9signer soit un objet <code>file</code>, soit une donn\u00e9e de type <code>string</code>. Dans le second cas, c'est bien la valeur  de la string elle-m\u00eame qui est pars\u00e9e. <code>options</code> map <p>Map d'options. Les options reconnues sont:</p> <code>charset</code> string Charset des donn\u00e9es en entr\u00e9e lorsque celle-ci est du type <code>string</code>.  En l'absence de charset, la cha\u00eene est interpr\u00e9t\u00e9e en utf-8."},{"location":"libs/%24parser/_load/#retour","title":"Retour","text":"<p>Retourne un objet <code>pojo</code> repr\u00e9sentant l'instance de parseur qui pourra \u00eatre r\u00e9f\u00e9renc\u00e9 dans les autres m\u00e9thodes de la librairie. Retourne <code>null</code> si l'instanciation du parseur a rencontr\u00e9 une erreur.</p>"},{"location":"libs/%24parser/_load/#exemple","title":"Exemple","text":"<pre><code>var parser = $parser.load($file.load(\"C:/Temp/ch/eingang_entree_entrata.csv\"));\n\ntry {\n    var t, s = 0;\n    while (true) {\n        t = $parser.next(parser);\n        if (s % 1000000 == 0) $logger.info(\"${s}: ${t}\");\n        ++s;\n    }\n} catch (e) {\n    // fin de traitement\n    $logger.warn(e);\n} finally {\n    $parser.close(parser);\n}\n</code></pre>"},{"location":"libs/%24parser/_next/","title":"<code>$parser.next</code>","text":""},{"location":"libs/%24parser/_next/#description","title":"Description","text":"<p>Recherche et retourne le projet token.</p>"},{"location":"libs/%24parser/_next/#syntaxe","title":"Syntaxe","text":"<p><code>$parser.next( parser )</code></p>"},{"location":"libs/%24parser/_next/#parametres","title":"Param\u00e8tres","text":"<code>parser</code> pojo R\u00e9f\u00e9rence de parseur cr\u00e9\u00e9 au moyen de <code>$parser.load</code>"},{"location":"libs/%24parser/_next/#retour","title":"Retour","text":"<p>Retourne toujours le token suivant.</p> <p>La m\u00e9thode est susceptible de d\u00e9clencher une exception dans le cas o\u00f9 elle  est invoqu\u00e9e alors que le parseur est d\u00e9j\u00e0 cl\u00f4tur\u00e9 ou lorsque le flux  d'entr\u00e9e est vide.</p>"},{"location":"libs/%24parser/_next/#exemple","title":"Exemple","text":"<p>Voir <code>$parser.load</code></p>"},{"location":"libs/%24pdf/","title":"<code>$pdf</code>","text":"<p>Traitement de fichiers PDF</p>"},{"location":"libs/%24pdf/_generate/","title":"<code>$pdf.generate</code>","text":""},{"location":"libs/%24pdf/_generate/#description","title":"Description","text":"<p>G\u00e9n\u00e8re un PDF par transformation xslt/fop.</p> <p>La m\u00e9thode sauvegarde une copie de l'arbre XML des donn\u00e9es sources dans  le fichier <code>output-pdf.xml</code> du workdir lorsque la propri\u00e9t\u00e9  <code>admin.dumpOutput</code> du fichier de configuration est d\u00e9finie \u00e0 <code>true</code>.</p>"},{"location":"libs/%24pdf/_generate/#syntaxe","title":"Syntaxe","text":"<p><code>$pdf.generate( xsl [ , xml [ , pdf [ , params [ , options ] ] ] ] )</code></p>"},{"location":"libs/%24pdf/_generate/#parametres","title":"Param\u00e8tres","text":"<code>xsl</code> string / file <p>Feuille de style xsl/fop.</p> <p>Il est possible de passer les donn\u00e9es xsl brutes sous forme de <code>string</code>, ou il est possible de r\u00e9f\u00e9rencer un fichier, auquel cas la valeur doit  \u00eatre du type <code>file</code>.</p> <code>xml</code> string / file <p>Donn\u00e9es xml \u00e0 transformer.</p> <p>Il est possible de passer les donn\u00e9es xml brutes sous forme de <code>string</code>, ou il est possible de r\u00e9f\u00e9rencer un fichier, auquel cas la valeur doit  \u00eatre du type <code>file</code>.</p> <code>pdf</code> file Fichier PDF de sortie. Peut \u00eatre null, auquel cas la m\u00e9thode se charge de g\u00e9n\u00e9rer un fichier dans le r\u00e9pertoire de travail. <code>params</code> map Param\u00e8tres \u00e0 passer \u00e0 la feuille de style. <code>options</code> map <p>Options de transformation. Les options disponibles sont:</p> <code>transformer</code> string Classe de type \"TransformerFactory\" \u00e0 utiliser pour la  transformation xslt vers fop <code>basedir</code> file / string <p>Dossier de r\u00e9f\u00e9rence pour la r\u00e9solution des chemins en relatif. Ce  param\u00e8tre accepte soit un <code>file</code> soit un path sous forme de <code>string</code>. Si la feuille de style xsl r\u00e9f\u00e9rence des d\u00e9pendances externes (p.ex  via un <code>&lt;xsl:import&gt;</code> ou <code>&lt;xsl:include&gt;}</code>, alors le fichier sera  recherch\u00e9 relativement au path indiqu\u00e9.</p> <p>Si l'option n'est pas d\u00e9finie mais que le param\u00e8tre xsl` r\u00e9f\u00e9rence, un fichier, alors le path est d\u00e9termin\u00e9 \u00e0 partir du chemin du  fichier.</p>"},{"location":"libs/%24pdf/_generate/#retour","title":"Retour","text":"<p>Le r\u00e9sultat de la transformation xsl.</p>"},{"location":"libs/%24pdf/_generate/#exemple","title":"Exemple","text":"<pre><code>$pdf.generate($app.getResource(\"fop/AttestationVendeur.xsl\"), xml, null,\n              { imagesPath: $str.replace($app.getResource(\"resources/images\"), \"\\\\\", \"/\") });\n</code></pre>"},{"location":"libs/%24pdf/_isFopLoaded/","title":"<code>$pdf.isFopLoaded</code>","text":""},{"location":"libs/%24pdf/_isFopLoaded/#description","title":"Description","text":"<p>Indique si la configuration fop est charg\u00e9e.</p>"},{"location":"libs/%24pdf/_isFopLoaded/#syntaxe","title":"Syntaxe","text":"<p><code>$pdf.isFopLoaded()</code></p>"},{"location":"libs/%24pdf/_isFopLoaded/#retour","title":"Retour","text":"<p>Valeur <code>true</code>/<code>false</code> indiquant si la configuration fop est charg\u00e9e.</p>"},{"location":"libs/%24pdf/_isFopLoaded/#exemple","title":"Exemple","text":"<pre><code>$pdf.isFopLoaded();\n</code></pre>"},{"location":"libs/%24pdf/_merge/","title":"<code>$pdf.merge</code>","text":""},{"location":"libs/%24pdf/_merge/#description","title":"Description","text":"<p>Fusionne des documents pdf en un nouveau</p>"},{"location":"libs/%24pdf/_merge/#syntaxe","title":"Syntaxe","text":"<p><code>$pdf.merge( files [ , destination ] )</code></p>"},{"location":"libs/%24pdf/_merge/#parametres","title":"Param\u00e8tres","text":"<code>files</code> array Tableau contenant les pdf \u00e0 fusionner. Le tableau peut contenir des  objets <code>file</code> et/ou des paths de fichiers pdf. <code>destination</code> file Fichier de destination. Peut \u00eatre <code>null</code> ou non sp\u00e9cifi\u00e9, auquel cas  la m\u00e9thode se charge de cr\u00e9er un fichier dans le r\u00e9pertoire de travail."},{"location":"libs/%24pdf/_merge/#retour","title":"Retour","text":"<p>Retourne le fichier de destination ou <code>null</code> si une erreur s'est produite  durant le traitement.</p>"},{"location":"libs/%24pdf/_merge/#exemple","title":"Exemple","text":"<pre><code>$pdf.merge(...)\n</code></pre>"},{"location":"libs/%24pdf/_sign/","title":"<code>$pdf.sign</code>","text":""},{"location":"libs/%24pdf/_sign/#description","title":"Description","text":"<p>Appose une signature \u00e0 un pdf.</p> <p>Danger</p> <p>Cette m\u00e9thode en est au stade exp\u00e9rimental</p>"},{"location":"libs/%24pdf/_sign/#syntaxe","title":"Syntaxe","text":"<p><code>$pdf.sign( pdf , keystore , keypass [ , destination ] )</code></p>"},{"location":"libs/%24pdf/_sign/#parametres","title":"Param\u00e8tres","text":"<code>pdf</code> file Fichier auquel apposer la signature <code>keystore</code> file / string Fichier ou path du keystore pkcs12 <code>keypass</code> string Mot de passe du keystore <code>destination</code> file Fichier de destination. Peut \u00eatre <code>null</code> ou non sp\u00e9cifi\u00e9, auquel cas la m\u00e9thode se charge de cr\u00e9er un fichier dans le r\u00e9pertoire de travail."},{"location":"libs/%24pdf/_sign/#retour","title":"Retour","text":"<p>Fichier de destination ou <code>null</code> si une erreur est rencontr\u00e9e.</p>"},{"location":"libs/%24pdf/_sign/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24policy/","title":"<code>$policy</code>","text":"<p>Librairie de m\u00e9thodes centr\u00e9es sur les droits du sujet (user connect\u00e9)</p>"},{"location":"libs/%24policy/_hasPermission/","title":"<code>$policy.hasPermission</code>","text":"<p>Alias: <code>$policy.checkPermission</code>, <code>$policy.checkPermissions</code></p>"},{"location":"libs/%24policy/_hasPermission/#description","title":"Description","text":"<p>Indique si le sujet a la ou les permissions indiqu\u00e9es dans le contexte  actuel.</p>"},{"location":"libs/%24policy/_hasPermission/#syntaxe","title":"Syntaxe","text":"<p><code>$policy.hasPermission( permissions )</code></p>"},{"location":"libs/%24policy/_hasPermission/#parametres","title":"Param\u00e8tres","text":"<code>permissions</code> string / array Permission(s) \u00e0 v\u00e9rifier. La valeur peut \u00eatre une valeur lit\u00e9rale standard ou un tableau de valeurs"},{"location":"libs/%24policy/_hasPermission/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le sujet poss\u00e8de toutes les permissions indiqu\u00e9es pour le contexte actuel, sinon <code>false</code></p>"},{"location":"libs/%24policy/_hasPermission/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24policy/_isActionAllowed/","title":"<code>$policy.isActionAllowed</code>","text":"<p>Alias: <code>$policy.checkAction</code>, <code>$policy.checkActions</code></p>"},{"location":"libs/%24policy/_isActionAllowed/#description","title":"Description","text":"<p>Indique si le sujet a l'autorisation pour la ou les actions indiqu\u00e9es  dans le contexte actuel</p>"},{"location":"libs/%24policy/_isActionAllowed/#syntaxe","title":"Syntaxe","text":"<p><code>$policy.isActionAllowed( actions [ , version ] )</code></p>"},{"location":"libs/%24policy/_isActionAllowed/#parametres","title":"Param\u00e8tres","text":"<code>actions</code> string / array Action(s) \u00e0 v\u00e9rifier. La valeur peut \u00eatre une valeur lit\u00e9rale standard ou un tableau de valeurs <code>version</code> string <p>Num\u00e9ro de version du gestionnaire de policy \u00e0 utiliser. Si d\u00e9fini, le moteur s'appuie sur la liste d'actions relative \u00e0 la version  donn\u00e9e pour interpr\u00e9ter l'action wildcard \"*\". Si non d\u00e9fini, le  moteur s'appuie sur la derni\u00e8re version existante.</p> <p>Version</p> <p>Ici la version fait r\u00e9f\u00e9rence au num\u00e9ro de versin du gestionnaire  de policies et non au num\u00e9ro de version de la polcy. En effet, la notation wildcard \"*\" d\u00e9signe \"toutes les actions\", or la liste d'actions existantes peut varier selon la version de Ewt.</p> <p>Prenons le cas suivant. Dans la verion 1, disons que Ewt g\u00e8re les  action <code>[a, b, c]</code>. Le wildcard \"\" d\u00e9signera donc <code>a</code>, <code>b</code> et <code>c</code>. Dans la version 2, une action <code>d</code> est ajout\u00e9e. \u00c0 ce moment, le  wildcard \"\" d\u00e9signera <code>[a, b, c, d]</code>. Selon la nature de l'action  <code>d</code>, cela peut repr\u00e9senter un risque.</p> <p>L'id\u00e9e du param\u00e8tre <code>version</code> est donc d'indiquer que l'on souhaite  que le wildcard \"*\" d\u00e9signe toujours la liste d'action de la version  indiqu\u00e9e, soit <code>[a, b, c]</code> dans le cas o\u00f9 on sp\u00e9cifie la version 1,  <code>[a, b, c, d]</code> dans le cas o\u00f9 on sp\u00e9cifie la version 2 (ou si on ne sp\u00e9cifie pas de version). </p>"},{"location":"libs/%24policy/_isActionAllowed/#retour","title":"Retour","text":"<p>Retourne <code>true</code>/<code>false</code> selon que le sujet est autoris\u00e9 sur toutes les  actions indiqu\u00e9es pour le contexte actuel</p>"},{"location":"libs/%24policy/_isActionAllowed/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24policy/_isOperationAllowed/","title":"<code>$policy.isOperationAllowed</code>","text":"<p>Alias: <code>$policy.checkOperation</code>, <code>$policy.checkOperations</code></p>"},{"location":"libs/%24policy/_isOperationAllowed/#description","title":"Description","text":"<p>Indique si le sujet a l'autorisation pour la ou les op\u00e9rations indiqu\u00e9es  dans le contexte actuel</p>"},{"location":"libs/%24policy/_isOperationAllowed/#syntaxe","title":"Syntaxe","text":"<p><code>$policy.isOperationAllowed( operations )</code></p>"},{"location":"libs/%24policy/_isOperationAllowed/#parametres","title":"Param\u00e8tres","text":"<code>operations</code> string / array Op\u00e9ration(s) \u00e0 v\u00e9rifier. La valeur peut \u00eatre une valeur lit\u00e9rale standard ou un tableau de valeurs"},{"location":"libs/%24policy/_isOperationAllowed/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le sujet est autoris\u00e9 \u00e0 r\u00e9aliser toutes les op\u00e9rations  indiqu\u00e9es dans le contexte actuel</p>"},{"location":"libs/%24policy/_isOperationAllowed/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24policy/_isSubjectAllowed/","title":"<code>$policy.isSubjectAllowed</code>","text":""},{"location":"libs/%24policy/_isSubjectAllowed/#description","title":"Description","text":"<p>Indique si le sujet connect\u00e9 poss\u00e8de les droits suffisants vis-\u00e0-vis de la  politique indiqu\u00e9e pour \u00e9valuer un script.</p> <p>La m\u00e9thode tient compte du contexte de dossier actuel.</p> <p>Effectuer un test du genre</p> <pre><code>if (policy.isSubjectAllowed(\"somePolicy\")) {\n    ...\n}\n</code></pre> <p>est \u00e9quivalent au fait d'utiliser le mot-cl\u00e9 <code>policy</code>:</p> <pre><code>policy \"somePolicy\" {\n    ...\n}\n</code></pre> <p>Cela est \u00e9galement \u00e9quivalent \u00e0 un appel \u00e0  <code>$policy.isSubjectAllowedTo(policy, null, \"script\");</code></p>"},{"location":"libs/%24policy/_isSubjectAllowed/#syntaxe","title":"Syntaxe","text":"<p><code>$policy.isSubjectAllowed( policy )</code></p>"},{"location":"libs/%24policy/_isSubjectAllowed/#parametres","title":"Param\u00e8tres","text":"<code>policy</code> string Nom de la policy \u00e0 v\u00e9rifier"},{"location":"libs/%24policy/_isSubjectAllowed/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la policy indiqu\u00e9e s'applique au sujet, sinon <code>false</code></p>"},{"location":"libs/%24policy/_isSubjectAllowed/#exemple","title":"Exemple","text":"<pre><code>if ($policy.isSubjectAllowed(\"priv-6\")) {\n  // ...\n}\n</code></pre>"},{"location":"libs/%24policy/_isSubjectAllowedTo/","title":"<code>$policy.isSubjectAllowedTo</code>","text":""},{"location":"libs/%24policy/_isSubjectAllowedTo/#description","title":"Description","text":"<p>Indique si le sujet connect\u00e9 poss\u00e8de les droits suffisants vis-\u00e0-vis de la  politique indiqu\u00e9e pour effectuer l'action ou les actions indiqu\u00e9es.</p> <p>La m\u00e9thode tient compte du contexte de dossier actuel.</p> <p>La m\u00e9thode est tr\u00e8s semblable \u00e0  <code>$policy.isSubjectAllowed</code>, \u00e0 la diff\u00e9rence qu'ici on peut sp\u00e9cifier le type de permission, le type d'action, les transitions et/ou les op\u00e9rations \u00e0 v\u00e9rifier.</p>"},{"location":"libs/%24policy/_isSubjectAllowedTo/#syntaxe","title":"Syntaxe","text":"<p><code>$policy.isSubjectAllowedTo( policy , permissions , actions , transitions , operations )</code></p>"},{"location":"libs/%24policy/_isSubjectAllowedTo/#parametres","title":"Param\u00e8tres","text":"<code>policy</code> string Nom de la policy \u00e0 v\u00e9rifier <code>permissions</code> string / array Ensemble de permissions \u00e0 v\u00e9rifier. La valeur peut \u00eatre une valeur  lit\u00e9rale standard, ou un tableau de valeurs <code>actions</code> string / array Ensemble d'actions \u00e0 v\u00e9rifier. La valeur peut \u00eatre une valeur  lit\u00e9rale standard, ou un tableau de valeurs <code>transitions</code> string / array Ensemble de transitions \u00e0 v\u00e9rifier. La valeur peut \u00eatre une valeur  lit\u00e9rale standard, ou un tableau de valeurs <code>operations</code> string / array Ensemble d'op\u00e9rations \u00e0 v\u00e9rifier. La valeur peut \u00eatre une valeur  lit\u00e9rale standard, ou un tableau de valeurs"},{"location":"libs/%24policy/_isSubjectAllowedTo/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la policy indiqu\u00e9e s'applique au sujet, sinon <code>false</code></p>"},{"location":"libs/%24policy/_isSubjectAllowedTo/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24policy/_isTransitionAllowed/","title":"<code>$policy.isTransitionAllowed</code>","text":"<p>Alias: <code>$policy.checkTransition</code>, <code>$policy.checkTransitions</code></p>"},{"location":"libs/%24policy/_isTransitionAllowed/#description","title":"Description","text":"<p>Indique si le sujet a l'autorisation pour la ou les transitions indiqu\u00e9es  dans le contexte actuel</p>"},{"location":"libs/%24policy/_isTransitionAllowed/#syntaxe","title":"Syntaxe","text":"<p><code>$policy.isTransitionAllowed( transitions )</code></p>"},{"location":"libs/%24policy/_isTransitionAllowed/#parametres","title":"Param\u00e8tres","text":"<code>transitions</code> string / array Transition(s) \u00e0 v\u00e9rifier. La valeur peut \u00eatre une valeur lit\u00e9rale standard ou un tableau de valeurs"},{"location":"libs/%24policy/_isTransitionAllowed/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le sujet est autoris\u00e9 \u00e0 r\u00e9aliser toutes les transitions  indiqu\u00e9es dans le contexte actuel</p>"},{"location":"libs/%24policy/_isTransitionAllowed/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24request/","title":"<code>$request</code>","text":"<p>M\u00e9thodes de gestion de la requ\u00eate HTTP.</p>"},{"location":"libs/%24request/_getAuthType/","title":"<code>$request.getAuthType</code>","text":""},{"location":"libs/%24request/_getAuthType/#description","title":"Description","text":"<p>Retourne la m\u00e9thode d'authentification utilis\u00e9e pour invoquer  le servlet courant.</p>"},{"location":"libs/%24request/_getAuthType/#syntaxe","title":"Syntaxe","text":"<p><code>$request.getAuthType()</code></p>"},{"location":"libs/%24request/_getAuthType/#retour","title":"Retour","text":"<p>M\u00e9thode d'authentification utilis\u00e9e ou <code>null</code> si le servlet est accessible  sans authentification.</p>"},{"location":"libs/%24request/_getAuthType/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24request/_getCharset/","title":"<code>$request.getCharset</code>","text":""},{"location":"libs/%24request/_getCharset/#description","title":"Description","text":"<p>Retourne le charset de la requ\u00eate, si d\u00e9fini</p>"},{"location":"libs/%24request/_getCharset/#syntaxe","title":"Syntaxe","text":"<p><code>$request.getCharset()</code></p>"},{"location":"libs/%24request/_getCharset/#retour","title":"Retour","text":"<p>Voir description</p>"},{"location":"libs/%24request/_getCharset/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24request/_getContentType/","title":"<code>$request.getContentType</code>","text":""},{"location":"libs/%24request/_getContentType/#description","title":"Description","text":"<p>Retourne le content-type</p>"},{"location":"libs/%24request/_getContentType/#syntaxe","title":"Syntaxe","text":"<p><code>$request.getContentType()</code></p>"},{"location":"libs/%24request/_getContentType/#retour","title":"Retour","text":"<p>Voir description</p>"},{"location":"libs/%24request/_getContentType/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24request/_getContextPath/","title":"<code>$request.getContextPath</code>","text":""},{"location":"libs/%24request/_getContextPath/#description","title":"Description","text":"<p>Retourne le context-path de la requ\u00eate, ou une cha\u00eene vide  si non d\u00e9fini.</p>"},{"location":"libs/%24request/_getContextPath/#syntaxe","title":"Syntaxe","text":"<p><code>$request.getContextPath()</code></p>"},{"location":"libs/%24request/_getContextPath/#retour","title":"Retour","text":"<p>Retourne le context-path de la requ\u00eate ou une cha\u00eene vide  si non d\u00e9fini.</p>"},{"location":"libs/%24request/_getContextPath/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24request/_getCookies/","title":"<code>$request.getCookies</code>","text":""},{"location":"libs/%24request/_getCookies/#description","title":"Description","text":"<p>Retourne une table contenant les cookies de la requ\u00eate</p>"},{"location":"libs/%24request/_getCookies/#syntaxe","title":"Syntaxe","text":"<p><code>$request.getCookies()</code></p>"},{"location":"libs/%24request/_getCookies/#retour","title":"Retour","text":"<p>Tableau contenant les cookies de la requ\u00eate</p>"},{"location":"libs/%24request/_getCookies/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24request/_getHeaders/","title":"<code>$request.getHeaders</code>","text":""},{"location":"libs/%24request/_getHeaders/#description","title":"Description","text":"<p>Retourne un map contenant les headers de la requ\u00eate</p>"},{"location":"libs/%24request/_getHeaders/#syntaxe","title":"Syntaxe","text":"<p><code>$request.getHeaders()</code></p>"},{"location":"libs/%24request/_getHeaders/#retour","title":"Retour","text":"<p>Voir description</p>"},{"location":"libs/%24request/_getHeaders/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24request/_getLogin/","title":"<code>$request.getLogin</code>","text":""},{"location":"libs/%24request/_getLogin/#description","title":"Description","text":"<p>Retourne le login de l'utilisateur connect\u00e9. La valeur retourn\u00e9e est  toujours en minuscules.</p> <p>La m\u00e9thode <code>$request.getPrincipal</code> est peut-\u00eatre  plus fiable car l'identifiant retourn\u00e9 par cette derni\u00e8re n'est pas  cens\u00e9 changer lorsque l'utilisateur change de login (par exemple  lorsque le login est construit sur le nom/pr\u00e9nom de l'utilisateur,  mais que l'utilisateur change de nom... ou de pr\u00e9nom).</p>"},{"location":"libs/%24request/_getLogin/#syntaxe","title":"Syntaxe","text":"<p><code>$request.getLogin()</code></p>"},{"location":"libs/%24request/_getLogin/#retour","title":"Retour","text":"<p>Login de l'utilisateur connect\u00e9, en minuscules.</p>"},{"location":"libs/%24request/_getLogin/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24request/_getMethod/","title":"<code>$request.getMethod</code>","text":""},{"location":"libs/%24request/_getMethod/#description","title":"Description","text":"<p>Retourne la m\u00e9thode (GET, POST, etc.) utilis\u00e9e</p>"},{"location":"libs/%24request/_getMethod/#syntaxe","title":"Syntaxe","text":"<p><code>$request.getMethod()</code></p>"},{"location":"libs/%24request/_getMethod/#retour","title":"Retour","text":"<p>Voir description</p>"},{"location":"libs/%24request/_getMethod/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24request/_getParameter/","title":"<code>$request.getParameter</code>","text":""},{"location":"libs/%24request/_getParameter/#description","title":"Description","text":"<p>Retourne la valeur d'un param\u00e8tre de la requ\u00eate. Le param\u00e8tre  peut \u00eatre soit un param\u00e8tre d'URL, soit un param\u00e8tre de formulaire.</p>"},{"location":"libs/%24request/_getParameter/#syntaxe","title":"Syntaxe","text":"<p><code>$request.getParameter( name )</code></p>"},{"location":"libs/%24request/_getParameter/#parametres","title":"Param\u00e8tres","text":"<code>name</code> string Nom du param\u00e8tre \u00e0 r\u00e9cup\u00e9rer"},{"location":"libs/%24request/_getParameter/#retour","title":"Retour","text":"<p>Valeur du param\u00e8tre, ou <code>null</code> si le param\u00e8tre n'existe pas ou si  la requ\u00eate n'a aucun param\u00e8tre.</p>"},{"location":"libs/%24request/_getParameter/#exemple","title":"Exemple","text":"<pre><code>$request.getParameter(\"SESSION:file\");\n</code></pre>"},{"location":"libs/%24request/_getParameterNames/","title":"<code>$request.getParameterNames</code>","text":""},{"location":"libs/%24request/_getParameterNames/#description","title":"Description","text":"<p>Retourne une table de tous les noms de param\u00e8tres  disponibles dans la requ\u00eate</p>"},{"location":"libs/%24request/_getParameterNames/#syntaxe","title":"Syntaxe","text":"<p><code>$request.getParameterNames()</code></p>"},{"location":"libs/%24request/_getParameterNames/#retour","title":"Retour","text":"<p>Table contenant les noms des param\u00e8tres de la requ\u00eate. La table est vide si la requ\u00eate ne contient aucun param\u00e8tre.</p>"},{"location":"libs/%24request/_getParameterNames/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24request/_getPathInfo/","title":"<code>$request.getPathInfo</code>","text":""},{"location":"libs/%24request/_getPathInfo/#description","title":"Description","text":"<p>Retourne le path-info de la requ\u00eate.</p>"},{"location":"libs/%24request/_getPathInfo/#syntaxe","title":"Syntaxe","text":"<p><code>$request.getPathInfo()</code></p>"},{"location":"libs/%24request/_getPathInfo/#retour","title":"Retour","text":"<p>Retourne le path-info de la requ\u00eate</p>"},{"location":"libs/%24request/_getPathInfo/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24request/_getPrincipal/","title":"<code>$request.getPrincipal</code>","text":""},{"location":"libs/%24request/_getPrincipal/#description","title":"Description","text":"<p>Retourne le principal r\u00e9f\u00e9renc\u00e9 dans la requ\u00eate. En fonction du module  de login, il se peut que le principal diff\u00e8re du login (par exemple si  un utilisateur se connecte avec une adresse e-mail, mais est identifi\u00e9  ensuite par un id constant). L'utilisation de <code>$request.getPrincipal</code> est plus sure que <code>$request.getLogin</code> car moins sujette  aux risques d'injections (pour autant que le module d'identification soit correctement configur\u00e9).</p>"},{"location":"libs/%24request/_getPrincipal/#syntaxe","title":"Syntaxe","text":"<p><code>$request.getPrincipal()</code></p>"},{"location":"libs/%24request/_getPrincipal/#retour","title":"Retour","text":"<p>Principal du user connect\u00e9</p>"},{"location":"libs/%24request/_getPrincipal/#exemple","title":"Exemple","text":"<pre><code>$request.getPrincipal()\n</code></pre>"},{"location":"libs/%24request/_getRequestURI/","title":"<code>$request.getRequestURI</code>","text":""},{"location":"libs/%24request/_getRequestURI/#description","title":"Description","text":"<p>Retourne l'URI de la requ\u00eate, c.-\u00e0-d. la partie de l'URL qui figure  dans la premi\u00e8re ligne du header HTTP.</p>"},{"location":"libs/%24request/_getRequestURI/#syntaxe","title":"Syntaxe","text":"<p><code>$request.getRequestURI()</code></p>"},{"location":"libs/%24request/_getRequestURI/#retour","title":"Retour","text":"<p>Retourne l'URI de la requ\u00eate.</p>"},{"location":"libs/%24request/_getRequestURI/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24request/_getRequestURL/","title":"<code>$request.getRequestURL</code>","text":""},{"location":"libs/%24request/_getRequestURL/#description","title":"Description","text":"<p>Retourne l'URL de la requ\u00eate.</p>"},{"location":"libs/%24request/_getRequestURL/#syntaxe","title":"Syntaxe","text":"<p><code>$request.getRequestURL()</code></p>"},{"location":"libs/%24request/_getRequestURL/#retour","title":"Retour","text":"<p>Retourne l'URL de la requ\u00eate.</p>"},{"location":"libs/%24request/_getRequestURL/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24request/_getServlet/","title":"<code>$request.getServlet</code>","text":""},{"location":"libs/%24request/_getServlet/#description","title":"Description","text":"<p>Retourne le type de servlet qui a re\u00e7u la requ\u00eate.</p>"},{"location":"libs/%24request/_getServlet/#syntaxe","title":"Syntaxe","text":"<p><code>$request.getServlet()</code></p>"},{"location":"libs/%24request/_getServlet/#retour","title":"Retour","text":"<p>Retourne le pr\u00e9fixe de servlet ayant re\u00e7u la requ\u00eate (web, rest, etc.) ou <code>null</code> si appel\u00e9 en dehors d'un traitement par servlet</p>"},{"location":"libs/%24request/_getServlet/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24request/_getServletPath/","title":"<code>$request.getServletPath</code>","text":""},{"location":"libs/%24request/_getServletPath/#description","title":"Description","text":"<p>Retourne le servlet-path de la requ\u00eate.</p>"},{"location":"libs/%24request/_getServletPath/#syntaxe","title":"Syntaxe","text":"<p><code>$request.getServletPath()</code></p>"},{"location":"libs/%24request/_getServletPath/#retour","title":"Retour","text":"<p>Retourne le servlet-path de la requ\u00eate</p>"},{"location":"libs/%24request/_getServletPath/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24request/_isUserInRole/","title":"<code>$request.isUserInRole</code>","text":""},{"location":"libs/%24request/_isUserInRole/#description","title":"Description","text":"<p>Indique si le user poss\u00e8de le role donn\u00e9.</p> <p>La m\u00e9thode est tr\u00e8s similaire \u00e0 <code>$request.scanRoles</code> mais ne permet de v\u00e9rifier qu'un r\u00f4le \u00e0 la fois.</p>"},{"location":"libs/%24request/_isUserInRole/#syntaxe","title":"Syntaxe","text":"<p><code>$request.isUserInRole( role )</code></p>"},{"location":"libs/%24request/_isUserInRole/#parametres","title":"Param\u00e8tres","text":"<code>role</code> string Nom du r\u00f4le \u00e0 v\u00e9rifier"},{"location":"libs/%24request/_isUserInRole/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le user poss\u00e8de le r\u00f4le indiqu\u00e9, sinon <code>false</code>.</p>"},{"location":"libs/%24request/_isUserInRole/#exemple","title":"Exemple","text":"<pre><code>$request.isUserInRole(\"EWT\");\n</code></pre>"},{"location":"libs/%24request/_scanRoles/","title":"<code>$request.scanRoles</code>","text":""},{"location":"libs/%24request/_scanRoles/#description","title":"Description","text":"<p>Indique si le user poss\u00e8de le role ou l'un des roles indiqu\u00e9s.</p> <p>Si le param\u00e8tre <code>roles</code> est une valeur unique, la m\u00e9thode retournera la valeur <code>true</code> si le user poss\u00e8de ce r\u00f4le ou <code>false</code> dans le cas contraire.</p> <p>Si le param\u00e8tre <code>roles</code> est une table, la m\u00e9thode indiquera combien de ces r\u00f4les sont rattach\u00e9s au user.</p>"},{"location":"libs/%24request/_scanRoles/#syntaxe","title":"Syntaxe","text":"<p><code>$request.scanRoles( roles )</code></p>"},{"location":"libs/%24request/_scanRoles/#parametres","title":"Param\u00e8tres","text":"<code>roles</code> string / array Nom ou table de roles \u00e0 v\u00e9rifier au niveau de la requ\u00eate."},{"location":"libs/%24request/_scanRoles/#retour","title":"Retour","text":"<p>Retourne le nombre de r\u00f4les correspondant trouv\u00e9s au niveau de la requ\u00eate.</p>"},{"location":"libs/%24request/_scanRoles/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24response/","title":"<code>$response</code>","text":"<p>M\u00e9thodes permettant de d\u00e9finir le contenu et la forme de la r\u00e9ponse \u00e0 envoyer.</p> <p>Si aucune r\u00e9ponse n'est sp\u00e9cifi\u00e9e au moyen des m\u00e9thodes ci-dessous, le moteur se charge de construire un arbre xml de sortie et de le transformer pour produire la r\u00e9ponse. Les m\u00e9thodes de cette classe permettent donc de surcharger la r\u00e9ponse standard du moteur.</p>"},{"location":"libs/%24response/_addContent/","title":"<code>$response.addContent</code>","text":""},{"location":"libs/%24response/_addContent/#description","title":"Description","text":"<p>Cr\u00e9e ou ajoute du contenu au buffer de r\u00e9ponse. La m\u00e9thode supporte les  donn\u00e9es texte (via une valeur <code>string</code>) et les donn\u00e9es binaires (via un  objet <code>file</code>) mais pas un mix des deux. Il n'est en effet pas permis  d'\u00e9crire des donn\u00e9es textuelles puis d'y ajouter des donn\u00e9es binaires. Il  n'est pas non plus permis d'ajouter des donn\u00e9es binaires si la r\u00e9ponse en  contient d\u00e9j\u00e0. En fait seules les donn\u00e9es texte peuvent \u00eatre compl\u00e9t\u00e9es.</p> <p>Les \u00e9l\u00e9ments d'en-t\u00eate de la r\u00e9ponse (status, headers (dont le content-type),  etc.) doivent \u00eatre d\u00e9finis avant l'ajout de donn\u00e9es dans le buffer de  r\u00e9ponse car il n'est plus possible de modifier ces \u00e9l\u00e9ments une fois que  l'on envoie des donn\u00e9es dans le buffer, \u00e0 moins d'invalider le buffer au  moyen de la m\u00e9thode <code>$response.reset</code>.</p>"},{"location":"libs/%24response/_addContent/#syntaxe","title":"Syntaxe","text":"<p><code>$response.addContent( content )</code></p>"},{"location":"libs/%24response/_addContent/#parametres","title":"Param\u00e8tres","text":"<code>content</code> string / file Donn\u00e9e \u00e0 inscrire dans ou \u00e0 ajouter au buffer."},{"location":"libs/%24response/_addContent/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24response/_addContent/#exemple","title":"Exemple","text":"<pre><code>$response.setStatus(500);\n$response.setContentType(\"text/plain; charset=utf-8\");\n$response.addContent($script.getLastError());\n</code></pre>"},{"location":"libs/%24response/_fatalError/","title":"<code>$response.fatalError</code>","text":""},{"location":"libs/%24response/_fatalError/#description","title":"Description","text":"<p>Provoque une exception d'ex\u00e9cution accompagn\u00e9e d'un message</p>"},{"location":"libs/%24response/_fatalError/#syntaxe","title":"Syntaxe","text":"<p><code>$response.fatalError( message )</code></p>"},{"location":"libs/%24response/_fatalError/#parametres","title":"Param\u00e8tres","text":"<code>message</code> string Message \u00e0 associer \u00e0 l'exception"},{"location":"libs/%24response/_fatalError/#retour","title":"Retour","text":"<p>M\u00e9thode sans retour</p>"},{"location":"libs/%24response/_fatalError/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24response/_flush/","title":"<code>$response.flush</code>","text":""},{"location":"libs/%24response/_flush/#description","title":"Description","text":"<p>Force l'envoi des donn\u00e9es non d\u00e9j\u00e0 envoy\u00e9es contenues dans le buffer de  r\u00e9ponse actuelle. Il est possible d'appeler cette m\u00e9thode plusieurs fois  dans un m\u00eame script pour lib\u00e9rer le buffer.</p> <p>Il n'est pas n\u00e9cessaire d'appeler syst\u00e9matiquement cette m\u00e9thode en fin  de script car le moteur se charge de d\u00e9clencher le flush en fin de  traitement d'une requ\u00eate.</p>"},{"location":"libs/%24response/_flush/#syntaxe","title":"Syntaxe","text":"<p><code>$response.flush()</code></p>"},{"location":"libs/%24response/_flush/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24response/_flush/#exemple","title":"Exemple","text":"<pre><code>$response.flush();\n</code></pre>"},{"location":"libs/%24response/_reset/","title":"<code>$response.reset</code>","text":""},{"location":"libs/%24response/_reset/#description","title":"Description","text":"<p>R\u00e9initialise la r\u00e9ponse actuelle.</p> <p>La m\u00e9thode supprime toutes donn\u00e9es d\u00e9j\u00e0 pr\u00e9sentes dans le buffer de r\u00e9ponse  et r\u00e9initialise le code de statut et les headers.</p>"},{"location":"libs/%24response/_reset/#syntaxe","title":"Syntaxe","text":"<p><code>$response.reset()</code></p>"},{"location":"libs/%24response/_reset/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24response/_reset/#exemple","title":"Exemple","text":"<pre><code>$response.reset();\n</code></pre>"},{"location":"libs/%24response/_resetBuffer/","title":"<code>$response.resetBuffer</code>","text":""},{"location":"libs/%24response/_resetBuffer/#description","title":"Description","text":"<p>Efface le buffer de la r\u00e9ponse actuelle. La m\u00e9thode efface toutes donn\u00e9es  d\u00e9j\u00e0 inscrites dans le buffer de r\u00e9ponse mais ne modifie pas le code de  statut et les headers.</p>"},{"location":"libs/%24response/_resetBuffer/#syntaxe","title":"Syntaxe","text":"<p><code>$response.resetBuffer()</code></p>"},{"location":"libs/%24response/_resetBuffer/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24response/_resetBuffer/#exemple","title":"Exemple","text":"<pre><code>$response.resetBuffer();\n</code></pre>"},{"location":"libs/%24response/_sendRedirect/","title":"<code>$response.sendRedirect</code>","text":""},{"location":"libs/%24response/_sendRedirect/#description","title":"Description","text":"<p>G\u00e9n\u00e8re une redirection 302 vers l'URL indiqu\u00e9e</p>"},{"location":"libs/%24response/_sendRedirect/#syntaxe","title":"Syntaxe","text":"<p><code>$response.sendRedirect( url )</code></p>"},{"location":"libs/%24response/_sendRedirect/#parametres","title":"Param\u00e8tres","text":"<code>url</code> string URL de redirection"},{"location":"libs/%24response/_sendRedirect/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24response/_sendRedirect/#exemple","title":"Exemple","text":"<pre><code>$response.sendRedirect(\"http://www.epilogic.ch\");\n</code></pre>"},{"location":"libs/%24response/_setCharacterEncoding/","title":"<code>$response.setCharacterEncoding</code>","text":"<p>Alias: <code>$response.setEncoding</code>, <code>$response.setCharset</code></p>"},{"location":"libs/%24response/_setCharacterEncoding/#description","title":"Description","text":"<p>D\u00e9finit l'encoding de la r\u00e9ponse.</p> <p>L'encoding peut \u00e9galement \u00eatre d\u00e9fini au moyen du header <code>content-type</code>  avec la notation <code>text/html; charset=utf-8</code> par exemple.</p>"},{"location":"libs/%24response/_setCharacterEncoding/#syntaxe","title":"Syntaxe","text":"<p><code>$response.setCharacterEncoding( encoding )</code></p>"},{"location":"libs/%24response/_setCharacterEncoding/#parametres","title":"Param\u00e8tres","text":"<code>encoding</code> string Encoding \u00e0 d\u00e9finir pour la r\u00e9ponse"},{"location":"libs/%24response/_setCharacterEncoding/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24response/_setCharacterEncoding/#exemple","title":"Exemple","text":"<pre><code>$response.setCharacterEncoding(\"iso-8859-1\");\n</code></pre>"},{"location":"libs/%24response/_setContentDisposition/","title":"<code>$response.setContentDisposition</code>","text":""},{"location":"libs/%24response/_setContentDisposition/#description","title":"Description","text":"<p>D\u00e9finit le content-disposition de la r\u00e9ponse.</p> <p>Cette m\u00e9thode est un raccourci pour d\u00e9finir le header <code>content-disposition</code>.</p>"},{"location":"libs/%24response/_setContentDisposition/#syntaxe","title":"Syntaxe","text":"<p><code>$response.setContentDisposition( contentDisposition )</code></p>"},{"location":"libs/%24response/_setContentDisposition/#parametres","title":"Param\u00e8tres","text":"<code>contentDisposition</code> string Content-disposition de la r\u00e9ponse."},{"location":"libs/%24response/_setContentDisposition/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24response/_setContentDisposition/#exemple","title":"Exemple","text":"<pre><code>$response.setContentDisposition(`attachment; filename=\"monfichier.pdf\"`);\n</code></pre>"},{"location":"libs/%24response/_setContentType/","title":"<code>$response.setContentType</code>","text":""},{"location":"libs/%24response/_setContentType/#description","title":"Description","text":"<p>D\u00e9finit le content-type de la r\u00e9ponse.</p> <p>Cette m\u00e9thode est un raccourci pour d\u00e9finir le header <code>content-type</code>.</p>"},{"location":"libs/%24response/_setContentType/#syntaxe","title":"Syntaxe","text":"<p><code>$response.setContentType(...)</code></p>"},{"location":"libs/%24response/_setContentType/#parametres","title":"Param\u00e8tres","text":"<code>param</code> string Content-type de la r\u00e9ponse. Le content type peut \u00e9galement contenir le charset via la notation <code>text/html; charset=utf-8</code> par exemple."},{"location":"libs/%24response/_setContentType/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24response/_setContentType/#exemple","title":"Exemple","text":"<pre><code>$response.setContentType(\"application/pdf\");\n</code></pre>"},{"location":"libs/%24response/_setHeader/","title":"<code>$response.setHeader</code>","text":""},{"location":"libs/%24response/_setHeader/#description","title":"Description","text":"<p>D\u00e9finit un header de la r\u00e9ponse.</p>"},{"location":"libs/%24response/_setHeader/#syntaxe","title":"Syntaxe","text":"<p><code>$response.setHeader( name , value )</code></p>"},{"location":"libs/%24response/_setHeader/#parametres","title":"Param\u00e8tres","text":"<code>name</code> string Nom du header (la casse n'a pas d'importance) <code>value</code> string Valeur associ\u00e9e. La version actuelle ne supporte que les headers  avec une seule valeur."},{"location":"libs/%24response/_setHeader/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24response/_setHeader/#exemple","title":"Exemple","text":"<pre><code>$response.setHeader(\"Content-Disposition\", \"attachment\");\n</code></pre>"},{"location":"libs/%24response/_setHeaders/","title":"<code>$response.setHeaders</code>","text":""},{"location":"libs/%24response/_setHeaders/#description","title":"Description","text":"<p>D\u00e9finit plusieurs headers \u00e0 la fois.</p> <p>La m\u00e9thode permet de d\u00e9finir plusieurs header en une fois en  s'appuyant sur le map de cl\u00e9s/valeurs pass\u00e9 en param\u00e8tre.</p>"},{"location":"libs/%24response/_setHeaders/#syntaxe","title":"Syntaxe","text":"<p><code>$response.setHeaders( headers )</code></p>"},{"location":"libs/%24response/_setHeaders/#parametres","title":"Param\u00e8tres","text":"<code>headers</code> map Map contenant les noms et valeurs de headers \u00e0 reprendre dans la  r\u00e9ponse. \u00c0 noter que dans la version actuelle, seuls des headers  mono-valeur sont support\u00e9s."},{"location":"libs/%24response/_setHeaders/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24response/_setHeaders/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24response/_setStatus/","title":"<code>$response.setStatus</code>","text":""},{"location":"libs/%24response/_setStatus/#description","title":"Description","text":"<p>Sp\u00e9cifie le statut HTTP de la r\u00e9ponse. Il est important de sp\u00e9cifier le  statut avant de commencer \u00e0 envoyer des donn\u00e9es car la modification n'est  plus possible apr\u00e8s, \u00e0 moins de forcer un reset de la r\u00e9ponse.</p>"},{"location":"libs/%24response/_setStatus/#syntaxe","title":"Syntaxe","text":"<p><code>$response.setStatus( status )</code></p>"},{"location":"libs/%24response/_setStatus/#parametres","title":"Param\u00e8tres","text":"<code>status</code> number Statut HTTP sous forme d'entier"},{"location":"libs/%24response/_setStatus/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code></p>"},{"location":"libs/%24response/_setStatus/#exemple","title":"Exemple","text":"<pre><code>$response.setStatus(400);\n</code></pre>"},{"location":"libs/%24scheduler/","title":"<code>$scheduler</code>","text":"<p>Librairie de m\u00e9thodes permettant de piloter le scheduler.</p>"},{"location":"libs/%24scope/","title":"<code>$scope</code>","text":"<p>M\u00e9thodes li\u00e9es \u00e0 la gestion du scope (variables, fonctions, etc.)</p>"},{"location":"libs/%24scope/_describePojo/","title":"<code>$scope.describePojo</code>","text":""},{"location":"libs/%24scope/_describePojo/#description","title":"Description","text":"<p>Extrait des infos au sujet d'un objet <code>pojo</code>.</p>"},{"location":"libs/%24scope/_describePojo/#syntaxe","title":"Syntaxe","text":"<p><code>$scope.describePojo( object )</code></p>"},{"location":"libs/%24scope/_describePojo/#parametres","title":"Param\u00e8tres","text":"<code>object</code> pojo Objet \u00e0 analyser"},{"location":"libs/%24scope/_describePojo/#retour","title":"Retour","text":"<p>Retourne un map contenant le hashcode, le nom de la classe (en versions compl\u00e8te et simple) et une repr\u00e9sentation de l'objet sous forme de string. </p>"},{"location":"libs/%24scope/_describePojo/#exemple","title":"Exemple","text":"<pre><code>var mypojo = $excel.create();\n$scope.describePojo(mypojo);\n</code></pre> <p>Construit un map de la forme suivante:</p> <pre><code>{\n  \"classSimpleName\": \"XSSFWorkbook\",\n  \"hashcode\": 768196487,\n  \"className\": \"org.apache.poi.xssf.usermodel.XSSFWorkbook\",\n  \"value\": \"Name: /xl/workbook.xml - Content Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\"\n}\n</code></pre>"},{"location":"libs/%24scope/_exists/","title":"<code>$scope.exists</code>","text":""},{"location":"libs/%24scope/_exists/#description","title":"Description","text":"<p>Indique si la variable indiqu\u00e9e en param\u00e8tre existe</p>"},{"location":"libs/%24scope/_exists/#syntaxe","title":"Syntaxe","text":"<p><code>$scope.exists( varname )</code></p>"},{"location":"libs/%24scope/_exists/#parametres","title":"Param\u00e8tres","text":"<code>varname</code> string Description"},{"location":"libs/%24scope/_exists/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la variable existe, sinon <code>false</code></p>"},{"location":"libs/%24scope/_exists/#exemple","title":"Exemple","text":"<pre><code>$scope.exists(\"mavariable\");\n</code></pre>"},{"location":"libs/%24scope/_export/","title":"<code>$scope.export</code>","text":""},{"location":"libs/%24scope/_export/#description","title":"Description","text":"<p>Extrait tout le contenu du scope dans un map.</p>"},{"location":"libs/%24scope/_export/#syntaxe","title":"Syntaxe","text":"<p><code>$scope.export()</code></p>"},{"location":"libs/%24scope/_export/#retour","title":"Retour","text":"<p>Map contenant tous les \u00e9l\u00e9ments du scope courant.</p>"},{"location":"libs/%24scope/_export/#exemple","title":"Exemple","text":"<pre><code>$scope.export();\n</code></pre>"},{"location":"libs/%24scope/_get/","title":"<code>$scope.get</code>","text":""},{"location":"libs/%24scope/_get/#description","title":"Description","text":"<p>R\u00e9cup\u00e8re la valeur d'une variable depuis le scope</p>"},{"location":"libs/%24scope/_get/#syntaxe","title":"Syntaxe","text":"<p><code>$scope.get( varname )</code></p>"},{"location":"libs/%24scope/_get/#parametres","title":"Param\u00e8tres","text":"<code>varname</code> string Nom de la variable \u00e0 r\u00e9cup\u00e9rer. La variable doit exister dans le scope."},{"location":"libs/%24scope/_get/#retour","title":"Retour","text":"<p>La valeur pass\u00e9e via le param\u00e8tre value, ou <code>null</code> si le nom de variable n'est pas valide.</p>"},{"location":"libs/%24scope/_get/#exemple","title":"Exemple","text":"<pre><code>var Im\ud83d\ude00 = \"I'm happy\";\n$logger.info($scope.get(\"I\" &amp; \"m\ud83d\ude00\"));\n</code></pre>"},{"location":"libs/%24scope/_hashCode/","title":"<code>$scope.hashCode</code>","text":""},{"location":"libs/%24scope/_hashCode/#description","title":"Description","text":"<p>Retourne le hashCode de l'objet donn\u00e9 en param\u00e8tre.</p> <p>Cette m\u00e9thode n'a pas grand int\u00e9r\u00eat hormis pour le debug du moteur lui-m\u00eame.</p>"},{"location":"libs/%24scope/_hashCode/#syntaxe","title":"Syntaxe","text":"<p><code>$scope.hashCode( object )</code></p>"},{"location":"libs/%24scope/_hashCode/#parametres","title":"Param\u00e8tres","text":"<code>object</code> any Objet \u00e0 traiter"},{"location":"libs/%24scope/_hashCode/#retour","title":"Retour","text":"<p>Retourne le hashCode de l'objet</p>"},{"location":"libs/%24scope/_hashCode/#exemple","title":"Exemple","text":"<pre><code>$scope.hashCode(mavariable);\n</code></pre>"},{"location":"libs/%24scope/_isNotEmpty/","title":"<code>$scope.isNotEmpty</code>","text":""},{"location":"libs/%24scope/_isNotEmpty/#description","title":"Description","text":"<p>Indique si la variable indiqu\u00e9e est d\u00e9finie avec une valeur non vide.</p>"},{"location":"libs/%24scope/_isNotEmpty/#syntaxe","title":"Syntaxe","text":"<p><code>$scope.isNotEmpty( varname )</code></p>"},{"location":"libs/%24scope/_isNotEmpty/#parametres","title":"Param\u00e8tres","text":"<code>varname</code> string Nom de la variable \u00e0 tester"},{"location":"libs/%24scope/_isNotEmpty/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la variable est d\u00e9finie non vide, sinon <code>false</code>.</p>"},{"location":"libs/%24scope/_isNotEmpty/#exemple","title":"Exemple","text":"<pre><code>$scope.isNotEmpty(\"mavariable\");\n</code></pre>"},{"location":"libs/%24scope/_isNull/","title":"<code>$scope.isNull</code>","text":""},{"location":"libs/%24scope/_isNull/#description","title":"Description","text":"<p>Indique si la variable indiqu\u00e9e est <code>null</code>, c'est-\u00e0-dire si elle n'existe pas ou si elle existe avec une valeur <code>null</code>.</p> <p>Note</p> <p>La m\u00e9thode n'est pas adapt\u00e9e pour v\u00e9rifier si un objet existe. Pour ce faire, il est recommand\u00e9 d'utiliser l'op\u00e9rateur <code>typeof</code>.  Ce dernier retourne la valeur \"undefined\" dans le cas ou l'objet test\u00e9 n'existe pas. Cela est valable pour les variables, mais \u00e9galement pour ses \u00e9ventuelles propri\u00e9t\u00e9s.</p>"},{"location":"libs/%24scope/_isNull/#syntaxe","title":"Syntaxe","text":"<p><code>$scope.isNull( varname )</code></p>"},{"location":"libs/%24scope/_isNull/#parametres","title":"Param\u00e8tres","text":"<code>varname</code> string Nom de la variable \u00e0 tester"},{"location":"libs/%24scope/_isNull/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la variable est <code>null</code>, sinon <code>false</code>.</p>"},{"location":"libs/%24scope/_isNull/#exemple","title":"Exemple","text":"<pre><code>$scope.isNull(\"mavariable\");\n</code></pre>"},{"location":"libs/%24scope/_isNullOrEmpty/","title":"<code>$scope.isNullOrEmpty</code>","text":""},{"location":"libs/%24scope/_isNullOrEmpty/#description","title":"Description","text":"<p>Indique si la variable indiqu\u00e9e est <code>null</code> ou vide, c'est-\u00e0-dire si elle n'existe pas, si elle existe avec une valeur <code>null</code> ou si elle contient une cha\u00eene vide.</p>"},{"location":"libs/%24scope/_isNullOrEmpty/#syntaxe","title":"Syntaxe","text":"<p><code>$scope.isNullOrEmpty( varname )</code></p>"},{"location":"libs/%24scope/_isNullOrEmpty/#parametres","title":"Param\u00e8tres","text":"<code>varname</code> string Nom de la variable \u00e0 tester"},{"location":"libs/%24scope/_isNullOrEmpty/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la variable est <code>null</code>ou vide, sinon <code>false</code></p>"},{"location":"libs/%24scope/_isNullOrEmpty/#exemple","title":"Exemple","text":"<pre><code>$scope.isNullOrEmpty(\"mavariable\");\n</code></pre>"},{"location":"libs/%24scope/_set/","title":"<code>$scope.set</code>","text":""},{"location":"libs/%24scope/_set/#description","title":"Description","text":"<p>G\u00e9n\u00e8re ou met \u00e0 jour une variable dans le scope.</p>"},{"location":"libs/%24scope/_set/#syntaxe","title":"Syntaxe","text":"<p><code>$scope.set( varname , value )</code></p>"},{"location":"libs/%24scope/_set/#parametres","title":"Param\u00e8tres","text":"<code>varname</code> string <p>Nom de la variable \u00e0 cr\u00e9er/mettre \u00e0 jour.</p> <p>Pour rappel, les noms de variables ne doivent pas commencer par un  chiffre et ne doivent pas contenir l'un des caract\u00e8res suivants:  <code>.,;:=!?+-*/([{)]}%&lt;&gt;\"'`\u00b4&amp;|@#^~\\</code> ainsi que les caract\u00e8res TAB, CR ou LF.</p> <code>varname</code> any Valeur \u00e0 attribuer \u00e0 la variable"},{"location":"libs/%24scope/_set/#retour","title":"Retour","text":"<p>La valeur pass\u00e9e via le param\u00e8tre <code>value</code>, ou <code>null</code> si le nom de variable n'est pas valide</p>"},{"location":"libs/%24scope/_set/#exemple","title":"Exemple","text":"<pre><code>$scope.set(\"I\" &amp; \"m\ud83d\ude00\", \"I'm happy\");\n$logger.info(Im\ud83d\ude00);\n</code></pre>"},{"location":"libs/%24scope/_substitute/","title":"<code>$scope.substitute</code>","text":""},{"location":"libs/%24scope/_substitute/#description","title":"Description","text":"<p>Force la substitution des r\u00e9f\u00e9rences de variables (par exemple <code>${data:monchamp}</code>) pr\u00e9sentes dans la valeur de la variable et retourne la nouvelle valeur. Attention, la m\u00e9thode ne modifie pas le contenu de la variable r\u00e9f\u00e9renc\u00e9e.</p>"},{"location":"libs/%24scope/_substitute/#syntaxe","title":"Syntaxe","text":"<p><code>$scope.substitute( varname )</code></p>"},{"location":"libs/%24scope/_substitute/#parametres","title":"Param\u00e8tres","text":"<code>varname</code> string Nom de la variable \u00e0 traiter. Attention, on attend ici le nom de la variable et non son contenu."},{"location":"libs/%24scope/_substitute/#retour","title":"Retour","text":"<p>Le contenu de la variable ou null si la variable n'est pas trouv\u00e9e.</p>"},{"location":"libs/%24scope/_substitute/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24scope/_typeOf/","title":"<code>$scope.typeOf</code>","text":""},{"location":"libs/%24scope/_typeOf/#description","title":"Description","text":"<p>Indique de quel type est l'objet donn\u00e9 en param\u00e8tre.</p> <p>\u00c0 noter que le langage de script int\u00e8gre nativement l'op\u00e9rateur <code>typeof</code>  qui remplit le m\u00eame r\u00f4le. Ainsi. les notations <code>$scope.typeOf(x)</code> et <code>typeof x</code> sont \u00e9quivalentes.</p>"},{"location":"libs/%24scope/_typeOf/#syntaxe","title":"Syntaxe","text":"<p><code>$scope.typeOf( object )</code></p>"},{"location":"libs/%24scope/_typeOf/#parametres","title":"Param\u00e8tres","text":"<code>object</code> any Objet \u00e0 analyser"},{"location":"libs/%24scope/_typeOf/#retour","title":"Retour","text":"<p>Type de l'objet sous forme de cha\u00eene de caract\u00e8res.</p>"},{"location":"libs/%24scope/_typeOf/#exemple","title":"Exemple","text":"<pre><code>var Im\ud83d\ude00 = \"I'm happy\";\n$logger.info(typeof Im\ud83d\ude00);           // affiche \"string\"\n$logger.info($scope.typeOf(Im\ud83d\ude00));   // affiche \"string\"\n</code></pre>"},{"location":"libs/%24scope/_unset/","title":"<code>$scope.unset</code>","text":""},{"location":"libs/%24scope/_unset/#description","title":"Description","text":"<p>Supprime une ou plusieurs variables du scope.</p>"},{"location":"libs/%24scope/_unset/#syntaxe","title":"Syntaxe","text":"<p><code>$scope.unset( varname )</code></p>"},{"location":"libs/%24scope/_unset/#parametres","title":"Param\u00e8tres","text":"<code>varname</code> string / array Nom de la ou des variables \u00e0 supprimer"},{"location":"libs/%24scope/_unset/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si toutes les variables indiqu\u00e9es ont pu \u00eatre  retir\u00e9es du scope, sinon <code>false</code>.</p>"},{"location":"libs/%24scope/_unset/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24script/","title":"<code>$script</code>","text":"<p>M\u00e9thodes de contr\u00f4le de script</p>"},{"location":"libs/%24script/_addError/","title":"<code>$script.error</code>","text":""},{"location":"libs/%24script/_addError/#description","title":"Description","text":"<p>Enregistre une erreur de script.</p> <p>Erreur de script vs Message d'erreur</p> <p>Attention \u00e0 ne pas confondre \"erreur de script\" et \"message d'erreur\".</p> <p>Une erreur de script est une erreur technique g\u00e9n\u00e9r\u00e9e par une m\u00e9thode  du moteur. Elle est g\u00e9n\u00e9ralement r\u00e9dig\u00e9e en anglais et doit permettre au  script de se rendre compte qu'un traitement a rencontr\u00e9 une erreur. Elle ne doit en aucun cas \u00eatre montr\u00e9e telle quelle \u00e0 l'utilisateur  final.</p> <p>Un message d'erreur est un message adress\u00e9 \u00e0 l'utilisateur pour  l'informer d'un dysfonctionnement ou d'une action non autoris\u00e9e. Les  messages d'erreur doivent \u00eatre g\u00e9n\u00e9r\u00e9s au moyen de la m\u00e9thode  <code>$msg.error</code>. La librairie <code>$msg</code> fournit en outre  les m\u00e9thodes qui permettent d'adresser des messages d'information  (<code>$msg.info</code>) et d'avertissement (<code>$msg.warn</code>) \u00e0 l'utilisateur. Ces messages doivent  tenir compte de la locale utilis\u00e9e par le client.</p>"},{"location":"libs/%24script/_addError/#syntaxe","title":"Syntaxe","text":"<p><code>$script.error( message )</code></p>"},{"location":"libs/%24script/_addError/#parametres","title":"Param\u00e8tres","text":"<code>message</code> any Message d'erreur \u00e0 r\u00e9f\u00e9rencer dans le buffer d'erreurs"},{"location":"libs/%24script/_addError/#retour","title":"Retour","text":"<p>Retourne toujours null</p>"},{"location":"libs/%24script/_addError/#exemple","title":"Exemple","text":"<p>Voir <code>$script.pushErrors</code></p>"},{"location":"libs/%24script/_addProgress/","title":"<code>$script.addProgress</code>","text":""},{"location":"libs/%24script/_addProgress/#description","title":"Description","text":"<p>Met \u00e0 jour l'\u00e9tat d'avancement de mani\u00e8re incr\u00e9mentale.</p>"},{"location":"libs/%24script/_addProgress/#syntaxe","title":"Syntaxe","text":"<p><code>$script.addProgress( increment )</code></p>"},{"location":"libs/%24script/_addProgress/#parametres","title":"Param\u00e8tres","text":"<code>increment</code> number Incr\u00e9ment de progression \u00e0 ajouter \u00e0 l'\u00e9tat actuel. La valeur est ajout\u00e9e \u00e0 l'\u00e9tat actuel d'avancement."},{"location":"libs/%24script/_addProgress/#retour","title":"Retour","text":"<p>Retourne l'\u00e9tat d'avancement absolu actuel, ou <code>null</code> en cas d'erreur.</p>"},{"location":"libs/%24script/_addProgress/#exemple","title":"Exemple","text":"<pre><code>$script.addProgress(0.1);\n</code></pre>"},{"location":"libs/%24script/_call/","title":"<code>$script.call</code>","text":""},{"location":"libs/%24script/_call/#description","title":"Description","text":"<p>\u00c9value un script externe et retourne un map contenant les objets  (variables, fonctions, etc.) export\u00e9s par le script.</p>"},{"location":"libs/%24script/_call/#syntaxe","title":"Syntaxe","text":"<p><code>$script.call( name [ , parameters [ , context [ , options ] ] ] )</code></p>"},{"location":"libs/%24script/_call/#parametres","title":"Param\u00e8tres","text":"<code>name</code> string Nom du script \u00e0 ex\u00e9cuter <code>parameters</code> any Param\u00e8tres \u00e0 passer au script. Habituellement on passe les param\u00e8tres  sous la forme d'un map, mais en r\u00e9alit\u00e9 n'importe quel type d'objet  est autoris\u00e9. L'objet pass\u00e9 via <code>parameters</code> sera disponible via la  la variable <code>$$</code> dans le script appel\u00e9. <code>context</code> string / map Contexte sur lequel \u00e9valuer le script. Si d\u00e9fini, le contexte doit  \u00eatre pass\u00e9 sous forme de <code>string</code> ou de <code>map</code>. Dans les deux cas, il  doit au minimum fournir les informations permettant de d\u00e9terminer le mod\u00e8le (<code>modelName</code>) et l'identifiant du dossier (<code>docId</code>). <code>options</code> map <p>Option d'ex\u00e9cution du script. Les options support\u00e9es sont:</p> <code>async</code> boolean <p>Valeur <code>true</code>/<code>false</code> indiquant si on souhaite ex\u00e9cuter le script  de mani\u00e8re asynchrone. La valeur par d\u00e9faut est <code>false</code>.</p> <p>Lorsqu'un script est ex\u00e9cut\u00e9 de mani\u00e8re asynchrone, la m\u00e9thode retourne l'identifiant de thread. Celui-ci peut \u00eatre pass\u00e9 \u00e0 la m\u00e9thode <code>$script.getStatus</code> pour obtenir un \u00e9tat  de fonctionnement du script.</p> <p>Le mode asynchrone est d\u00e9crit dans le chapitre  Ex\u00e9cution asynchrone  de la doc de r\u00e9f\u00e9rence.</p> <code>onprogress</code> function <p>Fonction de callback \u00e0 invoquer lorsque le script annonce une  progression et lorsque le traitement est termin\u00e9. Le prototype de  la fonction de callback doit \u00eatre <code>function(status)</code> o\u00f9 <code>status</code> va recevoir un map indiquant l'\u00e9tat d'avancement au moyen des  propri\u00e9t\u00e9s <code>loaded</code>, <code>total</code>, <code>progress</code> et <code>target</code>.</p> <p>Voir \u00e9galement <code>$script.setProgress</code>.</p> <code>oncomplete</code> function Fonction de callback invoqu\u00e9e lorsque l'ex\u00e9cution du script se  termine. La fonction de callback doit avoir le prototype suivant:  <code>function(result)</code> o\u00f9 <code>result</code> contient le r\u00e9sultat standard  d'ex\u00e9cution du script (valeur \u00e9quivalente au return de la fonction <code>$script.call</code>)"},{"location":"libs/%24script/_call/#retour","title":"Retour","text":"<p>Retourne un objet de type <code>EwtTypeMap</code> contenant les diff\u00e9rents objets  export\u00e9s par le script.</p>"},{"location":"libs/%24script/_call/#exemple","title":"Exemple","text":"<pre><code>$script.call(\"toolboxVendeur\", { action : \"recherche-doublons\" });\n</code></pre> <p>Exemple d'appel synchrone avec fonction de callback pour afficher l'avancement. Dans l'exemple suivant, le script s'appelle <code>sample.ewts</code> et il s'appelle lui-m\u00eame pour d\u00e9clencher le test.</p> <pre><code>if ($$.test == null) {\n    $script.call(\"sample\", { test: 1 }, null, {\n        onprogress: function(x) {\n            $logger.info(\"progress: ${x}\");\n        },\n        oncomplete: function(x) {\n            $logger.warn(\"C'est termin\u00e9 !\");\n            $logger.warn(x);\n        }\n    });\n}\nelse {\n    for (var i = 0; i &lt; 100; i += 5) {\n        $script.setProgress(i / 100);\n        $script.sleep(100);\n    }\n    $script.setProgress(1);\n\n    export var res = \"success\";\n}\n</code></pre> <p>Le script ci-dessus g\u00e9n\u00e8re les traces suivantes:</p> <pre><code>progress: {\"loaded\": 0.0, \"total\": 1.0, \"progress\": 0.0, \"target\": sample}\nprogress: {\"loaded\": 0.05, \"total\": 1.0, \"progress\": 0.05, \"target\": sample}\nprogress: {\"loaded\": 0.1, \"total\": 1.0, \"progress\": 0.1, \"target\": sample}\nprogress: {\"loaded\": 0.15, \"total\": 1.0, \"progress\": 0.15, \"target\": sample}\nprogress: {\"loaded\": 0.2, \"total\": 1.0, \"progress\": 0.2, \"target\": sample}\nprogress: {\"loaded\": 0.25, \"total\": 1.0, \"progress\": 0.25, \"target\": sample}\nprogress: {\"loaded\": 0.3, \"total\": 1.0, \"progress\": 0.3, \"target\": sample}\nprogress: {\"loaded\": 0.35, \"total\": 1.0, \"progress\": 0.35, \"target\": sample}\nprogress: {\"loaded\": 0.4, \"total\": 1.0, \"progress\": 0.4, \"target\": sample}\nprogress: {\"loaded\": 0.45, \"total\": 1.0, \"progress\": 0.45, \"target\": sample}\nprogress: {\"loaded\": 0.5, \"total\": 1.0, \"progress\": 0.5, \"target\": sample}\nprogress: {\"loaded\": 0.55, \"total\": 1.0, \"progress\": 0.55, \"target\": sample}\nprogress: {\"loaded\": 0.6, \"total\": 1.0, \"progress\": 0.6, \"target\": sample}\nprogress: {\"loaded\": 0.65, \"total\": 1.0, \"progress\": 0.65, \"target\": sample}\nprogress: {\"loaded\": 0.7, \"total\": 1.0, \"progress\": 0.7, \"target\": sample}\nprogress: {\"loaded\": 0.75, \"total\": 1.0, \"progress\": 0.75, \"target\": sample}\nprogress: {\"loaded\": 0.8, \"total\": 1.0, \"progress\": 0.8, \"target\": sample}\nprogress: {\"loaded\": 0.85, \"total\": 1.0, \"progress\": 0.85, \"target\": sample}\nprogress: {\"loaded\": 0.9, \"total\": 1.0, \"progress\": 0.9, \"target\": sample}\nprogress: {\"loaded\": 0.95, \"total\": 1.0, \"progress\": 0.95, \"target\": sample}\nprogress: {\"loaded\": 1.0, \"total\": 1.0, \"progress\": 1.0, \"target\": sample}\nC'est termin\u00e9 !\n{\"res\": success}\n</code></pre>"},{"location":"libs/%24script/_clearErrors/","title":"<code>$script.clearErrors</code>","text":""},{"location":"libs/%24script/_clearErrors/#description","title":"Description","text":"<p>Vide le buffer d'erreurs pour le thread courant et retourne le nombre  d'erreurs qui s'y trouvaient avant nettoyage.</p>"},{"location":"libs/%24script/_clearErrors/#syntaxe","title":"Syntaxe","text":"<p><code>$script.clearErrors()</code></p>"},{"location":"libs/%24script/_clearErrors/#retour","title":"Retour","text":"<p>Retourne le nombre d'erreurs pr\u00e9sentes dans le buffer avant nettoyage.</p>"},{"location":"libs/%24script/_clearErrors/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24script/_getContext/","title":"<code>$script.getContext</code>","text":""},{"location":"libs/%24script/_getContext/#description","title":"Description","text":"<p>Retourne un objet de type <code>map</code> d\u00e9crivant le contexte courant r\u00e9f\u00e9renc\u00e9 au niveau du processeur.</p>"},{"location":"libs/%24script/_getContext/#syntaxe","title":"Syntaxe","text":"<p><code>$script.getContext()</code></p>"},{"location":"libs/%24script/_getContext/#retour","title":"Retour","text":"<p>Retourne un objet de type <code>map</code>, ou <code>null</code> si aucun contexte n'est d\u00e9fini au niveau du processeur.</p>"},{"location":"libs/%24script/_getContext/#exemple","title":"Exemple","text":"<pre><code>$script.getContext()\n</code></pre>"},{"location":"libs/%24script/_getErrorCount/","title":"<code>$script.getErrorCount</code>","text":""},{"location":"libs/%24script/_getErrorCount/#description","title":"Description","text":"<p>Retourne le nombre d'erreurs rattach\u00e9es au thread d'ex\u00e9cution  du script.</p>"},{"location":"libs/%24script/_getErrorCount/#syntaxe","title":"Syntaxe","text":"<p><code>$script.getErrorCount()</code></p>"},{"location":"libs/%24script/_getErrorCount/#retour","title":"Retour","text":"<p>Nombre de messages d'erreurs rattach\u00e9es au thread</p>"},{"location":"libs/%24script/_getErrorCount/#exemple","title":"Exemple","text":"<pre><code>if ($script.getErrorCount() == 0) {\n    // ...\n}\n</code></pre>"},{"location":"libs/%24script/_getErrors/","title":"<code>$script.getErrors</code>","text":""},{"location":"libs/%24script/_getErrors/#description","title":"Description","text":"<p>Retourne un tableau contenant toutes les erreurs g\u00e9n\u00e9r\u00e9es pour le  thread courant.</p>"},{"location":"libs/%24script/_getErrors/#syntaxe","title":"Syntaxe","text":"<p><code>$script.getErrors( [ begIndex [ , endIndex [ , inverse ] ] ] )</code></p>"},{"location":"libs/%24script/_getErrors/#parametres","title":"Param\u00e8tres","text":"<code>begIndex</code> number Indice (0-based) de la premi\u00e8re erreur \u00e0 ajouter dans la table de retour. L'indice est ignor\u00e9 s'il est ind\u00e9fini ou n\u00e9gatif. <code>endIndex</code> number <p>Indice (0-based) de l'erreur jusqu'\u00e0 laquelle boucler. L'erreur plac\u00e9e \u00e0 l'indice <code>endIndex</code> n'est pas reprise dans la table en r\u00e9ponse. Ainsi, un appel <code>$script.getErrors(3, 5)</code> retournera  toutes les erreurs 3 et 4.</p> <p>L'indice est ignor\u00e9 s'il est ind\u00e9fini ou n\u00e9gatif.</p> <code>inverse</code> boolean Flag <code>true</code>/<code>false</code> indiquant si l'on souhaite que la liste d'erreurs soit retourn\u00e9e en mode invers\u00e9 (l'erreur la plus r\u00e9cente est donn\u00e9e en premier dans la liste). Par d\u00e9faut, la liste est donn\u00e9e dans l'ordre d'inscription des erreurs."},{"location":"libs/%24script/_getErrors/#retour","title":"Retour","text":"<p>Tableau d'erreurs r\u00e9f\u00e9renc\u00e9es dans le thread.</p>"},{"location":"libs/%24script/_getErrors/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24script/_getLastError/","title":"<code>$script.getLastError</code>","text":""},{"location":"libs/%24script/_getLastError/#description","title":"Description","text":"<p>Retourne le message de la derni\u00e8re erreur g\u00e9n\u00e9r\u00e9e.</p>"},{"location":"libs/%24script/_getLastError/#syntaxe","title":"Syntaxe","text":"<p><code>$script.getLastError()</code></p>"},{"location":"libs/%24script/_getLastError/#retour","title":"Retour","text":"<p>Message de la derni\u00e8re erreur g\u00e9n\u00e9r\u00e9e, ou null si aucune erreur n'est  enregistr\u00e9e.</p>"},{"location":"libs/%24script/_getLastError/#exemple","title":"Exemple","text":"<pre><code>if ($script.getLastError() == null) {\n    // ...\n}\n</code></pre>"},{"location":"libs/%24script/_getPosition/","title":"<code>$script.getPosition</code>","text":""},{"location":"libs/%24script/_getPosition/#description","title":"Description","text":"<p>Retourne la position actuelle sous forme de map.</p> <p>Le map retourn\u00e9 contient les \u00e9l\u00e9ments suivants:</p> <ul> <li> <p><code>begPos</code>     Position du d\u00e9but du token courant dans le fichier</p> </li> <li> <p><code>endPos</code>     Position de fin du token courant dans le fichier</p> </li> <li> <p><code>line</code>     Ligne du d\u00e9but du token courant dans le fichier</p> </li> <li> <p><code>col</code>     Colonne du d\u00e9but du token courant dans le fichier</p> </li> <li> <p><code>endLine</code>     Ligne de la fin du token dans le fichier</p> </li> <li> <p><code>endCol</code>     Colonne de la fin du token dans le fichier</p> </li> <li> <p><code>script</code>     R\u00e9f\u00e9rence du fichier de script lui-m\u00eame</p> </li> </ul> <p>Toutes les valeurs de position du map sont 1-based.</p>"},{"location":"libs/%24script/_getPosition/#syntaxe","title":"Syntaxe","text":"<p><code>$script.getPosition()</code></p>"},{"location":"libs/%24script/_getPosition/#retour","title":"Retour","text":"<p>Map d\u00e9crivant la position actuelle au moyen des propri\u00e9t\u00e9s indiqu\u00e9es dans la  description ci-dessus, ou <code>null</code> si la position ne peut pas \u00eatre d\u00e9termin\u00e9e.</p>"},{"location":"libs/%24script/_getPosition/#exemple","title":"Exemple","text":"<pre><code>$script.getPosition()\n</code></pre>"},{"location":"libs/%24script/_getProgress/","title":"<code>$script.getProgress</code>","text":""},{"location":"libs/%24script/_getProgress/#description","title":"Description","text":"<p>Retourne l'\u00e9tat d'avancement du script sous forme de valeur comprise  entre 0 et 1.</p> <p>Voir \u00e9galement <code>$script.setProgress</code>.</p>"},{"location":"libs/%24script/_getProgress/#syntaxe","title":"Syntaxe","text":"<p><code>$script.getProgress()</code></p>"},{"location":"libs/%24script/_getProgress/#retour","title":"Retour","text":"<p>\u00c9tat d'avancement en absolu, sous la forme d'une valeur double comprise  entre 0 et 1. Retourne <code>null</code> si aucun \u00e9tat d'avancement n'a \u00e9t\u00e9 fourni  par le script</p>"},{"location":"libs/%24script/_getProgress/#exemple","title":"Exemple","text":"<pre><code>$script.getProgress()\n</code></pre>"},{"location":"libs/%24script/_getStatus/","title":"<code>$script.getStatus</code>","text":""},{"location":"libs/%24script/_getStatus/#description","title":"Description","text":"<p>R\u00e9cup\u00e8re l'\u00e9tat d'un script asynchrone.</p> <p>Le script asynchrone peut avoir les \u00e9tats suivants:</p> <ul> <li><code>CREATION</code>: \u00e9tat durant lequel le scope initial est construit</li> <li><code>RUNNNING</code>: \u00e9tat durant lequel le script est en cours d'ex\u00e9cution</li> <li><code>FINISHED</code>: \u00e9tat post-traitement, durant lequel l'environnement     est nettoy\u00e9.</li> </ul> <p>\u00c9tat d'ex\u00e9cution des scripts</p> <p>En pratique, Ewt inscrit l'\u00e9tat du script dans un objet de thread  associ\u00e9 au thread d'ex\u00e9cution du script parent. Il est donc possible  de conna\u00eetre l'\u00e9tat du script en lisant l'entr\u00e9e correspondant \u00e0  l'identifiant de script directement via  <code>$thread.getObject</code>.</p>"},{"location":"libs/%24script/_getStatus/#syntaxe","title":"Syntaxe","text":"<p><code>$script.getStatus( threadId )</code></p>"},{"location":"libs/%24script/_getStatus/#parametres","title":"Param\u00e8tres","text":"<code>threadId</code> string Identifiant du script asynchrone dont on souhaite conna\u00eetre l'\u00e9tat"},{"location":"libs/%24script/_getStatus/#retour","title":"Retour","text":"<p>Retourne l'\u00e9tat de fonctionnement du script ou <code>null</code> si le script n'est plus en cours d'ex\u00e9cution.</p>"},{"location":"libs/%24script/_getStatus/#exemple","title":"Exemple","text":"<p>Le script ci-dessous s'appelle lui-m\u00eame de fa\u00e7on asynchrone et v\u00e9rifie le statut  \u00e0 intervalle r\u00e9gulier.</p> <pre><code>if ($$.test == null) {\n    $logger.info($script.id());\n    var s, res = $script.call(\"sample\", { test: 1 }, null, { async: true });\n    $logger.info(res);\n    do {\n        s = $script.getStatus(res);\n        $logger.warn(s);\n        $script.sleep(250);\n    }\n    while (s != null);\n}\nelse {\n    $logger.info($script.id());\n    $script.sleep(1000);\n}\n</code></pre> <p>La trace d'ex\u00e9cution du script est la suivante:</p> <pre><code>INFO f075266050dd28ff9100a475d13f44ca\nDEBUG - Start script execution: `_test.script`\nINFO - 30da14108e6afd06ecb5bb4beca29524\nWARN - CREATION\nINFO - 30da14108e6afd06ecb5bb4beca29524\nWARN - RUNNING\nWARN - RUNNING\nWARN - RUNNING\nWARN - null\n</code></pre>"},{"location":"libs/%24script/_hasContext/","title":"<code>$script.hasContext</code>","text":""},{"location":"libs/%24script/_hasContext/#description","title":"Description","text":"<p>Indique si le processeur se trouve dans le contexte donn\u00e9 (ou l'un des contextes donn\u00e9s dans le cas o\u00f9 le param\u00e8tre est un tableau).</p>"},{"location":"libs/%24script/_hasContext/#syntaxe","title":"Syntaxe","text":"<p><code>$script.hasContext( context )</code></p>"},{"location":"libs/%24script/_hasContext/#parametres","title":"Param\u00e8tres","text":"<code>context</code> string / map / array <p>Contexte(s) \u00e0 v\u00e9rifier. Le param\u00e8tre peut \u00eatre:</p> <ul> <li>une cha\u00eene de caract\u00e8re unique d\u00e9crivant un contexte   sous la forme \"article\", \"article[213]\", etc.</li> <li>un objet de type <code>map</code> d\u00e9crivant un contexte sous la   forme <code>{ modelName: 'article' }</code> par exemple</li> <li>un tableau de <code>string</code> et/ou de <code>map</code>; la m\u00e9thode   retournera <code>true</code> d\u00e8s que l'un des contextes indiqu\u00e9s   correspond au contexte courant</li> </ul>"},{"location":"libs/%24script/_hasContext/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si l'un des contextes donn\u00e9s en param\u00e8tre correspond au contexte courant du processeur.</p>"},{"location":"libs/%24script/_hasContext/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24script/_id/","title":"<code>$script.id</code>","text":""},{"location":"libs/%24script/_id/#description","title":"Description","text":"<p>Retourne l'identifiant de script.</p> <p>L'identifiant de script est une valeur g\u00e9n\u00e9r\u00e9e par Ewt et associ\u00e9 au script. Il permet notamment de conna\u00eetre l'\u00e9tat d'ex\u00e9cution d'un script via <code>$script.getStatus</code>.</p> <p>Format de l'identifiant</p> <p>L'identifiant g\u00e9n\u00e9r\u00e9 est une valeur hexad\u00e9cimale repr\u00e9sent\u00e9e par une  cha\u00eene de 32 caract\u00e8res (p.ex \"cfd569e7e158a4a73e578fe6251f68e4\").  Cette valeur est en r\u00e9alit\u00e9 le hash MD5 de la valeur \"<code>$script-ID-NAME</code>\"  o\u00f9 <code>ID</code> est l'id du thread qui ex\u00e9cute le script et <code>NAME</code> le nom du  thread.</p>"},{"location":"libs/%24script/_id/#syntaxe","title":"Syntaxe","text":"<p><code>$script.id()</code></p>"},{"location":"libs/%24script/_id/#retour","title":"Retour","text":"<p>Retourne l'identifiant du script actuel</p>"},{"location":"libs/%24script/_id/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24script/_popErrors/","title":"<code>$script.popErrors</code>","text":""},{"location":"libs/%24script/_popErrors/#description","title":"Description","text":"<p>Effectue un pop des erreurs.</p> <p>Cela r\u00e9tablit la liste d'erreur telle qu'elle \u00e9tait avant l'appel de la  m\u00e9thode <code>$script.pushErrors</code>.</p>"},{"location":"libs/%24script/_popErrors/#syntaxe","title":"Syntaxe","text":"<p><code>$script.popErrors()</code></p>"},{"location":"libs/%24script/_popErrors/#retour","title":"Retour","text":"<p>Retourne toujours null</p>"},{"location":"libs/%24script/_popErrors/#exemple","title":"Exemple","text":"<p>Voir <code>$script.pushErrors</code></p>"},{"location":"libs/%24script/_pushErrors/","title":"<code>$script.pushErrors</code>","text":""},{"location":"libs/%24script/_pushErrors/#description","title":"Description","text":"<p>Push le buffer d'erreurs.</p> <p>Cela consiste \u00e0 faire un snapshot de la liste d'erreurs actuelle en vue  d'une restauration ult\u00e9rieure. On utilisera par exemple cette m\u00e9thode si  on souhaite effectuer un traitement susceptible de g\u00e9n\u00e9rer une erreur et  que l'on ne souhaite pas polluer la liste d'erreur actuelle.</p> <p>La liste d'erreurs existantes avant le push peut \u00eatre restaur\u00e9e au  moyen de la m\u00e9thode <code>$script.popErrors</code>.</p>"},{"location":"libs/%24script/_pushErrors/#syntaxe","title":"Syntaxe","text":"<p><code>$script.pushErrors( [ keep ] )</code></p>"},{"location":"libs/%24script/_pushErrors/#parametres","title":"Param\u00e8tres","text":"<code>keep</code> boolean <p>Flag <code>true</code>/<code>false</code> indiquant si on souhaite que les erreurs d\u00e9j\u00e0  pr\u00e9sentes dans le buffer soient conserv\u00e9es. Si le param\u00e8tre est  <code>true</code>, cela signifie que la m\u00e9thode effectue un snapshot du buffer.  Si le param\u00e8tre est <code>false</code>, cela signifie que les erreurs du buffer  actuel sont mises de c\u00f4t\u00e9 en attendant le <code>pop</code>.</p> <p>Le param\u00e8tre est <code>false</code> par d\u00e9faut.</p>"},{"location":"libs/%24script/_pushErrors/#retour","title":"Retour","text":"<p>Retourne toujours null</p>"},{"location":"libs/%24script/_pushErrors/#exemple","title":"Exemple","text":"<pre><code>$script.error(\"Houston, we have a problem\");\n$logger.info($script.getErrorCount() &amp; \": \" &amp; $script.getLastError());  // affiche \"1: Application `ve`: Houston, we have a problem\"\n\n// exemple avec option \"keep\"\n$script.pushErrors(true);\n$logger.info($script.getErrorCount() &amp; \": \" &amp; $script.getLastError());  // affiche \"1: Application `ve`: Houston, we have a problem\"\n$logger.error(\"Other error (keep=true)\");\n$logger.info($script.getErrorCount() &amp; \": \" &amp; $script.getLastError());  // affiche \"2: Application `ve`: Other error (keep=true)\"\n\n$script.popErrors();\n$logger.info($script.getErrorCount() &amp; \": \" &amp; $script.getLastError());  // affiche \"1: Application `ve`: Houston, we have a problem\"\n\n// exemple sans option \"keep\"\n$script.pushErrors(false);\n$logger.info($script.getErrorCount() &amp; \": \" &amp; $script.getLastError());  // affiche \"0: \"\n$logger.error(\"Other error (keep=false)\");\n$logger.info($script.getErrorCount() &amp; \": \" &amp; $script.getLastError());  // affiche \"1: Application `ve`: Other error (keep=false)\"\n\n$script.popErrors();\n$logger.info($script.getErrorCount() &amp; \": \" &amp; $script.getLastError());  // affiche \"1: Application `ve`: Houston, we have a problem\"\n</code></pre>"},{"location":"libs/%24script/_setContext/","title":"<code>$script.setContext</code>","text":""},{"location":"libs/%24script/_setContext/#description","title":"Description","text":"<p>D\u00e9finit le contexte actuel. Permet de d\u00e9finir le contexte de r\u00e9solution  des variables faisant r\u00e9f\u00e9rence \u00e0 un contexte (par exemple avec la notation  \"~\").</p>"},{"location":"libs/%24script/_setContext/#syntaxe","title":"Syntaxe","text":"<p><code>$script.setContext( contexte )</code></p>"},{"location":"libs/%24script/_setContext/#parametres","title":"Param\u00e8tres","text":"<code>contexte</code> string / map Valeur d\u00e9crivant le contexte. Le param\u00e8tre peut d\u00e9signer soit un  contexte (exprim\u00e9 en tant que string en clair, p.ex.  <code>vendeur[123].info[123].nom</code> ou sous forme de uuid) ou un map d\u00e9crivant le contexte."},{"location":"libs/%24script/_setContext/#retour","title":"Retour","text":"<p>Si le contexte peut \u00eatre d\u00e9fini, la m\u00e9thode retourne le contexte lui-m\u00eame  sous forme de map, sinon la m\u00e9thode retourne <code>null</code></p>"},{"location":"libs/%24script/_setContext/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24script/_setProgress/","title":"<code>$script.setProgress</code>","text":""},{"location":"libs/%24script/_setProgress/#description","title":"Description","text":"<p>Envoie une info sur l'\u00e9tat d'avancement du traitement r\u00e9alis\u00e9 par le script.</p>"},{"location":"libs/%24script/_setProgress/#syntaxe","title":"Syntaxe","text":"<p><code>$script.setProgress( progress )</code></p>"},{"location":"libs/%24script/_setProgress/#parametres","title":"Param\u00e8tres","text":"<code>progress</code> number \u00c9tat d'avancement dans le traitement du script, de mani\u00e8re absolue. Le param\u00e8tre doit \u00eatre une valeur comprise entre 0 et 1 qui repr\u00e9sente l'\u00e9tat d'avancement en pourcent (p.ex 0.25 = 25%)"},{"location":"libs/%24script/_setProgress/#retour","title":"Retour","text":"<p>Retourne l'\u00e9tat d'avancement absolu actuel, ou <code>null</code> en cas d'erreur.</p>"},{"location":"libs/%24script/_setProgress/#exemple","title":"Exemple","text":"<pre><code>$script.setProgress(0.25);\n</code></pre>"},{"location":"libs/%24script/_sleep/","title":"<code>$script.sleep</code>","text":""},{"location":"libs/%24script/_sleep/#description","title":"Description","text":"<p>Met l'ex\u00e9cution du script en pause pendant le temps indiqu\u00e9 en param\u00e8tre.</p>"},{"location":"libs/%24script/_sleep/#syntaxe","title":"Syntaxe","text":"<p><code>$script.sleep( duration )</code></p>"},{"location":"libs/%24script/_sleep/#parametres","title":"Param\u00e8tres","text":"<code>duration</code> number Dur\u00e9e de la pause, en millisecondes. Doit \u00eatre strictement sup\u00e9rieure  \u00e0 z\u00e9ro."},{"location":"libs/%24script/_sleep/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24script/_sleep/#exemple","title":"Exemple","text":"<pre><code>$script.sleep(150);\n</code></pre>"},{"location":"libs/%24script/_throwException/","title":"<code>$script.throwException</code>","text":""},{"location":"libs/%24script/_throwException/#description","title":"Description","text":"<p>G\u00e9n\u00e8re une exception.</p> <p>Les exceptions g\u00e9n\u00e9r\u00e9es par un script ne sont pas inscrites dans le  registre d'erreurs li\u00e9 au thread.</p>"},{"location":"libs/%24script/_throwException/#syntaxe","title":"Syntaxe","text":"<p><code>$script.throwException(message)</code></p>"},{"location":"libs/%24script/_throwException/#parametres","title":"Param\u00e8tres","text":"<code>message</code> string Message associ\u00e9 \u00e0 l'exception"},{"location":"libs/%24script/_throwException/#retour","title":"Retour","text":"<p>Aucun retour.</p>"},{"location":"libs/%24script/_throwException/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24script/_unsetContext/","title":"<code>$script.unsetContext</code>","text":""},{"location":"libs/%24script/_unsetContext/#description","title":"Description","text":"<p>Retire toute r\u00e9f\u00e9rence au dossier courant.</p>"},{"location":"libs/%24script/_unsetContext/#syntaxe","title":"Syntaxe","text":"<p><code>$script.unsetContext()</code></p>"},{"location":"libs/%24script/_unsetContext/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24script/_unsetContext/#exemple","title":"Exemple","text":"<pre><code>$script.unsetContext();\n</code></pre>"},{"location":"libs/%24search/","title":"<code>$search</code>","text":"<p>Important</p> <p>Cette librairie est en cours de d\u00e9veloppement et la liste de ses  m\u00e9thodes n'est pas enti\u00e8rement arr\u00eat\u00e9e.</p> <p>M\u00e9thodes d'indexation et de recherche de contenu.</p> <p>Info</p> <p>Attention, la librairie <code>$app</code> fournit \u00e9galement des m\u00e9thodes d'indexation  et de recherche. Les deux s'appuient sur des outils similaires mais ne visent  pas le m\u00eame but.</p> <p>Les m\u00e9thodes <code>$app.indexDocuments</code> et  <code>$app.searchDocuments</code> sont essentiellement orient\u00e9es sur les dossiers de l'application, alors que les m\u00e9thodes de  la librairie <code>$search</code> sont destin\u00e9es \u00e0 une gamme de donn\u00e9es plus large et  pas forc\u00e9ment pr\u00e9sentes en base de donn\u00e9es (un catalogue d'adresses, un  jeu de donn\u00e9es temporaires, etc.).</p>"},{"location":"libs/%24search/_clear/","title":"<code>$search.clear</code>","text":"<p>Alias: <code>$search.purge</code></p>"},{"location":"libs/%24search/_clear/#description","title":"Description","text":"<p>Efface tout le contenu d'un index</p>"},{"location":"libs/%24search/_clear/#syntaxe","title":"Syntaxe","text":"<p><code>$search.clear( [ indexReference ] )</code></p>"},{"location":"libs/%24search/_clear/#parametres","title":"Param\u00e8tres","text":"<code>indexReference</code> string / pojo <p>R\u00e9f\u00e9rence vers un index de recherche.</p> <p>Le param\u00e8tre peut \u00eatre soit une valeur lit\u00e9rale qui r\u00e9f\u00e9rence un nom  d'index d\u00e9clar\u00e9 dans le fichier de configuration de l'application, soit  un objet <code>pojo</code> obtenu au moyen de la m\u00e9thode  <code>$search.lockIndex</code>.</p> <p>Si non sp\u00e9cifi\u00e9, le moteur traite l'index par d\u00e9faut.</p>"},{"location":"libs/%24search/_clear/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le nettoyage a pu se faire, sinon <code>false</code></p>"},{"location":"libs/%24search/_clear/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24search/_index/","title":"<code>$search.index</code>","text":""},{"location":"libs/%24search/_index/#description","title":"Description","text":"<p>Ajoute un ou plusieurs objets \u00e0 un index.</p>"},{"location":"libs/%24search/_index/#syntaxe","title":"Syntaxe","text":"<p><code>$search.index( indexReference , records [ , fieldOptions ] )</code></p>"},{"location":"libs/%24search/_index/#parametres","title":"Param\u00e8tres","text":"<code>indexReference</code> string / pojo <p>R\u00e9f\u00e9rence de l'index \u00e0 utiliser. La r\u00e9f\u00e9rence peut avoir deux formes:</p> <ol> <li>Si le param\u00e8tre est un <code>string</code>, il d\u00e9signe un nom d'index d\u00e9clar\u00e9     dans le fichier de configuration de l'application. Le moteur se     charge d'obtenir un lock sur l'index avant de lancer l'indexation.     Il s'appuie sur les types de tokens d\u00e9clar\u00e9s dans le param\u00e8tre      <code>fieldOptions</code> pour d\u00e9terminer comment instancier le lock sur      l'index.</li> <li>Si le param\u00e8tre est un objet <code>pojo</code>, il d\u00e9signe un lock obtenu au      pr\u00e9alable au moyen de la m\u00e9thode <code>$search.lockIndex</code>.      L'application est dans ce cas responsable de lib\u00e9rer le lock \u00e0 la      fin du traitement. L'exemple plus bas montre comment le faire au      moyen d'une clause <code>try</code>/<code>finally</code> afin de garantir que le unlock      est bien effectu\u00e9 dans tous les cas.</li> </ol> <code>records</code> map / array <p>Objet(s) \u00e0 ajouter dans l'index. Le param\u00e8tre peut \u00eatre un map d\u00e9crivant  l'objet ou un tableau de maps.</p> <p>Les cl\u00e9s et valeurs du map seront utilis\u00e9s respectivement comme nom de  champ et valeur \u00e0 int\u00e9grer dans l'index.</p> <code>fieldOptions</code> array <p>Tableau d\u00e9crivant les options d'indexation pour les champs.</p> <p>La m\u00e9thode attend que le param\u00e8tre soit un tableau dans lequel chaque entr\u00e9e est un map contenant les propri\u00e9t\u00e9s suivantes:</p> <ul> <li><code>name</code> (requis) : Nom du champ (doit correspondre \u00e0 une cl\u00e9 d'un      enregistrement de <code>records</code>.</li> <li> <p><code>mode</code> (optionnel) : Mode d'indexation. Les modes reconnus sont:</p> <ul> <li><code>token</code> : tokenisation de la valeur</li> <li><code>token:&lt;analyzer&gt;</code> : tokenisation de la valeur, avec mode de     tokenisation \u00e0 utiliser, par exemple <code>token:fr</code>. Les analyzers      disponibles d\u00e9pendent du moteur d'indexation utilis\u00e9. La      m\u00e9thode <code>$search.lockIndex</code> donne la liste      des analyzers disponibles pour <code>lucene</code>.</li> <li><code>raw</code> : pas de tokenisation (indexation de la valeur compl\u00e8te)</li> <li><code>no</code> : pas d'indexation de la valeur (elle est ignor\u00e9e)</li> </ul> </li> <li> <p><code>store</code> (optionnel) : Flag <code>true</code>/<code>false</code> ou valeur <code>yes</code>/<code>no</code>      indiquant si la valeur doit \u00eatre stock\u00e9e dans l'index. Les      implication de cette valeur sont d\u00e9crites dans la description     de l'attribut <code>indexstore</code> de la      descript</p> </li> </ul>"},{"location":"libs/%24search/_index/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si les objets ont pu \u00eatre index\u00e9s sans erreur, sinon <code>false</code>.</p>"},{"location":"libs/%24search/_index/#exemple","title":"Exemple","text":"<pre><code>// indexation (en principe \u00e0 ne faire qu'une fois)\nvar lock = $search.lockIndex(\"test\");\ntry {\n    $search.clear(lock);\n    $search.index(lock, [\n        { 'id': 1, 'title': 'Carol' },\n        { 'id': 2, 'title': 'Wonder Woman' },\n        { 'id': 3, 'title': 'Life of Pi' },\n        { 'id': 4, 'title': 'Mad Max: Fury Road' },\n        { 'id': 5, 'title': 'Moana' },\n        { 'id': 6, 'title': 'Philadelphia'}\n    ]);\n}\nfinally {\n    $search.unlockIndex(lock);\n}\n\n// rechercher\n$logger.info($search.search(\"test\", \"title:max\"));\n</code></pre>"},{"location":"libs/%24search/_indexCsv/","title":"<code>$search.indexCsv</code>","text":"<p>Alias <code>$search.indexCSV</code></p>"},{"location":"libs/%24search/_indexCsv/#description","title":"Description","text":"<p>M\u00e9thode permettant d'indexer le contenu d'un fichier CSV, o\u00f9 une version transform\u00e9e de ce dernier.</p>"},{"location":"libs/%24search/_indexCsv/#syntaxe","title":"Syntaxe","text":"<p><code>$search.indexCsv( indexLock , data , fieldOptions [ , options ] )</code></p>"},{"location":"libs/%24search/_indexCsv/#parametres","title":"Param\u00e8tres","text":"<code>indexLock</code> pojo Lock de l'index \u00e0 mettre \u00e0 jour. Le lock peut \u00eatre obtenu au moyen de  la m\u00e9thode <code>$search.lockIndex</code>. <code>data</code> file / string Objet <code>file</code> r\u00e9f\u00e9ren\u00e7ant le fichier CSV ou <code>string</code> contenant directement  les donn\u00e9es CSV. <code>fieldOptions</code> array <p>Tableau d\u00e9crivant les champs \u00e0 cr\u00e9er dans l'index.</p> <p>Par d\u00e9faut, on s'attend \u00e0 ce que le tableau d\u00e9crive les colonnes du CSV. Si vous utilisez une fonction de transformation (voir option <code>transform</code>, le tableau doit d\u00e9crire, dans l'ordre, les champs fournis par la fonction  de callback (voir exemple ci-dessous).</p> <p>Chaque entr\u00e9e de la table doit \u00eatre un map constitu\u00e9 des propri\u00e9t\u00e9s  suivantes: </p> <ul> <li><code>name</code> (obligatoire) : Nom du champ</li> <li> <p><code>mode</code> (optionnel) : Mode d'indexation; les modes reconnus sont:</p> <ul> <li><code>token</code> : tokenisation de la valeur</li> <li><code>raw</code> : pas de tokenisation (indexation de la valeur compl\u00e8te)</li> <li><code>no</code> : pas d'indexation de la valeur (elle est ignor\u00e9e)</li> </ul> </li> <li> <p><code>store</code> (optionel) : Flag <code>true</code>/<code>false</code> ou valeurs <code>yes</code>/<code>no</code>      indiquant si la valeur doit \u00eatre stock\u00e9e dans l'index. Voir     ce que cela signifie dans la documentation de l'attribut      <code>indexstore</code> de la     descript</p> </li> </ul> <code>options</code> map <p>Options suppl\u00e9mentaires. Les options reconnues sont:</p> <code>format</code> map / pojo Format de CSV. Doit \u00eatre un objet <code>pojo</code> construit au moyen de <code>$csv.makeFormat</code> ou un map qui reprend les  m\u00eames r\u00e8gles que celles attendues par  <code>$csv.makeFormat</code> <code>charset</code> string Charset des donn\u00e9es du CSV. Si non sp\u00e9cifi\u00e9, les donn\u00e9es sont trait\u00e9es selon le charset UTF-8. <code>onprogress</code> function <p>Fonction de callback \u00e0 invoquer pour donner \u00e0 l'application un retour sur l'\u00e9tat d'avancement du traitement. La fonction  de callback, si d\u00e9finie, est invoqu\u00e9e \u00e0 intervalle r\u00e9gulier  durant le traitement. L'utilisation est identique \u00e0 l'option  <code>onprogress</code> de la m\u00e9thode <code>$http.request</code>. La fonction de callback peut interrompre le traitement en retournant la valeur <code>false</code>.</p> <p>Un exemple est donn\u00e9 plus bas.</p> <code>interval</code> number Intervalle en millisecondes entre deux appels de callback de la  fonction <code>onprogress</code>. Si non d\u00e9fini, l'intervalle par d\u00e9faut est de 1000 millisecondes (1 seconde). <code>transform</code> function <p>Fonction de callback permettant de construire une nouvelle variante d'un record, de court-circuiter l'indexation d'un enregistrement ou d'interrompre une indexation.</p> <p>L'id\u00e9e premi\u00e8re de la fonction est de transformer les valeurs brutes lues du CSV en une ou plusieurs valeurs \u00e0 indexer. La  fonction est invoqu\u00e9e pour chaque enregistrement du fichier  d'entr\u00e9e.</p> <p>La fonction re\u00e7oit jusqu'\u00e0 2 param\u00e8tres:</p> <ol> <li>Un tableau (<code>array</code>) contenant les valeurs d'un enregistrement</li> <li>Un map qui reprend les options pass\u00e9es lors de l'appel \u00e0     <code>$search.lockIndex</code> (voir param\u00e8tre <code>indexLock</code>     plus haut).</li> </ol> <p>Concr\u00e8tement, la fonction re\u00e7oit en entr\u00e9e un <code>array</code> contenant les  valeurs d'un enregistrement. En sortie, on attend que la fonction  fournisse un <code>array</code> contenant les valeurs \u00e0 indexer. Le tableau en sortie doit correspondre au champs d\u00e9crits dans le param\u00e8tre <code>fieldOptions</code>.</p> <p>Si la fonction retourne la valeur <code>null</code>, l'enregistrement n'est pas index\u00e9.</p> <p>Si la fonction retourne la valeur <code>false</code>, le processus d'indexation est imm\u00e9diatement stopp\u00e9.</p> <p>Un exemple est donn\u00e9 plus bas.</p>"},{"location":"libs/%24search/_indexCsv/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si l'indexation des donn\u00e9es a r\u00e9ussi, sinon <code>false</code>.</p>"},{"location":"libs/%24search/_indexCsv/#exemple","title":"Exemple","text":"<p>Exemple d'indexation d'un CSV suivi d'une recherche. L'exemple ci-dessous s'appuie sur le fichier \"movies.csv\" disponible en ligne \u00e0 l'adresse  suivante:  https://gist.github.com/tiangechen/b68782efa49a16edaf07dc2cdaa855ea.</p> <pre><code>var lock = $search.lockIndex(\"movies\");\ntry {\n    $search.clear(lock);\n    $search.indexCsv(\n        lock,\n        $file.load(\"C:/Temp/movies.csv\"),\n        [\n            { name: \"film\" },\n            { name: \"genre\" },\n            { name: \"leadStudio\" },\n            { name: \"audienceScore\" },\n            { name: \"profitability\" },\n            { name: \"rottenTomatoes\" },\n            { name: \"worldwideGross\" },\n            { name: \"year\" }\n        ],\n        {\n            format: {\n                delimiter: \",\",\n                recordSeparator: \"\\r\\n\",\n                skipHeaderRecord: true\n            }\n        }\n    );\n}\nfinally {\n    $search.unlockIndex(lock);\n}\n\n$logger.info(\n    $search.search(\"movies\", \"year:2011\")\n);\n</code></pre> <p>L'exemple ci-dessous se charge d'indexer des adresses fournies par le  registre f\u00e9d\u00e9ral des b\u00e2timents et des logements. Ce dernier est  fourni sous la forme d'un CSV disponible \u00e0 l'adresse  https://www.housing-stat.ch/fr/madd/public.html.</p> <pre><code>var index = $search.lockIndex(\"regbl\");\ntry {\n    $search.clear(index);\n\n    // Format du fichier ...\n    //   Extension *.csv/*.dsv\n    //   S\u00e9parateur: Tab ;\n    //   Avec un en-t\u00eate (header) ;\n    //   UTF-8 ;\n    //   Pas de BOM (Indicateur d'ordre des octets)\n    //   Pas de guillemets (pas de qualificatif de texte / d'inclusion);\n    //   Il n'y a pas de caract\u00e8res d'\u00e9chappement ;\n    //   Tous les champs de texte sont du type xs:token (Pas de Tab, NL ou LF);\n    var options = $csv.makeFormat({\n        format: \"tdf\",\n        skipHeaderRecord: true\n    });\n\n    $search.indexCsv(\n        index,\n        $file.load(\"C:/Temp/ch/eingang_entree_entrata.csv\"), \n        [\n            { name: \"address\", mode: \"token\", store: \"yes\" }\n        ],\n        { \n            format: options,\n            onprogress: function(event) {\n                $logger.info(\"${event.loaded} records indexed\");\n            },\n            transform: function(record, attributes) {\n              if (record[3] != \"\") {\n                return [ \"${record[5]} ${record[3]}, ${record[10]} ${record[12]}\" ];\n              } else {\n                return [ \"${record[5]}, ${record[10]} ${record[12]}\" ];\n              }\n            }\n        } );\n}\nfinally {\n    $search.unlockIndex(index);\n}\n</code></pre> <p>Dans cet exemple, on utilise une fonction de transformation pour construire une valeur \u00e0 partir des donn\u00e9es du CSV. Dans le fichier, un enregistrement est constitu\u00e9 des valeurs suivantes (dans l'ordre):</p> <pre><code> 0 : EGID\n 1 : EDID\n 2 : EGAID\n 3 : DEINR\n 4 : ESID\n 5 : STRNAME\n 6 : STRNAMK\n 7 : STRINDX\n 8 : STRSP\n 9 : STROFFIZIEL\n10 : DPLZ4\n11 : DPLZZ\n12 : DPLZNAME\n13 : DKODE\n14 : DKODN\n15 : DOFFADR\n16 : DEXPDA\n</code></pre> <p>On ne souhaite pas indexer les valeurs brutes du CSV, mais une cha\u00eene de caract\u00e8res bas\u00e9es sur ces valeurs. La valeur \u00e0 indexer doit avoir le format suivant:</p> <p><pre><code>   \"STRNAME DEINR, DPLZ4 DPLZNAME\"\n</code></pre> o\u00f9 <code>DEINR</code> peut \u00eatre vide.</p>"},{"location":"libs/%24search/_lockIndex/","title":"<code>$search.lockIndex</code>","text":""},{"location":"libs/%24search/_lockIndex/#description","title":"Description","text":"<p>Obtient un acc\u00e8s exclusif \u00e0 l'index en vue d'une mise \u00e0 jour.</p> <p>Il est important de noter que toute autre \u00e9criture est bloqu\u00e9e tant que  le lock n'est pas lib\u00e9r\u00e9. Il ne faut donc pas oublier de le lib\u00e9rer, et  il est m\u00eame recommand\u00e9 de faire le <code>$search.unlockIndex</code>  dans une clause <code>finally</code> afin de s'assurer qu'elle est bien ex\u00e9cut\u00e9e.  L'exemple donn\u00e9 plus bas montre comment s'y prendre.</p>"},{"location":"libs/%24search/_lockIndex/#syntaxe","title":"Syntaxe","text":"<p><code>$search.lockIndex( [ indexName [ , options ] ] )</code></p>"},{"location":"libs/%24search/_lockIndex/#parametres","title":"Param\u00e8tres","text":"<code>indexName</code> string Nom de l'index \u00e0 v\u00e9rrouiller. Si sp\u00e9cifi\u00e9, la valeur doit faire  r\u00e9f\u00e9rence \u00e0 un index d\u00e9clar\u00e9 dans le fichier de configuration de  l'application. <code>options</code> map <p>Options de lock. Les options possibles peuvent varier selon le moteur d'indexation d\u00e9clar\u00e9 dans la configuration de l'application pour  l'index <code>indexName</code>. L'option <code>timeout</code>est commune \u00e0 toutes les  impl\u00e9mentations:</p> <code>timeout</code> number <p>D\u00e9lai d'attente max pour l'obtention du lock (en millisecondes).</p> <p>La m\u00e9thode attend ind\u00e9finiment si le d\u00e9lai n'est pas sp\u00e9cifi\u00e9 ou s'il  est inf\u00e9rieure ou \u00e9gal \u00e0 0.</p> <p>Le moteur d'index <code>lucene</code> int\u00e9gr\u00e9 \u00e0 Ewt supporte en plus les options suivantes:</p> <code>analyzer</code> string / map <p>Mode de tokenisation des donn\u00e9es. Cela indique comment le moteur  d'indexation doit analyser les donn\u00e9es \u00e0 indexer. Les modes  reconnus par <code>lucene</code> sont les suivants:</p> <ul> <li><code>ar</code>: Arabic</li> <li><code>bg</code>: Bulgarian</li> <li><code>bn</code>: Bengali</li> <li><code>br</code>: Brazilian</li> <li><code>ca</code>: Catalan</li> <li><code>cjk</code>: Chinese, Japanese, and Korean</li> <li><code>ckb</code>: Sorani</li> <li><code>cz</code>: Czech</li> <li><code>da</code>: Danish</li> <li><code>de</code>: German</li> <li><code>el</code>: Greek</li> <li><code>en</code>: English</li> <li><code>es</code>: Spanish</li> <li><code>et</code>: Estonian</li> <li><code>eu</code>: Basque</li> <li><code>fa</code>: Persian</li> <li><code>fi</code>: Finnish</li> <li><code>fr</code>: French</li> <li><code>ga</code>: Irish</li> <li><code>gl</code>: Galician</li> <li><code>hi</code>: Hindi</li> <li><code>hu</code>: Hungarian</li> <li><code>hy</code>: Armenian</li> <li><code>id</code>: Indonesian</li> <li><code>it</code>: Italian</li> <li><code>lt</code>: Lithuanian</li> <li><code>lv</code>: Latvian</li> <li><code>ne</code>: Nepali</li> <li><code>nl</code>: Dutch</li> <li><code>no</code>: Norwegian</li> <li><code>pt</code>: Portuguese</li> <li><code>ro</code>: Romanian</li> <li><code>ru</code>: Russian</li> <li><code>sr</code>: Serbian</li> <li><code>sv</code>: Swedish</li> <li><code>ta</code>: Tamil</li> <li><code>te</code>: Telugu</li> <li><code>th</code>: Thai</li> <li><code>tr</code>: Turkish</li> <li><code>keyword</code>: indexation de mot-cl\u00e9</li> <li><code>email</code>: indexation d'adresse e-mail</li> <li><code>simple</code>: indexation de donn\u00e9e simple</li> <li><code>whitespace</code>: d\u00e9coupage sur les espaces</li> <li><code>classic</code>: indexation standard</li> <li><code>standard</code>: indexation standard</li> </ul> <p>L'option <code>analyzer</code> peut sp\u00e9cifier le mode de diff\u00e9rentes fa\u00e7ons:</p> <ul> <li>Sous forme de <code>string</code>: On indique le type d'analyzer par     d\u00e9faut (selon la liste ci-dessus). Dans ce cas, l'index writer      est cr\u00e9\u00e9 en utilisant un seul analyzer appliqu\u00e9 \u00e0 tous les      champs.</li> <li> <p>Sous forme de <code>map</code>: On d\u00e9clare l'analyzer (selon la liste      ci-dessus) \u00e0 utiliser par champ, par exemple </p> <pre><code>{ labelFR: \"fr\", labelDE: \"de\" }\n</code></pre> <p>Voir \u00e9galement l'exemple plus bas.</p> </li> </ul>"},{"location":"libs/%24search/_lockIndex/#retour","title":"Retour","text":"<p>Retourne un objet <code>pojo</code> contenant le lock sur l'index. En cas d'erreur ou de d\u00e9passement du d\u00e9lai d'attente, la m\u00e9thode retourne <code>null</code>.</p>"},{"location":"libs/%24search/_lockIndex/#exemple","title":"Exemple","text":"<p>Exemple de lock simple, sans option.</p> <pre><code>var lock = $search.lockIndex(\"monindex\");\ntry {\n    $search.index([ /* ... */ ]);\n}\nfinally {\n    $search.unlockIndex(lock);\n}\n</code></pre> <p>Exemple de lock avanc\u00e9 qui d\u00e9clare un mode de tokenisation sp\u00e9cifique par  champ. Ici on souhaite que le champ \"labelFR\" soit tokenis\u00e9 au moyen d'un  analyzer adapt\u00e9 pour le fran\u00e7ais et \"labelEN\" par un analyzer adapt\u00e9 pour  l'anglais. Les autres champs utilisent un analyzer standard.</p> <pre><code>var lock = $search.lockIndex(\"monindex\",\n  {\n    analyzer: { labelFR: \"fr\", labelEN: \"en\" }\n  });\ntry {\n  $search.index(lock, [\n    { 'id': 0, 'labelFR': 'z\u00e9ro',   'labelEN': 'zero',  'test': 'test' },\n    { 'id': 1, 'labelFR': 'un',     'labelEN': 'one',   'test': 'test' },\n    { 'id': 2, 'labelFR': 'deux',   'labelEN': 'two',   'test': 'test' },\n    { 'id': 3, 'labelFR': 'trois',  'labelEN': 'three', 'test': 'test' },\n    { 'id': 4, 'labelFR': 'quatre', 'labelEN': 'four',  'test': 'test' },\n    { 'id': 5, 'labelFR': 'cinq',   'labelEN': 'five',  'test': 'test' },\n    { 'id': 6, 'labelFR': 'six',    'labelEN': 'six',   'test': 'test' },\n    { 'id': 7, 'labelFR': 'sept',   'labelEN': 'seven', 'test': 'test' },\n    { 'id': 8, 'labelFR': 'huit',   'labelEN': 'eight', 'test': 'test' },\n    { 'id': 9, 'labelFR': 'neuf',   'labelEN': 'nine',  'test': 'test' }\n  ]);\n}\nfinally {\n  $search.unlockIndex(lock);\n}\n</code></pre>"},{"location":"libs/%24search/_search/","title":"<code>$search.search</code>","text":""},{"location":"libs/%24search/_search/#description","title":"Description","text":"<p>Lance une recherche sur un index.</p> <p>Forme de la requ\u00eate</p> <p>Ewt fournit une m\u00e9thode de recherche volontairement \"bas niveau\".  La requ\u00eate pass\u00e9e en param\u00e8tre n'est pas retravaill\u00e9e par Ewt. Cela  signifie qu'il est de la responsabilit\u00e9 de l'application de construire  une requ\u00eate de recherche conforme aux exigences de l'impl\u00e9mentation  utilis\u00e9e.</p>"},{"location":"libs/%24search/_search/#syntaxe","title":"Syntaxe","text":"<p><code>$search.search( indexName , query [ , options ] )</code></p>"},{"location":"libs/%24search/_search/#parametres","title":"Param\u00e8tres","text":"<code>indexName</code> string Nom de l'index sur lequel lancer la recherche <code>query</code> string Requ\u00eate de recherche. La requ\u00eate doit \u00eatre conforme au type d'index r\u00e9f\u00e9renc\u00e9 par <code>indexName</code> <code>options</code> map <p>Options de recherche sp\u00e9cifiques \u00e0 au moteur de recherche utilis\u00e9.</p> <p>Ewt int\u00e8gre le moteur <code>lucene</code> qui reconna\u00eet les options suivantes:</p> <code>allowLeadingWildcard</code> boolean Valeur <code>true</code>/<code>false</code> indiquant si les caract\u00e8res wildcard sont  autoris\u00e9s en d\u00e9but de mot. Pour des raisons de performances, cette  option est d\u00e9sactiv\u00e9e par d\u00e9faut. <code>groupBy</code> string Indique d'\u00e9liminer les doublons en ne s\u00e9lectionnant que le premier r\u00e9sultat pour chaque valeur du champ donn\u00e9. Par exemple, le fait de  sp\u00e9cifier l'option <code>groupBy: \"EWT-FULLID\"</code> ne conservera que le  premier r\u00e9sultat pour lequel le champ \"EWT-FULLID\" vaut 1, le  premier r\u00e9sultat pour lequel il vaut 2, etc. <code>maxResults</code> number Nombre de r\u00e9sultats maximum \u00e0 retourner. Si le param\u00e8tre est non  d\u00e9fini, ou s'il est inf\u00e9rieur ou \u00e9gal \u00e0 0, tous les r\u00e9sultats sont  retourn\u00e9s. <code>analyzer</code> string / map Type d'analyzer \u00e0 utiliser. L'option peut \u00eatre sp\u00e9cifi\u00e9e soit sous  forme de cha\u00eene de caract\u00e8res soit sous forme de map. La syntaxe est  identique \u00e0 ce qui est utilis\u00e9 pour l'option <code>analyzer</code> de la m\u00e9thode <code>$search.lockIndex</code>. <code>queryType</code> string <p> Type de requ\u00eate. Cette information influe sur  la mani\u00e8re de traiter la requ\u00eate. Les types de requ\u00eates disponibles sont:</p> <ul> <li><code>boolean:should</code></li> <li><code>boolean:must</code></li> <li><code>boolean:filter</code></li> <li><code>boolean:must_not</code></li> <li><code>wildcard</code></li> <li><code>multiPhrase</code></li> <li><code>and</code></li> </ul>"},{"location":"libs/%24search/_search/#retour","title":"Retour","text":"<p>Tableau des r\u00e9sultats.</p>"},{"location":"libs/%24search/_search/#exemple","title":"Exemple","text":"<p>Voir <code>$search.index</code></p>"},{"location":"libs/%24search/_status/","title":"<code>$search.status</code>","text":""},{"location":"libs/%24search/_status/#description","title":"Description","text":"<p>Retourne le statut de l'index. Les valeurs de retour de la m\u00e9thode sont:</p> <ul> <li><code>AVAILABLE</code>: L'index existe et est disponible</li> <li><code>NOT_FOUND</code>: L'index n'existe pas</li> <li><code>FAILURE</code>: Autre raison d'erreur</li> </ul>"},{"location":"libs/%24search/_status/#syntaxe","title":"Syntaxe","text":"<p><code>$search.status( [ indexName ] )</code></p>"},{"location":"libs/%24search/_status/#parametres","title":"Param\u00e8tres","text":"<code>indexName</code> string <p>Nom de l'index \u00e0 v\u00e9rifier</p> <p>Si non sp\u00e9cifi\u00e9, la m\u00e9thode retourne l'\u00e9tat de l'index par d\u00e9faut.</p>"},{"location":"libs/%24search/_status/#retour","title":"Retour","text":"<p>Voir description</p>"},{"location":"libs/%24search/_status/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24search/_unlockIndex/","title":"<code>$search.unlockIndex</code>","text":""},{"location":"libs/%24search/_unlockIndex/#description","title":"Description","text":"<p>Lib\u00e8re l'acc\u00e8s exclusif \u00e0 l'index.</p>"},{"location":"libs/%24search/_unlockIndex/#syntaxe","title":"Syntaxe","text":"<p><code>$search.lockIndex( indexLock )</code></p>"},{"location":"libs/%24search/_unlockIndex/#parametres","title":"Param\u00e8tres","text":"<code>indexLock</code> pojo Lock d'index \u00e0 lib\u00e9rer. Voir <code>$search.lockIndex</code>."},{"location":"libs/%24search/_unlockIndex/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code></p>"},{"location":"libs/%24search/_unlockIndex/#exemple","title":"Exemple","text":"<p>Voir <code>$search.lockIndex</code></p>"},{"location":"libs/%24secu/","title":"<code>$secu</code>","text":"<p>Librairie de m\u00e9thodes li\u00e9es \u00e0 la s\u00e9curit\u00e9</p>"},{"location":"libs/%24secu/_buildSanitizePolicy/","title":"<code>$secu.buildSanitizePolicy</code>","text":""},{"location":"libs/%24secu/_buildSanitizePolicy/#description","title":"Description","text":"<p>Construit une policy de s\u00e9curisation \u00e0 partir d'un ensemble de r\u00e8gles. La r\u00e8gle ainsi construite pourra \u00eatre r\u00e9utilis\u00e9e pour traiter des valeurs issues d'une requ\u00eate SQL ou re\u00e7ues en param\u00e8tre de script.</p> <p>L'exemple ci-dessous cr\u00e9e une r\u00e8gle qui autorise les \u00e9l\u00e9ments <code>&lt;i&gt;</code> ayant une classe (c'est par exemple le cas si un texte contient des icones selon la syntaxe bootstrap, comme <code>&lt;i class=\"bi bi-star\"/&gt;</code>).</p> <pre><code>var sanitizePolicy = $secu.buildSanitizePolicy(\n    [\n        { allowAttributes: \"class\", onElements: \"i\" },\n        { requireRelNofollowOnLinks: true },\n        { allowElements: [ \"i\" ] }\n    ]\n);\n</code></pre> <p>L'objet cr\u00e9\u00e9 peut ensuite \u00eatre r\u00e9utilis\u00e9 pour nettoyer des valeurs. Par exemple on peut passer cette r\u00e8gle via l'option <code>sanitize</code> de la  m\u00e9thode <code>$sql.mselect</code> pour que Ewt applique  le sanitize \u00e0 toutes les valeurs re\u00e7ues du SGBD.</p> <pre><code>$sql.mselect(query, [ input ],\n             { format: \"xhtml\", escape: false,\n               sanitize: sanitizePolicy });\n</code></pre> <p>Info</p> <p>La plupart des m\u00e9thodes peuvent recevoir des r\u00e8gles de nettoyage sous la forme de map, de tableau de maps ou d'objet <code>pojo</code>.  L'int\u00e9r\u00eat de construire un objet <code>pojo</code> rel\u00e8ve avant tout d'une  question de performances : l'objet <code>pojo</code> est construit une seule  fois et r\u00e9utilis\u00e9 tel quel, alors qu'un map ou un tableau de maps  doit \u00eatre pars\u00e9 par le moteur \u00e0 chaque fois. Il est donc plus  efficace du point de vue des performances de pr\u00e9-construire un  objet <code>pojo</code> au moyen de <code>$secu.buildSanitizePolicy</code>.</p> <p>Une liste exhaustive des options de nettoyages support\u00e9es est donn\u00e9e  dans ce chapitre. </p>"},{"location":"libs/%24secu/_buildSanitizePolicy/#syntaxe","title":"Syntaxe","text":"<p><code>$secu.buildSanitizePolicy( rules )</code></p>"},{"location":"libs/%24secu/_buildSanitizePolicy/#parametres","title":"Param\u00e8tres","text":"<code>rules</code> string / map <p>Objet d\u00e9crivant les options de nettoyages autoris\u00e9es. Les r\u00e8gles reprennent les options de configuration de la classe HtmlPolicyBuilder. Les r\u00e8gles peuvent \u00eatre donn\u00e9es sous forme de string (p.ex \"FORMATTING|BLOCKS\"), sous forme de map (p.ex  <code>{ allowAttributes: \"src\", onElements: \"img\" }</code> ou sous forme de tableau de maps.</p> <p>Les options de nettoyage sont d\u00e9crites dans la documentation  de la r\u00e8gle \"sanitize\" de la  descript</p>"},{"location":"libs/%24secu/_buildSanitizePolicy/#retour","title":"Retour","text":"<p>Objet <code>pojo</code> r\u00e9f\u00e9ren\u00e7ant une  PolicyFactory)  d\u00e9crivant la policy de nettoyage.</p>"},{"location":"libs/%24secu/_buildSanitizePolicy/#exemple","title":"Exemple","text":"<pre><code>var mypolicy = $secu.buildSanitizePolicy(\n    [\n        { allowElements: [ \"i\", \"span\", \"button\" ] },\n        { allowAttributes: [ \"class\", \"style\" ] , onElements: [ \"i\", \"span\", \"button\" ] },\n        { allowAttributes: [ \"type\", \"onclick\" ] , onElements: [ \"button\" ] }\n    ]\n);\n\nvar html = `Bla &lt;i class=\"fa fa-check\" onclick=\"alert('foo')\"&gt;&lt;/i&gt; bla &lt;script&gt;alert(\"bar\");&lt;/script&gt; bla`::t;\n$logger.info(\"orig: ${html}\");\n$logger.info(\"sanitized: \" &amp; $secu.sanitize(html, mypolicy));\n</code></pre> <p>Traces g\u00e9n\u00e9r\u00e9es par le code ci-dessus:</p> <pre><code>orig: Bla &lt;i class=\"fa fa-check\" onclick=\"alert('foo')\"&gt;&lt;/i&gt; bla &lt;script&gt;alert(\"bar\");&lt;/script&gt; bla\nsanitized: Bla &lt;i class=\"fa fa-check\"&gt;&lt;/i&gt; bla  bla\n</code></pre>"},{"location":"libs/%24secu/_isBase64/","title":"<code>$secu.isBase64</code>","text":""},{"location":"libs/%24secu/_isBase64/#description","title":"Description","text":"<p>Indique si la valeur est du base64.</p>"},{"location":"libs/%24secu/_isBase64/#syntaxe","title":"Syntaxe","text":"<p><code>$secu.isBase64( value [ , considerPadding ] )</code></p>"},{"location":"libs/%24secu/_isBase64/#parametres","title":"Param\u00e8tres","text":"<code>value</code> any Valeur \u00e0 tester <code>considerPadding</code> boolean Flag indiquant s'il faut v\u00e9rifier que le padding est correct.  Par d\u00e9faut la valeur est <code>true</code>"},{"location":"libs/%24secu/_isBase64/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la valeur est un base64</p>"},{"location":"libs/%24secu/_isBase64/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24secu/_isDouble/","title":"<code>$secu.isDouble</code>","text":""},{"location":"libs/%24secu/_isDouble/#description","title":"Description","text":"<p>Indique si la valeur est de type double.</p> <p>Attention, la m\u00e9thode ne dit pas que la valeur est un double, ni m\u00eame un  nombre. Elle indique uniquement que la valeur a une forme correspondant  \u00e0 un double. Il se peut que la valeur soit en r\u00e9alit\u00e9 une <code>string</code> mais  que celle-ci repr\u00e9sente un double. On utilisera typiquement cette m\u00e9thode  pour v\u00e9rifier le format d'une valeur en provenance du client (formulaire  HTML).</p> <p>Voir \u00e9galement <code>$secu.isFloat</code></p>"},{"location":"libs/%24secu/_isDouble/#syntaxe","title":"Syntaxe","text":"<p><code>$secu.isDouble( value )</code></p>"},{"location":"libs/%24secu/_isDouble/#parametres","title":"Param\u00e8tres","text":"<code>value</code> string / number Valeur \u00e0 tester"},{"location":"libs/%24secu/_isDouble/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la valeur est un double</p>"},{"location":"libs/%24secu/_isDouble/#exemple","title":"Exemple","text":"<pre><code>$secu.isDouble(\"12.345\");\n$secu.isDouble(\"test\");\n</code></pre>"},{"location":"libs/%24secu/_isFloat/","title":"<code>$secu.isFloat</code>","text":""},{"location":"libs/%24secu/_isFloat/#description","title":"Description","text":"<p>Indique si la valeur est de type float.</p> <p>Attention, la m\u00e9thode ne dit pas que la valeur est un float, ni m\u00eame un  nombre. Elle indique uniquement que la valeur a une forme correspondant  \u00e0 un float. Il se peut que la valeur soit en r\u00e9alit\u00e9 une <code>string</code> mais  que celle-ci repr\u00e9sente un float. On utilisera typiquement cette m\u00e9thode  pour v\u00e9rifier le format d'une valeur en provenance du client (formulaire  HTML).</p> <p>Voir \u00e9galement <code>$secu.isDouble</code></p>"},{"location":"libs/%24secu/_isFloat/#syntaxe","title":"Syntaxe","text":"<p><code>$secu.isFloat( value )</code></p>"},{"location":"libs/%24secu/_isFloat/#parametres","title":"Param\u00e8tres","text":"<code>value</code> string / number Valeur \u00e0 tester"},{"location":"libs/%24secu/_isFloat/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la valeur est un float</p>"},{"location":"libs/%24secu/_isFloat/#exemple","title":"Exemple","text":"<pre><code>$secu.isFloat(\"12.345\");\n$secu.isFloat(\"test\");\n</code></pre>"},{"location":"libs/%24secu/_isInteger/","title":"<code>$secu.isInteger</code>","text":""},{"location":"libs/%24secu/_isInteger/#description","title":"Description","text":"<p>Indique si la valeur repr\u00e9sente une valeur enti\u00e8re.</p> <p>Attention, la m\u00e9thode ne dit pas que la valeur est un entier, ni m\u00eame un  nombre. Elle indique uniquement que la valeur a une forme correspondant  \u00e0 un entier. Il se peut que la valeur soit en r\u00e9alit\u00e9 une <code>string</code> mais  que celle-ci repr\u00e9sente un entier. On utilisera typiquement cette m\u00e9thode  pour v\u00e9rifier le format d'une valeur en provenance du client (formulaire  HTML).</p> <p>Voir \u00e9galement <code>$secu.isLong</code></p>"},{"location":"libs/%24secu/_isInteger/#syntaxe","title":"Syntaxe","text":"<p><code>$secu.isInteger( value )</code></p>"},{"location":"libs/%24secu/_isInteger/#parametres","title":"Param\u00e8tres","text":"<code>value</code> string / number Valeur \u00e0 tester"},{"location":"libs/%24secu/_isInteger/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la valeur est un entier</p>"},{"location":"libs/%24secu/_isInteger/#exemple","title":"Exemple","text":"<pre><code>$secu.isInteger(\"12\");\n$secu.isInteger(\"test\");\n</code></pre>"},{"location":"libs/%24secu/_isLong/","title":"<code>$secu.isLong</code>","text":""},{"location":"libs/%24secu/_isLong/#description","title":"Description","text":"<p>Indique si la valeur est de type long.</p> <p>Attention, la m\u00e9thode ne dit pas que la valeur est un long, ni m\u00eame un  nombre. Elle indique uniquement que la valeur a une forme correspondant  \u00e0 un long. Il se peut que la valeur soit en r\u00e9alit\u00e9 une <code>string</code> mais  que celle-ci repr\u00e9sente un long. On utilisera typiquement cette m\u00e9thode  pour v\u00e9rifier le format d'une valeur en provenance du client (formulaire  HTML).</p> <p>Voir \u00e9galement <code>$secu.isInteger</code></p>"},{"location":"libs/%24secu/_isLong/#syntaxe","title":"Syntaxe","text":"<p><code>$secu.isLong( value )</code></p>"},{"location":"libs/%24secu/_isLong/#parametres","title":"Param\u00e8tres","text":"<code>value</code> string / number Description"},{"location":"libs/%24secu/_isLong/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la valeur est un long</p>"},{"location":"libs/%24secu/_isLong/#exemple","title":"Exemple","text":"<pre><code>$secu.isLong(\"12\");\n$secu.isLong(\"test\");\n</code></pre>"},{"location":"libs/%24secu/_isUuid/","title":"<code>$secu.isUuid</code>","text":""},{"location":"libs/%24secu/_isUuid/#description","title":"Description","text":"<p>Indique si la valeur est un UUID.</p>"},{"location":"libs/%24secu/_isUuid/#syntaxe","title":"Syntaxe","text":"<p><code>$secu.isUuid( value [ , strict ] )</code></p>"},{"location":"libs/%24secu/_isUuid/#parametres","title":"Param\u00e8tres","text":"<code>value</code> string Valeur \u00e0 tester <code>strict</code> boolean Flag <code>true</code>/<code>`f</code>alse indiquant si l'on doit effectuer un test strict, c'est-\u00e0-dire si on attend un format sur 36 caract\u00e8res, donc avec les  tirets. Par d\u00e9faut la valeur est <code>true</code>."},{"location":"libs/%24secu/_isUuid/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la valeur est un UUID.</p>"},{"location":"libs/%24secu/_isUuid/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24secu/_sanitize/","title":"<code>$secu.sanitize</code>","text":""},{"location":"libs/%24secu/_sanitize/#description","title":"Description","text":"<p>Nettoie un texte pour \u00e9liminer les \u00e9l\u00e9ments qui pr\u00e9sentent un risque  d'injection.</p> <p>Une liste exhaustive des options de nettoyages support\u00e9es est donn\u00e9e dans ce chapitre.</p>"},{"location":"libs/%24secu/_sanitize/#syntaxe","title":"Syntaxe","text":"<p><code>$secu.sanitize( text [ , rules ] )</code></p>"},{"location":"libs/%24secu/_sanitize/#parametres","title":"Param\u00e8tres","text":"<code>text</code> string Texte \u00e0 traiter <code>rules</code> string / map / pojo R\u00e8gles de nettoyage, par exemple \"FORMATTING|BLOCKS\". Peut \u00e9galement \u00eatre une r\u00e9f\u00e9rence d'objet <code>pojo</code> cr\u00e9\u00e9e au moyen de  <code>$secu.buildSanitizePolicy</code>, voire une r\u00e8gle de policy d\u00e9crite sous forme de map ou de tableau."},{"location":"libs/%24secu/_sanitize/#retour","title":"Retour","text":"<p>Valeur <code>text</code> nettoy\u00e9e</p>"},{"location":"libs/%24secu/_sanitize/#exemple","title":"Exemple","text":"<p>Un exemple est disponible sur <code>$secu.buildSanitizePolicy</code>.</p>"},{"location":"libs/%24secu/_validate/","title":"<code>$secu.validate</code>","text":""},{"location":"libs/%24secu/_validate/#description","title":"Description","text":"<p>Effectue un contr\u00f4le de s\u00e9curit\u00e9 de la donn\u00e9e.</p> <p>Cette m\u00e9thode est \u00e9quivalente \u00e0 un test du genre <code>text == $secu.sanitize(text)</code>.</p> <p>Une liste exhaustive des options de nettoyages support\u00e9es est donn\u00e9e dans ce chapitre.</p>"},{"location":"libs/%24secu/_validate/#syntaxe","title":"Syntaxe","text":"<p><code>$secu.validate( text [ , rules ] )</code></p>"},{"location":"libs/%24secu/_validate/#parametres","title":"Param\u00e8tres","text":"<code>text</code> string Texte \u00e0 contr\u00f4ler <code>rules</code> string / map / pojo R\u00e8gles de nettoyage, par exemple \"FORMATTING|BLOCKS\". Peut \u00e9galement \u00eatre une r\u00e9f\u00e9rence d'objet <code>pojo</code> cr\u00e9\u00e9e au moyen de <code>$secu.buildSanitizePolicy</code>, voire une r\u00e8gle de policy d\u00e9crite sous forme de map ou de tableau."},{"location":"libs/%24secu/_validate/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la donn\u00e9e est saine, sinon <code>false</code>.</p>"},{"location":"libs/%24secu/_validate/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24session/","title":"<code>$session</code>","text":"<p>Librairie de m\u00e9thodes relatives \u00e0 la session et aux donn\u00e9es de  formulaire HTML.</p>"},{"location":"libs/%24session/_decodeContext/","title":"<code>$session.decodeContext</code>","text":""},{"location":"libs/%24session/_decodeContext/#description","title":"Description","text":"<p>Retourne les informations associ\u00e9es au contexte donn\u00e9 en param\u00e8tre.  Ce dernier peut \u00eatre soit un contexte en clair, soit un uuid.</p>"},{"location":"libs/%24session/_decodeContext/#syntaxe","title":"Syntaxe","text":"<p><code>$session.decodeContext( context )</code></p>"},{"location":"libs/%24session/_decodeContext/#parametres","title":"Param\u00e8tres","text":"<code>context</code> string String repr\u00e9sentant un contexte. La string peut \u00eatre un uuid ou une valeur de contexte en clair (p.ex \"vendeur[2].info[2].nom\")"},{"location":"libs/%24session/_decodeContext/#retour","title":"Retour","text":"<p>Contexte correspondant ou null si le uuid ne correspond \u00e0 aucune entr\u00e9e.</p>"},{"location":"libs/%24session/_decodeContext/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24session/_deserialize/","title":"<code>$session.deserialize</code>","text":""},{"location":"libs/%24session/_deserialize/#description","title":"Description","text":"<p>D\u00e9serialise un session enregistr\u00e9e dans un fichier.</p> <p>Cette m\u00e9thode sert essentiellement au debug.</p>"},{"location":"libs/%24session/_deserialize/#syntaxe","title":"Syntaxe","text":"<p><code>$session.deserialize( file )</code></p>"},{"location":"libs/%24session/_deserialize/#parametres","title":"Param\u00e8tres","text":"<code>file</code> file / string R\u00e9f\u00e9rence ou chemin du fichier source."},{"location":"libs/%24session/_deserialize/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la d\u00e9serialisation a r\u00e9ussi, sinon <code>false</code>.</p>"},{"location":"libs/%24session/_deserialize/#exemple","title":"Exemple","text":"<p>Voir $session.serialize</p>"},{"location":"libs/%24session/_getCommand/","title":"<code>$session.getCommand</code>","text":""},{"location":"libs/%24session/_getCommand/#description","title":"Description","text":"<p>Retourne un objet d\u00e9crivant la commande re\u00e7ue.</p>"},{"location":"libs/%24session/_getCommand/#syntaxe","title":"Syntaxe","text":"<p><code>$session.getCommand()</code></p>"},{"location":"libs/%24session/_getCommand/#retour","title":"Retour","text":"<p>Commande re\u00e7ue via la requ\u00eate</p>"},{"location":"libs/%24session/_getCommand/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24session/_getId/","title":"<code>$session.getId</code>","text":""},{"location":"libs/%24session/_getId/#description","title":"Description","text":"<p>Retourne l'id de session client.</p>"},{"location":"libs/%24session/_getId/#syntaxe","title":"Syntaxe","text":"<p><code>$session.getId()</code></p>"},{"location":"libs/%24session/_getId/#retour","title":"Retour","text":"<p>Id de session client</p>"},{"location":"libs/%24session/_getId/#exemple","title":"Exemple","text":"<pre><code>$session.getId();\n</code></pre>"},{"location":"libs/%24session/_getPersistentObject/","title":"<code>$session.getPersistentObject</code>","text":""},{"location":"libs/%24session/_getPersistentObject/#description","title":"Description","text":"<p>Retourne la valeur d'un objet persistent de session.</p>"},{"location":"libs/%24session/_getPersistentObject/#syntaxe","title":"Syntaxe","text":"<p><code>$session.getPersistentObject( name )</code></p>"},{"location":"libs/%24session/_getPersistentObject/#parametres","title":"Param\u00e8tres","text":"<code>name</code> string Nom de l'objet \u00e0 obtenir"},{"location":"libs/%24session/_getPersistentObject/#retour","title":"Retour","text":"<p>Valeur de type <code>string</code> dans le cas d'un objet mono-valu\u00e9, ou table <code>array</code> pour les objets multi-valu\u00e9s.</p>"},{"location":"libs/%24session/_getPersistentObject/#exemple","title":"Exemple","text":"<pre><code>$session.getPersistentObject(\"searchResult\");\n</code></pre>"},{"location":"libs/%24session/_getTransientObject/","title":"<code>$session.getTransientObject</code>","text":""},{"location":"libs/%24session/_getTransientObject/#description","title":"Description","text":"<p>Retourne la valeur d'un objet transitoire de session.</p> <p>Par d\u00e9faut, la m\u00e9thode retourne une valeur de type <code>string</code>. Cela  vient du fait que le type de donn\u00e9e n'est pas transmis dans le  formulaire HTML (et m\u00eame si c'\u00e9tait le cas, on ne pourrait pas lui  faire confiance \u00e9tant donn\u00e9 qu'il pourrait \u00eatre alt\u00e9r\u00e9).</p> <p>Toutefois, si une valeur par d\u00e9faut est pass\u00e9e \u00e0 la m\u00e9thode, le  type de donn\u00e9e sera le m\u00eame que celui de la valeur par d\u00e9faut. Si une valeur par d\u00e9faut <code>null</code> est pass\u00e9e, il est \u00e9galement  possible de forcer le type via les options.</p>"},{"location":"libs/%24session/_getTransientObject/#syntaxe","title":"Syntaxe","text":"<p><code>$session.getTransientObject( name [ , defaultValue [ , options ] ] )</code></p>"},{"location":"libs/%24session/_getTransientObject/#parametres","title":"Param\u00e8tres","text":"<code>name</code> string Nom de l'objet \u00e0 obtenir <code>defaultValue</code> any <p>Valeur par d\u00e9faut \u00e0 retourner si l'objet transient n'existe pas.</p> <p>Le type de la <code>defaultValue</code> est r\u00e9utilis\u00e9e comme type de la valeur de retour.</p> <code>options</code> map <p>Map d'options pass\u00e9es \u00e0 la m\u00e9thode. Les options reconnues sont:</p> <code>type</code> string Type de valeur attendu. Les types reconnus sont \"string\",  \"number\", \"date\", \"time\" et \"timestamp\"."},{"location":"libs/%24session/_getTransientObject/#retour","title":"Retour","text":"<p>Valeur de type <code>string</code> dans le cas d'un objet mono-valu\u00e9, ou table <code>array</code> pour les objets multi-valu\u00e9s.</p>"},{"location":"libs/%24session/_getTransientObject/#exemple","title":"Exemple","text":"<pre><code>$session.getTransientObject(\"SESSION:DARKMODE\");\n</code></pre>"},{"location":"libs/%24session/_listPersistentObjects/","title":"<code>$session.listPersistentObjects</code>","text":""},{"location":"libs/%24session/_listPersistentObjects/#description","title":"Description","text":"<p>Retourne la liste des objets persistents de session.</p>"},{"location":"libs/%24session/_listPersistentObjects/#syntaxe","title":"Syntaxe","text":"<p><code>$session.listPersistentObjects( [ filter ] )</code></p>"},{"location":"libs/%24session/_listPersistentObjects/#parametres","title":"Param\u00e8tres","text":"<code>filter</code> string Filtre sur les noms d'objets \u00e0 \u00e9num\u00e9rer. Le filtre est \u00e0 donner sous la forme d'une expression r\u00e9guli\u00e8re."},{"location":"libs/%24session/_listPersistentObjects/#retour","title":"Retour","text":"<p>Tableau contenant les noms des objets persistents.</p>"},{"location":"libs/%24session/_listPersistentObjects/#exemple","title":"Exemple","text":"<pre><code>$session.listPersistentObjects();\n</code></pre>"},{"location":"libs/%24session/_listTransientObjects/","title":"<code>$session.listTransientObjects</code>","text":""},{"location":"libs/%24session/_listTransientObjects/#description","title":"Description","text":"<p>Retourne la liste des noms des objets transitoires de session.</p>"},{"location":"libs/%24session/_listTransientObjects/#syntaxe","title":"Syntaxe","text":"<p><code>$session.listTransientObjects( [ filter ] )</code></p>"},{"location":"libs/%24session/_listTransientObjects/#parametres","title":"Param\u00e8tres","text":"<code>filter</code> string Filtre sur les noms d'objets \u00e0 \u00e9num\u00e9rer. Le filtre est \u00e0 donner sous la forme d'une expression r\u00e9guli\u00e8re."},{"location":"libs/%24session/_listTransientObjects/#retour","title":"Retour","text":"<p>Tableau contenant les noms des objets transients.</p>"},{"location":"libs/%24session/_listTransientObjects/#exemple","title":"Exemple","text":"<pre><code>$session.listTransientObjects();\n</code></pre>"},{"location":"libs/%24session/_serialize/","title":"<code>$session.serialize</code>","text":""},{"location":"libs/%24session/_serialize/#description","title":"Description","text":"<p>Serialise la session courante, c'est-\u00e0-dire sauvegarde les objets de la  session courante dans un fichier.</p> <p>Cette m\u00e9thode sert essentiellement au debug.</p>"},{"location":"libs/%24session/_serialize/#syntaxe","title":"Syntaxe","text":"<p><code>$session.serialize( [ file ] )</code></p>"},{"location":"libs/%24session/_serialize/#parametres","title":"Param\u00e8tres","text":"<code>file</code> file / string <p>R\u00e9f\u00e9rence ou chemin du fichier de destination.</p> <p>Si non renseign\u00e9, le moteur cr\u00e9e un fichier dans le r\u00e9pertoire de travail.</p>"},{"location":"libs/%24session/_serialize/#retour","title":"Retour","text":"<p>R\u00e9f\u00e9rence du fichier g\u00e9n\u00e9r\u00e9, ou <code>null</code> si la s\u00e9rialisation a \u00e9chou\u00e9.</p>"},{"location":"libs/%24session/_serialize/#exemple","title":"Exemple","text":"<pre><code>var file = $session.serialize();\n$logger.info(file);\n\nif (file != null) {\n    $logger.info($session.deserialize(file));\n}\n</code></pre>"},{"location":"libs/%24session/_setPersistentObject/","title":"<code>$session.setPersistentObject</code>","text":""},{"location":"libs/%24session/_setPersistentObject/#description","title":"Description","text":"<p>Met \u00e0 jour ou supprime un objet persistent de session</p>"},{"location":"libs/%24session/_setPersistentObject/#syntaxe","title":"Syntaxe","text":"<p><code>$session.setPersistentObject( name , value [ , options ] )</code></p>"},{"location":"libs/%24session/_setPersistentObject/#parametres","title":"Param\u00e8tres","text":"<code>name</code> string Nom de l'objet \u00e0 mettre \u00e0 jour ou \u00e0 d\u00e9finir <code>value</code> string / array <p>Valeur \u00e0 inscrire dans l'objet. La valeur peut \u00eatre une valeur simple de type <code>string</code> ou un <code>array</code> de <code>string</code>.</p> <p>Si la valeur est <code>null</code>, l'objet persistent est supprim\u00e9.</p> <code>options</code> map <p>Les options permettent de sp\u00e9cifier des informations compl\u00e9mentaires concernant le format de la donn\u00e9e ou la fa\u00e7on de la traiter. Les options suivantes sont reconnues:</p> <code>format</code> string Format de donn\u00e9es. Peut valoir \"xml\" pour indiquer que la donn\u00e9es  est \u00e0 traiter en tant qu'arbre XML (dans ce cas la ou les valeurs  ne seront pas \u00e9chapp\u00e9es au niveau de l'arbre de sortie) <code>append</code> boolean <p>Flag <code>true</code>/<code>false</code> indiquant si la valeur pass\u00e9e en param\u00e8tre  doit \u00eatre ajout\u00e9e en tant que valeur suppl\u00e9mentaire \u00e0 l'objet  (valeur <code>true</code>) ou si elle doit remplacer la ou les valeurs  existantes (valeur <code>false</code>). Par d\u00e9faut le mode <code>append</code> vaut  <code>false</code>.</p> <p>Attention, les objets persistents sont conserv\u00e9s d'une requ\u00eate \u00e0 l'autre. Si vous utilisez le mode <code>append</code>, gardez \u00e0 l'esprit que cela va compl\u00e9ter la valeur existante au niveau de la session. Il y a un risque de faire sensiblement exploser la taille de l'objet si on fait un \"append\" sur un objet \u00e0 chaque requ\u00eate.</p>"},{"location":"libs/%24session/_setPersistentObject/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24session/_setPersistentObject/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24session/_setTransientObject/","title":"<code>$session.setTransientObject</code>","text":""},{"location":"libs/%24session/_setTransientObject/#description","title":"Description","text":"<p>Met \u00e0 jour ou supprime un objet transitoire de session.</p>"},{"location":"libs/%24session/_setTransientObject/#syntaxe","title":"Syntaxe","text":"<p><code>$session.setTransientObject( name , value [ , options ] )</code></p>"},{"location":"libs/%24session/_setTransientObject/#parametres","title":"Param\u00e8tres","text":"<code>name</code> string Nom de l'objet \u00e0 mettre \u00e0 jour ou \u00e0 d\u00e9finir <code>value</code> string / array <p>Valeur \u00e0 inscrire dans l'objet. La valeur peut \u00eatre une valeur simple de type <code>string</code> ou un <code>array</code> de <code>string</code>.</p> <p>Si la valeur est <code>null</code>, l'objet transitoire est supprim\u00e9.</p> <code>options</code> map <p>Les options permettent de sp\u00e9cifier des informations compl\u00e9mentaires concernant le format de la donn\u00e9e ou la fa\u00e7on de la traiter. Les options suivantes sont reconnues:</p> <code>format</code> string Format de donn\u00e9es. Peut valoir \"xml\" pour indiquer que la donn\u00e9es  est \u00e0 traiter en tant qu'arbre XML (dans ce cas la ou les valeurs  ne seront pas \u00e9chapp\u00e9es au niveau de l'arbre de sortie) <code>append</code> boolean Flag <code>true</code>/<code>false</code> indiquant si la valeur pass\u00e9e en param\u00e8tre  doit \u00eatre ajout\u00e9e en tant que valeur suppl\u00e9mentaire \u00e0 l'objet  (valeur <code>true</code>) ou si elle doit remplacer la ou les valeurs  existantes (valeur <code>false</code>). Par d\u00e9faut le mode <code>append</code> vaut  <code>false</code>."},{"location":"libs/%24session/_setTransientObject/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24session/_setTransientObject/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24soap/","title":"<code>soap</code>","text":"<p>Librairie de m\u00e9thodes portant sur les services SOAP</p>"},{"location":"libs/%24soap/_call/","title":"<code>$soap.call</code>","text":""},{"location":"libs/%24soap/_call/#description","title":"Description","text":"<p>Indique si la valeur est un UUID.</p>"},{"location":"libs/%24soap/_call/#syntaxe","title":"Syntaxe","text":"<p><code>$soap.call( address , service , message [ , options ] )</code></p>"},{"location":"libs/%24soap/_call/#parametres","title":"Param\u00e8tres","text":"<code>address</code> string Adresse (URL) du service \u00e0 invoquer <code>service</code> string Nom du service \u00e0 invoquer <code>message</code> string Message SOAP \u00e0 envoyer <code>options</code> map <p>Map d'option. Les options reconnues sont:</p> <code>namespace</code> string Namespace attendu par le service <code>soapaction</code> string Valeur de l'ent\u00eate HTTP <code>SOAPAction</code> <code>username</code> string Nom d'utilisateur <code>password</code> string Mot de passe associ\u00e9 au nom d'utilisateur <code>binding</code> Type de binding. Les valeurs possible sont <code>soap11</code> ou <code>soap12</code> pour  d\u00e9signer respectivement les bindings SOAP 1.1 et SOAP 1.2."},{"location":"libs/%24soap/_call/#retour","title":"Retour","text":"<p>Retourne le contenu de la r\u00e9ponse SOAP (sans l'enveloppe)</p>"},{"location":"libs/%24soap/_call/#exemple","title":"Exemple","text":"<pre><code>$soap.call(\"https://www.w3schools.com/xml/tempconvert.asmx\",\n           \"FahrenheitToCelsius\",\n           \"&lt;FahrenheitToCelsius&gt;\n              &lt;Fahrenheit&gt;75&lt;/Fahrenheit&gt;\n            &lt;/FahrenheitToCelsius&gt;\"::t,\n           {\n               soapaction: \"https://www.w3schools.com/xml/FahrenheitToCelsius\"\n           });\n</code></pre>"},{"location":"libs/%24sql/","title":"<code>$sql</code>","text":"<p>M\u00e9thodes d'interface avec une base de donn\u00e9es.</p>"},{"location":"libs/%24sql/#prepared-statements","title":"Prepared Statements","text":"<p>Ewt encourage \u00e0 d\u00e9finir des requ\u00eates SQL qui utilisent la syntaxe des  prepared statements.  Cela apporte un gain notable en termes de protection contre l'injection SQL  et peut \u00e9galement fournir des am\u00e9liorations en ce qui concerne les  performances.</p> <p>Les m\u00e9thodes fournies par la librairie <code>$sql</code> supportent toutes la syntaxe  des prepared statements.</p>"},{"location":"libs/%24sql/_addBatch/","title":"<code>$sql.addBatch</code>","text":""},{"location":"libs/%24sql/_addBatch/#description","title":"Description","text":"<p>Ajoute un set de valeurs en vue d'une ex\u00e9cution par batch. L'utilisation  de cette m\u00e9thode ne fait sens que pour les requ\u00eates de mise \u00e0 jour, de  type UPDATE ou DELETE.</p>"},{"location":"libs/%24sql/_addBatch/#syntaxe","title":"Syntaxe","text":"<p><code>$sql.addBatch( statement , data [ , options ] )</code></p>"},{"location":"libs/%24sql/_addBatch/#parametres","title":"Param\u00e8tres","text":"<code>statement</code> pojo R\u00e9f\u00e9rence de prepared statement auquel ajouter le batch. La r\u00e9f\u00e9rence  peut \u00eatre obtenue avec la m\u00e9thode  <code>$sql.prepareStatement</code> <code>data</code> array / map <p>Donn\u00e9es \u00e0 ajouter en batch. Le param\u00e8tre ne doit pas \u00eatre null. Le  param\u00e8tre peut prendre diff\u00e9rentes formes en fonction de la requ\u00eate  pour sur laquelle il doit s'appliquer:</p> <ul> <li>Tableau 1D : Dans ce cas, les valeurs du tableau sont reprises comme      valeurs pour le prepared statement.</li> <li>Tableau 2D (tableau de tableau 1D) : Cette syntaxe permet de passer      plusieurs jeux de donn\u00e9es \u00e0 la fois. Dans ce cas, la m\u00e9thode inscrit      autant d'entr\u00e9es au batch qu'il y a de tableaux 1D</li> <li>Map : Ce cas s'applique si la requ\u00eate r\u00e9f\u00e9rence des param\u00e8tres nomm\u00e9s.     Le map doit fournir les valeurs pour les diff\u00e9rents noms de      param\u00e8tres attendus par la requ\u00eate.</li> <li>Tableau de map : Cette syntaxe permet de passer plusieurs jeux de      donn\u00e9es \u00e0 la fois, en utilisant la notation avec des param\u00e8tres      nomm\u00e9s. Dans ce cas, la m\u00e9thode inscrit autant d'entr\u00e9es au batch      qu'il y a de maps dans le tableau.</li> </ul> <code>options</code> map <p>Map d'options. Les options reconnues sont:</p> <code>connection</code> string Nom de connexion de laquelle tirer les param\u00e8tres de connexion.  Doit r\u00e9f\u00e9rencer une connexion d\u00e9finie dans le fichier de  configuration."},{"location":"libs/%24sql/_addBatch/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le prepared statement r\u00e9f\u00e9renc\u00e9 par la cl\u00e9 existe dans  le cache, sinon <code>false</code>.</p>"},{"location":"libs/%24sql/_addBatch/#exemple","title":"Exemple","text":"<p>Exemple d'insertions au moyen d'un batch. L'id\u00e9e c'est de cr\u00e9er un prepared statement et ensuite de passer des sets de valeurs au statement et de les r\u00e9f\u00e9rencer en tant que batch. En fait, on ne fait que de pusher des donn\u00e9es sur le statement, puis on lance le batch \u00e0 la fin. On indique au passage d'ex\u00e9cuter le batch sans auto-commit (il n'y aura qu'un seul commit \u00e0 la fin).</p> <p>Notez au passage l'usage de <code>try</code>/<code>finally</code>. La lib\u00e9ration du statement  est faite dans la clause <code>finally</code> pour s'assurer qu'elle soit bien  effectu\u00e9e, m\u00eame en cas d'exception.</p> <pre><code>var ps = $sql.prepareStatement(`insert into ArticleListeArticle(idListeArticle, Numero, Soldable)\n                                values(?,?,0)`, { autocommit: false });\ntry {\n    for (var cnt = 1; cnt &lt;= numArticles; ++cnt) {\n      $sql.addBatch(ps, [ ctxtListeArticle.docId, cnt ]);\n    }\n\n    $sql.executeBatch(ps);\n}\nfinally {\n    $sql.releaseStatement(ps);\n}\n</code></pre> <p>Exemple \u00e9quivalent en utilisant des param\u00e8tres nomm\u00e9s:</p> <pre><code>var ps = $sql.prepareStatement(`insert into ArticleListeArticle(idListeArticle, Numero, Soldable)\n                                values(:docId,:cnt,0)`, { autocommit: false });\ntry {\n    for (var cnt = 1; cnt &lt;= numArticles; ++cnt) {\n      $sql.addBatch(ps, { docId: ctxtListeArticle.docId, cnd: cnt });\n    }\n\n    $sql.executeBatch(ps);\n}\nfinally {\n    $sql.releaseStatement(ps);\n}\n</code></pre>"},{"location":"libs/%24sql/_close/","title":"<code>$sql.close</code>","text":""},{"location":"libs/%24sql/_close/#description","title":"Description","text":"<p>Ferme la connexion courante.</p> <p>Cette m\u00e9thode sert essentiellement au test du moteur, pour v\u00e9rifier qu'il  g\u00e8re correctement la perte de connexion \u00e0 la base de donn\u00e9es.</p>"},{"location":"libs/%24sql/_close/#syntaxe","title":"Syntaxe","text":"<p><code>$sql.close( [ connection ] )</code></p>"},{"location":"libs/%24sql/_close/#parametres","title":"Param\u00e8tres","text":"<code>connection</code> string Nom de connexion \u00e0 fermer. Doit r\u00e9f\u00e9rencer une connexion d\u00e9finie dans le  fichier de configuration."},{"location":"libs/%24sql/_close/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24sql/_close/#exemple","title":"Exemple","text":"<pre><code>$sql.close();\n</code></pre>"},{"location":"libs/%24sql/_commit/","title":"<code>$sql.commit</code>","text":""},{"location":"libs/%24sql/_commit/#description","title":"Description","text":"<p>Force le commit de la connexion en cours. La m\u00e9thode est sans effet si la connexion est en autocommit.</p>"},{"location":"libs/%24sql/_commit/#syntaxe","title":"Syntaxe","text":"<p><code>$sql.commit( [ options ] )</code></p>"},{"location":"libs/%24sql/_commit/#parametres","title":"Param\u00e8tres","text":"<code>options</code> map <p>Map d'options pour l'ex\u00e9cution du commit. Les options support\u00e9es sont:</p> <code>connection</code> string Nom de connexion de laquelle tirer les param\u00e8tres de connexion.  Doit r\u00e9f\u00e9rencer une connexion d\u00e9finie dans le fichier de  configuration."},{"location":"libs/%24sql/_commit/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le commit a pu \u00eatre effectu\u00e9 sans erreur, sinon <code>false</code></p>"},{"location":"libs/%24sql/_commit/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24sql/_dumpStatActivity/","title":"<code>$sql.dumpStatActivity</code>","text":""},{"location":"libs/%24sql/_dumpStatActivity/#description","title":"Description","text":"<p>Affiche dans le log des donn\u00e9es sur l'\u00e9tat des connexions.</p>"},{"location":"libs/%24sql/_dumpStatActivity/#syntaxe","title":"Syntaxe","text":"<p><code>$sql.dumpStatActivity( [ options ] )</code></p>"},{"location":"libs/%24sql/_dumpStatActivity/#parametres","title":"Param\u00e8tres","text":"<code>options</code> map <p>Map d'options suppl\u00e9mentaires. Les options reconnues sont:</p> <code>connection</code> string Nom de connexion de laquelle tirer les param\u00e8tres de connexion.  Doit r\u00e9f\u00e9rencer une connexion d\u00e9finie dans le fichier de  configuration"},{"location":"libs/%24sql/_dumpStatActivity/#retour","title":"Retour","text":"<p>Retourne <code>null</code>.</p>"},{"location":"libs/%24sql/_dumpStatActivity/#exemple","title":"Exemple","text":"<pre><code>$sql.dumpStatActivity();\n</code></pre>"},{"location":"libs/%24sql/_executeBatch/","title":"<code>$sql.executeBatch</code>","text":""},{"location":"libs/%24sql/_executeBatch/#description","title":"Description","text":"<p>Lance l'ex\u00e9cution d'un batch.</p>"},{"location":"libs/%24sql/_executeBatch/#syntaxe","title":"Syntaxe","text":"<p><code>$sql.executeBatch( statement [ , options ] )</code></p>"},{"location":"libs/%24sql/_executeBatch/#parametres","title":"Param\u00e8tres","text":"<code>statement</code> pojo R\u00e9f\u00e9rence de prepared statement sur lequel ex\u00e9cuter le batch. La  r\u00e9f\u00e9rence peut \u00eatre obtenue avec la m\u00e9thode  <code>$sql.prepareStatement</code> <code>options</code> map <p>Map d'options pour l'ex\u00e9cution du batch. Les options reconnues sont:</p> <code>autocommit</code> boolean Flag <code>true</code>/<code>false</code> indiquant si l'auto-commit doit \u00eatre activ\u00e9  durant l'ex\u00e9cution du batch. Par d\u00e9faut, l'auto-commit est activ\u00e9. <code>connection</code> string Nom de connexion de laquelle tirer les param\u00e8tres de connexion.  Doit r\u00e9f\u00e9rencer une connexion d\u00e9finie dans le fichier de  configuration. <code>timeout</code> number Dur\u00e9e maximum d'ex\u00e9cution du batch en secondes. Sans effet si la valeur est inf\u00e9rieure ou \u00e9gale \u00e0 0. Par d\u00e9faut l'ex\u00e9cution se fait sans timeout. <code>rollback</code> boolean <p>Flag <code>true</code>/<code>false</code> indiquant si le batch doit \u00eatre annul\u00e9 en cas d'erreur. Par d\u00e9faut le flag est <code>true</code>.</p> <p>\u00c0 noter que le comportement est fortement d\u00e9pendant du SGBD. Certains SGBD annulent automatiquement le statement en cas d'erreur. Dans ce cas, la propri\u00e9t\u00e9 est sans effet.</p>"},{"location":"libs/%24sql/_executeBatch/#retour","title":"Retour","text":"<p>Retourne un tableau d'entiers contenant le nombre d'update effectu\u00e9s.</p>"},{"location":"libs/%24sql/_executeBatch/#exemple","title":"Exemple","text":"<p>Voir <code>$sql.addBatch</code></p>"},{"location":"libs/%24sql/_genDBScript/","title":"<code>$sql.genDBScript</code>","text":""},{"location":"libs/%24sql/_genDBScript/#description","title":"Description","text":"<p>Construit un script SQL contenant les requ\u00eates de cr\u00e9ation des tables et des index de la base de donn\u00e9es de l'application.</p>"},{"location":"libs/%24sql/_genDBScript/#syntaxe","title":"Syntaxe","text":"<p><code>$sql.genDBScript( [ options ] )</code></p>"},{"location":"libs/%24sql/_genDBScript/#parametres","title":"Param\u00e8tres","text":"<code>options</code> map <p>Map d'options suppl\u00e9mentaires. Les options reconnues sont:</p> <code>connection</code> string Nom de connexion de laquelle tirer les param\u00e8tres de connexion.  Doit r\u00e9f\u00e9rencer une connexion d\u00e9finie dans le fichier de  configuration"},{"location":"libs/%24sql/_genDBScript/#retour","title":"Retour","text":"<p>Cha\u00eene de caract\u00e8res contenant les requ\u00eates de cr\u00e9ation des tables et des index.</p>"},{"location":"libs/%24sql/_genDBScript/#exemple","title":"Exemple","text":"<pre><code>$sql.genDBScript();\n</code></pre>"},{"location":"libs/%24sql/_insert/","title":"<code>$sql.insert</code>","text":""},{"location":"libs/%24sql/_insert/#description","title":"Description","text":"<p>Ex\u00e9cute une requ\u00eate de type INSERT et retourne une table contenant les cl\u00e9s primaires des nouvelles entr\u00e9es</p>"},{"location":"libs/%24sql/_insert/#syntaxe","title":"Syntaxe","text":"<p><code>$sql.insert( query [ , data [ , options ] ] )</code></p>"},{"location":"libs/%24sql/_insert/#parametres","title":"Param\u00e8tres","text":"<code>query</code> string / pojo Requ\u00eate \u00e0 \u00e9valuer OU r\u00e9f\u00e9rence de prepared statement obtenue par <code>$sql.prepareStatement</code>. <code>data</code> array / map <p>Jeu de donn\u00e9es \u00e0 passer \u00e0 la requ\u00eate (dans le cas o\u00f9 la requ\u00eate utilise la notation des prepared statements - ce qui est recommand\u00e9)</p> <p>Le param\u00e8tre peut prendre plusieurs formes en fonction de la requ\u00eate sur  laquelle il doit s'appliquer: </p> <ul> <li>Valeur <code>null</code>: La requ\u00eate n'attend pas de param\u00e8tre ou n'utilise      pas la syntaxe des prepared statement</li> <li>Tableau 1D: Dans ce cas, les valeurs du tableau sont reprises dans      l'ordre comme valeurs pour le prepared statement.</li> <li>Tableau 2D (tableau de tableau 1D) : La m\u00e9thode comprend que l'on      souhaite \u00e9valuer plusieurs fois la requ\u00eate. Elle boucle sur les lots      de donn\u00e9es dans l'ordre et \u00e9value la requ\u00eate avec chacun des lots      disponibles. Par exemple, si le tableau vaut <code>[[1,2],[3,4]]</code>,     la m\u00e9thode va \u00e9valuer la requ\u00eate 2 fois : la premi\u00e8re fois avec     les valeurs 1 et 2, et la seconde fois avec les valeur 3 et 4.</li> <li>Map : Ce cas s'applique si la requ\u00eate r\u00e9f\u00e9rence des param\u00e8tres nomm\u00e9s.</li> <li>Tableau de map : Cette syntaxe permet de passer plusieurs jeux de      donn\u00e9es \u00e0 la fois, en utilisant la notation avec des param\u00e8tres      nomm\u00e9s. Dans ce cas, la m\u00e9thode est \u00e9valu\u00e9e autant de fois qu'il y a      de maps dans le tableau.</li> </ul> <code>options</code> map <p>Map d'options suppl\u00e9mentaires. Les options reconnues sont:</p> <code>timeout</code> number Temps maximum (en secondes) autoris\u00e9 pour l'ex\u00e9cution de la requ\u00eate <code>connection</code> string Nom de connexion de laquelle tirer les param\u00e8tres de connexion.  Doit r\u00e9f\u00e9rencer une connexion d\u00e9finie dans le fichier de  configuration"},{"location":"libs/%24sql/_insert/#retour","title":"Retour","text":"<p>Matrice contenant les valeurs des cl\u00e9s g\u00e9n\u00e9r\u00e9es. Le retour de la m\u00e9thode  peut varier selon le type de SGBD utilis\u00e9.</p>"},{"location":"libs/%24sql/_insert/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24sql/_mselect/","title":"<code>$sql.mselect</code>","text":""},{"location":"libs/%24sql/_mselect/#description","title":"Description","text":"<p>Ex\u00e9cute une requ\u00eate SQL de type SELECT sur la base de donn\u00e9es et retourne  une matrice des r\u00e9sultats.</p> <p>La m\u00e9thode est une variante de <code>$sql.msql</code> sp\u00e9cifique aux  requ\u00eates de type SELECT.</p>"},{"location":"libs/%24sql/_mselect/#syntaxe","title":"Syntaxe","text":"<p><code>$sql.mselect( query [ , data [ , options ] ] )</code></p>"},{"location":"libs/%24sql/_mselect/#parametres","title":"Param\u00e8tres","text":"<code>query</code> string / pojo Requ\u00eate \u00e0 \u00e9valuer OU r\u00e9f\u00e9rence de prepared statement obtenue par <code>$sql.prepareStatement</code>. <code>data</code> array / map <p>Jeu de donn\u00e9es \u00e0 passer \u00e0 la requ\u00eate (dans le cas o\u00f9 la requ\u00eate utilise la notation des prepared statements - ce qui est recommand\u00e9)</p> <p>Le param\u00e8tre peut prendre plusieurs formes en fonction de la requ\u00eate sur  laquelle il doit s'appliquer: </p> <ul> <li>Valeur <code>null</code>: La requ\u00eate n'attend pas de param\u00e8tre ou n'utilise      pas la syntaxe des prepared statement</li> <li>Tableau 1D: Dans ce cas, les valeurs du tableau sont reprises dans      l'ordre comme valeurs pour le prepared statement.</li> <li>Tableau 2D (tableau de tableau 1D) : La m\u00e9thode comprend que l'on      souhaite \u00e9valuer plusieurs fois la requ\u00eate. Elle boucle sur les lots      de donn\u00e9es dans l'ordre et \u00e9value la requ\u00eate avec chacun des lots      disponibles. Par exemple, si le tableau vaut <code>[[1,2],[3,4]]</code>,     la m\u00e9thode va \u00e9valuer la requ\u00eate 2 fois : la premi\u00e8re fois avec     les valeurs 1 et 2, et la seconde fois avec les valeur 3 et 4.</li> <li>Map : Ce cas s'applique si la requ\u00eate r\u00e9f\u00e9rence des param\u00e8tres nomm\u00e9s.</li> <li>Tableau de map : Cette syntaxe permet de passer plusieurs jeux de      donn\u00e9es \u00e0 la fois, en utilisant la notation avec des param\u00e8tres      nomm\u00e9s. Dans ce cas, la m\u00e9thode est \u00e9valu\u00e9e autant de fois qu'il y a      de maps dans le tableau.</li> </ul> <code>options</code> map <p>Map d'options suppl\u00e9mentaires. Les options reconnues sont:</p> <code>timeout</code> number Temps maximum (en secondes) autoris\u00e9 pour l'ex\u00e9cution de la requ\u00eate <code>defval</code> any Valeur par d\u00e9faut \u00e0 retourner dans le cas o\u00f9 la requ\u00eate g\u00e9n\u00e8re une  erreur ou part en timeout <code>format</code> string <p>Format de sortie; les formats disponibles sont:</p> <code>matrix</code> Mode par d\u00e9faut. Retourne une matrice, c'est-\u00e0-dire un tableau  de tableau (ou plus exactement, un <code>array</code> d'<code>array</code>). La valeur  de retour aura donc la forme <code>[ [ u1, u2, ... ] , [ v1, v2, ... ] , ... ]</code> <code>array</code> Retourne un tableau 1D, ou, dit autrement, un tableau ne contenant qu'une seule colonne. Les colonnes 2 et suivantes du result set sont ignor\u00e9es. La valeur de retour aura donc la forme <code>[ u1, v1, ... ]</code> <code>xml</code> Retourne un arbre xml <code>html</code> Retourne une table html (les valeurs sont \u00e9chapp\u00e9e selon la  syntaxe html, par exemple un \"\u00e9\" sera \u00e9chapp\u00e9 en \"\u00e9\") <code>xhtml</code> Retourne une table html (les valeurs sont \u00e9chapp\u00e9es selon la  syntaxe une syntaxe compatible xml, ainsi un \"\u00e9\" sera \u00e9chapp\u00e9  en \"&amp;#233;\") <code>json</code> Retourne un arbre JSON <code>csv</code> Retourne les donn\u00e9es au format CSV <code>text</code> <p>Retourne une repr\u00e9sentation de la table sous forme de cha\u00eene de caract\u00e8re structur\u00e9e en forme de table.</p> <p>Le format est en fait un raccourci qui effectue un appel \u00e0  <code>$array.stringify</code>.</p> <code>auto</code> Retourne une matrice lorsque les donn\u00e9es contiennent plusieurs  lignes ou plusieurs colonnes, ou une valeur unique dans le cas  o\u00f9 le r\u00e9sultat se limite \u00e0 une seule valeur <code>header</code> string <p>Cette option joue un r\u00f4le diff\u00e9rent selon le format de sortie  (selon valeur de <code>format</code> ci-dessus):</p> <ul> <li> <p><code>auto</code> : Sans effet (l'option est ignor\u00e9e)</p> </li> <li> <p><code>matrix</code> : Valeur true/false indiquant s'il faut reprendre les      noms de colonnes \u00e0 la premi\u00e8re ligne</p> </li> <li> <p><code>array</code> : Valeur true/false indiquant s'il faut reprendre les      noms de colonnes \u00e0 la premi\u00e8re ligne</p> </li> <li> <p><code>xml</code> : Si la valeur de <code>header</code> est <code>true</code>, alors la m\u00e9thode     reprend les noms de colonnes comme noms de balises (\u00e0 la place     des <code>col0</code>, <code>col1</code>, etc.)</p> <p>Si la valeur est pr\u00e9fix\u00e9e par <code>head:</code>, alors la m\u00e9thode ajoute  un bloc d'ent\u00eate portant le nom indiqu\u00e9 apr\u00e8s <code>head:</code> et y  sp\u00e9cifie les noms de colonnes</p> <p>Si la valeur <code>header</code> est pr\u00e9fix\u00e9e par <code>attr:</code>, alors la  m\u00e9thode ajoute sur chaque \u00e9l\u00e9ment <code>col0</code>, <code>col1</code>, etc. un  attribut ayant pour nom la valeur indiqu\u00e9e apr\u00e8s <code>attr:</code> et  pour valeur le nom de la colonne</p> </li> <li> <p><code>html</code> : <code>header</code> est alors interpr\u00e9t\u00e9 comme un flag dont la     valeur <code>true</code>/<code>false</code> indique s'il faut reprendre les noms      de colonnes dans une ligne d'ent\u00eate.</p> </li> <li> <p><code>xhtml</code> : Identique au cas o\u00f9 <code>format</code> vaut <code>html</code></p> </li> <li> <p><code>json</code> : Pour le format <code>json</code>, si la valeur vaut <code>true</code>, alors     les valeurs sont retourn\u00e9es sous la forme d'un objet o\u00f9 la cl\u00e9     reprend le nom de colonne; sinon les valeurs sont retourn\u00e9es      dans un tableau.</p> <p>Si la valeur est pr\u00e9fix\u00e9e par <code>head:</code>, alors la m\u00e9thode  ajoute un \u00e9l\u00e9ment d\u00e9crivant les noms de colonnes; l'\u00e9l\u00e9ment  en question est nomm\u00e9 selon la valeur indiqu\u00e9e apr\u00e8s <code>head:</code>.</p> <p>Si la valeur est une valeur num\u00e9rique, la m\u00e9thode g\u00e9n\u00e8re un map au format json en reprenant la valeur de la colonne indiqu\u00e9e en tant que cl\u00e9. Les autres valeurs sont reprises sous forme de table ou de valeur simple dans le cas o\u00f9 le resultset ne contient que deux colonnes. Les indices de colonnes sont 0-based.</p> </li> <li> <p><code>csv</code> : Pour le format <code>csv</code>, la valeur <code>header</code> est consid\u00e9r\u00e9e     comme un flag <code>true</code>/<code>false</code> indiquant s'il faut reprendre les      noms de colonne \u00e0 la premi\u00e8re ligne.</p> </li> </ul> <code>connection</code> string Nom de connexion de laquelle tirer les param\u00e8tres de connexion.  Doit r\u00e9f\u00e9rencer une connexion d\u00e9finie dans le fichier de  configuration. <code>escape</code> boolean Flag <code>true</code>/<code>false</code> indiquant si les valeurs doivent \u00eatre \u00e9chappe\u00e9s.  L'option est active par d\u00e9faut pour les formats <code>xml</code>, <code>html</code> et  <code>xhtml</code>, mais sans effet pour les autres formats. <code>sanitize</code> string / map / pojo <p>R\u00e8gle de nettoyage de valeur. La valeur de la propri\u00e9t\u00e9 peut \u00eatre  soit:</p> <ul> <li> <p>une string, auquel cas Ewt s'attend \u00e0 ce que la valeur utilise      la m\u00eame syntaxe que pour les r\u00e8gles de validation de champs de      type \"rule\", par exemple <code>\"FORMATTING|BLOCKS\"</code></p> </li> <li> <p>un objet map ou array d\u00e9crivant des r\u00e8gles, par exemple:</p> <pre><code>[\n    { allowAttributes: \"class\", onElements: \"i\" },\n    { requireRelNofollowOnLinks: true },\n    { allowElements: [ \"i\" ] }\n]\n</code></pre> </li> <li> <p>un objet java (<code>pojo</code>) r\u00e9f\u00e9ren\u00e7ant des r\u00e8gles; l'objet en      question peut \u00eatre construit \u00e0 l'aide de la m\u00e9thode      <code>$secu.buildSanitizePolicy</code></p> <p>Exemple:</p> <pre><code>var sanitizePolicy = $secu.buildSanitizePolicy(\n    [\n        { allowAttributes: \"class\", onElements: \"i\" }\n    ]\n);\n\nreturn $sql.mselect(query, [ input ],\n                    { format: \"xhtml\", escape: false,\n                      sanitize: sanitizePolicy });\n</code></pre> </li> </ul> <p>Le param\u00e8tre peut \u00eatre <code>null</code>, auquel cas la m\u00e9thode applique un  mode par d\u00e9faut qui englobe tous les types d'\u00e9l\u00e9ments html  standards.</p> <p>Ne s'applique qu'aux formats <code>xml</code>, <code>html</code> et <code>xhtml</code>.</p> <code>attributes</code> map <p>Cette option permet d'indiquer un ou plusieurs attributs \u00e0 reprendre  dans l'\u00e9l\u00e9ment racine cr\u00e9\u00e9 dans le cas des formats <code>xml</code>, <code>html</code> ou  <code>xhtml</code>. L'objet doit se pr\u00e9senter sous la forme d'un dictionnaire  repr\u00e9sentant les noms et valeurs d'attributs (p.ex:  <code>{ \"class\": \"search-result\" }</code>)</p> <p>Remarque : les options <code>escape</code> et <code>sanitize</code> s'appliquent aux  valeurs des attributs (mais pas aux noms d'attributs)</p>"},{"location":"libs/%24sql/_mselect/#retour","title":"Retour","text":"<p>Par d\u00e9faut: matrice (ou tableau de tableaux) contenant le r\u00e9sultat.</p> <p>Le type de sortie d\u00e9pend grandement des options pass\u00e9es lors de l'appel.</p>"},{"location":"libs/%24sql/_mselect/#exemple","title":"Exemple","text":"<pre><code>var res = $sql.mselect(`select ${queryParts.select}\n                         from ${queryParts.from}\n                         where ${queryParts.where}\n                         order by ${queryParts.order}\n                         limit ${this.options.rowNumber}\n                         offset ${this.options.rowOffset}`,\n                        queryParts.inputs,\n                        { format: \"xml\", header: \"attr:name\",\n                          escape: true, sanitize: this.options.sanitizePolicy });\n</code></pre>"},{"location":"libs/%24sql/_msql/","title":"<code>$sql.msql</code>","text":""},{"location":"libs/%24sql/_msql/#description","title":"Description","text":"<p>Ex\u00e9cute une requ\u00eate SQL sur la base de donn\u00e9es et retourne une matrice  de r\u00e9sultats.</p> <p>Note</p> <p>Ewt met fournit une m\u00e9thode <code>$sql.mselect</code> qui est plus indiqu\u00e9e pour les extractions de valeurs.</p> <p>Il est recommand\u00e9 d'utiliser cette derni\u00e8re car le moteur n'a pas \u00e0 faire de contr\u00f4les suppl\u00e9mentaires pour d\u00e9terminer le type de la requ\u00eate.</p>"},{"location":"libs/%24sql/_msql/#syntaxe","title":"Syntaxe","text":"<p><code>$sql.msql( query [ , data [ , option ] ] )</code></p>"},{"location":"libs/%24sql/_msql/#parametres","title":"Param\u00e8tres","text":"<code>query</code> string / pojo Requ\u00eate \u00e0 \u00e9valuer OU r\u00e9f\u00e9rence de prepared statement obtenue par <code>$sql.prepareStatement</code>. <code>data</code> array / map <p>Jeu de donn\u00e9es \u00e0 passer \u00e0 la requ\u00eate (dans le cas o\u00f9 la requ\u00eate utilise la notation des prepared statements - ce qui est recommand\u00e9)</p> <p>Le param\u00e8tre peut prendre plusieurs formes en fonction de la requ\u00eate sur  laquelle il doit s'appliquer: </p> <ul> <li>Valeur <code>null</code>: La requ\u00eate n'attend pas de param\u00e8tre ou n'utilise      pas la syntaxe des prepared statement</li> <li>Tableau 1D: Dans ce cas, les valeurs du tableau sont reprises dans      l'ordre comme valeurs pour le prepared statement.</li> <li>Tableau 2D (tableau de tableau 1D) : La m\u00e9thode comprend que l'on      souhaite \u00e9valuer plusieurs fois la requ\u00eate. Elle boucle sur les lots      de donn\u00e9es dans l'ordre et \u00e9value la requ\u00eate avec chacun des lots      disponibles. Par exemple, si le tableau vaut <code>[[1,2],[3,4]]</code>,     la m\u00e9thode va \u00e9valuer la requ\u00eate 2 fois : la premi\u00e8re fois avec     les valeurs 1 et 2, et la seconde fois avec les valeur 3 et 4.</li> <li>Map : Ce cas s'applique si la requ\u00eate r\u00e9f\u00e9rence des param\u00e8tres nomm\u00e9s.</li> <li>Tableau de map : Cette syntaxe permet de passer plusieurs jeux de      donn\u00e9es \u00e0 la fois, en utilisant la notation avec des param\u00e8tres      nomm\u00e9s. Dans ce cas, la m\u00e9thode est \u00e9valu\u00e9e autant de fois qu'il y a      de maps dans le tableau.</li> </ul> <code>options</code> map Map d'options suppl\u00e9mentaires. Voir <code>$sql.mselect</code> pour le d\u00e9tail."},{"location":"libs/%24sql/_msql/#retour","title":"Retour","text":"<p>Matrice (ou tableau de tableaux) contenant le r\u00e9sultat.</p>"},{"location":"libs/%24sql/_msql/#exemple","title":"Exemple","text":"<pre><code>$sql.msql(\"select idPersonne, nom, prenom from Personne where nom=?\", [ 'Dupont' ]);\n</code></pre>"},{"location":"libs/%24sql/_prepareStatement/","title":"<code>$sql.prepareStatement</code>","text":""},{"location":"libs/%24sql/_prepareStatement/#description","title":"Description","text":"<p>Cr\u00e9e un prepared statement et retourne ce dernier en tant qu'objet <code>pojo</code>  en vue d'une utilisation future.</p>"},{"location":"libs/%24sql/_prepareStatement/#syntaxe","title":"Syntaxe","text":"<p><code>$sql.prepareStatement( query [ , options ] )</code></p>"},{"location":"libs/%24sql/_prepareStatement/#parametres","title":"Param\u00e8tres","text":"<code>query</code> string Requ\u00eate servant de base au prepared statement <code>options</code> map <p>Map d'options. Les options reconnues sont:</p> <code>autocommit</code> boolean Flag <code>true</code>/<code>false</code> permettant d'activer/d\u00e9sactiver l'auto-commit.  Par d\u00e9faut l'auto-commit est actif. <code>type</code> string Indication pass\u00e9e au processeur pour renseigner sur le type de  requ\u00eate. Le type de requ\u00eate influence sur la valeur de retour de  la requ\u00eate: une requ\u00eate de type SELECT retourne un resultset  contenant les donn\u00e9es recherch\u00e9es alors qu'une requ\u00eate de type  INSERT retourne les valeurs de cl\u00e9s auto-g\u00e9n\u00e9r\u00e9es. Ainsi, on  pourra indiquer que la requ\u00eate est de type \"insert\" au moyen  du terme <code>insert</code>. <code>connection</code> string Nom de connexion de laquelle ex\u00e9cuter la requ\u00eate. Le nom doit faire r\u00e9f\u00e9rence \u00e0 une connexion d\u00e9finie dans le fichier de  configuration"},{"location":"libs/%24sql/_prepareStatement/#retour","title":"Retour","text":"<p>La m\u00e9thode retourne l'identifiant g\u00e9n\u00e9r\u00e9 pour le prepared statement  r\u00e9f\u00e9renc\u00e9 en cache. L'identifiant en question est un UUID.</p>"},{"location":"libs/%24sql/_prepareStatement/#exemple","title":"Exemple","text":"<p>Exemple de base. Notez l'utilisation de <code>try</code>/<code>finally</code> et l'ex\u00e9cution de la  m\u00e9thode <code>$sql.releaseStatement</code> dans la clause  <code>finally</code> afin de s'assurer qu'elle soit ex\u00e9cut\u00e9e dans tous les cas.</p> <pre><code>var psref = $sql.prepareStatement(`select ?`);\ntry {\n  for (var i = 0; i &lt; 10; ++i) {\n    $logger.info($sql.select(psref, [ i ]));\n  }\n}\nfinally {\n  $sql.releaseStatement(psref);\n}\n</code></pre> <p>Exemple plus avanc\u00e9 dans lequel on g\u00e9n\u00e8re plusieurs prepared statements \u00e0 la fois.</p> <pre><code>var pskInfoVendeur = $sql.prepareStatement(`select ResumeText\n                                            from Vendeur\n                                            where idVendeur=?`::T),\n    pskTotArticles = $sql.prepareStatement(`select count(*)\n                                            from Article\n                                            where idVenteEchange=?\n                                              and idVendeur=?`::T),\n    pskNumLabels = $sql.prepareStatement(`select count(*)\n                                          from Article\n                                          where idVenteEchange=?\n                                            and idVendeur=?\n                                            and (? = 1 or coalesce(Printed, 0) = 0)\n                                            and Statut!='refuse'`::T);\ntry {\n    for (var row : listerVendeurs(venteechange, premiervendeur, derniervendeur, !allowreprint, '')) {\n      var nombreEtiquettes = $sql.select(pskNumLabels, [ (number) venteechange, row[0], (number) allowreprint ] );\n\n      if (filtreImpression &amp;&amp; nombreEtiquettes == 0) continue;\n\n      if (counter++ &gt; 0) $response.addContent(\",\");\n      $response.addContent(`{ \"vendeur\": ` &amp; $json.stringify($sql.select(pskInfoVendeur, [ row[0] ])) &amp;\n                           `, \"totarticles\": ` &amp; $json.stringify($sql.select(pskTotArticles, [ (number) venteechange, row[0] ] )) &amp;\n                           `, \"numlabels\": ` &amp; $json.stringify(nombreEtiquettes) &amp; `}`);\n    }\n}\nfinally {\n    $sql.releaseStatement([pskInfoVendeur, pskTotArticles, pskNumLabels]);\n}\n</code></pre>"},{"location":"libs/%24sql/_releaseStatement/","title":"<code>$sql.releaseStatement</code>","text":""},{"location":"libs/%24sql/_releaseStatement/#description","title":"Description","text":"<p>Lib\u00e8re le ou les prepared statements indiqu\u00e9s.</p>"},{"location":"libs/%24sql/_releaseStatement/#syntaxe","title":"Syntaxe","text":"<p><code>$sql.releaseStatement( statements )</code></p>"},{"location":"libs/%24sql/_releaseStatement/#parametres","title":"Param\u00e8tres","text":"<p><code>statements</code> pojo / array     R\u00e9f\u00e9rence de statement lib\u00e9rer. La valeur peut \u00eatre soit un objet <code>pojo</code>      unique, soit une table d'objets <code>pojo</code>. Dans ce second cas, toutes les     r\u00e9f\u00e9rences sont lib\u00e9r\u00e9es.</p>"},{"location":"libs/%24sql/_releaseStatement/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si toutes les r\u00e9f\u00e9rences ont pu \u00eatre lib\u00e9r\u00e9es,  sinon <code>false</code></p>"},{"location":"libs/%24sql/_releaseStatement/#exemple","title":"Exemple","text":"<p>Voir <code>$sql.prepareStatement</code></p>"},{"location":"libs/%24sql/_reset/","title":"<code>$sql.reset</code>","text":""},{"location":"libs/%24sql/_reset/#description","title":"Description","text":"<p>Force le renouvellement de connexion.</p> <p>Cette m\u00e9thode sert essentiellement au test du moteur, pour v\u00e9rifier qu'il  g\u00e8re correctement le renouvellement de connexion \u00e0 la base de donn\u00e9es.</p>"},{"location":"libs/%24sql/_reset/#syntaxe","title":"Syntaxe","text":"<p><code>$sql.reset( [ connection ] )</code></p>"},{"location":"libs/%24sql/_reset/#parametres","title":"Param\u00e8tres","text":"<code>connection</code> string Nom de connexion \u00e0 renouveler. Doit r\u00e9f\u00e9rencer une connexion d\u00e9finie  dans le fichier de configuration."},{"location":"libs/%24sql/_reset/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24sql/_reset/#exemple","title":"Exemple","text":"<pre><code>$sql.reset();\n</code></pre>"},{"location":"libs/%24sql/_select/","title":"<code>$sql.select</code>","text":""},{"location":"libs/%24sql/_select/#description","title":"Description","text":"<p>Variante de <code>$data.sql</code> sp\u00e9cifiquement orient\u00e9e pour les requ\u00eates  de type SELECT.</p> <p>Peut \u00e9galement \u00eatre utilis\u00e9 dans le cas de requ\u00eates INSERT ayant une clause RETURNING.</p>"},{"location":"libs/%24sql/_select/#syntaxe","title":"Syntaxe","text":"<p><code>$sql.select( query [ , data [ , option ] ] )</code></p>"},{"location":"libs/%24sql/_select/#parametres","title":"Param\u00e8tres","text":"<code>query</code> string / pojo Requ\u00eate \u00e0 \u00e9valuer OU r\u00e9f\u00e9rence de prepared statement obtenue par <code>$sql.prepareStatement</code>. <code>data</code> array / map <p>Jeu de donn\u00e9es \u00e0 passer \u00e0 la requ\u00eate (dans le cas o\u00f9 la requ\u00eate utilise la notation des prepared statements - ce qui est recommand\u00e9)</p> <p>Le param\u00e8tre peut prendre plusieurs formes en fonction de la requ\u00eate sur  laquelle il doit s'appliquer: </p> <ul> <li>Valeur <code>null</code>: La requ\u00eate n'attend pas de param\u00e8tre ou n'utilise      pas la syntaxe des prepared statement</li> <li>Tableau 1D: Dans ce cas, les valeurs du tableau sont reprises dans      l'ordre comme valeurs pour le prepared statement.</li> <li>Tableau 2D (tableau de tableau 1D) : La m\u00e9thode comprend que l'on      souhaite \u00e9valuer plusieurs fois la requ\u00eate. Elle boucle sur les lots      de donn\u00e9es dans l'ordre et \u00e9value la requ\u00eate avec chacun des lots      disponibles. Par exemple, si le tableau vaut <code>[[1,2],[3,4]]</code>,     la m\u00e9thode va \u00e9valuer la requ\u00eate 2 fois : la premi\u00e8re fois avec     les valeurs 1 et 2, et la seconde fois avec les valeur 3 et 4.</li> <li>Map : Ce cas s'applique si la requ\u00eate r\u00e9f\u00e9rence des param\u00e8tres nomm\u00e9s.</li> <li>Tableau de map : Cette syntaxe permet de passer plusieurs jeux de      donn\u00e9es \u00e0 la fois, en utilisant la notation avec des param\u00e8tres      nomm\u00e9s. Dans ce cas, la m\u00e9thode est \u00e9valu\u00e9e autant de fois qu'il y a      de maps dans le tableau.</li> </ul> <code>options</code> map <p>Map d'options suppl\u00e9mentaires. Les options reconnues sont:</p> <code>timeout</code> number Temps maximum (en secondes) autoris\u00e9 pour l'ex\u00e9cution de la requ\u00eate <code>nullSubst</code> any Valeur \u00e0 retourner si le r\u00e9sultat de la requ\u00eate est <code>null</code> <code>errorSubst</code> any Valeur \u00e0 retourner dans le cas o\u00f9 la requ\u00eate g\u00e9n\u00e8re une erreur  ou part en timeout <code>defval</code> any Cette option cumule les effets de <code>nullSubst</code> et de <code>errorSubst</code>:  elle permet de sp\u00e9cifier la valeur par d\u00e9faut \u00e0 retourner dans  le cas o\u00f9 la requ\u00eate g\u00e9n\u00e8re une erreur, part en timeout ou  engendre un r\u00e9sultat <code>null</code>. En cas de conflit entre les  propri\u00e9t\u00e9s, <code>nullSubst</code> et <code>errorSubst</code> priment sur <code>defval</code>. <code>connection</code> string Nom de connexion de laquelle tirer les param\u00e8tres de connexion.  Doit r\u00e9f\u00e9rencer une connexion d\u00e9finie dans le fichier de  configuration"},{"location":"libs/%24sql/_select/#retour","title":"Retour","text":"<p>Valeur de la premi\u00e8re valeur (premi\u00e8re colonne de la premi\u00e8re ligne) du  resultset retourn\u00e9 par la requ\u00eate.</p>"},{"location":"libs/%24sql/_select/#exemple","title":"Exemple","text":"<pre><code>$sql.select(\"select count(*) from Personne where nom=?\", [ 'Dupont' ])\n</code></pre>"},{"location":"libs/%24sql/_sql/","title":"<code>$sql.sql</code>","text":""},{"location":"libs/%24sql/_sql/#description","title":"Description","text":"<p>Ex\u00e9cute une requ\u00eate SQL de type quelconque (select, update, insert, delete, etc.) sur la base de donn\u00e9es et retourne la toute premi\u00e8re valeur du  resultset (pour autant que la requ\u00eate retourne des r\u00e9sultats).</p> <p>Note</p> <p>Ewt met fournit plusieurs m\u00e9thodes pour l'\u00e9valuation de requ\u00eates: <code>$sql.select</code>, <code>$sql.mselect</code>, <code>$sql.insert</code>, <code>$sql.update</code>, <code>$sql.create</code> et <code>$sql.delete</code> (ces deux derni\u00e8res sont en r\u00e9alit\u00e9 des  alias de <code>$sql.update</code>).</p> <p>Il est recommand\u00e9 d'utiliser ces derni\u00e8res car le moteur n'a pas \u00e0 faire de contr\u00f4les suppl\u00e9mentaires pour d\u00e9terminer le type de la requ\u00eate.</p>"},{"location":"libs/%24sql/_sql/#syntaxe","title":"Syntaxe","text":"<p><code>$sql.sql( query [ , data [ , options ] ] )</code></p>"},{"location":"libs/%24sql/_sql/#parametres","title":"Param\u00e8tres","text":"<code>query</code> string / pojo Requ\u00eate \u00e0 \u00e9valuer OU r\u00e9f\u00e9rence de prepared statement obtenue par <code>$sql.prepareStatement</code>. <code>data</code> array / map <p>Jeu de donn\u00e9es \u00e0 passer \u00e0 la requ\u00eate (dans le cas o\u00f9 la requ\u00eate utilise la notation des prepared statements - ce qui est recommand\u00e9)</p> <p>Le param\u00e8tre peut prendre plusieurs formes en fonction de la requ\u00eate sur  laquelle il doit s'appliquer: </p> <ul> <li>Valeur <code>null</code>: La requ\u00eate n'attend pas de param\u00e8tre ou n'utilise      pas la syntaxe des prepared statement</li> <li>Tableau 1D: Dans ce cas, les valeurs du tableau sont reprises dans      l'ordre comme valeurs pour le prepared statement.</li> <li>Tableau 2D (tableau de tableau 1D) : La m\u00e9thode comprend que l'on      souhaite \u00e9valuer plusieurs fois la requ\u00eate. Elle boucle sur les lots      de donn\u00e9es dans l'ordre et \u00e9value la requ\u00eate avec chacun des lots      disponibles. Par exemple, si le tableau vaut <code>[[1,2],[3,4]]</code>,     la m\u00e9thode va \u00e9valuer la requ\u00eate 2 fois : la premi\u00e8re fois avec     les valeurs 1 et 2, et la seconde fois avec les valeur 3 et 4.</li> <li>Map : Ce cas s'applique si la requ\u00eate r\u00e9f\u00e9rence des param\u00e8tres nomm\u00e9s.</li> <li>Tableau de map : Cette syntaxe permet de passer plusieurs jeux de      donn\u00e9es \u00e0 la fois, en utilisant la notation avec des param\u00e8tres      nomm\u00e9s. Dans ce cas, la m\u00e9thode est \u00e9valu\u00e9e autant de fois qu'il y a      de maps dans le tableau.</li> </ul> <code>options</code> map <p>Map d'options suppl\u00e9mentaires. Les options reconnues sont:</p> <code>timeout</code> number Temps maximum (en secondes) autoris\u00e9 pour l'ex\u00e9cution de la requ\u00eate <code>nullSubst</code> any Valeur \u00e0 retourner si le r\u00e9sultat de la  requ\u00eate est <code>null</code> <code>errorSubst</code> any Valeur \u00e0 retourner dans le cas o\u00f9 la requ\u00eate g\u00e9n\u00e8re une erreur  ou part en timeout <code>defval</code> any Cette option cumule les effets de <code>nullSubst</code> et de <code>errorSubst</code>:  elle permet de sp\u00e9cifier la valeur par d\u00e9faut \u00e0 retourner dans  le cas o\u00f9 la requ\u00eate g\u00e9n\u00e8re une erreur, part en timeout ou  engendre un r\u00e9sultat <code>null</code>. En cas de conflit entre les  propri\u00e9t\u00e9s, <code>nullSubst</code> et <code>errorSubst</code> priment sur <code>defval</code>. <code>connection</code> string Nom de connexion de laquelle tirer les param\u00e8tres de connexion.  Doit r\u00e9f\u00e9rencer une connexion d\u00e9finie dans le fichier de  configuration"},{"location":"libs/%24sql/_sql/#retour","title":"Retour","text":"<p>Premier r\u00e9sultat de la requ\u00eate (premi\u00e8re colonne de la premi\u00e8re ligne de la table de r\u00e9sultats) ou null si la requ\u00eate est de type update ou insert.</p>"},{"location":"libs/%24sql/_sql/#exemple","title":"Exemple","text":"<pre><code>$sql.sql(\"select count(*) from Personne where nom=?\", [ 'Dupont' ]);\n</code></pre>"},{"location":"libs/%24sql/_update/","title":"<code>$sql.update</code>","text":"<p>Alias: <code>$sql.create</code>, <code>$sql.delete</code></p>"},{"location":"libs/%24sql/_update/#description","title":"Description","text":"<p>Ex\u00e9cute une requ\u00eate de type UPDATE, CREATE ou DELETE et retourne le nombre  de lignes modifi\u00e9es.</p>"},{"location":"libs/%24sql/_update/#syntaxe","title":"Syntaxe","text":"<p><code>$sql.update( query [ , data [ , options ] ] )</code></p>"},{"location":"libs/%24sql/_update/#parametres","title":"Param\u00e8tres","text":"<code>query</code> string / pojo Requ\u00eate \u00e0 \u00e9valuer OU r\u00e9f\u00e9rence de prepared statement obtenue par <code>$sql.prepareStatement</code>. <code>data</code> array / map <p>Jeu de donn\u00e9es \u00e0 passer \u00e0 la requ\u00eate (dans le cas o\u00f9 la requ\u00eate utilise la notation des prepared statements - ce qui est recommand\u00e9)</p> <p>Le param\u00e8tre peut prendre plusieurs formes en fonction de la requ\u00eate sur  laquelle il doit s'appliquer: </p> <ul> <li>Valeur <code>null</code>: La requ\u00eate n'attend pas de param\u00e8tre ou n'utilise      pas la syntaxe des prepared statement</li> <li>Tableau 1D: Dans ce cas, les valeurs du tableau sont reprises dans      l'ordre comme valeurs pour le prepared statement.</li> <li>Tableau 2D (tableau de tableau 1D) : La m\u00e9thode comprend que l'on      souhaite \u00e9valuer plusieurs fois la requ\u00eate. Elle boucle sur les lots      de donn\u00e9es dans l'ordre et \u00e9value la requ\u00eate avec chacun des lots      disponibles. Par exemple, si le tableau vaut <code>[[1,2],[3,4]]</code>,     la m\u00e9thode va \u00e9valuer la requ\u00eate 2 fois : la premi\u00e8re fois avec     les valeurs 1 et 2, et la seconde fois avec les valeur 3 et 4.</li> <li>Map : Ce cas s'applique si la requ\u00eate r\u00e9f\u00e9rence des param\u00e8tres nomm\u00e9s.</li> <li>Tableau de map : Cette syntaxe permet de passer plusieurs jeux de      donn\u00e9es \u00e0 la fois, en utilisant la notation avec des param\u00e8tres      nomm\u00e9s. Dans ce cas, la m\u00e9thode est \u00e9valu\u00e9e autant de fois qu'il y a      de maps dans le tableau.</li> </ul> <code>options</code> map <p>Map d'options suppl\u00e9mentaires. Les options reconnues sont:</p> <code>timeout</code> number Temps maximum (en secondes) autoris\u00e9 pour l'ex\u00e9cution de la requ\u00eate <code>connection</code> string Nom de connexion de laquelle tirer les param\u00e8tres de connexion.  Doit r\u00e9f\u00e9rencer une connexion d\u00e9finie dans le fichier de  configuration"},{"location":"libs/%24sql/_update/#retour","title":"Retour","text":"<p>Nombre de lignes modifi\u00e9es.</p>"},{"location":"libs/%24sql/_update/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/","title":"<code>$string</code>","text":"<p>Alias: <code>$str</code></p> <p>M\u00e9thodes de gestion des cha\u00eenes de caract\u00e8res</p>"},{"location":"libs/%24string/_camelcase/","title":"<code>$string.camelcase</code>","text":""},{"location":"libs/%24string/_camelcase/#description","title":"Description","text":"<p>Convertit une string en version camelized (les espaces et s\u00e9parateurs sont  supprim\u00e9s et suivi d'une majuscule). Ainsi \"ceci est un cerf-volant\"  devient \"ceciEstUnCerfVolant\".</p>"},{"location":"libs/%24string/_camelcase/#syntaxe","title":"Syntaxe","text":"<p><code>$string.camelcase( string )</code></p>"},{"location":"libs/%24string/_camelcase/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String \u00e0 traiter"},{"location":"libs/%24string/_camelcase/#retour","title":"Retour","text":"<p>Valeur string convertie en notation camelized.</p>"},{"location":"libs/%24string/_camelcase/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_camelize/","title":"<code>$string.camelize</code>","text":""},{"location":"libs/%24string/_camelize/#description","title":"Description","text":"<p>...</p>"},{"location":"libs/%24string/_camelize/#syntaxe","title":"Syntaxe","text":"<p><code>$string.camelize(...)</code></p>"},{"location":"libs/%24string/_camelize/#parametres","title":"Param\u00e8tres","text":"<code>param</code> string Description"},{"location":"libs/%24string/_camelize/#retour","title":"Retour","text":"<p>...</p>"},{"location":"libs/%24string/_camelize/#exemple","title":"Exemple","text":"<pre><code>$string.camelize(...)\n</code></pre>"},{"location":"libs/%24string/_charAt/","title":"<code>$string.charAt</code>","text":""},{"location":"libs/%24string/_charAt/#description","title":"Description","text":"<p>Extrait le n-i\u00e8me caract\u00e8re de la cha\u00eene.</p> <p>La m\u00e9thode est \u00e9quivalente \u00e0 <code>$string.substring(string, pos, pos + 1)</code>.</p>"},{"location":"libs/%24string/_charAt/#syntaxe","title":"Syntaxe","text":"<p><code>$string.charAt( string , pos )</code></p>"},{"location":"libs/%24string/_charAt/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String de base <code>pos</code> number Position du caract\u00e8re \u00e0 extraire."},{"location":"libs/%24string/_charAt/#retour","title":"Retour","text":"<p>Caract\u00e8re situ\u00e9 \u00e0 la position indiqu\u00e9e</p>"},{"location":"libs/%24string/_charAt/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_chunk/","title":"<code>$string.ckunk</code>","text":""},{"location":"libs/%24string/_chunk/#description","title":"Description","text":"<p>D\u00e9coupe une cha\u00eene de caract\u00e8res en morceaux d'une longueur donn\u00e9e. La  m\u00e9thode retourne un tableau contenant les diff\u00e9rents morceaux g\u00e9n\u00e9r\u00e9s.</p> <p>Il est possible de demander \u00e0 la m\u00e9thode de produire une cha\u00eene de  caract\u00e8res dans laquelle les morceaux sont s\u00e9par\u00e9s par un s\u00e9parateur donn\u00e9.</p>"},{"location":"libs/%24string/_chunk/#syntaxe","title":"Syntaxe","text":"<p><code>$string.ckunk( string , chunkLength [ , options ] )</code></p>"},{"location":"libs/%24string/_chunk/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String \u00e0 traiter <code>chunkLength</code> integer Longueur des morceaux \u00e0 produire <code>options</code> map <p>Options de d\u00e9coupe. Les options reconnues sont:</p> <code>chunkSeparator</code> string Si non <code>null</code> et non vide, cette option demande \u00e0 la m\u00e9thode de  produire non pas un tableau mais une cha\u00eene de caract\u00e8res en sortie.  Les morceaux sont alors s\u00e9par\u00e9s au moyen du d\u00e9limiteur indiqu\u00e9."},{"location":"libs/%24string/_chunk/#retour","title":"Retour","text":"<p>Tableau ou string en fonction de l'option <code>chunkSeparator</code> utilis\u00e9e.</p>"},{"location":"libs/%24string/_chunk/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_contains/","title":"<code>$string.contains</code>","text":""},{"location":"libs/%24string/_contains/#description","title":"Description","text":"<p>Indique si une string contient la sous-cha\u00eene indiqu\u00e9e.</p>"},{"location":"libs/%24string/_contains/#syntaxe","title":"Syntaxe","text":"<p><code>$string.contains( string , substring )</code></p>"},{"location":"libs/%24string/_contains/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String de base <code>substring</code> string Sous-cha\u00eene \u00e0 rechercher dans string"},{"location":"libs/%24string/_contains/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si string contient substring, sinon <code>false</code></p>"},{"location":"libs/%24string/_contains/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_decodeURIComponent/","title":"<code>$string.decodeURIComponent</code>","text":""},{"location":"libs/%24string/_decodeURIComponent/#description","title":"Description","text":"<p>Effectue un URL-decodage.</p>"},{"location":"libs/%24string/_decodeURIComponent/#syntaxe","title":"Syntaxe","text":"<p><code>$string.decodeURIComponent( string )</code></p>"},{"location":"libs/%24string/_decodeURIComponent/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String \u00e0 traiter"},{"location":"libs/%24string/_decodeURIComponent/#retour","title":"Retour","text":"<p>Valeur string d\u00e9cod\u00e9e.</p>"},{"location":"libs/%24string/_decodeURIComponent/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_encodeURIComponent/","title":"<code>$string.encodeURIComponent</code>","text":""},{"location":"libs/%24string/_encodeURIComponent/#description","title":"Description","text":"<p>Effectue un URL-encodage.</p>"},{"location":"libs/%24string/_encodeURIComponent/#syntaxe","title":"Syntaxe","text":"<p><code>$string.encodeURIComponent( string )</code></p>"},{"location":"libs/%24string/_encodeURIComponent/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String \u00e0 traiter"},{"location":"libs/%24string/_encodeURIComponent/#retour","title":"Retour","text":"<p>Valeur string encod\u00e9e.</p>"},{"location":"libs/%24string/_encodeURIComponent/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_endsWith/","title":"<code>$string.endsWith</code>","text":""},{"location":"libs/%24string/_endsWith/#description","title":"Description","text":"<p>Indique si une string se termine avec la sous-cha\u00eene indiqu\u00e9e</p>"},{"location":"libs/%24string/_endsWith/#syntaxe","title":"Syntaxe","text":"<p><code>$string.endsWith( string , substring )</code></p>"},{"location":"libs/%24string/_endsWith/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String de base <code>substring</code> string Valeur de fin \u00e0 tester"},{"location":"libs/%24string/_endsWith/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si <code>string</code> se termine par <code>substring</code>, sinon <code>false</code></p>"},{"location":"libs/%24string/_endsWith/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_find/","title":"<code>$string.find</code>","text":""},{"location":"libs/%24string/_find/#description","title":"Description","text":"<p>Effectue une recherche par expression r\u00e9guli\u00e8re au sein d'une cha\u00eene et  retourne les groupes trouv\u00e9s sous forme de tableau. Le r\u00e9sultat de la m\u00e9thode peut \u00eatre assez d\u00e9taill\u00e9 en fonction du type de recherche  effectu\u00e9e. Ainsi, dans le cas de la cha\u00eene \"ceci est un test\" et de  l'expression \"((e)s)\", la m\u00e9thode retournera l'objet suivant:</p> <pre><code>[\n    [\n        { \"start\": 5, \"end\": 7, \"group\": \"es\" },\n        { \"start\": 5, \"end\": 6, \"group\": \"e\" }\n    ],\n    [\n        { \"start\": 13, \"end\": 15, \"group\": \"es\" },\n        { \"start\": 13, \"end\": 14, \"group\": \"e\" }\n    ]\n]\n</code></pre> <p>Les deux sous-tableaux correspondent aux deux occurrences de la sous-cha\u00eene  \"es\". Au sein de chaque occurrence, on trouve deux map d\u00e9crivant  respectivement la sous-cha\u00eene \"es\" et la sous-cha\u00eene \"e\" (du fait des  parenth\u00e8ses plac\u00e9es autour du \"e\" dans l'expression r\u00e9guli\u00e8re).</p>"},{"location":"libs/%24string/_find/#syntaxe","title":"Syntaxe","text":"<p><code>$string.find( string , regex )</code></p>"},{"location":"libs/%24string/_find/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String \u00e0 traiter <code>regex</code> string Expression r\u00e9guli\u00e8re de recherche. L'expression r\u00e9guli\u00e8re doit  utiliser la syntaxe java. En particulier, penser \u00e0 \u00e9chapper les  \"backslash\". Par exemple, pour d\u00e9signer un entier, on utilisera  la notation <code>\\\\d</code> et non <code>\\d</code>."},{"location":"libs/%24string/_find/#retour","title":"Retour","text":"<p>Tableau contenant les occurrences trouv\u00e9es.</p>"},{"location":"libs/%24string/_find/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_format/","title":"<code>$string.format</code>","text":""},{"location":"libs/%24string/_format/#description","title":"Description","text":"<p>Formatage de valeur.</p> <p>La m\u00e9thode <code>$cal.format</code> permet \u00e9galement de formater  une date, une heure ou un timestamp \u00e0 l'aide d'une syntaxe plus simple.</p>"},{"location":"libs/%24string/_format/#syntaxe","title":"Syntaxe","text":"<p><code>$string.format( value , formatting )</code></p>"},{"location":"libs/%24string/_format/#parametres","title":"Param\u00e8tres","text":"<code>value</code> string Valeur \u00e0 formater <code>formatting</code> map <p>R\u00e8gles de formatage. L'objet doit \u00eatre un map avec les \u00e9l\u00e9ments suivants:</p> <code>type</code> Type de donn\u00e9e \u00e0 traiter. Les types sont les m\u00eames que ceux d\u00e9finis dans les r\u00e8gles de formatage de la descript (DATE, TIME, TIMESTAMP,  INTEGER, INT, SMALLINT, BIGINT, FLOAT, REAL, DOUBLE, NUMERIC,  DECIMAL). Le type est optionnel mais nettement recommand\u00e9 pour \u00e9viter  les mauvaises interpr\u00e9tation de valeur et pour des questions de  performances: s'il n'est pas indiqu\u00e9, la m\u00e9thode effectuera des  essais de conversion en entier et en double pour d\u00e9terminer le type.  Ces tentatives de conversion peuvent \u00eatre co\u00fbteuses en termes de  performances. <code>mode</code> Mode de formatage. Ne concerne que les types repr\u00e9sentant une valeur num\u00e9rique. Actuellement seule la valeur \"percent\" est prise en compte  et indique que la valeur est \u00e0 repr\u00e9senter en pourcents <code>pattern</code> Pattern de formatage <code>locale</code> Optionnel, locale \u00e0 prendre en compte.  La locale est \u00e0 sp\u00e9cifier selon la syntaxe IETF BCP 47, par exemple  \"fr\", fr-CH\", \"en-US\", etc."},{"location":"libs/%24string/_format/#retour","title":"Retour","text":"<p>Valeur format\u00e9e</p>"},{"location":"libs/%24string/_format/#exemple","title":"Exemple","text":"<pre><code>$str.format(-54321, { type: \"FLOAT\", pattern: \"#0.00\" });\n// -54321.00\n\n$str.format($cal.time(), { type: \"TIME\", pattern: \"H' heures 'mm\" });\n// 19 heures 57\n\n$str.format(#timestamp, { type: \"TIMESTAMP\", pattern: \"dd/MM/yyyy HH:mm:ss\" });\n// 06/02/2024 19:57:06\n\n$str.format(margeVenteEchange, { type: \"FLOAT\", pattern: \"0\", mode: \"percent\" }) &amp; \"%\"\n// 13%\n\n$str.format(1234.56, { type: \"DECIMAL\", pattern: \"#,##0.00\", locale: \"fr-ch\" });\n// 1'234.56\n</code></pre>"},{"location":"libs/%24string/_indexOf/","title":"<code>$string.indexOf</code>","text":""},{"location":"libs/%24string/_indexOf/#description","title":"Description","text":"<p>Indique la position d'une sous-cha\u00eene dans une string de base</p>"},{"location":"libs/%24string/_indexOf/#syntaxe","title":"Syntaxe","text":"<p><code>$string.indexOf( string , substring [ , fromIndex ] )</code></p>"},{"location":"libs/%24string/_indexOf/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String de base <code>substring</code> string Sous-cha\u00eene dont on souhaite conna\u00eetre la position dans string <code>fromIndex</code> number Position de d\u00e9part (par d\u00e9faut: 0)"},{"location":"libs/%24string/_indexOf/#retour","title":"Retour","text":"<p>La position de substring dans string (0-based position) ou -1 si aucune occurrence n'est pr\u00e9sente.</p>"},{"location":"libs/%24string/_indexOf/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_isEmpty/","title":"<code>$string.isEmpty</code>","text":""},{"location":"libs/%24string/_isEmpty/#description","title":"Description","text":"<p>Indique si une string est vide.</p>"},{"location":"libs/%24string/_isEmpty/#syntaxe","title":"Syntaxe","text":"<p><code>$string.isEmpty( string [ , defaultValue ] )</code></p>"},{"location":"libs/%24string/_isEmpty/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String \u00e0 checker <code>defaultValue</code> any Valeur \u00e0 retourner dans le cas o\u00f9 la valeur est <code>null</code>"},{"location":"libs/%24string/_isEmpty/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si <code>string</code> est une cha\u00eene vide, sinon <code>false</code>.  Retourne la valeur par d\u00e9faut si <code>string</code> est null.</p>"},{"location":"libs/%24string/_isEmpty/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_left/","title":"<code>$string.left</code>","text":""},{"location":"libs/%24string/_left/#description","title":"Description","text":"<p>Extrait les n premiers caract\u00e8res de la string.</p>"},{"location":"libs/%24string/_left/#syntaxe","title":"Syntaxe","text":"<p><code>$string.left( string , num )</code></p>"},{"location":"libs/%24string/_left/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String de base <code>num</code> number Nombre de caract\u00e8res \u00e0 extraire"},{"location":"libs/%24string/_left/#retour","title":"Retour","text":"<p>D\u00e9but de la string de base.</p>"},{"location":"libs/%24string/_left/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_leftOf/","title":"<code>$string.leftOf</code>","text":""},{"location":"libs/%24string/_leftOf/#description","title":"Description","text":"<p>Extrait le texte situ\u00e9 \u00e0 gauche du d\u00e9limiteur. Retourne une cha\u00eene vide si le d\u00e9limiteur n'est pas pr\u00e9sent dans le texte.</p>"},{"location":"libs/%24string/_leftOf/#syntaxe","title":"Syntaxe","text":"<p><code>$string.leftOf( string , delimiter [ , reverse ] )</code></p>"},{"location":"libs/%24string/_leftOf/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String de base <code>delimiter</code> string D\u00e9limiteur \u00e0 rechercher <code>reverse</code> boolean Flag <code>true</code>/<code>false</code> indiquant de commencer la recherche par la fin  (retourne tout le texte qui se trouve \u00e0 gauche du dernier d\u00e9limiteur)"},{"location":"libs/%24string/_leftOf/#retour","title":"Retour","text":"<p>Partie situ\u00e9e \u00e0 gauche du d\u00e9limiteur dans le texte</p>"},{"location":"libs/%24string/_leftOf/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_length/","title":"<code>$string.length</code>","text":""},{"location":"libs/%24string/_length/#description","title":"Description","text":"<p>Retourne la longueur d'une string (nombre de caract\u00e8res).</p>"},{"location":"libs/%24string/_length/#syntaxe","title":"Syntaxe","text":"<p><code>$string.length( string )</code></p>"},{"location":"libs/%24string/_length/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String \u00e0 mesurer"},{"location":"libs/%24string/_length/#retour","title":"Retour","text":"<p>Longueur de la string. Retourne une valeur <code>null</code> si la string n'est pas d\u00e9finie.</p>"},{"location":"libs/%24string/_length/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_lower/","title":"<code>$string.lower</code>","text":""},{"location":"libs/%24string/_lower/#description","title":"Description","text":"<p>...</p>"},{"location":"libs/%24string/_lower/#syntaxe","title":"Syntaxe","text":"<p><code>$string.lower(...)</code></p>"},{"location":"libs/%24string/_lower/#parametres","title":"Param\u00e8tres","text":"<code>param</code> string Description"},{"location":"libs/%24string/_lower/#retour","title":"Retour","text":"<p>...</p>"},{"location":"libs/%24string/_lower/#exemple","title":"Exemple","text":"<pre><code>$string.lower(...)\n</code></pre>"},{"location":"libs/%24string/_lowercase/","title":"<code>$string.lowercase</code>","text":""},{"location":"libs/%24string/_lowercase/#description","title":"Description","text":"<p>Convertit une string en minuscules</p>"},{"location":"libs/%24string/_lowercase/#syntaxe","title":"Syntaxe","text":"<p><code>$string.lowercase( string )</code></p>"},{"location":"libs/%24string/_lowercase/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String \u00e0 traiter"},{"location":"libs/%24string/_lowercase/#retour","title":"Retour","text":"<p>Valeur <code>string</code> convertie en minuscules</p>"},{"location":"libs/%24string/_lowercase/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_ltrim/","title":"<code>$string.ltrim</code>","text":""},{"location":"libs/%24string/_ltrim/#description","title":"Description","text":"<p>Effectue un trim gauche de la string</p>"},{"location":"libs/%24string/_ltrim/#syntaxe","title":"Syntaxe","text":"<p><code>$string.ltrim( string )</code></p>"},{"location":"libs/%24string/_ltrim/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String \u00e0 traiter"},{"location":"libs/%24string/_ltrim/#retour","title":"Retour","text":"<p>String d\u00e9barrass\u00e9e des espaces en d\u00e9but de cha\u00eene.</p>"},{"location":"libs/%24string/_ltrim/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_match/","title":"<code>$string.match</code>","text":"<p>Alias: <code>$string.matches</code></p>"},{"location":"libs/%24string/_match/#description","title":"Description","text":"<p>V\u00e9rifie que la string est bien v\u00e9rifi\u00e9e par l'expression r\u00e9guli\u00e8re indiqu\u00e9e.</p>"},{"location":"libs/%24string/_match/#syntaxe","title":"Syntaxe","text":"<p><code>$string.match( string , regex )</code></p>"},{"location":"libs/%24string/_match/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String \u00e0 traiter <code>regex</code> string Expression r\u00e9guli\u00e8re de contr\u00f4le"},{"location":"libs/%24string/_match/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si la regex correspond \u00e0 la string, sinon <code>false</code></p>"},{"location":"libs/%24string/_match/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_matches/","title":"<code>$string.matches</code>","text":""},{"location":"libs/%24string/_matches/#description","title":"Description","text":"<p>...</p>"},{"location":"libs/%24string/_matches/#syntaxe","title":"Syntaxe","text":"<p><code>$string.matches(...)</code></p>"},{"location":"libs/%24string/_matches/#parametres","title":"Param\u00e8tres","text":"<code>param</code> string Description"},{"location":"libs/%24string/_matches/#retour","title":"Retour","text":"<p>...</p>"},{"location":"libs/%24string/_matches/#exemple","title":"Exemple","text":"<pre><code>$string.matches(...)\n</code></pre>"},{"location":"libs/%24string/_reencode/","title":"<code>$string.reencode</code>","text":""},{"location":"libs/%24string/_reencode/#description","title":"Description","text":"<p>Change l'encoding d'une cha\u00eene de caract\u00e8re.</p>"},{"location":"libs/%24string/_reencode/#syntaxe","title":"Syntaxe","text":"<p><code>$string.reencode( value , charsetIn , charsetOut )</code></p>"},{"location":"libs/%24string/_reencode/#parametres","title":"Param\u00e8tres","text":"<code>value</code> string String \u00e0 convertir <code>charsetIn</code> string Charset de la string \u00e0 traiter <code>charsetOut</code> string Charset de sortie"},{"location":"libs/%24string/_reencode/#retour","title":"Retour","text":"<p>Cha\u00eene de caract\u00e8res convertie</p>"},{"location":"libs/%24string/_reencode/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_replace/","title":"<code>$string.replace</code>","text":""},{"location":"libs/%24string/_replace/#description","title":"Description","text":"<p>Remplace toutes les occurrences d'une sous-cha\u00eene par la valeur indiqu\u00e9e.</p>"},{"location":"libs/%24string/_replace/#syntaxe","title":"Syntaxe","text":"<p><code>$string.replace( string , target , replacement )</code></p>"},{"location":"libs/%24string/_replace/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String \u00e0 traiter <code>target</code> string Sous-cha\u00eene \u00e0 remplacer <code>replacement</code> string Sous-cha\u00eene de remplacement"},{"location":"libs/%24string/_replace/#retour","title":"Retour","text":"<p>Nouvelle string contenant les remplacements effectu\u00e9s</p>"},{"location":"libs/%24string/_replace/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_replaceAll/","title":"<code>$string.replaceAll</code>","text":""},{"location":"libs/%24string/_replaceAll/#description","title":"Description","text":"<p>Remplace toutes les occurrences de la regex dans la string par la valeur de remplacement.</p>"},{"location":"libs/%24string/_replaceAll/#syntaxe","title":"Syntaxe","text":"<p><code>$string.replaceAll( string , regex , replacement )</code></p>"},{"location":"libs/%24string/_replaceAll/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String \u00e0 traiter <code>regex</code> string Expression r\u00e9guli\u00e8re de recherche, selon la notation java (avec \u00e9chappement des \"\\\") <code>replacement</code> string Valeur de remplacement"},{"location":"libs/%24string/_replaceAll/#retour","title":"Retour","text":"<p>Nouvelle cha\u00eene int\u00e9grant les remplacements.</p>"},{"location":"libs/%24string/_replaceAll/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_replaceFirst/","title":"<code>$string.replaceFirst</code>","text":""},{"location":"libs/%24string/_replaceFirst/#description","title":"Description","text":"<p>Remplace la premi\u00e8re occurrence de la regex dans la string par la valeur de remplacement.</p>"},{"location":"libs/%24string/_replaceFirst/#syntaxe","title":"Syntaxe","text":"<p><code>$string.replaceFirst( string , regex , replacement )</code></p>"},{"location":"libs/%24string/_replaceFirst/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String \u00e0 traiter <code>regex</code> string Expression r\u00e9guli\u00e8re de recherche, selon la notation java (avec \u00e9chappement des \"\\\") <code>replacement</code> string Valeur de remplacement"},{"location":"libs/%24string/_replaceFirst/#retour","title":"Retour","text":"<p>Nouvelle cha\u00eene int\u00e9grant le remplacement.</p>"},{"location":"libs/%24string/_replaceFirst/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_right/","title":"<code>$string.right</code>","text":""},{"location":"libs/%24string/_right/#description","title":"Description","text":"<p>Extrait les n derniers caract\u00e8res de la string.</p>"},{"location":"libs/%24string/_right/#syntaxe","title":"Syntaxe","text":"<p><code>$string.right( string , num )</code></p>"},{"location":"libs/%24string/_right/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String de base <code>num</code> number Nombre de caract\u00e8res \u00e0 extraire"},{"location":"libs/%24string/_right/#retour","title":"Retour","text":"<p>Fin de la string de base</p>"},{"location":"libs/%24string/_right/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_rightOf/","title":"<code>$string.rightOf</code>","text":""},{"location":"libs/%24string/_rightOf/#description","title":"Description","text":"<p>Extrait le texte situ\u00e9 \u00e0 droite du d\u00e9limiteur. Retourne une cha\u00eene vide si le d\u00e9limiteur n'est pas pr\u00e9sent dans le texte.</p>"},{"location":"libs/%24string/_rightOf/#syntaxe","title":"Syntaxe","text":"<p><code>$string.rightOf( string , delimiter [ , reverse ] )</code></p>"},{"location":"libs/%24string/_rightOf/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String de base <code>delimiter</code> string D\u00e9limiteur \u00e0 rechercher <code>reverse</code> boolean Flag <code>true</code>/<code>false</code> indiquant de commencer la recherche par la fin (retourne tout le texte qui se trouve \u00e0 droite du dernier d\u00e9limiteur)"},{"location":"libs/%24string/_rightOf/#retour","title":"Retour","text":"<p>Partie situ\u00e9e \u00e0 droite du d\u00e9limiteur dans le texte</p>"},{"location":"libs/%24string/_rightOf/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_rtrim/","title":"<code>$string.rtrim</code>","text":""},{"location":"libs/%24string/_rtrim/#description","title":"Description","text":"<p>Effectue un trim droit de la string</p>"},{"location":"libs/%24string/_rtrim/#syntaxe","title":"Syntaxe","text":"<p><code>$string.rtrim( string )</code></p>"},{"location":"libs/%24string/_rtrim/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String \u00e0 traiter"},{"location":"libs/%24string/_rtrim/#retour","title":"Retour","text":"<p>String d\u00e9barrass\u00e9e des espaces en fin de cha\u00eene</p>"},{"location":"libs/%24string/_rtrim/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_split/","title":"<code>$string.split</code>","text":""},{"location":"libs/%24string/_split/#description","title":"Description","text":"<p>D\u00e9coupe une string en morceaux au d\u00e9limiteur indiqu\u00e9.</p> <p>Pour le d\u00e9tail de fonctionnement, se r\u00e9f\u00e9rer \u00e0 la javadoc sur la fonction  split.</p>"},{"location":"libs/%24string/_split/#syntaxe","title":"Syntaxe","text":"<p><code>$string.split( string , delimiter [ , limit ] )</code></p>"},{"location":"libs/%24string/_split/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String \u00e0 traiter <code>delimiter</code> string D\u00e9limiteur (expression r\u00e9guli\u00e8re) <code>limit</code> number Nombre max d'it\u00e9ration du pattern, correspondant de facto \u00e0 la taille du tableau en sortie."},{"location":"libs/%24string/_split/#retour","title":"Retour","text":"<p>Tableau de strings</p>"},{"location":"libs/%24string/_split/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_startsWith/","title":"<code>$string.startsWith</code>","text":""},{"location":"libs/%24string/_startsWith/#description","title":"Description","text":"<p>Indique si une string commence avec la sous-cha\u00eene indiqu\u00e9e</p>"},{"location":"libs/%24string/_startsWith/#syntaxe","title":"Syntaxe","text":"<p><code>$string.startsWith( string , substring )</code></p>"},{"location":"libs/%24string/_startsWith/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String de base <code>substring</code> string Valeur de d\u00e9but \u00e0 tester"},{"location":"libs/%24string/_startsWith/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si <code>string</code> d\u00e9bute par <code>substring</code>, sinon <code>false</code></p>"},{"location":"libs/%24string/_startsWith/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_substring/","title":"<code>$string.substring</code>","text":""},{"location":"libs/%24string/_substring/#description","title":"Description","text":"<p>Extrait une sous-cha\u00eene de la string indiqu\u00e9e.</p>"},{"location":"libs/%24string/_substring/#syntaxe","title":"Syntaxe","text":"<p><code>$string.substring( string , begIndex [ , endIndex ] )</code></p>"},{"location":"libs/%24string/_substring/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String de base <code>begIndex</code> number Position de d\u00e9part (incluse) <code>endIndex</code> number Position de fin (exclue). Si le param\u00e8tre est omis, le <code>substring</code>  s'\u00e9tend jusqu'\u00e0 la fin de la cha\u00eene"},{"location":"libs/%24string/_substring/#retour","title":"Retour","text":"<p>Sous-cha\u00eene correspondant aux limites indiqu\u00e9es.</p>"},{"location":"libs/%24string/_substring/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_toArray/","title":"<code>$string.toArray</code>","text":""},{"location":"libs/%24string/_toArray/#description","title":"Description","text":"<p>Convertit une string en tableau de caract\u00e8res.</p>"},{"location":"libs/%24string/_toArray/#syntaxe","title":"Syntaxe","text":"<p><code>$string.toArray( string )</code></p>"},{"location":"libs/%24string/_toArray/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String \u00e0 traiter"},{"location":"libs/%24string/_toArray/#retour","title":"Retour","text":"<p>Tableau de caract\u00e8res</p>"},{"location":"libs/%24string/_toArray/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24string/_toContext/","title":"<code>$string.toContext</code>","text":""},{"location":"libs/%24string/_toContext/#description","title":"Description","text":"<p>Convertit une <code>string</code> d\u00e9crivant un contexte de dossier en objet <code>map</code>  d\u00e9crivant le m\u00eame contexte.</p>"},{"location":"libs/%24string/_toContext/#syntaxe","title":"Syntaxe","text":"<p><code>$string.toContext( string )</code></p>"},{"location":"libs/%24string/_toContext/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String \u00e0 traiter"},{"location":"libs/%24string/_toContext/#retour","title":"Retour","text":"<p>Objet <code>map</code> d\u00e9crivant le contexte fourni en entr\u00e9e.</p>"},{"location":"libs/%24string/_toContext/#exemple","title":"Exemple","text":"<pre><code>$logger.info($str.toContext(\"mymodel[123]\").modelName); // affiche \"mymodel\"\n</code></pre>"},{"location":"libs/%24string/_trim/","title":"<code>$string.trim</code>","text":""},{"location":"libs/%24string/_trim/#description","title":"Description","text":"<p>Effectue un trim de la string.</p> <p>Cette m\u00e9thode est raccourci pour <code>$string.ltrim($string.rtrim(value))</code>.</p>"},{"location":"libs/%24string/_trim/#syntaxe","title":"Syntaxe","text":"<p><code>$string.trim( string )</code></p>"},{"location":"libs/%24string/_trim/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String \u00e0 traiter"},{"location":"libs/%24string/_trim/#retour","title":"Retour","text":"<p>String d\u00e9barrass\u00e9 des espaces en d\u00e9but et fin de cha\u00eene.</p>"},{"location":"libs/%24string/_trim/#exemple","title":"Exemple","text":"<pre><code>$string.trim(\"  ceci est un test \");\n</code></pre>"},{"location":"libs/%24string/_unformat/","title":"<code>$string.unformat</code>","text":""},{"location":"libs/%24string/_unformat/#description","title":"Description","text":"<p>Retire le formatage d'une valeur.</p>"},{"location":"libs/%24string/_unformat/#syntaxe","title":"Syntaxe","text":"<p><code>$string.unformat( value , formatting )</code></p>"},{"location":"libs/%24string/_unformat/#parametres","title":"Param\u00e8tres","text":"<code>value</code> string Valeur \u00e0 traiter <code>formatting</code> map <p>R\u00e8gles de formatage. L'objet doit \u00eatre un map avec les \u00e9l\u00e9ments suivants:</p> <code>type</code> Type de donn\u00e9e \u00e0 traiter. Les types sont les m\u00eames que ceux d\u00e9finis dans les r\u00e8gles de formatage de la descript (DATE, TIME, TIMESTAMP,  INTEGER, INT, SMALLING, BIGINT, FLOAT, REAL, DOUBLE, NUMERIC,  DECIMAL) <code>mode</code> Mode de formatage. Ne concerne que les types repr\u00e9sentant une valeur num\u00e9rique. Actuellement seule la valeur \"percent\" est prise en compte  et indique que la valeur est \u00e0 repr\u00e9senter en pourcents <code>pattern</code> Pattern de formatage <code>locale</code> Optionnel, locale \u00e0 prendre en compte"},{"location":"libs/%24string/_unformat/#retour","title":"Retour","text":"<p>Valeur format\u00e9e</p>"},{"location":"libs/%24string/_unformat/#exemple","title":"Exemple","text":"<p>Les trois instructions ci-dessous retournent la m\u00eame valeur \"1234.56\". Pour  comprendre la 3e variante, veuillez lire la description de l'algorithme de  suppression de formatage.</p> <pre><code>// les trois instructions suivantes retournent la m\u00eame valeur 1234.56\n\n$str.unformat(\"1'234.56\", { type: \"DECIMAL\", locale: \"fr-ch\" });\n$str.unformat(\"1 234.56\", { type: \"DECIMAL\", locale: \"fr-ch\" });\n$str.unformat(\"1a234b56\", { type: \"DECIMAL\", locale: \"fr-ch\" });\n</code></pre>"},{"location":"libs/%24string/_upper/","title":"<code>$string.upper</code>","text":""},{"location":"libs/%24string/_upper/#description","title":"Description","text":"<p>...</p>"},{"location":"libs/%24string/_upper/#syntaxe","title":"Syntaxe","text":"<p><code>$string.upper(...)</code></p>"},{"location":"libs/%24string/_upper/#parametres","title":"Param\u00e8tres","text":"<code>param</code> string Description"},{"location":"libs/%24string/_upper/#retour","title":"Retour","text":"<p>...</p>"},{"location":"libs/%24string/_upper/#exemple","title":"Exemple","text":"<pre><code>$string.upper(...)\n</code></pre>"},{"location":"libs/%24string/_uppercase/","title":"<code>$string.uppercase</code>","text":""},{"location":"libs/%24string/_uppercase/#description","title":"Description","text":"<p>Convertit une string en majuscules.</p>"},{"location":"libs/%24string/_uppercase/#syntaxe","title":"Syntaxe","text":"<p><code>$string.uppercase( string )</code></p>"},{"location":"libs/%24string/_uppercase/#parametres","title":"Param\u00e8tres","text":"<code>string</code> string String \u00e0 traiter"},{"location":"libs/%24string/_uppercase/#retour","title":"Retour","text":"<p>Valeur <code>string</code> convertie en majuscules</p>"},{"location":"libs/%24string/_uppercase/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24system/","title":"<code>$sys</code>","text":"<p>Alias: <code>$system</code></p> <p>M\u00e9thodes relatives au syst\u00e8me (machine virtuelle java et environnement)</p>"},{"location":"libs/%24system/_clearProperty/","title":"<code>$system.clearProperty</code>","text":""},{"location":"libs/%24system/_clearProperty/#description","title":"Description","text":"<p>Supprime une propri\u00e9t\u00e9 java</p>"},{"location":"libs/%24system/_clearProperty/#syntaxe","title":"Syntaxe","text":"<p><code>$system.clearProperty( key )</code></p>"},{"location":"libs/%24system/_clearProperty/#parametres","title":"Param\u00e8tres","text":"<code>key</code> string Propri\u00e9t\u00e9 \u00e0 supprimer"},{"location":"libs/%24system/_clearProperty/#retour","title":"Retour","text":"<p>Ancienne valeur de la propri\u00e9t\u00e9 ou <code>null</code> si la propri\u00e9t\u00e9 n'existe pas.</p>"},{"location":"libs/%24system/_clearProperty/#exemple","title":"Exemple","text":"<pre><code>$system.clearProperty(\"some.custom.property\");\n</code></pre>"},{"location":"libs/%24system/_gc/","title":"<code>$system.gc</code>","text":""},{"location":"libs/%24system/_gc/#description","title":"Description","text":"<p>D\u00e9marre le garbage collector.</p>"},{"location":"libs/%24system/_gc/#syntaxe","title":"Syntaxe","text":"<p><code>$system.gc( [ force ] )</code></p>"},{"location":"libs/%24system/_gc/#parametres","title":"Param\u00e8tres","text":"<code>force</code> boolean <p>Flag <code>true</code>/<code>false</code> indiquant de forcer l'ex\u00e9cution du garbage collector.</p> <p>Si non d\u00e9fini ou si d\u00e9fini \u00e0 <code>false</code>, la m\u00e9thode ne fait que de demander </p>"},{"location":"libs/%24system/_gc/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code></p>"},{"location":"libs/%24system/_gc/#exemple","title":"Exemple","text":"<pre><code>$system.gc();\n</code></pre>"},{"location":"libs/%24system/_getDebugInfos/","title":"<code>$system.getDebugInfos</code>","text":""},{"location":"libs/%24system/_getDebugInfos/#description","title":"Description","text":"<p>Affiche un rapport de l'\u00e9tat du syst\u00e8me.</p>"},{"location":"libs/%24system/_getDebugInfos/#syntaxe","title":"Syntaxe","text":"<p><code>$system.getDebugInfos( [ sessions [ , memory [ , threads [ , applications ] ] ] ] )</code></p>"},{"location":"libs/%24system/_getDebugInfos/#parametres","title":"Param\u00e8tres","text":"<code>sessions</code> boolean Flag indiquant que l'on souhaite voir les infos de sessions <code>memory</code> boolean Flag indiquant que l'on souhaite voir les infos sur l'\u00e9tat de  fonctionnement de la JVM (\u00e9tat de la m\u00e9moire et nombre de  processeurs disponibles) <code>threads</code> boolean Flag indiquant que l'on souhaite voir les infos de threads <code>applications</code> boolean Flag indiquant que l'on souhaite voir les infos relatives  aux applications"},{"location":"libs/%24system/_getDebugInfos/#retour","title":"Retour","text":"<p>Rapport contenant les infos demand\u00e9es.</p>"},{"location":"libs/%24system/_getDebugInfos/#exemple","title":"Exemple","text":"<pre><code>$system.getDebugInfos(true, true, true, false);\n</code></pre>"},{"location":"libs/%24system/_getEnv/","title":"<code>$system.getEnv</code>","text":""},{"location":"libs/%24system/_getEnv/#description","title":"Description","text":"<p>Lit la valeur d'une ou de toutes les variables d'environnement.</p> <p>Notation raccourcie</p> <p>Il est \u00e9galement possible de r\u00e9cup\u00e9rer une variable d'environnement  au moyen de la notation <code>${env:variable}</code>. Ainsi, la valeur  <code>${env:JAVA_HOME}</code> est \u00e9quivalente \u00e0 <code>$system.getEnv(\"JAVA_HOME\")</code>.</p> <p>Voir StringSubstitutor.</p>"},{"location":"libs/%24system/_getEnv/#syntaxe","title":"Syntaxe","text":"<p><code>$system.getEnv( [ key [ , pass ] ] )</code></p>"},{"location":"libs/%24system/_getEnv/#parametres","title":"Param\u00e8tres","text":"<code>key</code> string Variable d'environnement \u00e0 lire. Si <code>null</code>, la m\u00e9thode retourne un  map contenant toutes les variables d'environnement (nom et valeur). <code>pass</code> string Mot de passe pour d\u00e9chiffrer la valeur de la variable d'environnement"},{"location":"libs/%24system/_getEnv/#retour","title":"Retour","text":"<p>Valeur de la variable d'environnement, ou map contenant toutes les variables d'environnement si le param\u00e8tre <code>key</code> est <code>null</code> ou non d\u00e9fini.</p>"},{"location":"libs/%24system/_getEnv/#exemple","title":"Exemple","text":"<pre><code>$system.getEnv(\"JAVA_HOME\");\n</code></pre>"},{"location":"libs/%24system/_getMemory/","title":"<code>$system.getMemory</code>","text":""},{"location":"libs/%24system/_getMemory/#description","title":"Description","text":"<p>Retourne un objet contenant des informations sur l'\u00e9tat de consommation de  la m\u00e9moire. L'objet retourn\u00e9 contient les propri\u00e9t\u00e9s suivantes:</p> <ul> <li><code>max</code>: Quantit\u00e9 maximale de m\u00e9moire que la machine java peut allouer</li> <li><code>total</code>: Quantit\u00e9 de m\u00e9moire actuellement r\u00e9serv\u00e9e par la machine     virtuelle java</li> <li><code>free</code>: Quantit\u00e9 de m\u00e9moire libre dans la plage <code>total</code> de m\u00e9moire</li> <li><code>used</code>: Quantit\u00e9 de m\u00e9moire consomm\u00e9e par la machine virtuelle java.    Cette valeur correspond \u00e0 la diff\u00e9rence <code>total - free</code>.</li> </ul>"},{"location":"libs/%24system/_getMemory/#syntaxe","title":"Syntaxe","text":"<p><code>$system.getMemory()</code></p>"},{"location":"libs/%24system/_getMemory/#retour","title":"Retour","text":"<p>Retourne un objet contenant les informations sur l'\u00e9tat de la m\u00e9moire</p>"},{"location":"libs/%24system/_getMemory/#exemple","title":"Exemple","text":"<pre><code>$system.getMemory().free;\n</code></pre>"},{"location":"libs/%24system/_getProperty/","title":"<code>$system.getProperty</code>","text":""},{"location":"libs/%24system/_getProperty/#description","title":"Description","text":"<p>Lit la valeur d'une propri\u00e9t\u00e9 java.</p> <p>Notation raccourcie</p> <p>Il est \u00e9galement possible de r\u00e9cup\u00e9rer une propri\u00e9t\u00e9 java au moyen de  la notation <code>${sys:property}</code>. Ainsi, la valeur <code>${sys:java.version}</code> est \u00e9quivalente \u00e0 <code>$system.getProperty(\"java.version\")</code>.</p> <p>Voir StringSubstitutor.</p>"},{"location":"libs/%24system/_getProperty/#syntaxe","title":"Syntaxe","text":"<p><code>$system.getProperty( key )</code></p>"},{"location":"libs/%24system/_getProperty/#parametres","title":"Param\u00e8tres","text":"<code>key</code> string Nom de la propri\u00e9t\u00e9 \u00e0 r\u00e9cup\u00e9rer"},{"location":"libs/%24system/_getProperty/#retour","title":"Retour","text":"<p>Valeur de la propri\u00e9t\u00e9 ou <code>null</code> si la propri\u00e9t\u00e9 n'existe pas</p>"},{"location":"libs/%24system/_getProperty/#exemple","title":"Exemple","text":"<pre><code>$system.getProperty(\"java.version\");\n</code></pre>"},{"location":"libs/%24system/_hostname/","title":"<code>$system.hostname</code>","text":""},{"location":"libs/%24system/_hostname/#description","title":"Description","text":"<p>Retourne le nom du serveur.</p>"},{"location":"libs/%24system/_hostname/#syntaxe","title":"Syntaxe","text":"<p><code>$system.hostname()</code></p>"},{"location":"libs/%24system/_hostname/#retour","title":"Retour","text":"<p>Hostname du serveur</p>"},{"location":"libs/%24system/_hostname/#exemple","title":"Exemple","text":"<pre><code>$system.hostname();\n</code></pre>"},{"location":"libs/%24system/_ip/","title":"<code>$system.ip</code>","text":""},{"location":"libs/%24system/_ip/#description","title":"Description","text":"<p>Retourne l'ip du serveur (en ipv4).</p>"},{"location":"libs/%24system/_ip/#syntaxe","title":"Syntaxe","text":"<p><code>$system.ip()</code></p>"},{"location":"libs/%24system/_ip/#retour","title":"Retour","text":"<p>IP du serveur (en ipv4).</p>"},{"location":"libs/%24system/_ip/#exemple","title":"Exemple","text":"<pre><code>$system.ip();\n</code></pre>"},{"location":"libs/%24system/_listProperties/","title":"<code>$system.listProperties</code>","text":"<p>Alias: <code>$system.getProperties</code></p>"},{"location":"libs/%24system/_listProperties/#description","title":"Description","text":"<p>\u00c9num\u00e8re les propri\u00e9t\u00e9s du serveur.</p>"},{"location":"libs/%24system/_listProperties/#syntaxe","title":"Syntaxe","text":"<p><code>$system.listProperties( [ filter ] )</code></p>"},{"location":"libs/%24system/_listProperties/#parametres","title":"Param\u00e8tres","text":"<code>filter</code> string Filtre sur le nom des propri\u00e9t\u00e9s \u00e0 reprendre"},{"location":"libs/%24system/_listProperties/#retour","title":"Retour","text":"<p>Map cl\u00e9/valeur des propri\u00e9t\u00e9s du syst\u00e8me</p>"},{"location":"libs/%24system/_listProperties/#exemple","title":"Exemple","text":"<pre><code>$system.listProperties();\n</code></pre>"},{"location":"libs/%24system/_setProperty/","title":"<code>$system.setProperty</code>","text":""},{"location":"libs/%24system/_setProperty/#description","title":"Description","text":"<p>D\u00e9finit la valeur d'une propri\u00e9t\u00e9 java.</p> <p>Attention, certaines propri\u00e9t\u00e9s java sont en lecture seule et ne peuvent  pas \u00eatre mises \u00e0 jour.</p>"},{"location":"libs/%24system/_setProperty/#syntaxe","title":"Syntaxe","text":"<p><code>$system.setProperty( key , value )</code></p>"},{"location":"libs/%24system/_setProperty/#parametres","title":"Param\u00e8tres","text":"<code>key</code> string Propri\u00e9t\u00e9 \u00e0 mettre \u00e0 jour <code>value</code> string Valeur \u00e0 enregistrer. Si la valeur est <code>null</code>, la propri\u00e9t\u00e9 est  supprim\u00e9e"},{"location":"libs/%24system/_setProperty/#retour","title":"Retour","text":"<p>Ancienne valeur de la propri\u00e9t\u00e9 ou <code>null</code> si la propri\u00e9t\u00e9 n'existait pas.</p>"},{"location":"libs/%24system/_setProperty/#exemple","title":"Exemple","text":"<pre><code>$system.setProperty(\"some.custom.property\", \"true\");\n</code></pre>"},{"location":"libs/%24system/_threads/","title":"<code>$system.threads</code>","text":""},{"location":"libs/%24system/_threads/#description","title":"Description","text":"<p>Construit un tableau \u00e9num\u00e9rant tous les threads existants.</p>"},{"location":"libs/%24system/_threads/#syntaxe","title":"Syntaxe","text":"<p><code>$system.threads()</code></p>"},{"location":"libs/%24system/_threads/#retour","title":"Retour","text":"<p>Tableau d'objets d\u00e9crivant tous les threads actifs.</p>"},{"location":"libs/%24system/_threads/#exemple","title":"Exemple","text":"<pre><code>var threads = $system.threads();\n$logger.info($array.stringify(threads));\n</code></pre> <p>L'exemple ci-dessus affiche un tableau dans le log avec la liste des threads actuels. Voici un exemple de traces qu'il g\u00e9n\u00e8re:</p> <pre><code>isAlive isInterrupted isDaemon num name                                                          id  state         priority\ntrue    false         false    1   main                                                          1   RUNNABLE      5\ntrue    false         true     2   AsyncFileHandlerWriter-1796488937                             17  WAITING       5\ntrue    false         true     3   FileHandlerLogFilesCleaner-1                                  18  WAITING       5\ntrue    false         false    4   Catalina-utility-1                                            21  TIMED_WAITING 1\ntrue    false         false    5   Catalina-utility-2                                            22  WAITING       1\ntrue    false         true     6   http-nio-8084-Poller                                          33  RUNNABLE      5\ntrue    false         true     7   http-nio-8084-Acceptor                                        34  RUNNABLE      5\ntrue    false         true     8   HikariPool-1 housekeeper                                      36  TIMED_WAITING 5\ntrue    false         true     9   EwtDebugger-coupon-8000                                       38  RUNNABLE      5\ntrue    false         true     10  http-nio-8084-exec-37                                         460 WAITING       5\ntrue    false         false    11  Timer-8                                                       461 TIMED_WAITING 1\ntrue    false         false    12  Timer-9                                                       462 TIMED_WAITING 1\ntrue    false         true     13  HikariPool-6 housekeeper                                      463 TIMED_WAITING 5\ntrue    false         true     14  org.apache.commons.vfs2.cache.SoftRefFilesCache$ReleaseThread 466 WAITING       5\ntrue    false         true     15  http-nio-8084-exec-38                                         467 WAITING       5\ntrue    false         true     16  http-nio-8084-exec-39                                         468 WAITING       5\ntrue    false         true     17  HikariPool-7 housekeeper                                      469 TIMED_WAITING 5\ntrue    false         true     18  http-nio-8084-exec-40                                         471 WAITING       5\ntrue    false         true     19  http-nio-8084-exec-41                                         472 WAITING       5\ntrue    false         true     20  http-nio-8084-exec-42                                         475 WAITING       5\ntrue    false         true     21  http-nio-8084-exec-43                                         478 WAITING       5\ntrue    false         true     22  http-nio-8084-exec-44                                         479 WAITING       5\ntrue    false         true     23  http-nio-8084-exec-45                                         480 RUNNABLE      5\ntrue    false         true     24  http-nio-8084-exec-46                                         483 WAITING       5\n</code></pre>"},{"location":"libs/%24test/","title":"<code>$test</code>","text":"<p>Ensemble de m\u00e9thodes utilis\u00e9es pour le test.</p> <p>Ces m\u00e9thodes ne sont pas stables et ne doivent pas \u00eatre utilis\u00e9es \u00e0 d'autre fin que le d\u00e9veloppement et les tests.</p>"},{"location":"libs/%24test/_callback/","title":"<code>$test.callback</code>","text":""},{"location":"libs/%24test/_callback/#description","title":"Description","text":"<p>Invoque une fonction d\u00e9clar\u00e9e dans le script.</p>"},{"location":"libs/%24test/_callback/#syntaxe","title":"Syntaxe","text":"<p><code>$test.callback( funcName [ , args [ , ... ] ] )</code></p>"},{"location":"libs/%24test/_callback/#parametres","title":"Param\u00e8tres","text":"<code>funcName</code> string Nom de la fonction \u00e0 appeler <code>args</code> any Param\u00e8tre(s) d'appel de la m\u00e9thode. Il est possible de passer un nombre  quelconque de param\u00e8tres."},{"location":"libs/%24test/_callback/#retour","title":"Retour","text":"<p>Valeur de retour de la m\u00e9thode</p>"},{"location":"libs/%24test/_callback/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24test/_closecnx/","title":"<code>$test.closecnx</code>","text":""},{"location":"libs/%24test/_closecnx/#description","title":"Description","text":"<p>Cl\u00f4ture la connexion \u00e0 la base de donn\u00e9es utilis\u00e9es par le thread courant.</p>"},{"location":"libs/%24test/_closecnx/#syntaxe","title":"Syntaxe","text":"<p><code>$test.closecnx()</code></p>"},{"location":"libs/%24test/_closecnx/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24test/_closecnx/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24test/_getPrototype/","title":"<code>$test.getPrototype</code>","text":""},{"location":"libs/%24test/_getPrototype/#description","title":"Description","text":"<p>Retourne le prototype d'une action sous la forme d'un sch\u00e9ma json.</p> <p>Validit\u00e9 du param\u00e8tre <code>action</code></p> <p>L'action pass\u00e9e en param\u00e8tre doit \u00eatre valide. Dans le cas contraire, le moteur g\u00e9n\u00e8re une exception non traitable.</p>"},{"location":"libs/%24test/_getPrototype/#syntaxe","title":"Syntaxe","text":"<p><code>$test.getPrototype( action [ , indent ] )</code></p>"},{"location":"libs/%24test/_getPrototype/#parametres","title":"Param\u00e8tres","text":"<code>action</code> string Nom de l'action dont on souhaite obtenir le prototype <code>indent</code> number Nombre de caract\u00e8res d'indentation \u00e0 utiliser pour la mise en forme de  l'arbre json en r\u00e9ponse."},{"location":"libs/%24test/_getPrototype/#retour","title":"Retour","text":"<p>Cha\u00eene de caract\u00e8re repr\u00e9sentant un sch\u00e9ma json qui d\u00e9crit le prototype de l'action.</p>"},{"location":"libs/%24test/_getPrototype/#exemple","title":"Exemple","text":"<pre><code>$logger.info($test.getPrototype(\"setView\", 4));\n</code></pre>"},{"location":"libs/%24test/_initdb/","title":"<code>$test.initdb</code>","text":""},{"location":"libs/%24test/_initdb/#description","title":"Description","text":"<p>Initialise ou r\u00e9-initialise la connexion \u00e0 la base de donn\u00e9es \u00e0 partir  de la config.</p>"},{"location":"libs/%24test/_initdb/#syntaxe","title":"Syntaxe","text":"<p><code>$test.initdb()</code></p>"},{"location":"libs/%24test/_initdb/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code>.</p>"},{"location":"libs/%24test/_initdb/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24test/_nullValue/","title":"<code>$test.nullValue</code>","text":""},{"location":"libs/%24test/_nullValue/#description","title":"Description","text":"<p>Valeur <code>null</code> repr\u00e9sent\u00e9e sous forme de valeur</p>"},{"location":"libs/%24test/_nullValue/#syntaxe","title":"Syntaxe","text":"<p><code>$test.nullValue()</code></p>"},{"location":"libs/%24test/_nullValue/#retour","title":"Retour","text":"<p>Valeur <code>null</code> en tant qu'objet typ\u00e9.</p>"},{"location":"libs/%24test/_nullValue/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24thread/","title":"<code>$thread</code>","text":"<p>M\u00e9thodes relatives au thread en cours</p>"},{"location":"libs/%24thread/_abortAction/","title":"<code>$thread.abortAction</code>","text":""},{"location":"libs/%24thread/_abortAction/#description","title":"Description","text":"<p>Demande d'annuler l'action en cours demand\u00e9e par le client.</p>"},{"location":"libs/%24thread/_abortAction/#syntaxe","title":"Syntaxe","text":"<p><code>$thread.abortAction()</code></p>"},{"location":"libs/%24thread/_abortAction/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code></p>"},{"location":"libs/%24thread/_abortAction/#exemple","title":"Exemple","text":"<pre><code>$thread.abortAction();\n</code></pre>"},{"location":"libs/%24thread/_getLifetime/","title":"<code>$thread.getLifetime</code>","text":""},{"location":"libs/%24thread/_getLifetime/#description","title":"Description","text":"<p>Retourne la dur\u00e9e de vie du thread depuis sa cr\u00e9ation, c'est-\u00e0-dire depuis que la requ\u00eate est parvenue au moteur, en millisecondes.</p>"},{"location":"libs/%24thread/_getLifetime/#syntaxe","title":"Syntaxe","text":"<p><code>$thread.getLifetime()</code></p>"},{"location":"libs/%24thread/_getLifetime/#retour","title":"Retour","text":"<p>Dur\u00e9e de vie du thread actuel en millisecondes.</p>"},{"location":"libs/%24thread/_getLifetime/#exemple","title":"Exemple","text":"<pre><code>$thread.getLifetime();\n</code></pre>"},{"location":"libs/%24thread/_getObject/","title":"<code>$thread.getObject</code>","text":""},{"location":"libs/%24thread/_getObject/#description","title":"Description","text":"<p>R\u00e9cup\u00e8re un objet de thread.</p> <p>Les objets de thread sont des objets qui existent pendant la dur\u00e9e de vie du thread et sont perdus ensuite. Ces objets ne  sont pas repris dans l'arbre de sortie.</p> <p>Ces objets servent essentiellement \u00e0 v\u00e9hiculer des objets entre  les diff\u00e9rents processus qui s'ex\u00e9cutent au cours du thread,  par exemple entre un script auto-\u00e9valu\u00e9 et un script ex\u00e9cut\u00e9  intentionnellement.</p> <p>Le thread en lui-m\u00eame n'agit pas sur ces objets. Il ne fait  que de mettre \u00e0 disposition un conteneur d'objets.</p>"},{"location":"libs/%24thread/_getObject/#syntaxe","title":"Syntaxe","text":"<p><code>$thread.getObject( name )</code></p>"},{"location":"libs/%24thread/_getObject/#parametres","title":"Param\u00e8tres","text":"<code>name</code> string Nom de l'objet \u00e0 r\u00e9cup\u00e9rer"},{"location":"libs/%24thread/_getObject/#retour","title":"Retour","text":"<p>Retourne l'objet r\u00e9f\u00e9renc\u00e9 par <code>name</code> ou <code>null</code> si l'objet n'existe pas ou s'il ne s'agit pas d'un objet typ\u00e9.</p>"},{"location":"libs/%24thread/_getObject/#exemple","title":"Exemple","text":"<pre><code>var logThreadId = $thread.getObject(\"LOGTHREADID\");\nif (logThreadId == null) {\n    logThreadId = $uuid.get();\n    $thread.putObject(\"LOGTHREADID\", logThreadId);\n}\n</code></pre>"},{"location":"libs/%24thread/_getStyle/","title":"<code>$thread.getStyle</code>","text":""},{"location":"libs/%24thread/_getStyle/#description","title":"Description","text":"<p>Retourne le style d\u00e9fini pour la requ\u00eate en cours.</p>"},{"location":"libs/%24thread/_getStyle/#syntaxe","title":"Syntaxe","text":"<p><code>$thread.getStyle()</code></p>"},{"location":"libs/%24thread/_getStyle/#retour","title":"Retour","text":"<p>Retourne le nom du style actuel</p>"},{"location":"libs/%24thread/_getStyle/#exemple","title":"Exemple","text":"<pre><code>if ($thread.getStyle() == $app.getConfig(\"styles.defaultStyle\")) {\n    // ...\n}\n</code></pre>"},{"location":"libs/%24thread/_putObject/","title":"<code>$thread.putObject</code>","text":""},{"location":"libs/%24thread/_putObject/#description","title":"Description","text":"<p>Inscrit un objet de thread. Si l'objet est d\u00e9j\u00e0 pr\u00e9sent dans la  table, ce dernier est remplac\u00e9.</p> <p>La m\u00e9thode <code>$thread.getObject</code> d\u00e9crit ce que sont les objets de thread.</p>"},{"location":"libs/%24thread/_putObject/#syntaxe","title":"Syntaxe","text":"<p><code>$thread.putObject( name , object )</code></p>"},{"location":"libs/%24thread/_putObject/#parametres","title":"Param\u00e8tres","text":"<code>name</code> string Nom de l'objet \u00e0 enregistrer <code>object</code> any Objet \u00e0 placer dans la table d'objets de thread"},{"location":"libs/%24thread/_putObject/#retour","title":"Retour","text":"<p>L'objet enregistr\u00e9 pr\u00e9c\u00e9demment sous le nom donn\u00e9 par <code>name</code>,  pour autant qu'il s'agisse d'un objet typ\u00e9, sinon <code>null</code>.</p>"},{"location":"libs/%24thread/_putObject/#exemple","title":"Exemple","text":"<pre><code>var logThreadId = $thread.getObject(\"LOGTHREADID\");\nif (logThreadId == null) {\n    logThreadId = $uuid.get();\n    $thread.putObject(\"LOGTHREADID\", logThreadId);\n}\n</code></pre>"},{"location":"libs/%24thread/_removeObject/","title":"<code>$thread.removeObject</code>","text":""},{"location":"libs/%24thread/_removeObject/#description","title":"Description","text":"<p>Retire un objet de thread de la table d'objets</p>"},{"location":"libs/%24thread/_removeObject/#syntaxe","title":"Syntaxe","text":"<p><code>$thread.removeObject( name )</code></p>"},{"location":"libs/%24thread/_removeObject/#parametres","title":"Param\u00e8tres","text":"<code>name</code> string Nom de l'objet \u00e0 r\u00e9cup\u00e9rer"},{"location":"libs/%24thread/_removeObject/#retour","title":"Retour","text":"<p>L'objet retir\u00e9 de la table d'objets ou <code>null</code> si l'objet n'existe pas dans la table ou qu'il ne s'agit pas d'un objet typ\u00e9.</p>"},{"location":"libs/%24thread/_removeObject/#exemple","title":"Exemple","text":"<pre><code>$thread.removeObject(\"LOGTHREADID\");\n</code></pre>"},{"location":"libs/%24uuid/","title":"<code>$uuid</code>","text":"<p>Librairie de m\u00e9thodes concernant les UUID</p>"},{"location":"libs/%24uuid/_generate/","title":"<code>$uuid.generate</code>","text":"<p>Alias: <code>$uuid.get</code>, <code>$uuid.gen</code></p>"},{"location":"libs/%24uuid/_generate/#description","title":"Description","text":"<p>G\u00e9n\u00e8re une valeur UUID. Par d\u00e9faut, c'est-\u00e0-dire en l'absence de param\u00e8tres,  la m\u00e9thode g\u00e9n\u00e8re un UUID de type random (type 4). Il est possible de faire  g\u00e9n\u00e9rer un UUID de type 3 en sp\u00e9cifiant un namespace et un nom.</p>"},{"location":"libs/%24uuid/_generate/#syntaxe","title":"Syntaxe","text":"<p><code>$uuid.generate( [ version , [ params ] ] )</code></p>"},{"location":"libs/%24uuid/_generate/#parametres","title":"Param\u00e8tres","text":"<code>version</code> number Version d'UUID \u00e0 g\u00e9n\u00e9rer. En l'absence d'indication, la m\u00e9thode g\u00e9n\u00e8re  un UUID de type 4 (random). La m\u00e9thode supporte les versions 1, 3, 4  et 5. <code>params</code> map <p>Param\u00e8tres n\u00e9cessaires \u00e0 la g\u00e9n\u00e9ration du UUID. Les \u00e9l\u00e9ments du map  n\u00e9cessitent des propri\u00e9t\u00e9s diff\u00e9rentes en fonction de la version d'UUID attendue.</p> <ul> <li>Version 1: Aucune propri\u00e9t\u00e9 n\u00e9cessaire</li> <li>Versions 3 et 5: La m\u00e9thode s'attend \u00e0 recevoir les propri\u00e9t\u00e9s    <code>namespace</code> <code>name</code>.</li> <li>Version 4: Aucune propri\u00e9t\u00e9 n\u00e9cessaire</li> </ul>"},{"location":"libs/%24uuid/_generate/#retour","title":"Retour","text":"<p>Valeur UUID.</p>"},{"location":"libs/%24uuid/_generate/#exemple","title":"Exemple","text":"<p>G\u00e9n\u00e9ration de UUID al\u00e9atoire</p> <pre><code>$uuid.generate();                  // a39b0f76-9665-4ac1-a3a2-9fe4570d8547\n</code></pre> <p>G\u00e9n\u00e9ration de UUID version 3 (non al\u00e9atoire)</p> <pre><code>$uuid.generate(3,\n               { namespace: \"7b881da6-6cb5-45b7-8cd4-18e2720aa010\",\n                 name: \"ewt\" });   // f60d0fac-0ee2-3c14-ad95-1908aca69b9e\n</code></pre>"},{"location":"libs/%24websocket/","title":"<code>$websocket</code>","text":"<p>M\u00e9thodes d\u00e9di\u00e9es \u00e0 la gestion de websockets.</p>"},{"location":"libs/%24websocket/_send/","title":"<code>$websocket.send</code>","text":""},{"location":"libs/%24websocket/_send/#description","title":"Description","text":"<p>Envoie un message \u00e0 une ou plusieurs sessions websocket.</p>"},{"location":"libs/%24websocket/_send/#syntaxe","title":"Syntaxe","text":"<p><code>$websocket.send( message [ , options ] )</code></p>"},{"location":"libs/%24websocket/_send/#parametres","title":"Param\u00e8tres","text":"<code>message</code> string Message \u00e0 envoyer <code>options</code> map <p>Option d'envoi de message. Les options reconnues sont:</p> <code>dest</code> string <p>Cha\u00eene de caract\u00e8res indiquant qui sont les destinataires  du message \u00e0 envoyer. Les valeurs possibles sont:</p> <ul> <li>\"current\": envoie le message au client qui est \u00e0 l'origine     du thread actuel; c'est le comportement par d\u00e9faut</li> <li>\"all\": envoie le message \u00e0 tous les clients connect\u00e9s sur le      canal courant</li> <li>\"others\": envoie le message \u00e0 tous les clients connect\u00e9s sur le      canal courant, \u00e0 l'exception du client qui est \u00e0 l'origine du      thread actuel </li> </ul>"},{"location":"libs/%24websocket/_send/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si le message a pu \u00eatre envoy\u00e9, sinon <code>false</code>.</p>"},{"location":"libs/%24websocket/_send/#exemple","title":"Exemple","text":"<pre><code>@accept(servlet=\"websocket\")\n\nswitch ($$.event) {\n    case \"open\":\n        $websocket.send(\"hello \" &amp; $request.getPrincipal());\n        break;\n    case \"message\":\n        $websocket.send(\"\ud83d\ude00 \" &amp; $$.message, { dest: \"current\" });\n        $websocket.send(\"\ud83c\udf0d \" &amp; $$.message, { dest: \"others\" });\n        break;\n    case \"close\":\n        break;\n    case \"error\":\n        break;\n}\n</code></pre>"},{"location":"libs/%24word/","title":"<code>$word</code>","text":"<p>Traitement de fichiers Word.</p> <p>Important</p> <p>Cette librairie est incompl\u00e8te et sera \u00e9tendu ult\u00e9rieurement.</p>"},{"location":"libs/%24word/_sign/","title":"<code>$word.sign</code>","text":""},{"location":"libs/%24word/_sign/#description","title":"Description","text":"<p>VERSION DE TEST</p> <p>Ajoute une signature num\u00e9rique \u00e0 un fichier OpenXML. En r\u00e9alit\u00e9 la m\u00e9thode g\u00e8re n'importe quel type de fichier OpenXML, qu'il s'agisse d'un docx, d'un xlsx ou d'un pptx.</p>"},{"location":"libs/%24word/_sign/#syntaxe","title":"Syntaxe","text":"<p><code>$word.sign( file , signature )</code></p>"},{"location":"libs/%24word/_sign/#parametres","title":"Param\u00e8tres","text":"<code>file</code> file Fichier OpenXML \u00e0 signer. Peut \u00eatre un fichier docx, mais \u00e9galement un xlsx ou un pptx. <code>signature</code> map <p>\u00c9l\u00e9ments \u00e0 utiliser pour la signature du document. La propri\u00e9t\u00e9 doit elle-m\u00eame \u00eatre une map contenant les propri\u00e9t\u00e9s suivantes:</p> <code>keystore</code> Fichier de keystore PKCS12 <code>keystorePass</code> Facultatif. Mot de passe du keystore&lt; <code>keystoreType</code> Facultatif. Type de keystore; par d\u00e9faut \"PKCS12\" <code>certificate</code> Nom d'alias du certificat x509 \u00e0 utiliser&lt; <code>certificatePass</code> Facultatif. Mot de passe associ\u00e9 au certificat"},{"location":"libs/%24word/_sign/#retour","title":"Retour","text":"<p>Retourne toujours <code>null</code></p>"},{"location":"libs/%24word/_sign/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24xml/","title":"<code>$xml</code>","text":"<p>Outils de gestion de donn\u00e9es xml</p>"},{"location":"libs/%24xml/_escape/","title":"<code>$xml.escape</code>","text":""},{"location":"libs/%24xml/_escape/#description","title":"Description","text":"<p>\u00c9chappe les caract\u00e8res sp\u00e9ciaux de la valeur pass\u00e9e en param\u00e8tre.</p>"},{"location":"libs/%24xml/_escape/#syntaxe","title":"Syntaxe","text":"<p><code>$xml.escape( object [ , xml10 ] )</code></p>"},{"location":"libs/%24xml/_escape/#parametres","title":"Param\u00e8tres","text":"<code>object</code> string Objet \u00e0 traiter <code>xml10</code> boolean <p>Flag <code>true</code>/<code>false</code> indiquant si on souhaite limiter la conversion \u00e0 xml 1.0. Par d\u00e9faut, le flag est <code>false</code>.</p> <p>Voir escapeXml10</p>"},{"location":"libs/%24xml/_escape/#retour","title":"Retour","text":"<p>Version compatible xml de la valeur re\u00e7ue. Retourne <code>null</code> si la valeur en entr\u00e9e est <code>null</code>.</p>"},{"location":"libs/%24xml/_escape/#exemple","title":"Exemple","text":"<pre><code>$logger.info($xml.escape(`Ch\u00e2teau-d\u2019\u0152x &amp; \"environs\" &lt; test d'apostrophe &gt;`));\n$logger.info($xml.unescape(`Ch\u00e2teau-d\u2019\u0152x &amp;amp; &amp;quot;environs&amp;quot; &amp;lt; test d&amp;apos;apostrophe &amp;gt;`));\n</code></pre> <p>G\u00e9n\u00e8re les traces suivantes:</p> <pre><code>Ch\u00e2teau-d\u2019\u0152x &amp;amp; &amp;quot;environs&amp;quot; &amp;lt; test d&amp;apos;apostrophe &amp;gt;\nCh\u00e2teau-d\u2019\u0152x &amp; \"environs\" &lt; test d'apostrophe &gt;\n</code></pre>"},{"location":"libs/%24xml/_toJson/","title":"<code>$xml.toJson</code>","text":"<p>Alias: <code>$xml.toJSON</code></p>"},{"location":"libs/%24xml/_toJson/#description","title":"Description","text":"<p>Convertit un arbre xml en json.</p>"},{"location":"libs/%24xml/_toJson/#syntaxe","title":"Syntaxe","text":"<p><code>$xml.toJson( xml [ , options ] )</code></p>"},{"location":"libs/%24xml/_toJson/#parametres","title":"Param\u00e8tres","text":"<code>xml</code> string Document xml \u00e0 convertir <code>options</code> map <p>Map d'options pour la conversion. Les options reconnues sont:</p> <code>indent</code> number Indentation \u00e0 utiliser pour l'arbre json \u00e0 g\u00e9n\u00e9rer"},{"location":"libs/%24xml/_toJson/#retour","title":"Retour","text":"<p>String contenant une version json de l'arbre donn\u00e9 en entr\u00e9e</p>"},{"location":"libs/%24xml/_toJson/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24xml/_toXml/","title":"<code>$xml.toXml</code>","text":"<p>Alias: <code>$xml.xmlize</code>, <code>$xml.toXML</code></p>"},{"location":"libs/%24xml/_toXml/#description","title":"Description","text":"<p>G\u00e9n\u00e8re une repr\u00e9sentation xml d'un objet.</p>"},{"location":"libs/%24xml/_toXml/#syntaxe","title":"Syntaxe","text":"<p><code>$xml.toXml( object )</code></p>"},{"location":"libs/%24xml/_toXml/#parametres","title":"Param\u00e8tres","text":"<code>object</code> any Objet \u00e0 traiter"},{"location":"libs/%24xml/_toXml/#retour","title":"Retour","text":"<p>String repr\u00e9sentant l'objet en version xml</p>"},{"location":"libs/%24xml/_toXml/#exemple","title":"Exemple","text":"<pre><code>var foo = { a: 1, b: `le \"test\" &amp; l'apostrophe` };\n$xml.toXml(foo);\n</code></pre> <p>Le code ci-dessus construit une valeur xml de ce genre (ici mise en forme):</p> <pre><code>&lt;obj type=\"map\"&gt;\n    &lt;entry name=\"a\"&gt;\n        &lt;obj type=\"number\"&gt;1&lt;/obj&gt;\n    &lt;/entry&gt;\n    &lt;entry name=\"b\"&gt;\n        &lt;obj type=\"string\"&gt;le &amp;quot;test&amp;quot; &amp;amp; l&amp;apos;apostrophe&lt;/obj&gt;\n    &lt;/entry&gt;\n&lt;/obj&gt;\n</code></pre>"},{"location":"libs/%24xml/_transform/","title":"<code>$xml.transform</code>","text":""},{"location":"libs/%24xml/_transform/#description","title":"Description","text":"<p>Transformation xsl</p>"},{"location":"libs/%24xml/_transform/#syntaxe","title":"Syntaxe","text":"<p><code>$xml.transform( source , stylesheet [ , parameters [ , options ] ] )</code></p>"},{"location":"libs/%24xml/_transform/#parametres","title":"Param\u00e8tres","text":"<code>source</code> string Valeur xml \u00e0 transformer <code>stylesheet</code> string Feuille de style xsl <code>parameters</code> map Param\u00e8tres \u00e0 passer \u00e0 la feuille de style, sous la forme d'un map <code>options</code> map <p>Options de transformation. Les options disponibles sont:</p> <code>transformer</code> string Type de transformateur \u00e0 utiliser. Si la valeur est \"saxon-9\",  cela force l'utilisation de Saxon 9. Il est \u00e9galement possible  de sp\u00e9cifier un nom de classe de type \"TransformerFactory\" \u00e0  utiliser pour la transformation xsl."},{"location":"libs/%24xml/_transform/#retour","title":"Retour","text":"<p>Le r\u00e9sultat de la transformation xsl</p>"},{"location":"libs/%24xml/_transform/#exemple","title":"Exemple","text":"<pre><code>var xml = `&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;data&gt;&lt;/data&gt;`;\nvar xsl = `&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n               &lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt;\n                 &lt;xsl:output method=\"text\" encoding=\"UTF-8\"/&gt;\n                 &lt;xsl:param name=\"first\"  select=\"'default'\"/&gt;\n                 &lt;xsl:param name=\"second\" select=\"'default'\"/&gt;\n                 &lt;xsl:template match=\"/\"&gt;\n                   &lt;xsl:value-of select=\"$first\"/&gt;\n                   &lt;xsl:text&gt; &lt;/xsl:text&gt;\n                   &lt;xsl:value-of select=\"$second\"/&gt;\n                   &lt;xsl:text&gt; !&lt;/xsl:text&gt;\n                 &lt;/xsl:template&gt;\n               &lt;/xsl:stylesheet&gt;`::raw;\n\n$xml.transform(xml, xsl, { first : \"Hello\", second : \"World\" });    // retourne \"Hello World !\"\n</code></pre>"},{"location":"libs/%24xml/_unescape/","title":"<code>$xml.unescape</code>","text":""},{"location":"libs/%24xml/_unescape/#description","title":"Description","text":"<p>Convertit les caract\u00e8res \u00e9chapp\u00e9s en caract\u00e8res standard dans la  valeur pass\u00e9e en param\u00e8tre.</p>"},{"location":"libs/%24xml/_unescape/#syntaxe","title":"Syntaxe","text":"<p><code>$xml.unescape( object )</code></p>"},{"location":"libs/%24xml/_unescape/#parametres","title":"Param\u00e8tres","text":"<code>object</code> string Objet \u00e0 traiter"},{"location":"libs/%24xml/_unescape/#retour","title":"Retour","text":"<p>Version contenant les caract\u00e8res non \u00e9chapp\u00e9s. Retourne <code>null</code> si la valeur en entr\u00e9e est <code>null</code>.</p>"},{"location":"libs/%24xml/_unescape/#exemple","title":"Exemple","text":"<pre><code>$logger.info($xml.escape(`Ch\u00e2teau-d\u2019\u0152x &amp; \"environs\" &lt; test d'apostrophe &gt;`));\n$logger.info($xml.unescape(`Ch\u00e2teau-d\u2019\u0152x &amp;amp; &amp;quot;environs&amp;quot; &amp;lt; test d&amp;apos;apostrophe &amp;gt;`));\n</code></pre> <p>G\u00e9n\u00e8re les traces suivantes:</p> <pre><code>Ch\u00e2teau-d\u2019\u0152x &amp;amp; &amp;quot;environs&amp;quot; &amp;lt; test d&amp;apos;apostrophe &amp;gt;\nCh\u00e2teau-d\u2019\u0152x &amp; \"environs\" &lt; test d'apostrophe &gt;\n</code></pre>"},{"location":"libs/%24yenc/","title":"<code>$yenc</code>","text":"<p>Librairie de m\u00e9thodes yEnc</p> <p>Exemple de script qui permet d'encoder un fichier et de remonter la valeur encod\u00e9e dans la page web.</p> <pre><code>// encode.ewts\n\n// Exemple de script pour l'encodage d'un fichier selon m\u00e9thode yEncode\n// et affichage de la valeur \"encod\u00e9e\" dans un textarea \u00e0 l'\u00e9cran. Pour\n// afficher la valeur encod\u00e9e dans le navigateur, on doit proc\u00e9der en 2\n// \u00e9tapes: on g\u00e8n\u00e8re un fichier sur le temp et on r\u00e9pond avec un message\n// qui inclut un iframe et qui relance un appel REST \u00e0 notre script pour\n// t\u00e9l\u00e9charger la valeur encod\u00e9e.\n// On est oblig\u00e9 de proc\u00e9der ainsi car le charset de la page web peut ne\n// pas \u00eatre adapt\u00e9 \u00e0 l'affichage de la valeur encod\u00e9e. On utilise donc\n// un iframe pour charger le contenu dans un charset adapt\u00e9.\n\nif ($$.params != null) {\n    // traitement de la request /ewt/rest/sample/encode?val=xxx\n    if ($str.match($$.params.val, \"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\")) {\n        var file = $file.load($$.params.val, $app.getWorkDirectory()),\n            txt =  $file.read($$.params.val, { charset: \"iso-8859-1\" });\n\n        $response.setContentType(\"text/html; charset: utf-8\");\n        $response.addContent(\n           `&lt;!DOCTYPE html&gt;\n            &lt;html&gt;\n                &lt;head&gt;\n                    &lt;meta charset=\"utf-8\"&gt;\n                &lt;/head&gt;\n                &lt;body&gt;\n                    &lt;textarea cols=\"120\" rows=\"10\"&gt;${txt}&lt;/textarea&gt;\n                &lt;/body&gt;\n            &lt;/html&gt;`);\n\n        // suppression du fichier\n        $file.delete(file);\n    }\n    else {\n        $response.setContentType(\"text/html; charset: utf-8\");\n        $response.addContent(\n           `&lt;!DOCTYPE html&gt;\n            &lt;html&gt;\n                &lt;head&gt;\n                    &lt;meta charset=\"utf-8\"&gt;\n                &lt;/head&gt;\n                &lt;body&gt;\n                    Erreur : vous n'\u00eates pas autoris\u00e9(e) \u00e0 lire ce fichier\n                &lt;/body&gt;\n            &lt;/html&gt;`);\n    }\n}\nelse {\n    // encodage\n    var src = $file.load(\"c:/Temp/TestImage.png\"),\n        dst = $yenc.encode(src, { dest: $file.create() }),\n        res = $file.path(dst, { relativeTo: $app.getWorkDirectory() });\n\n    $msg.info(`&lt;iframe src=\"/ewt/rest/sample/encode?val=${dst}\" style=\"width:100%\"&gt;&lt;/iframe&gt;`,\n              null, { disableOutputEscaping: \"yes\" });\n}\n</code></pre>"},{"location":"libs/%24yenc/_decode/","title":"<code>$yenc.decode</code>","text":""},{"location":"libs/%24yenc/_decode/#description","title":"Description","text":"<p>D\u00e9code une valeur yEnc</p>"},{"location":"libs/%24yenc/_decode/#syntaxe","title":"Syntaxe","text":"<p><code>$yenc.decode( source , [ , options ] )</code></p>"},{"location":"libs/%24yenc/_decode/#parametres","title":"Param\u00e8tres","text":"<code>source</code> file / pojo / string Source \u00e0 d\u00e9coder. Peut d\u00e9signer un fichier, un tableau de bytes sous la forme d'un <code>pojo</code> ou une cha\u00eene de caract\u00e8res. Le charset de la cha\u00eene  de caract\u00e8re devra alors \u00eatre indiqu\u00e9e au niveau des options. <code>options</code> map <p>Map d'option \u00e0 prendre en consid\u00e9ration pour l'encodage. Les options reconnues sont:</p> <code>dest</code> file / string Dossier dans lequel enregistrer le fichier. Si non renseign\u00e9, le fichier est cr\u00e9\u00e9 dans le dossier travail de l'application <code>charset</code> string Charset \u00e0 utiliser pour le traitement de la valeur. Par d\u00e9faut, le  charset est \"utf-8\""},{"location":"libs/%24yenc/_decode/#retour","title":"Retour","text":"<p>Fichier cr\u00e9\u00e9 \u00e0 partir des donn\u00e9es du fichier source</p>"},{"location":"libs/%24yenc/_decode/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24yenc/_encode/","title":"<code>$yenc.encode</code>","text":""},{"location":"libs/%24yenc/_encode/#description","title":"Description","text":"<p>Encode un fichier en yEnc</p>"},{"location":"libs/%24yenc/_encode/#syntaxe","title":"Syntaxe","text":"<p><code>$yenc.encode( source [ , options ] )</code></p>"},{"location":"libs/%24yenc/_encode/#parametres","title":"Param\u00e8tres","text":"<code>source</code> file / string Fichier \u00e0 encoder. Peut \u00eatre pass\u00e9 sous forme d'objet <code>file</code> ou de path (en <code>string</code>). <code>options</code> map <p>Map d'option \u00e0 prendre en consid\u00e9ration pour l'encodage. Les options reconnues sont:</p> <code>dest</code> file / string Fichier de destination. La valeur peut \u00eatre soit un objet <code>file</code>, soit une cha\u00eene de caract\u00e8res d\u00e9signant un path. <code>charset</code> string Si ce param\u00e8tre est d\u00e9fini, la m\u00e9thode retournera la valeur  encod\u00e9e sous forme de cha\u00eene de caract\u00e8res convertie selon le charset indiqu\u00e9. Il est possible de sp\u00e9cifier une valeur  vide pour forcer l'enregistrement sans charset."},{"location":"libs/%24yenc/_encode/#retour","title":"Retour","text":"<p>Objet <code>pojo</code> contenant la valeur chiffr\u00e9e sous la forme d'un tableau de  bytes. Si une option <code>dest</code> est sp\u00e9cifi\u00e9e, la m\u00e9thode retourne le fichier  dans lequel les donn\u00e9es ont \u00e9t\u00e9 inscrites. Si une option <code>charset</code> est  sp\u00e9cifi\u00e9e, la m\u00e9thode retourne la valeur encod\u00e9e sous forme de cha\u00eene de  caract\u00e8res, selon le charset indiqu\u00e9.</p>"},{"location":"libs/%24yenc/_encode/#exemple","title":"Exemple","text":"<p>Non disponible</p>"},{"location":"libs/%24zip/","title":"<code>$zip</code>","text":"<p>Librairie de m\u00e9thodes de gestion d'archives zip.</p>"},{"location":"libs/%24zip/_append/","title":"<code>$zip.append</code>","text":""},{"location":"libs/%24zip/_append/#description","title":"Description","text":"<p>Ajoute un ou plusieurs fichiers \u00e0 une archive zip existante.</p> <p>Note d'impl\u00e9mentation</p> <p>L'impl\u00e9mentation de cette m\u00e9thode dans Ewt charge l'archive en tant  que file system et lui ajoute le ou les fichiers indiqu\u00e9s. Cela \u00e9vite d'avoir \u00e0 recr\u00e9er une archive compl\u00e8te \u00e0 chaque ajout d'\u00e9l\u00e9ment.</p>"},{"location":"libs/%24zip/_append/#syntaxe","title":"Syntaxe","text":"<p><code>$zip.create( zip , files [ , options ] )</code></p>"},{"location":"libs/%24zip/_append/#parametres","title":"Param\u00e8tres","text":"<code>zip</code> file / string Fichier zip \u00e0 cr\u00e9er ou compl\u00e9ter <code>files</code> file / string / array <p>Fichier(s) \u00e0 ajouter dans l'archive. Le ou les fichiers peuvent \u00eatre  un path donn\u00e9 sous forme de <code>string</code>, une r\u00e9f\u00e9rence de <code>file</code>, un tableau de <code>file</code> ou de <code>string</code> repr\u00e9sentant des paths.</p> <p>Il est possible de r\u00e9f\u00e9rencer un dossier, auquel cas tout le contenu du dossier est repris dans l'archive.</p> <code>options</code> map <p>Map d'options. Les options reconnues sont:</p> <code>basePath</code> file / string <p>Dossier de r\u00e9f\u00e9rence. Les paths de fichiers et de dossiers au sein de l'archive zip seront construits relativement au <code>basePath</code> si celui-ci est sp\u00e9cifi\u00e9.</p> <p>En l'absence de <code>basePath</code>, les fichiers sont syst\u00e9matiquement ajout\u00e9s \u00e0 la racine du zip. La construction du zip g\u00e9n\u00e9rera une erreur si dans ce cas on cherche \u00e0 ajouter deux fichiers de m\u00eame nom.</p> <p>L'option attend un path de dossier. Toutefois il est autoris\u00e9  de passer un path de fichier, auquel cas la m\u00e9thode s'appuiera  sur le dossier parent du fichier en question.</p> <code>replace</code> boolean <p>Flag <code>true</code>/<code>false</code> indiquant si la m\u00e9thode peut \u00e9craser un fichier  d\u00e9j\u00e0 existant. Vaut <code>false</code> par d\u00e9faut. Cela signifie que par d\u00e9faut  la m\u00e9thode cherchera \u00e0 cr\u00e9er un fichier ou un r\u00e9pertoire qui n'existe  pas d\u00e9j\u00e0.</p> <p>Remarque: pour ajouter des fichiers \u00e0 une archive pr\u00e9-existante,  veuillez utiliser la m\u00e9thode <code>$zip.append</code>.</p>"},{"location":"libs/%24zip/_append/#retour","title":"Retour","text":"<p>Retourne le fichier zip g\u00e9n\u00e9r\u00e9 sous forme de <code>file</code> ou  <code>null</code> en cas d'erreur.</p>"},{"location":"libs/%24zip/_append/#exemple","title":"Exemple","text":"<pre><code>$zip.append(zip,\n  [ \"C:/Temp/pdfs\",                 // ajout de dossier contenant plusieurs fichiers\n    \"C:/Temp/searchResult.xml\" ],   // ajout de fichier unique\n  { basePath: \"C:/Temp\" });\n</code></pre>"},{"location":"libs/%24zip/_create/","title":"<code>$zip.create</code>","text":""},{"location":"libs/%24zip/_create/#description","title":"Description","text":"<p>Cr\u00e9e une archive zip avec les fichiers pass\u00e9s en param\u00e8tre.</p>"},{"location":"libs/%24zip/_create/#syntaxe","title":"Syntaxe","text":"<p><code>$zip.create( zip , files [ , options ] )</code></p>"},{"location":"libs/%24zip/_create/#parametres","title":"Param\u00e8tres","text":"<code>zip</code> file / string Fichier zip \u00e0 cr\u00e9er ou compl\u00e9ter <code>files</code> file / string / array <p>Fichier(s) \u00e0 ajouter dans l'archive. Le ou les fichiers peuvent \u00eatre  un path donn\u00e9 sous forme de <code>string</code>, une r\u00e9f\u00e9rence de <code>file</code>, un tableau de <code>file</code> ou de <code>string</code> repr\u00e9sentant des paths.</p> <p>Il est possible de r\u00e9f\u00e9rencer un dossier, auquel cas tout le contenu du dossier est repris dans l'archive.</p> <code>options</code> map <p>Map d'options. Les options reconnues sont:</p> <code>basePath</code> file / string <p>Dossier de r\u00e9f\u00e9rence. Les paths de fichiers et de dossiers au sein de l'archive zip seront construits relativement au <code>basePath</code> si celui-ci est sp\u00e9cifi\u00e9.</p> <p>En l'absence de <code>basePath</code>, les fichiers sont syst\u00e9matiquement ajout\u00e9s \u00e0 la racine du zip. La construction du zip g\u00e9n\u00e9rera une erreur si dans ce cas on cherche \u00e0 ajouter deux fichiers de m\u00eame nom.</p> <p>L'option attend un path de dossier. Toutefois il est autoris\u00e9  de passer un path de fichier, auquel cas la m\u00e9thode s'appuiera  sur le dossier parent du fichier en question.</p>"},{"location":"libs/%24zip/_create/#retour","title":"Retour","text":"<p>Retourne le fichier zip g\u00e9n\u00e9r\u00e9 sous forme de <code>file</code> ou  <code>null</code> en cas d'erreur.</p>"},{"location":"libs/%24zip/_create/#exemple","title":"Exemple","text":"<pre><code>$zip.create(\n    \"c:/Temp/test.zip\",\n    [ \"c:/Temp/TestImage.png\",\n      \"c:/Temp/test m\u00e9dical.png\",\n      \"c:/Temp/README.md\",\n      \"c:/Temp/test/README.md\" ],\n    { basePath: \"C:/Temp\" }\n);\n</code></pre> <p>Dans l'exemple ci-dessus on ajoute deux fichiers \"README.md\" dans l'archive.  L'option <code>basePath</code> est importante ici pour que l'arborescence soit reprise  dans l'archive. Si on omet cette option, la construction du zip \u00e9chouera  avec l'erreur suivante:</p> <pre><code>C:\\opt\\ewt\\test\\scripts\\_test.script:6:7 - duplicate entry: README.md\n</code></pre>"},{"location":"libs/%24zip/_extract/","title":"<code>$zip.extract</code>","text":""},{"location":"libs/%24zip/_extract/#description","title":"Description","text":"<p>D\u00e9zippe un ou plusieurs fichiers d'une archive zip.</p> <p>Extraction de fichiers</p> <p>Les options de la m\u00e9thode permettent de sp\u00e9cifier quel(s) fichier(s) on souhaite extraire. On peut le faire soit en \u00e9num\u00e9rant les chemins des fichiers \u00e0 extraire, soit en indiquant une expression r\u00e9guli\u00e8re qui filtre les noms de fichiers.</p> <p>En pratique, il est pr\u00e9f\u00e9rable d'indiquer explicitement quels fichiers  on souhaite extraire car cela est plus efficace en termes de  performances. Le fait de ne sp\u00e9cifier qu'un filtre oblige la m\u00e9thode  \u00e0 parcourir tout le contenu de l'archive, ce qui peut prendre du  temps sur les grosses archives.</p> <p>Zip slip</p> <p>La m\u00e9thode d'extraction effectue un contr\u00f4le de s\u00e9curit\u00e9 pour  emp\u00eacher le  zip slip.</p>"},{"location":"libs/%24zip/_extract/#syntaxe","title":"Syntaxe","text":"<p><code>$zip.extract( zip , dest [ , options ] )</code></p>"},{"location":"libs/%24zip/_extract/#parametres","title":"Param\u00e8tres","text":"<code>zip</code> file / string Source \u00e0 d\u00e9zipper <code>dest</code> file / string Dossier de destination. Peut \u00eatre un objet <code>file</code> ou un path donn\u00e9 sous forme de <code>string</code> <code>options</code> map <p>Map d'options. Les options reconnues sont:</p> <code>files</code> string / array Nom du ou des fichiers \u00e0 extraire. Si d\u00e9fini, seuls les fichiers indiqu\u00e9s sont d\u00e9zipp\u00e9s. La valeur peut \u00eatre une simple <code>string</code> ou un tableau de <code>string</code> <code>filter</code> string Filtre permettant d'indiquer quel(s) fichier(s) extraire. Le filtre est \u00e0 passer sous la forme d'une expression r\u00e9guli\u00e8re."},{"location":"libs/%24zip/_extract/#retour","title":"Retour","text":"<p>Retourne <code>true</code> si l'extraction a pu se faire sans erreur, sinon <code>false</code>.</p>"},{"location":"libs/%24zip/_extract/#exemple","title":"Exemple","text":"<pre><code>var source = $file.load(\"C:/Temp/ch.zip\");\nvar destination = $file.create(\"C:/Temp/regbl-\" &amp; $cal.date(), null, { directory: true });\n\n$zip.extract(source, destination, {\n    files: [ \"eingang_entree_entrata.csv\",\n             \"gebaeude_batiment_edificio.csv\",\n             \"kodes_codes_codici.csv\",\n             \"wohnung_logement_abitazione.csv\" ]\n});\n</code></pre>"},{"location":"reference/bestpractices/","title":"Bonnes pratiques","text":""},{"location":"reference/bestpractices/#securite","title":"S\u00e9curit\u00e9","text":"<p>Ce document d\u00e9crit une s\u00e9rie de bonnes pratiques \u00e0 mettre en \u0153uvre pour  accro\u00eetre la s\u00e9curit\u00e9 et les performances d'une application Ewt.</p> <ul> <li>Contextualiser les scripts</li> <li>Ajouter des blocs \"policy\" lorsque cela est n\u00e9cessaire</li> <li>\u00c9viter de laisser des servlets non prot\u00e9g\u00e9s (au niveau du web.xml, si besoin   mettre une exception sur les URL rest qui sont autoris\u00e9es sans authentification)</li> <li>utiliser des annotations <code>@accept</code> ou <code>@reject</code> sur les scripts</li> <li>appliquer les r\u00e8gles de s\u00e9curit\u00e9 au niveau du serveur d'application (web.xml et autre)</li> </ul> <p>Autres r\u00e8gles \u00e0 mettre en \u0153uvre</p> <ul> <li>Toutes les r\u00e9ponses DOIVENT contenir \u00ab X-Content-Type-Options : nosniff \u00bb</li> <li>Toutes les r\u00e9ponses DOIVENT \u00eatre en HTTP Strict Transport Security headers (HSTS), y compris les sous-domaines</li> <li>\u00ab Referrer-Policy \u00bb DOIT \u00eatre utilis\u00e9 avec la valeur \u00ab no-referrer \u00bb ou \u00ab same-origin \u00bb ou \u00ab strict-origin-when-cross-origin \u00bb</li> <li>\u00ab X-Frame-Options \u00bb DOIT \u00eatre utilis\u00e9 avec le param\u00e8tre ad\u00e9quat suivant l\u2019application (en principe sameorigin)</li> <li>\u00ab Access-Control-Allow-Origin \u00bb NE DOIT PAS \u00eatre utilis\u00e9 avec *, il faut toujours pr\u00e9ciser l\u2019origine</li> <li>Le serveur web ne DOIT accepter que les m\u00e9thodes HTTP utilis\u00e9es par l\u2019application ou l\u2019API</li> <li>\u00ab Origin header \u00bb NE DOIT PAS \u00eatre utilis\u00e9 comme moyen d\u2019authentification</li> <li>Cross-Origin Resource Sharing (CORS) DOIT \u00eatre utilis\u00e9 uniquement avec une liste blanche de domaines de confiance, et la valeur \u201cnull\u201d comme origine est INTERDITE</li> <li>Les messages d\u2019erreurs NE DOIVENT PAS livrer d'information sur la configuration du syst\u00e8me, sur les versions et les connexions</li> <li>Le mode debug et http Trace DOIVENT \u00eatre d\u00e9sactiv\u00e9s en production</li> <li>Les requ\u00eates et r\u00e9ponses NE DOIVENT PAS exposer d'informations sur la configuration du syst\u00e8me, sur les versions et les connexions (Default config)</li> </ul>"},{"location":"reference/bestpractices/#performances","title":"Performances","text":""},{"location":"reference/bestpractices/#references-de-variables-et-de-champs","title":"R\u00e9f\u00e9rences de variables et de champs","text":"<p>\ud83d\udc4d \u00c9viter les r\u00e9f\u00e9rences du genre <code>${variable}</code> lorsque cela est possible et privil\u00e9gier la r\u00e9f\u00e9rence directe <code>variable</code></p> <p>\ud83d\udc4d \u00c9viter les r\u00e9f\u00e9rences du genre <code>${data:field}</code> lorsque cela est possible et privil\u00e9gier la notation sharp <code>#field</code></p> <p>Le traitement de r\u00e9f\u00e9rences du genre <code>${variable}</code> au sein d'une cha\u00eene de  caract\u00e8res est relativement co\u00fbteux en termes de traitement car cela oblige  le processeur de script \u00e0 effectuer un parsing de la cha\u00eene afin d'identifier  les r\u00e9f\u00e9rences, puis \u00e0 les r\u00e9soudre.</p> <p>Dans la mesure du possible, il est pr\u00e9f\u00e9rable de r\u00e9f\u00e9rencer les variables  directement: dans ce cas, le traitement peut \u00eatre pr\u00e9-effectu\u00e9 lors du  parsing du script. Ce travail n'est donc plus \u00e0 faire lors de l'ex\u00e9cution.</p> <p>L'exemple ci-dessous donne deux variantes d'un code qui, in fine,  produisent le m\u00eame r\u00e9sultat. On effectue deux boucles de 1 mio d'it\u00e9rations.</p> <pre><code>var txt, tbeg;\ntbeg = $cal.timestamp();\nfor (var i = 0; i &lt; 1000000; ++i) {\n    var v = [ i ];\n    txt = \"${v[0]}${v[0]}${v[0]}${v[0]}${v[0]}${v[0]}${v[0]}${v[0]}${v[0]}${v[0]}\";\n}\n$logger.info(\"Test 1: \" &amp; $cal.diff(tbeg, $cal.timestamp()));\n\ntbeg = $cal.timestamp();\nfor (var i = 0; i &lt; 1000000; ++i) {\n    var v = [ i ];\n    txt = v[0] &amp; v[0] &amp; v[0] &amp; v[0] &amp; v[0] &amp; v[0] &amp; v[0] &amp; v[0] &amp; v[0] &amp; v[0];\n}\n$logger.info(\"Test 2: \" &amp; $cal.diff(tbeg, $cal.timestamp()));\n</code></pre> <p>Dans le premier cas, on construit une cha\u00eene de caract\u00e8res en concat\u00e9nant plusieurs fois la valeur <code>v[0]</code> au moyen de la notation <code>${v[0]}</code>.</p> <p>Dans le second cas, on concat\u00e8ne \u00e9galement la valeur <code>v[0]</code>, mais cette fois en utilisant l'op\u00e9rateur <code>&amp;</code>.</p> <p>La seconde boucle est 3 fois plus rapide que la premi\u00e8re. La premi\u00e8re boucle  n\u00e9cessite 15.44 secondes de traitement alors que la seconde s'ex\u00e9cute en 4.8 secondes seulement.</p> <p>Il en va de m\u00eame pour les r\u00e9f\u00e9rences de champs. La notation <code>${data:field}</code>  permet de r\u00e9f\u00e9rencer la valeur d'un champ. Elle est pratique pour int\u00e9grer  une valeur de champ au sein d'une cha\u00eene, mais il est pr\u00e9f\u00e9rable de passer  par la notation sharp <code>#field</code> lorsque cela est possible.</p>"},{"location":"reference/bestpractices/#passage-de-parametre-par-reference","title":"Passage de param\u00e8tre par r\u00e9f\u00e9rence","text":"<p>\ud83d\udc4d Utiliser le passage de param\u00e8tre par r\u00e9f\u00e9rence plut\u00f4t que par valeur dans le cas de gros objets</p> <p>Lorsqu'on effectue un appel de fonction du genre <code>traiter(objet)</code>, le moteur  passe \u00e0 la fonction <code>traiter</code> une copie de <code>objet</code>. La copie n\u00e9cessite  d'allouer de la m\u00e9moire sur le serveur et d'effectuer des transferts de  donn\u00e9es pour copier l'objet. Tout cela n\u00e9cessite du traitement.</p> <p>Il est possible de passer un objet par r\u00e9f\u00e9rence, c'est-\u00e0-dire que dans ce  cas l'objet source n'est plus copi\u00e9, mais r\u00e9f\u00e9renc\u00e9. C'est l'objet lui-m\u00eame  qui est pass\u00e9 \u00e0 la fonction. Le traitement au niveau du serveur est plus  simple et plus rapide.</p> <p>Pour indiquer que l'on souhaite passer un objet par r\u00e9f\u00e9rence, il suffit de pr\u00e9fixer le nom de l'objet avec un <code>&amp;</code>. Cela donne: <code>traiter(&amp;objet)</code>. </p>"},{"location":"reference/bestpractices/#requetes-sql","title":"Requ\u00eates SQL","text":"<p>\ud83d\udc4d Utiliser les prepared statements </p> <p>\ud83d\udc4d Utiliser des batchs pour les traitements par lots</p> <p>Le moteur supporte l'utilisation des prepared statements. Cela offre  une s\u00e9curit\u00e9 accrue et emp\u00eache l'injection SQL. Les prepared statements  permettent \u00e9galement la r\u00e9utilisation de requ\u00eate pr\u00e9-pars\u00e9e et  l'ex\u00e9cution batchs.</p> <p>Ewt propose deux syntaxes pour utiliser le principe des prepared statements: le passage de param\u00e8tres en table ou en map.</p>"},{"location":"reference/bestpractices/#syntaxe-utilisant-une-table-de-parametres","title":"Syntaxe utilisant une table de param\u00e8tres","text":"<p>Cette syntaxe est la plus standard et la plus directe car elle est  nativement support\u00e9e par les drivers JDBC. Le principe est de repr\u00e9senter  les valeurs \u00e0 ins\u00e9rer dans la requ\u00eate au moyen du caract\u00e8re <code>?</code>, puis de  passer un tableau de valeur en param\u00e8tre \u00e0 la requ\u00eate.</p> <p>Voici un exemple de requ\u00eate utilisant un prepared statement:</p> <pre><code>$sql.update(`update Vendeur\n             set Nom=?, Prenom=?\n             where idVendeur=?`::T,\n            [ \"O'Reilly\", \"John\", 14 ]); \n</code></pre> <p>La valeur \"O'Reilly\" viendra remplacer le premier <code>?</code> (notez au passage  qu'il n'y a pas besoin de doubler l'apostrophe de la valeur), la valeur  \"John\" viendra remplacer le deuxi\u00e8me <code>?</code>, etc.</p> <p>La notation est semblable pour les requ\u00eates de type \"select\", \"insert\", \"update\", \"delete\", etc.</p> <p>Le terme \"prepared statement\" vient du fait que la requ\u00eate en soi est devenue ind\u00e9pendante des valeurs. Elle a la m\u00eame forme quelques soient les valeurs que l'on souhaite ins\u00e9rer dans la table. La requ\u00eate peut \u00eatre  pr\u00e9par\u00e9e, c'est-\u00e0-dire pars\u00e9e une seule fois par le serveur de base de  donn\u00e9es et servir pour plusieurs op\u00e9rations.</p>"},{"location":"reference/bestpractices/#syntaxe-utilisant-un-map","title":"Syntaxe utilisant un map","text":"<p>L'id\u00e9e du map de param\u00e8tre est semblable \u00e0 celui de la table de param\u00e8tres, mais ici les param\u00e8tres sont nomm\u00e9s. Plut\u00f4t que de remplacer les valeurs \"en dur\" par un simple <code>?</code>, on les remplace par des noms de propri\u00e9t\u00e9s et on passe en param\u00e8tre un map qui associe des valeurs \u00e0 ces propri\u00e9t\u00e9s. Pour indiquer qu'un identifiant est une r\u00e9f\u00e9rence de propri\u00e9t\u00e9, on la pr\u00e9fixe avec un <code>:</code>. L'avantage ici est qu'une r\u00e9f\u00e9rence de propri\u00e9t\u00e9 peut \u00eatre reprise plusieurs fois dans la requ\u00eate.</p> <p>Voici un exemple. En variante par table, la requ\u00eate suivante oblige \u00e0 passer plusieurs fois une m\u00eame valeur dans la table de valeurs<sup>1</sup>:</p> <pre><code>$sql.select(`select idDemande, resume from Demande where idResponsable = ?\n             union\n             select idOffre, resume from Offre where idResponsable = ?\n             union\n             select idFacture, resume from Facture where idResponsable = ?`,\n            [ 123, 123, 123 ]);\n</code></pre> <p>Le passage de param\u00e8tre par map permet d'\u00e9viter cette contrainte:</p> <pre><code>$sql.select(`select idDemande, resume from Demande where idResponsable = :user\n             union\n             select idOffre, resume from Offre where idResponsable = :user\n             union\n             select idFacture, resume from Facture where idResponsable = :user`,\n            { user: 123 });\n</code></pre>"},{"location":"reference/bestpractices/#optimisations","title":"Optimisations","text":"<p>Un prepared statement est r\u00e9utilisable : il donne le gabarit de requ\u00eate pour  le traitement et peut servir pour plusieurs jeux de donn\u00e9es. Ewt propose  plusieurs variantes pour r\u00e9uitliser un prepared statement.</p> <p>Variante 1 - r\u00e9utilisation simple d'un prepared statement L'id\u00e9e ici est de pr\u00e9-g\u00e9n\u00e9rer un prepared statement et de le r\u00e9utiliser ensuite pour passer les requ\u00eates. L'avantage est que le SGBD n'a pas besoin de parser la requ\u00eate \u00e0 chaque ex\u00e9cution, ce qui, en th\u00e9orie, repr\u00e9sente un gain de temps. Dans la pratique le gain de temps est relativement minime avec cette m\u00e9thode car le rapport entre le temps de parsing de la requ\u00eate est bien moins co\u00fbteux que le temps d'ex\u00e9cution de cette derni\u00e8re.</p> <pre><code>// on d\u00e9clare un prepared statement et on re\u00e7oit alors\n// un identifiant pour ce prepared statement\nvar pstmt = $sql.prepareStatement(`update Vendeur\n                                   set Nom=?, Prenom=?\n                                   where idVendeur=?`::T);\n\n// on peut r\u00e9utiliser cet identifiant dans les requ\u00eates\n$sql.update(pstmt, [ \"C\u00e9sar\", \"Jules\", 14 ]);\n$sql.update(pstmt, [ \"Doe\", \"John\", 30 ]);\n$sql.update(pstmt, [ \"Bernasconi\", \"Mario\", 50 ]);\n\n// on lib\u00e8re le prepared statement en fin de traitement\n$sql.releaseStatement(pstmt);\n</code></pre> <p>Variante 2 - regroupement des donn\u00e9es Cette variante est tr\u00e8s proche de la pr\u00e9c\u00e9dente. Elle consiste simplement \u00e0 regrouper les 3 appels <code>$sql.update</code> en un seul. Les donn\u00e9es sont alors regroup\u00e9es dans une matrice organis\u00e9e comme un tableau de tableaux:</p> <pre><code>// on d\u00e9clare un prepared statement et on re\u00e7oit alors\n// un identifiant pour ce prepared statement\nvar pstmt = $sql.prepareStatement(`update Vendeur\n                                   set Nom=?, Prenom=?\n                                   where idVendeur=?`::T);\n\n// on peut r\u00e9utiliser cet identifiant dans les requ\u00eates\n$sql.update(pstmt, [ [ \"C\u00e9sar\", \"Jules\", 14 ],\n                     [ \"Doe\", \"John\", 30 ],\n                     [ \"Bernasconi\", \"Mario\", 50 ] ]);\n\n// on lib\u00e8re le prepared statement en fin de traitement\n$sql.releaseStatement(pstmt);\n</code></pre> <p>Les requ\u00eates d'update retournent g\u00e9n\u00e9ralement le nombre de lignes modifi\u00e9es. Ici les r\u00e9ponses sont plac\u00e9es dans un tableau de valeurs, o\u00f9 chaque entr\u00e9e correspond \u00e0 une ex\u00e9cution de requ\u00eate.</p> <p>Variante 3 - les batchs Les variantes pr\u00e9c\u00e9dentes utilisent le principe de l'auto-commit. Cela signifie que chaque requ\u00eate \"agit\" sur la base de donn\u00e9es. Cela est utile si une requ\u00eate d\u00e9pend du r\u00e9sultat de la requ\u00eate pr\u00e9c\u00e9dente.</p> <p>Toutefois, si le but est de passer des requ\u00eates en s\u00e9rie et que ces requ\u00eates n'ont pas de lien entre elles, il est possible de d\u00e9sactiver cet auto-commit pour le lot de requ\u00eates, et de faire ex\u00e9cuter ces derni\u00e8res en batch.</p> <pre><code>// on d\u00e9clare un prepared statement et on re\u00e7oit alors\n// un identifiant pour ce prepared statement; \u00e0 noter\n// l'option \"autocommit: false\" qui demande de d\u00e9sactiver\n// l'auto-commit.\nvar pstmt = $sql.prepareStatement(`update Vendeur\n                                   set Nom=?, Prenom=?\n                                   where idVendeur=?`::T,\n                                  { autocommit: false });\n\n// on pousse les donn\u00e9es sous forme de batch\n$sql.addBatch(pstmt, [ \"C\u00e9sar\", \"Jules\", 14 ]);\n$sql.addBatch(pstmt, [ \"Doe\", \"John\", 30 ]);\n$sql.addBatch(pstmt, [ \"Bernasconi\", \"Mario\", 50 ]);\n\n// on lance l'ex\u00e9cution de la requ\u00eate sur chaque \u00e9l\u00e9ment de batch\n// toutes les requ\u00eates sont pass\u00e9es \"one shot\" et enregistr\u00e9es en\n// db via une unique commit\n$sql.executeBatch(pstmt);\n\n// on lib\u00e8re le prepared statement en fin de traitement\n$sql.releaseStatement(pstmt);\n</code></pre> <p>L'autre avantage ici est que si une requ\u00eate</p> <p>Variante 4 - regroupement de batchs La variante 4 est l'\u00e9quivalent de la variante 2, mais appliqu\u00e9e aux batchs. L'id\u00e9e est de regrouper les diff\u00e9rents appels \u00e0 <code>$sql.addBatch</code> en un seul, en passant alors une matrice de valeurs.</p> <p>L'exemple est tr\u00e8s similaire \u00e0 celui de la variante 3. La seule diff\u00e9rence se situe au niveau des 3 appels <code>$sql.addBatch</code>, qui sont regrou\u00e9s en un seul:</p> <pre><code>$sql.addBatch(pstmt, [ [ \"C\u00e9sar\", \"Jules\", 14 ],\n                       [ \"Doe\", \"John\", 30 ],\n                       [ \"Bernasconi\", \"Mario\", 50 ] ]);\n</code></pre> <p>Comparatif des performances Les 4 variantes ont \u00e9t\u00e9 \u00e9valu\u00e9es avec une m\u00eame requ\u00eate d'insertion r\u00e9p\u00e9t\u00e9e 20'000 fois.</p> version de base 11'929 ms variante 1 11'318 ms variante 2 11'952 ms variante 3 1'207 ms variante 4 1'110 ms <ol> <li> <p>Cette requ\u00eate n'est pas optimale, mais elle est donn\u00e9e pour l'exemple.  Il serait bien entendu possible de la construire diff\u00e9remment (par exemple  avec une clause <code>with</code>) pour se passer de r\u00e9p\u00e9ter le param\u00e8tre.\u00a0\u21a9</p> </li> </ol>"},{"location":"reference/bootstrap/","title":"Fichier bootstrap","text":"<p>Le fichier bootstrap permet de sp\u00e9cifier certaines propri\u00e9t\u00e9s de  fonctionnement d'Ewt.</p> <p>Ce fichier s'appelle <code>ewt.properties</code> et doit se trouver dans le  r\u00e9pertoire qui contient les applications Ewt. Pour rappel, ce r\u00e9pertoire est  d\u00e9fini au moyen du param\u00e8tre de contexte <code>application-root-path</code> d\u00e9fini dans  le <code>web.xml</code>.</p> <p>Dans la configuration de base, le chemin des applications doit \u00eatre  sp\u00e9cifi\u00e9 au moyen de la variable d'environnement  <code>EWT_APPLICATION_ROOT_PATH</code>. Le fichier bootstrap devra donc se trouver dans  le r\u00e9pertoire r\u00e9f\u00e9renc\u00e9 par cette variable d'environnement.</p> <p>Le fichier en soi est un simple fichier de propri\u00e9t\u00e9s, donc un ensemble de  lignes comportant des cl\u00e9s et des valeurs. Par exemple:</p> <pre><code># Liste des applications que le moteur initialise automatiquement\n# L'initialisation automatique d'une application est requis si celle-ci\n# utilise le scheduler. Le scheduler des applications non r\u00e9f\u00e9renc\u00e9es ne\n# sera pas d\u00e9marr\u00e9 tant qu'aucune connexion n'y sera faite.\nauto-load-applications = \n\n# Path de l'endpoint des websockets\nwebsocket-endpoint-path = /websocket\n</code></pre> <p>Ewt recherche plusieurs entr\u00e9es dans ce fichier.</p> <code>auto-load-applications</code> <p>Il s'agit de la liste des applications \u00e0 charger automatiquement au  d\u00e9marrage de l'instance. Il est possible de sp\u00e9cifier plusieurs noms  d'applications en les s\u00e9parant par une virgule.</p> <p>Il est important de r\u00e9f\u00e9rencer une application qui utilise un scheduler  afin que celui-ci soit automatiquement d\u00e9marr\u00e9.</p> <code>websocket-endpoint-path</code> <p>Cette propri\u00e9t\u00e9 permet de sp\u00e9cifier le path de l'endpoint sur lequel  seront mis \u00e0 disposition les WebSockets.</p> <p>Il est \u00e9galement possible de sp\u00e9cifier le path des WebSockets au  niveau du param\u00e8tre de contexte <code>websocket-endpoint-path</code> dans le  <code>web.xml</code>.</p> <p>Dans le cas o\u00f9 la propri\u00e9t\u00e9 est d\u00e9finie \u00e0 la fois au niveau du  <code>web.xml</code> et du fichier bootstrap, c'est la valeur de ce dernier qui  prime. </p>"},{"location":"reference/config/","title":"Config","text":"<p>Le fichier de configuration <code>config.xml</code> permet de d\u00e9finir les param\u00e8tres de configuration de l'application. Il s'agit d'un fichier XML qui doit se  trouver dans le dossier de base de l'application et structur\u00e9 selon le  principe suivant:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;config&gt;\n    &lt;section1&gt;\n        &lt;property1&gt;value section1.property1&lt;/property1&gt;\n        &lt;property2&gt;value section1.property2&lt;/property2&gt;\n        &lt;!-- ... --&gt;\n    &lt;/section1&gt;\n    &lt;section2&gt;\n        &lt;property1&gt;value section2.property1&lt;/property1&gt;\n        &lt;property2&gt;value section2.property2&lt;/property2&gt;\n        &lt;!-- ... --&gt;\n    &lt;/section2&gt;\n    &lt;!-- ... --&gt;\n&lt;/config&gt;\n</code></pre> <p>Encoding</p> <p>Le prolog du ficihier XMl ci-dessus d\u00e9clare un charset utf-8. Ce n'est  pas une obligation, mais Ewt recommande d'utiliser ce charset dans tout  le projet, en particulier au niveau des scripts.</p> <p>Le fichier est subdivis\u00e9 en sections, dans lesquelles sont d\u00e9finies des  propri\u00e9t\u00e9s. L'ordre des sections et des propri\u00e9t\u00e9s n'a pas d'importance.</p> <p>Les valeurs des propri\u00e9t\u00e9s peuvent \u00eatre not\u00e9es en clair, sous forme de valeur chiffr\u00e9e (dans ce cas on indiquera que la valeur est chiffr\u00e9e au moyen d'un attribut <code>encrypted=\"true\"</code>) ou sous forme de r\u00e9f\u00e9rence. Par exemple il est possible de reprendre la valeur d'une variable d'environnement au moyen de la syntaxe <code>${env:MA_VARIABLE}</code>.</p>"},{"location":"reference/config/#valeurs-de-proprietes","title":"Valeurs de propri\u00e9t\u00e9s","text":"<p>Ewt autorise l'usage de variables dans les valeurs de propri\u00e9t\u00e9s. Un exemple est donn\u00e9 \u00e0 la fin de ce document pour l'entr\u00e9e <code>admin.instanceName</code>: la  valeur</p> <pre><code>&lt;instanceName&gt;${env:INSTANCENAME}&lt;/instanceName&gt;\n</code></pre> <p>fait ici r\u00e9f\u00e9rence \u00e0 une variable d'environnement. Il est \u00e9galement possible  de r\u00e9f\u00e9rencer des propri\u00e9t\u00e9s syst\u00e8mes ou d'autres types de valeurs. Il est  aussi possible de combiner diff\u00e9rentes valeurs, comme  <code>x${env:aaa}y${sys:bbb}z</code>.</p> <p>Voici quelques exemples de syntaxe:</p> Type de valeur Exemple de syntaxe System Property <code>${sys:user.dir}</code> Environment Variable <code>${env:USERNAME}</code> Base64 Decoder <code>${base64Decoder:SGVsbG9Xb3JsZCE=}</code> Base64 Encoder <code>${base64Encoder:HelloWorld!}</code> Java Constant <code>${const:java.awt.event.KeyEvent.VK_ESCAPE}</code> Date <code>${date:yyyy-MM-dd}</code> Timestamp <code>${date:yyyy-MM-dd HH:mm:ss.SSS}</code> File Content <code>${file:UTF-8:src/test/resources/document.properties}</code> Java <code>${java:version}</code> Localhost <code>${localhost:canonical-name}</code> Properties File <code>${properties:src/test/resources/document.properties::mykey}</code> Resource Bundle <code>${resourceBundle:org.apache.commons.text.example.testResourceBundleLookup:mykey}</code> URL Decoder <code>${urlDecoder:Hello%20World%21}</code> URL Encoder <code>${urlEncoder:Hello World!}</code> XML XPath <code>${xml:src/test/resources/document.xml:/root/path/to/node}</code> <p>Ces exemples sont tir\u00e9s de la documentation en ligne disponible sur la page de la librairie utilis\u00e9e pour effectuer les substitutions: commons-text.</p>"},{"location":"reference/config/#valeurs-chiffrees","title":"Valeurs chiffr\u00e9es","text":"<p>Les propri\u00e9t\u00e9s peuvent \u00eatre chiffr\u00e9es. Dans ce cas, on indiquera que la valeur est chiffr\u00e9e au moyen de l'attribut <code>encrypted=\"true\"</code>. Pour traiter les valeurs chiffr\u00e9es, Ewt a besoin d'une cl\u00e9 de chiffrement. Celle-ci est \u00e0 d\u00e9finir via la variable d'environnement <code>EWT_ENCRYPT_PASSWORD</code>.</p>"},{"location":"reference/config/#generer-une-valeur-chiffree","title":"G\u00e9n\u00e9rer une valeur chiffr\u00e9e","text":"<p>La mani\u00e8re la plus simple de g\u00e9n\u00e9rer une valeur chiffr\u00e9e est de le faire au moyen d'un script. La ligne de commande suivante effectuera le chiffrement d'une valeur donn\u00e9e:</p> <pre><code>$cipher.encrypt(\"mavaleur\", \"${env:EWT_ENCRYPT_PASSWORD}\");\n</code></pre>"},{"location":"reference/config/#valeurs-publiques","title":"Valeurs publiques","text":"<p>Non impl\u00e9ment\u00e9</p> <p>Cette option n'est pas support\u00e9e dans la version actuelle du moteur</p> <p>Les \u00e9l\u00e9ments marqu\u00e9s comme publiques sont repris dans l'arbre de sortie g\u00e9n\u00e9r\u00e9 par le moteur, de sorte qu'ils sont exploitables par la feuille de style de transformation.</p> <p>Pour sp\u00e9cifier qu'un \u00e9l\u00e9ment est public, on lui d\u00e9finit un attribut <code>public=\"true\"</code>. L'\u00e9l\u00e9ment et ses fils sont alors repris int\u00e9gralement dans l'arbre, \u00e0 l'exception de ceux pour lesquels un attribut <code>public=\"false\"</code> serait sp\u00e9cifi\u00e9.</p>"},{"location":"reference/config/#section-admin","title":"Section <code>admin</code>","text":"<p>La section <code>admin</code> contient une s\u00e9rie de propri\u00e9t\u00e9s globales \u00e0 l'application.</p>"},{"location":"reference/config/#applicationname","title":"<code>applicationName</code>","text":"<p>Nom de l'application. En r\u00e9alit\u00e9 cet \u00e9l\u00e9ment ne joue aucun r\u00f4le. Il n'est pas obligatoire et est juste repris tel quel dans l'arbre de sortie pour  permettre \u00e0 la feuille de style de l'afficher.</p>"},{"location":"reference/config/#documentmode","title":"<code>documentMode</code>","text":"<p>Indique le mode de gestion de dossiers. Les valeurs possibles sont <code>single</code>  (par d\u00e9faut), <code>multi</code> ou <code>cross</code>.</p> <code>single</code> En mode <code>single</code> le moteur ne conserve qu'un seul dossier ouvert \u00e0  la fois par session. Cela signifie que le moteur ferme automatiquement  tout dossier ouvert lors de l'ouverture ou de la cr\u00e9ation de dossier. <code>multi</code> En mode <code>multi</code>, le moteur peut conserver plusieurs dossiers en session  et fournit les donn\u00e9es de tous ces dossiers dans l'arbre de sortie <code>cross</code> <p>Non impl\u00e9ment\u00e9 - ce mode est pr\u00e9visionnel</p> <p>Le mode <code>cross</code> est en quelque sorte un mode interm\u00e9diaire entre  les deux pr\u00e9c\u00e9dents: dans ce mode le moteur peut conserver plusieurs  dossiers dans la session (comme en <code>multi</code>) mais ne retourne que les  donn\u00e9es d'un seul d'entre eux dans l'arbre de sortie (comme en <code>single</code>).</p>"},{"location":"reference/config/#transientobjectnameprefix","title":"<code>transientObjectNamePrefix</code>","text":"<p>Pr\u00e9fixe des champs d\u00e9finis par la feuille de style et que le moteur doit reprendre en sortie en tant qu'objets transients. Le pr\u00e9fixe par d\u00e9faut est <code>SESSION:</code>. Concr\u00e8tement cela signifie que tous les champs  obtenus d'un formulaire HTML et donc le nom est pr\u00e9fix\u00e9 au moyen de  <code>SESSION:</code> seront consid\u00e9r\u00e9s comme objets transients.</p> <p>Objet transient</p> <p>Un objet transient (ou objet transitoire) est un objet qui est  enregistr\u00e9 provisoirement au niveau du thread que le moteur est en train  de g\u00e9rer, mais pas au niveau de la session utilisateur. Cela signifie  que les objets transients \"transitent\" par le moteur Ewt, mais ne sont  pas stock\u00e9s dans la session.</p> <p>Les objets transients se distinguent des objets permanents qui, eux,  sont conserv\u00e9s dans la session utilisateur.</p> <p>Les objets transients sont plut\u00f4t destin\u00e9s \u00e0 v\u00e9hiculer des informations  utiles \u00e0 l'interface utilisateur alors que les objets permanents sont  plut\u00f4t utiles \u00e0 traiter des informations utiles \u00e0 l'application.</p>"},{"location":"reference/config/#primarykeytype","title":"<code>primaryKeyType</code>","text":"<p>Type de cl\u00e9 primaire. Les valeurs possibles sont <code>int</code>, <code>bigint</code>, <code>uuid</code> ou <code>snowflake</code>.</p> <p>La valeur par d\u00e9faut est <code>int</code>. \u00c0 noter que le type doit \u00eatre adapt\u00e9  au SGBD utilis\u00e9. Par exemple SQLite ne supporte pas <code>bigint</code>.</p>"},{"location":"reference/config/#enablescheduler","title":"<code>enableScheduler</code>","text":"<p>Flag <code>true</code>/<code>false</code> indiquant si l'application utilise un scheduler.</p> <p>La valeur par d\u00e9faut est <code>false</code>.</p> <p>D\u00e9marrage automatique</p> <p>Il est recommand\u00e9 d'activer le d\u00e9marrage automatique d'une application  qui utilise un scheduler afin que celui-ci puisse d\u00e9marrer d\u00e8s  l'activation d'une instance.</p> <p>Pour ce faire, il faut d\u00e9clarer l'application dans la liste des  <code>auto-load-applications</code> au niveau du fichier bootstrap.</p>"},{"location":"reference/config/#instancename","title":"<code>instanceName</code>","text":"<p>Nom de l'instance utilis\u00e9e pour r\u00e9partir les t\u00e2ches du scheduler.</p>"},{"location":"reference/config/#runmode","title":"<code>runMode</code>","text":"<p>Mode d'ex\u00e9cution de l'application. La propri\u00e9t\u00e9 peut prendre les valeurs suivantes:</p> <ul> <li><code>prod</code>: mode pr\u00e9vu pour le fonctionnement en production</li> <li><code>test</code>: mode pr\u00e9vu pour les tests</li> <li><code>dev</code>: mode pr\u00e9vu pour le d\u00e9veloppement (dans ce mode,   l'application surveille automatiquement les mises \u00e0 jour   de fichiers de script et les recharge lorsque cela est   n\u00e9cessaire; l'arbre de sortie contient \u00e9galement des   \u00e9l\u00e9ments de debug pour aider \u00e0 identifier les sources de   probl\u00e8mes)</li> </ul> <p>La valeur par d\u00e9faut est <code>prod</code>.</p>"},{"location":"reference/config/#debuggerport","title":"<code>debuggerPort</code>","text":"<p>Port d'\u00e9coute du debugger. Le debugger utilise un socket r\u00e9seau pour la communication entre un outil de debugging externe et Ewt via le protocole DAP. Le socket n'est ouvert que si l'application est en mode <code>dev</code> (voir <code>runMode</code>) et que le port est  strictement sup\u00e9rieur \u00e0 0.</p>"},{"location":"reference/config/#debuggeraddress","title":"<code>debuggerAddress</code>","text":"<p>Adresse IP de bind pour le debugger.</p> <p>Cette propri\u00e9t\u00e9 n'est pas obligatoire lorsque l'on souhaite activer  le debugger. Elle permet de filtrer les acc\u00e8s par IP.</p>"},{"location":"reference/config/#dumpoutput","title":"<code>dumpOutput</code>","text":"<p>Flag <code>true</code>/<code>false</code> indiquant de g\u00e9n\u00e9rer un fichier <code>output-web.xml</code>  dans le temp avec l'arbre xml de sortie du moteur. La valeur par  d\u00e9faut est <code>false</code>.</p>"},{"location":"reference/config/#loglevel","title":"<code>logLevel</code>","text":"<p>Level par d\u00e9faut \u00e0 attribuer au logger de l'application. Les niveaux disponibles sont, dans l'ordre:</p> <ul> <li><code>trace</code> (affiche tout)</li> <li><code>debug</code></li> <li><code>info</code></li> <li><code>warn</code></li> <li><code>error</code> (n'affiche que les erreurs)</li> </ul> <p>La valeur par d\u00e9faut est <code>trace</code>.</p>"},{"location":"reference/config/#cipherpassword","title":"<code>cipherPassword</code>","text":"<p>Mot de passe par d\u00e9faut pour le chiffrement/d\u00e9chiffrement (voir m\u00e9thodes  <code>$cipher.encrypt</code> et <code>$cipher.decrypt</code>). En clair, cette propri\u00e9t\u00e9  remplace le second param\u00e8tre des m\u00e9thodes ci-dessus lorsque celui-ci n'est  pas explicitement indiqu\u00e9 dans l'appel.</p> <p>Dans l'exemple donn\u00e9 \u00e0 la fin de ce document, la valeur pass\u00e9 \u00e0 la propri\u00e9t\u00e9  <code>admin.cipherPassword</code> est chiffr\u00e9e. C'est en fait le cas de la plupart des  donn\u00e9es qui repr\u00e9sentent des credentials ou des cl\u00e9s. Pour g\u00e9n\u00e9rer la  valeur chiffr\u00e9e, on peut utiliser l'instruction de script suivante:</p> <pre><code>$cipher.encrypt(\"mavaleur\", $sys.getEnv(\"EWT_ENCRYPT_PASSWORD\"));\n</code></pre>"},{"location":"reference/config/#sessionttl","title":"<code>sessionTTL</code>","text":"<p>Dur\u00e9e de vie des sessions, en millisecondes. Ce TTL d\u00e9signe le temps durant lequel les sessions non rafra\u00eechies restent dans le cache si l'utilisateur n'effectue aucune action (aucun post). Lorsqu'une session expire, les locks de tous les dossiers de la session sont automatiquement lib\u00e9r\u00e9s. Les dur\u00e9es de vie des sessions sont r\u00e9initialis\u00e9es si l'utilisateur effectue une action.</p> <p>Un TTL par d\u00e9faut de 3600000 (soit 1 heure) est appliqu\u00e9 si <code>sessionTTL</code> et <code>sessionEOL</code> ne sont pas d\u00e9finis.</p> <p>Remarque 1</p> <p>Le contr\u00f4le de sessions se fait toutes les minutes, il est donc possible que certaines sessions durent quelques secondes de plus que la valeur indiqu\u00e9e</p> <p>Remarque 2</p> <p>Il est possible d'indiquer une valeur n\u00e9gative ou nulle pour  signifier que l'on ne souhaite pas forcer d'expiration. Par contre dans ce cas il est attendu que l'on d\u00e9finisse la propri\u00e9t\u00e9 <code>sessionEOL</code>.</p> <p>Remarque 3</p> <p>La dur\u00e9e de vie des sessions peut avoir un impact sur la  quantit\u00e9 de m\u00e9moire que le moteur devra allouer, il n'est donc pas conseill\u00e9 de sp\u00e9cifier des TTL trop grands.</p>"},{"location":"reference/config/#sessioneol","title":"<code>sessionEOL</code>","text":"<p>D\u00e9lai d'expiration absolu des sessions. Si d\u00e9finie, cette propri\u00e9t\u00e9  permet d'indiquer \u00e0 quel(s) moment(s) les sessions doivent expirer,  ainsi toutes les sessions existantes \u00e0 l'heure indiqu\u00e9e (ou l'une des heures indiqu\u00e9es) sont automatiquement supprim\u00e9es. L'heure doit \u00eatre d\u00e9finie selon le format <code>hh:mm:ss</code> ou <code>hh:mm</code>. </p> <p>Pour indiquer plusieurs heures, utiliser une virgule ou un point-virgule (p.ex \"03:00:00;12:30\").</p> <p>Voir <code>sessionTTL</code>.</p>"},{"location":"reference/config/#sessionrenewable","title":"<code>sessionRenewable</code>","text":"<p>Flag indiquant si une session peut \u00eatre renouvel\u00e9e (ou \u00e9tendue). Par d\u00e9faut,  les sessions expir\u00e9es sont perdues. Il est toutefois possible d'autoriser  une session \u00e0 \u00eatre \u00e9tendue. Cela signifie que le d\u00e9lai de fin de vie de la  session est report\u00e9 d'un cycle (en fonction des param\u00e8tres sessionTTL et/ou  sessionEOL). </p> <p>Pour qu'une session soit \u00e9tendue, il faut qu'elle puisse \u00eatre retrouv\u00e9e, ce  qui n'est pas le cas par d\u00e9faut. Il est donc n\u00e9cessaire d'activer le mode  failover pour que les sessions soient stock\u00e9es en base de donn\u00e9es. </p>"},{"location":"reference/config/#failovermode","title":"<code>failoverMode</code>","text":"<p>Mode de failover souhait\u00e9 sur l'application. Le but du failover est  d'assurer une continuit\u00e9 de service lorsqu'une instance est stopp\u00e9e (de  mani\u00e8re volontaire ou non). Le failover permet de r\u00e9cup\u00e9rer les sessions  sur une autre instance \u00e0 la vol\u00e9e.</p> <p>Le failover permet \u00e9galement de prolonger une session au-del\u00e0 de sa dur\u00e9e  de vie normale. Voir propri\u00e9t\u00e9 <code>sessionRenewable</code>.</p> <p>Concr\u00e8tement, le param\u00e8tre active un mode dans lequel le moteur s\u00e9rialise  les sessions et les sauvegarde en vue de pouvoir les restaurer en cas de  besoin. Le fait d'activer un mode de failover peut avoir un impact sur les  performances de l'application, c'est pourquoi il est conseill\u00e9 de ne  l'activer que lorsqu'un haut niveau de service est souhait\u00e9.</p> <p>La propri\u00e9t\u00e9 peut prendre les valeurs suivantes:</p> <code>database</code> <p>Active le failover en utilisant la base de donn\u00e9es comme support pour  enregistrer les sessions. Le moteur utilise alors la table  <code>ewt_sessions</code> pour stocker les informations de sessions.</p> <p>La dur\u00e9e de conservation des informations de session est d\u00e9termin\u00e9e par  la propri\u00e9t\u00e9 <code>failoverDatabaseCacheTime</code>.</p> <code>request</code> - Ce mode n'est pas support\u00e9 dans la version actuelle. Active le failover en utilisant la requ\u00eate HTTP pour v\u00e9hiculer les  infos de sessions de fa\u00e7on chiffr\u00e9e.  <p>Toute autre valeur est ignor\u00e9e, ce qui a pour effet de ne pas activer le  m\u00e9canisme de failover pour l'application.</p>"},{"location":"reference/config/#failoverdatabasecachetime","title":"<code>failoverDatabaseCacheTime</code>","text":"<p>D\u00e9lai de conservation des sessions dans le cache de la base de donn\u00e9es, en  millisecondes.</p> <p>La propri\u00e9t\u00e9 indique combien de temps les infos de session stock\u00e9es en base  de donn\u00e9es (voir mode de failover <code>database</code>). Au-del\u00e0 de  ce d\u00e9lai, les infos sont supprim\u00e9es de la base de donn\u00e9es.</p> <p>La valeur par d\u00e9faut est de 15 minutes. Ce d\u00e9lai est cens\u00e9 \u00eatre suffisant  pour un red\u00e9marrage de l'instance.</p> <p>Il est possible de sp\u00e9cifier une valeur n\u00e9gative ou nulle. Dans ce cas, le  cache en base de donn\u00e9es n'est jamais nettoy\u00e9. Il est de la responsabilit\u00e9  de l'application de nettoyer le cache dans ce cas.</p>"},{"location":"reference/config/#section-database","title":"Section <code>database</code>","text":""},{"location":"reference/config/#verbose","title":"<code>verbose</code>","text":"<p>Active le mode de debug des requ\u00eates SQL. Les valeurs possibles sont:</p> <ul> <li><code>false</code> : d\u00e9sactive les traces; c'est le mode par d\u00e9faut</li> <li><code>trace</code> : affiche les requ\u00eates en tant que traces</li> <li><code>debug</code> ou <code>true</code> : affiche les requ\u00eates en tant que debug</li> <li><code>info</code> : affiche les requ\u00eates en tant que info</li> <li><code>warn</code> : affiche les requ\u00eates en tant que warn</li> <li><code>error</code> : affiche les requ\u00eates en tant que error</li> </ul>"},{"location":"reference/config/#defaultconnectionconfig","title":"<code>defaultConnectionConfig</code>","text":"<p>Nom de la connexion par d\u00e9faut. La valeur doit r\u00e9f\u00e9rencer l'attribut <code>name</code>  d'un n\u0153ud <code>&lt;connection&gt;</code>. \u00c0 noter qu'on peut se passer de cette propri\u00e9t\u00e9  en d\u00e9finissant une entr\u00e9e <code>&lt;connection&gt;</code> sans attribut <code>name</code>.</p>"},{"location":"reference/config/#connection","title":"<code>connection</code>","text":"<p>Sous-section de param\u00e8tres de connexion \u00e0 la base de donn\u00e9es. L'\u00e9l\u00e9ment  <code>&lt;connection&gt;</code> peut est d\u00e9fini plusieurs fois, mais dans ce cas il faut  nommer les connexions au moyen d'un attribut <code>name</code> et indiquer quelle  est la connexion par d\u00e9faut utilis\u00e9e par l'application via la propri\u00e9t\u00e9  <code>defaultConnectionConfig</code>.</p>"},{"location":"reference/config/#engine","title":"<code>engine</code>","text":"<p>Type de moteur utilis\u00e9. Les valeurs possibles sont:</p> <ul> <li><code>postgres</code></li> <li><code>mssql</code></li> <li><code>mysql</code></li> <li><code>mariadb</code></li> <li><code>oracle</code></li> <li><code>hsqldb</code></li> <li><code>sqlite</code></li> </ul>"},{"location":"reference/config/#driver","title":"<code>driver</code>","text":"<p>Classe impl\u00e9mentant le driver JDBC.</p>"},{"location":"reference/config/#url","title":"<code>url</code>","text":"<p>URL de connexion \u00e0 la base de donn\u00e9es.</p>"},{"location":"reference/config/#property","title":"<code>property</code>","text":"<p>Propri\u00e9t\u00e9(s) suppl\u00e9mentaire \u00e0 passer au driver. L'\u00e9l\u00e9ment peut \u00eatre  sp\u00e9cifi\u00e9 plusieurs fois pour passer plusieurs propri\u00e9t\u00e9s. Les propri\u00e9t\u00e9s  doivent \u00eatre not\u00e9es selon la syntaxe <code>key=value</code>.</p>"},{"location":"reference/config/#username","title":"<code>username</code>","text":"<p>Nom d'utilisateur \u00e0 utiliser pour se connecter \u00e0 la base de donn\u00e9es.</p>"},{"location":"reference/config/#password","title":"<code>password</code>","text":"<p>Mot de passe associ\u00e9 au nom d'utilisateur.</p>"},{"location":"reference/config/#poolproperty","title":"<code>poolProperty</code>","text":"<p>Propri\u00e9t\u00e9 du pool de connexion.</p> <p>Ewt s'appuie sur le pool HikariCP. Les propri\u00e9t\u00e9s de pool indiqu\u00e9es sont  donc destin\u00e9es \u00e0 ce dernier. Elles doivent \u00eatre not\u00e9es selon la syntaxe  <code>key=value</code>.</p> <p>L'\u00e9l\u00e9ment peut \u00eatre r\u00e9p\u00e9t\u00e9 si on souhaite sp\u00e9cifier plusieurs propri\u00e9t\u00e9s.</p>"},{"location":"reference/config/#encoding","title":"<code>encoding</code>","text":"<p>Encoding \u00e0 utiliser par le driver.</p>"},{"location":"reference/config/#section-email","title":"Section <code>email</code>","text":""},{"location":"reference/config/#emailsupport","title":"<code>emailSupport</code>","text":"<p>Adresse e-mail de support. Il s'agit de l'adresse par d\u00e9faut vers laquelle sont redirig\u00e9s les demandes de support (voir <code>$mail.genLinkMailtoSupport</code>).</p>"},{"location":"reference/config/#smtp","title":"<code>smtp</code>","text":"<p>Sous-section de param\u00e8tres de connexion \u00e0 un serveur smtp. L'\u00e9l\u00e9ment <code>&lt;smtp&gt;</code> peut est d\u00e9fini plusieurs fois, mais dans ce cas il faut nommer les connexions au moyen d'un attribut <code>name</code> et indiquer quelle est la connexion par d\u00e9faut utilis\u00e9e par l'application via la propri\u00e9t\u00e9 <code>defaultSmtpConfig</code>.</p>"},{"location":"reference/config/#host","title":"<code>host</code>","text":"<p>URL du serveur smtp.</p>"},{"location":"reference/config/#port","title":"<code>port</code>","text":"<p>Port \u00e0 utiliser pour se connecter au serveur smtp.</p>"},{"location":"reference/config/#username_1","title":"<code>username</code>","text":"<p>Nom d'utilisateur du serveur smtp.</p>"},{"location":"reference/config/#password_1","title":"<code>password</code>","text":"<p>Mot de passe associ\u00e9 au nom d'utilisateur.</p>"},{"location":"reference/config/#starttls","title":"<code>starttls</code>","text":"<p>Param\u00e8tre <code>true</code>/<code>false</code> indiquant si on souhaite activer STARTTLS.</p>"},{"location":"reference/config/#headers","title":"<code>headers</code>","text":"<p>Sous-arbre dans lequel on peut sp\u00e9cifier les headers d'e-mails.</p>"},{"location":"reference/config/#header","title":"<code>header</code>","text":"<p>Header d'e-mail. Le nom du header est \u00e0 passer via l'attribut <code>name</code>.</p>"},{"location":"reference/config/#defaultsmtpconfig","title":"<code>defaultSmtpConfig</code>","text":"<p>Nom de la config smtp par d\u00e9faut. \u00c0 noter qu'on pourrait aussi se passer de cet \u00e9l\u00e9ment et red\u00e9finir une entr\u00e9e <code>&lt;smtp&gt;</code> unique, sans attribut <code>name</code>.</p>"},{"location":"reference/config/#section-styles","title":"Section <code>styles</code>","text":"<p>Liste des styles disponibles avec indication de la feuille de style associ\u00e9e. Dans le reste de l'application, \u00e0 l'exception \u00e9ventuellement  des scripts, on ne fera jamais r\u00e9f\u00e9rence directement au fichier xsl (la  feuille de style), mais uniquement au nom du style qui l'exploite, c.-\u00e0-d.  \u00e0 la valeur mise dans l'attribut <code>name</code>.</p>"},{"location":"reference/config/#style","title":"<code>style</code>","text":"<p>D\u00e9claration de style. L'\u00e9l\u00e9ment doit \u00eatre d\u00e9fini pour chaque feuille de  style que l'on souhaite rendre utilisable par le moteur. Chaque entr\u00e9e  devra contenir un nom (attribut <code>name</code>) et r\u00e9f\u00e9rencer le fichier xsl.</p>"},{"location":"reference/config/#defaultstyle","title":"<code>defaultStyle</code>","text":"<p>Style par d\u00e9faut. Peut \u00eatre vide ou ind\u00e9fini si l'on souhaite une application enti\u00e8rement pilot\u00e9e par les scripts ou une application qui n'est que pur service web.</p>"},{"location":"reference/config/#transformerfactory","title":"<code>transformerFactory</code>","text":"<p>Classe du transformerFactory \u00e0 utiliser. La liste des valeurs possibles d\u00e9pend des jar pr\u00e9sents dans les libs. Voici quelques valeurs possibles:</p> <ul> <li>org.apache.xalan.processor.TransformerFactoryImpl</li> <li>net.sf.saxon.TransformerFactoryImpl</li> <li>com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl</li> </ul> <p>Un patch sp\u00e9cial a \u00e9t\u00e9 mis en place pour corriger le probl\u00e8me de  traitement des emoji par xalan 2.7.1 et suiv. Il est donc recommand\u00e9  d'utiliser les libs xalan-2.7.3.2 et serializer-2.7.3.2 (disponibles  sur  [https://github.com/epilogic-ch/xalan-java/releases/tag/2.7.3.2]https://github.com/epilogic-ch/xalan-java/releases/tag/2.7.3.2)).</p>"},{"location":"reference/config/#section-bundles","title":"Section <code>bundles</code>","text":"<p>Dans cette section, on indique la liste des bundles \u00e0 reprendre dans l'arbre de sortie pour les diff\u00e9rents styles. Ainsi, la feuille de style disposera des libell\u00e9s d\u00e9finis dans ces bundles lors de la transformation. Il est possible de sp\u00e9cifier plusieurs bundles par style en les s\u00e9parant par une virgule (par exemple pour g\u00e9rer le cas o\u00f9 un style utilise une stylesheet qui a elle-m\u00eame des imports d'autres stylesheets)</p> <p>Il n'est pas n\u00e9cessaire de d\u00e9finir de bundles dans le cas o\u00f9 la  feuille de style utilise des libell\u00e9s hardcod\u00e9s.</p>"},{"location":"reference/config/#defaultbundles","title":"<code>defaultBundles</code>","text":"<p>Liste des bundles repris syst\u00e9matiquement dans l'arbre de sortie. Il est possible de sp\u00e9cifier plusieurs bundles dans la valeur, en utilisant la notation comma-separated.</p>"},{"location":"reference/config/#defaultlocale","title":"<code>defaultLocale</code>","text":"<p>Nom de la locale par d\u00e9faut \u00e0 utiliser lorsqu'un client demande des ressources dans une locale que l'application ne supporte pas et qu'aucun bundle par d\u00e9faut n'est fourni.</p> <p>R\u00f4le de la propri\u00e9t\u00e9 <code>bundles.defaultLocale</code></p> <p>La gestion des bundles de ressources dans Ewt s'appuie sur les  fonctionnalit\u00e9s de java. Ce dernier recherche la ressource la plus  ad\u00e9quate pour la locale attendue. La m\u00e9canique utilis\u00e9e pour d\u00e9terminer  la ressource \u00e0 utiliser est largement document\u00e9e en ligne. En bref, les  fichiers de ressources sont cens\u00e9s \u00eatre organis\u00e9s de fa\u00e7on hi\u00e9rarchique.  Par exemple le fichier de base est cens\u00e9 contenir les libell\u00e9s communs \u00e0  toutes les locales, le fichier ayant le suffixe \"fr\" contient les  libell\u00e9s propres au fran\u00e7ais et le fichier \"fr_CH\" contient les  particularit\u00e9s au fran\u00e7ais de Suisse Romande.</p> <p>Sur une application multilingue, il ne faut pas chercher \u00e0 int\u00e9grer  \u00e0 la version de base les libell\u00e9s d'une langue en particulier. Le fichier  doit contenir des libell\u00e9s communs \u00e0 toutes les langues. Pour illustrer  la cons\u00e9quence d'un mauvais usage de la variante de base, prenons le cas  suivant. </p> <p>Prenons par exemple une JVM configur\u00e9e avec une locale par d\u00e9faut \"en\".  Le sous-dossier <code>i18n</code> de l'application contient des fichiers  <code>language.properties</code> (contenant des libell\u00e9s en fran\u00e7ais) et  <code>language_en.properties</code> (libell\u00e9s en anglais).</p> <p>Si une requ\u00eate demande des libell\u00e9s pour la locale \"fr_CH\", l'interface  affichera des libell\u00e9s en anglais !!! Cela vient du fait que java  fait passer le fichier de ressources correspondant \u00e0 la locale par d\u00e9faut  avant le fichier de ressources de base. </p> <p>Pour solutionner le probl\u00e8me, il suffit de ne pas utiliser de variante  de base <code>language.properties</code>. \u00c0 la place, on aura uniquement des  variantes localis\u00e9es (<code>language_fr.properties</code>, <code>language_en.properties</code>,  etc.). L'absence de version de base pr\u00e9sente toutefois un risque : si  l'application contient des fichiers de langues pour le fran\u00e7ais et  l'anglais uniquement, une requ\u00eate qui demande des libell\u00e9s en allemand  g\u00e9n\u00e9rerait une exception (ressource manquante).</p> <p>C'est l\u00e0 qu'intervient la propri\u00e9t\u00e9 <code>bundles.defaultLocale</code> : elle  permet d'indiquer vers quelle locale l'application doit se rabattre dans  ce cas. Il faut bien \u00e9videmment que la langue indiqu\u00e9e existe au niveau  des langues disponibles dans le sous-dossier <code>i18n</code>.</p>"},{"location":"reference/config/#descriptbundle","title":"<code>descriptBundle</code>","text":"<p>Nom du bundle contenant les libell\u00e9s des \u00e9l\u00e9ments d\u00e9crits dans la descript.  Par d\u00e9faut, Ewt s'appuie sur un bundle <code>language</code>.</p>"},{"location":"reference/config/#statesbundle","title":"<code>statesBundle</code>","text":"<p>Nom du bundle contenant les libell\u00e9s des \u00e9l\u00e9ments d\u00e9crits dans les mod\u00e8les  d'\u00e9tats. Par d\u00e9faut, Ewt s'appuie sur un bundle <code>language</code>.</p>"},{"location":"reference/config/#style_1","title":"<code>style</code>","text":"<p>\u00c9l\u00e9ment permettant d'indiquer les bundles \u00e0 reprendre dans l'arbre de sortie  en fonction du style utilis\u00e9.</p> <p>Pour chaque \u00e9l\u00e9ment <code>&lt;style&gt;</code>, on indiquera le nom du style en question  via l'attribut <code>name</code> et le nom du ou des bundles \u00e0 reprendre au niveau  de la valeur.</p>"},{"location":"reference/config/#section-notifications","title":"Section <code>notifications</code>","text":"<p>D\u00e9finition des scripts \u00e0 appeler en fonction des notifications g\u00e9n\u00e9r\u00e9es par le moteur. La section peut contenir 0 ou n entr\u00e9es <code>&lt;notification&gt;</code>.</p>"},{"location":"reference/config/#notification","title":"<code>notification</code>","text":"<p>D\u00e9clare une r\u00e8gle de notification. Une notification doit poss\u00e9der  un nom (attribut <code>name</code>) et une valeur qui correspond \u00e0 un nom de  script \u00e0 appeler.</p> <p>Les noms de notifications peuvent porter un suffixe qui indique  quand elles doivent s'ex\u00e9cuter. Typiquement, on indiquera un suffixe  <code>:before</code> pour indiquer que la notification doit \u00eatre appel\u00e9e avant  que l'\u00e9v\u00e9nement ne se produise, ou un suffixe <code>:after</code> pour indiquer  que la notification est \u00e0 faire apr\u00e8s l'\u00e9v\u00e9nement. Par d\u00e9faut, les  notifications sont envoy\u00e9es apr\u00e8s un \u00e9v\u00e9nement de type cr\u00e9ation,  ajout ou ouverture, et avant un \u00e9v\u00e9nement de type suppression ou  fermeture. Le script appel\u00e9 via une notification a la possibilit\u00e9  d'interrompre ou d'annuler l'action.</p> <p>Les scripts appel\u00e9s peuvent obtenir des infos sur la notification via  la variable <code>$notification</code>. Il est possible de sp\u00e9cifier plusieurs scripts pour un \u00e9v\u00e9nement (notation comma-separated).</p> <p>Les notifications disponibles sont:</p> <code>doc-addtuple</code> Ajout d'un tuple dans un dossier. Appel\u00e9 par d\u00e9faut apr\u00e8s l'ajout du tuple. <code>doc-arrange</code> Modification d'arrangement (tri/filtre/pagination) de groupe. Appel\u00e9 apr\u00e8s l'arrangement. <code>doc-deltuple</code> Suppression de tuple dans un dossier. Appel\u00e9 par d\u00e9faut avant la  suppression. <code>doc-clone</code> <p>Cl\u00f4nage de dossier. Appel\u00e9 par d\u00e9faut apr\u00e8s la duplication du dossier.</p> <p>Attention, les notifications <code>doc-clone:before</code> et <code>doc-clone:after</code>  sont adress\u00e9es toutes les deux au dossier source. Dans le cas du  <code>doc-clone:after</code>, l'identifiant du dossier cr\u00e9\u00e9 est transmis au moyen  de la propri\u00e9t\u00e9 <code>newDocId</code> pass\u00e9e au param\u00e8tre du script.</p> <code>doc-close</code> Fermeture de dossier. Appel\u00e9 par d\u00e9faut avant la fermeture de dossier. <code>doc-create</code> Cr\u00e9ation de dossier. Appel\u00e9 par d\u00e9faut apr\u00e8s la cr\u00e9ation du dossier. <code>doc-delete</code> Suppression de dossier. Appel\u00e9 par d\u00e9faut avant la suppression du dossier. <code>doc-open</code> Ouverture de dossier. Appel\u00e9 par d\u00e9faut apr\u00e8s l'ouverture. <code>doc-save</code> Sauvegarde de donn\u00e9es. Appel\u00e9 par d\u00e9faut apr\u00e8s la sauvegarde. <code>doc-arrange</code> Modification de tri, de filtre ou de pagination. Appel\u00e9 par d\u00e9faut avant  le changement. <code>doc-enterstate</code> Changement du statut du dossier. Appel\u00e9 par d\u00e9faut avant le changement. <code>app-leavestate</code> Changement du statut du dossier. Appel\u00e9 par d\u00e9faut avant le changement. <code>doc-setview</code> Changement de view d'un dossier. Appel\u00e9 par d\u00e9faut apr\u00e8s le changement  de vue. <code>app-reset</code> Reset de l'application. Appel\u00e9 par d\u00e9faut apr\u00e8s les traitements du reset. <code>app-setstyle</code> Changement du style utilis\u00e9 pour l'affichage du r\u00e9sultat. Appel\u00e9 par d\u00e9faut  apr\u00e8s les traitements du reset. <code>incoming-get-request</code> Requ\u00eates GET re\u00e7ues <code>incoming-post-request</code> Requ\u00eates POST re\u00e7ues <code>incoming-get-request:web</code> Requ\u00eates GET re\u00e7ues (uniquement sur servlet web) <code>incoming-post-request:web</code> Requ\u00eates POST re\u00e7ues (uniquement sur servlet web) <code>incoming-get-request:rest</code> Requ\u00eates GET re\u00e7ues (uniquement sur servlet rest) <code>incoming-post-request:rest</code> Requ\u00eates POST re\u00e7ues (uniquement sur servlet rest) <code>gen-output</code> G\u00e9n\u00e9ration de l'arbre de sortie. Appel\u00e9 juste avant la g\u00e9n\u00e9ration. <code>task-overlap</code> Notification envoy\u00e9e lorsqu'une t\u00e2che du scheduler est abandonn\u00e9e du  fait que l'ex\u00e9cution pr\u00e9c\u00e9dente n'est pas termin\u00e9e"},{"location":"reference/config/#section-security","title":"Section <code>security</code>","text":"<p>R\u00e8gles de s\u00e9curit\u00e9. Par d\u00e9faut les r\u00e8gles de s\u00e9curit\u00e9 sont activ\u00e9es, les propri\u00e9t\u00e9s d\u00e9finies dans cette section permettent de les court-circuiter.</p>"},{"location":"reference/config/#publishallscriptsasservice","title":"<code>publishAllScriptsAsService</code>","text":"<p>Indique que n'importe quel script de l'application peut \u00eatre invoqu\u00e9 en tant  que service, c'est-\u00e0-dire appel\u00e9 par REST ou par SOAP.</p> <p>Par d\u00e9faut l'option n'est pas active. Cela signifie que  les scripts ne  peuvent pas \u00eatre d\u00e9marr\u00e9s par service, sauf s'ils poss\u00e8dent une annotation  <code>@accept</code> qui d\u00e9finit les conditions d'ex\u00e9cution du script. L'option  <code>publishAllScriptsAsService</code> permet de lever cette s\u00e9curit\u00e9.</p>"},{"location":"reference/config/#section-websocket","title":"Section <code>websocket</code>","text":"<p>Param\u00e8tres de configuration des websockets fournis par l'application.</p>"},{"location":"reference/config/#maxtextmessagebuffersize","title":"<code>maxTextMessageBufferSize</code>","text":"<p>Longueur maximale des messages envoy\u00e9s par WebSocket, en bytes. Par d\u00e9faut,  la longueur max est de 8192 bytes.</p> <p>La valeur maximale possible pour cette propri\u00e9t\u00e9 est 2147483647 (2GB). Une  valeur sup\u00e9rieure sera plafonn\u00e9e \u00e0 2GB.</p>"},{"location":"reference/config/#maxbinarymessagebuffersize","title":"<code>maxBinaryMessageBufferSize</code>","text":"<p>Taille maximale des donn\u00e9es binaires envoy\u00e9es par WebSocket, en bytes. Par  d\u00e9faut la taille max est de 1048576 bytes, soit 1MB.</p> <p>La valeur maximale possible pour cette propri\u00e9t\u00e9 est 2147483647 (2GB). Une valeur sup\u00e9rieure sera plafonn\u00e9e \u00e0 2GB.</p>"},{"location":"reference/config/#section-policies","title":"Section <code>policies</code>","text":"<p>Policies \u00e0 appliquer pour l'acc\u00e8s \u00e0 l'application.</p> <p>On place cette d\u00e9finition au niveau du config plut\u00f4t qu'au niveau de la descript car il se peut qu'une application Ewt n'ait pas de descript.</p>"},{"location":"reference/config/#policy","title":"<code>policy</code>","text":"<p>R\u00e9f\u00e9rence de policy \u00e0 v\u00e9rifier pour autoriser l'acc\u00e8s \u00e0 l'application.  </p>"},{"location":"reference/config/#section-search","title":"Section <code>search</code>","text":"<p>Cette section permet de d\u00e9clarer le ou les index de recherche que  l'application doit g\u00e9rer. On y d\u00e9finit des \u00e9l\u00e9ments <code>&lt;index&gt;</code> dans  lesquels on sp\u00e9cifie les param\u00e8tres de l'index. Chaque \u00e9l\u00e9ment  <code>&lt;index&gt;</code> doit poss\u00e9der un nom qui servira \u00e0 identifier l'index  dans les autres fichiers de configuration et dans les scripts.</p>"},{"location":"reference/config/#section-commands","title":"Section <code>commands</code>","text":"<p>Cette section permet de d\u00e9clarer les commandes autoris\u00e9es dans le cadre de  m\u00e9thode <code>$exec.start</code></p>"},{"location":"reference/config/#exemple-de-fichier-de-config","title":"Exemple de fichier de config","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;config&gt;\n  &lt;admin&gt;\n    &lt;applicationName&gt;Mon application \ud83d\ude80&lt;/applicationName&gt;\n    &lt;documentsMode&gt;multi&lt;/documentsMode&gt;\n    &lt;transientObjectNamePrefix&gt;SESSION:&lt;/transientObjectNamePrefix&gt;\n    &lt;primaryKeyType&gt;bigint&lt;/primaryKeyType&gt;\n    &lt;enableScheduler&gt;true&lt;/enableScheduler&gt;\n    &lt;instanceName&gt;${env:INSTANCENAME}&lt;/instanceName&gt;\n    &lt;runMode&gt;dev&lt;/runMode&gt;\n    &lt;debuggerPort&gt;8000&lt;/debuggerPort&gt;\n    &lt;debuggerAddress&gt;&lt;/debuggerAddress&gt;\n    &lt;dumpOutput&gt;true&lt;/dumpOutput&gt;\n    &lt;logLevel&gt;trace&lt;/logLevel&gt;\n    &lt;cipherPassword encrypted=\"true\"&gt;QlAX...&lt;/cipherPassword&gt;\n    &lt;sessionTTL&gt;3600000&lt;/sessionTTL&gt; &lt;!-- = 60 * 60 * 1000 = 1 heure --&gt;\n    &lt;sessionEOL&gt;03:00:00&lt;/sessionEOL&gt;\n    &lt;sessionRenewable&gt;true&lt;/sessionRenewable&gt;\n    &lt;failoverMode&gt;database&lt;/failoverMode&gt;\n  &lt;/admin&gt;\n\n  &lt;database&gt;\n    &lt;verbose&gt;false&lt;/verbose&gt;\n    &lt;defaultConnectionConfig&gt;postgres&lt;/defaultConnectionConfig&gt;\n\n    &lt;connection name=\"postgres\"&gt;\n      &lt;engine&gt;postgres&lt;/engine&gt;\n      &lt;driver&gt;org.postgresql.Driver&lt;/driver&gt;\n      &lt;url&gt;jdbc:postgresql://...&lt;/url&gt;\n      &lt;property&gt;tcpKeepAlive=true&lt;/property&gt;\n      &lt;username&gt;username&lt;/username&gt;\n      &lt;password&gt;password&lt;/password&gt;\n      &lt;poolProperty&gt;poolName=cnxPool-Ewt&lt;/poolProperty&gt;\n      &lt;encoding&gt;utf-8&lt;/encoding&gt;\n    &lt;/connection&gt;\n  &lt;/database&gt;\n\n  &lt;email&gt;\n    &lt;emailSupport&gt;hello@world.com&lt;/emailSupport&gt;\n    &lt;defaultSmtpConfig&gt;serveur1&lt;/defaultSmtpConfig&gt;\n\n    &lt;smtp name=\"serveur1\"&gt;\n      &lt;host&gt;mail.google.com&lt;/host&gt;\n      &lt;port&gt;587&lt;/port&gt;\n      &lt;username encrypted=\"true\"&gt;8cyB...&lt;/username&gt;\n      &lt;password encrypted=\"true\"&gt;Rkj1...&lt;/password&gt;\n      &lt;starttls&gt;true&lt;/starttls&gt;\n      &lt;headers&gt;\n        &lt;header name=\"Content-Type\"&gt;text/html; charset=utf-8&lt;/header&gt;\n        &lt;header name=\"Content-Transfer-Encoding\"&gt;8bit&lt;/header&gt;\n      &lt;/headers&gt;\n    &lt;/smtp&gt;\n\n    &lt;smtp name=\"serveur2\"&gt;\n      &lt;host&gt;mail.somesmtp.net&lt;/host&gt;\n      &lt;port&gt;587&lt;/port&gt;\n      &lt;username encrypted=\"true\"&gt;pEOt...&lt;/username&gt;\n      &lt;password encrypted=\"true\"&gt;NF+W...&lt;/password&gt;\n      &lt;starttls&gt;true&lt;/starttls&gt;\n    &lt;/smtp&gt;\n  &lt;/email&gt;\n\n  &lt;styles&gt;\n    &lt;style name=\"default\"&gt;default.xsl&lt;/style&gt;\n    &lt;style name=\"documents\"&gt;documents.xsl&lt;/style&gt;\n    &lt;style name=\"info\"&gt;documents.xsl&lt;/style&gt;\n    &lt;style name=\"benevoles\"&gt;documents.xsl&lt;/style&gt;\n    &lt;style name=\"impressionEtiquettes\"&gt;dlgImpressionEtiquettes.xsl&lt;/style&gt;\n    &lt;style name=\"mailing\"&gt;dlgMailing.xsl&lt;/style&gt;\n    &lt;style name=\"refuserArticles\"&gt;dlgRefuserArticles.xsl&lt;/style&gt;\n    &lt;style name=\"listeArticlesVendeur\"&gt;vendeur.xsl&lt;/style&gt;\n    &lt;style name=\"moduleCaisse\"&gt;moduleCaisse.xsl&lt;/style&gt;\n    &lt;style name=\"statistique\"&gt;dlgStatistique.xsl&lt;/style&gt;\n    &lt;style name=\"impressions\"&gt;dlgImpressions.xsl&lt;/style&gt;\n\n    &lt;defaultStyle&gt;default&lt;/defaultStyle&gt;\n    &lt;transformerFactory&gt;org.apache.xalan.processor.TransformerFactoryImpl&lt;/transformerFactory&gt;\n  &lt;/styles&gt;\n\n  &lt;bundles&gt;\n    &lt;style name=\"documents\"&gt;documents&lt;/style&gt;\n    &lt;style name=\"info\"&gt;documents&lt;/style&gt;\n    &lt;style name=\"benevoles\"&gt;documents&lt;/style&gt;\n    &lt;style name=\"mailing\"&gt;mailing&lt;/style&gt;\n\n    &lt;defaultBundles&gt;base,default&lt;/defaultBundles&gt;\n  &lt;/bundles&gt;\n\n  &lt;notifications&gt;\n    &lt;notification name=\"incoming-get-request:web\"&gt;onGetRequest.script&lt;/notification&gt;\n    &lt;notification name=\"incoming-post-request:web\"&gt;onGetRequest.script&lt;/notification&gt;\n    &lt;notification name=\"doc-save\"&gt;onDocSave.script&lt;/notification&gt;\n    &lt;notification name=\"doc-create\"&gt;onDocCreate.script&lt;/notification&gt;\n    &lt;notification name=\"doc-close\"&gt;onDocClose.script&lt;/notification&gt;\n  &lt;/notifications&gt;\n\n  &lt;security&gt;\n  &lt;/security&gt;\n\n  &lt;policies&gt;\n    &lt;policy name=\"main\"/&gt;\n  &lt;/policies&gt;\n\n  &lt;commands&gt;\n  &lt;/commands&gt;\n\n  &lt;search&gt;\n    &lt;index name=\"default\"&gt;\n      &lt;engine&gt;lucene&lt;/engine&gt;\n      &lt;root&gt;c:/Temp/lucene/ve-documents/&lt;/root&gt;\n    &lt;/index&gt;\n    &lt;index name=\"other\"&gt;\n      &lt;engine&gt;lucene&lt;/engine&gt;\n      &lt;root&gt;c:/Temp/lucene/ve-other/&lt;/root&gt;\n    &lt;/index&gt;\n  &lt;/search&gt;\n&lt;/config&gt;\n</code></pre>"},{"location":"reference/descript/","title":"Descript","text":""},{"location":"reference/descript/#structure","title":"Structure","text":"<p>La descript se pr\u00e9sente comme un arbre XML et est constitu\u00e9e de diff\u00e9rents  types d'\u00e9l\u00e9ments. Elle a la structure suivante:</p> <pre><code>descript\n  policies\n    policy\n    ...\n  properties\n    property\n    ...\n  models\n    model\n      policies\n        policy\n        ...\n      properties\n        property\n        ...\n      groups\n        group\n          policies\n            policy\n            ...\n          property\n            attribute\n            ...\n          fields\n            field\n              policies\n                policy\n                ...\n              properties\n                property\n                ...\n              type\n              form\n              ...\n</code></pre> <ul> <li>L'\u00e9l\u00e9ment racine s'appelle <code>&lt;descript&gt;</code></li> <li>Les \u00e9l\u00e9ments <code>&lt;properties&gt;</code> peuvent \u00eatre plac\u00e9s au niveau de la descript,      des mod\u00e8les, des groupes ou des champs. Par ailleurs, les propri\u00e9t\u00e9s      peuvent contenir du xml: celui-ci sera repris au niveau de l'arbre de      sortie. \u00c0 noter toutefois qu'il est possible de demander \u00e0 Ewt d'adapter      certains \u00e9l\u00e9ments. Le chapitre relatif aux      propri\u00e9t\u00e9s ci-dessous donne plus de d\u00e9tails.</li> <li>Les \u00e9l\u00e9ments <code>&lt;policies&gt;</code> peuvent \u00eatre plac\u00e9s au niveau de la descript,      des mod\u00e8les, des groupes ou des champs. Ils permettent de sp\u00e9cifier les      r\u00e8gles de s\u00e9curit\u00e9s relatives \u00e0 la lecture/\u00e9criture.     \u00c0 noter que les policies d\u00e9finies au niveau du n\u0153ud <code>&lt;descript&gt;</code> sont      trait\u00e9es comme celles d\u00e9finies au niveau du fichier de configuration de      l'application.</li> <li>Les \u00e9l\u00e9ments <code>&lt;model&gt;</code> d\u00e9crivent les mod\u00e8les de dossiers que g\u00e8re      l'application. Le mod\u00e8le est la description de la structure d'un dossier.      Vu autrement, le dossier est une instance de mod\u00e8le.</li> <li> <p>Les \u00e9l\u00e9ments <code>&lt;group&gt;</code> sont des regroupements de champs. Ces      regroupements de champs sont appel\u00e9s tuples. Donc le groupe est la      description de la structure d'un tuple. Vu autrement, le tuple est une      instance de groupe.</p> <p>Il existe 3 types de groupes:</p> <ul> <li>les groupes <code>single</code> constitu\u00e9s d'un seul tuple</li> <li>les groupes <code>multi</code> qui peuvent avoir 0 ou n tuples (ces groupes    permettent de d\u00e9crire des tables de valeurs)</li> <li>le groupe principal (maingroup) : il s'agit du groupe dont   l'identifiant (la cl\u00e9 primaire) fait \u00e9galement office d'identifiant de   dossier; dans les faits, le groupe principal est forc\u00e9ment un groupe de    type <code>single</code></li> </ul> <p>Exception faite du groupe principal, les groupes <code>single</code> et <code>multi</code>  sont structurellement assez similaires : ils sont constitu\u00e9s de tuples qui  poss\u00e8dent tous une cl\u00e9 primaire et qui r\u00e9f\u00e9rencent le groupe principal  (pour permettre la liaison des tuples d'un m\u00eame dossier). Du point de  vue logique, la seule r\u00e9elle diff\u00e9rence vient du fait que le moteur cr\u00e9e  automatiquement les tuples <code>single</code> \u00e0 la cr\u00e9ation du dossier et qu'il  emp\u00eache l'ajout et la suppression de tuples <code>single</code>.</p> </li> <li> <p>Les \u00e9l\u00e9ments <code>&lt;field&gt;</code> d\u00e9crivent les champs de l'application</p> </li> <li>La hi\u00e9rarchie des \u00e9l\u00e9ments doit \u00eatre respect\u00e9e (si un \u00e9l\u00e9ment <code>&lt;field&gt;</code>      est plac\u00e9 en-dehors d'un <code>&lt;group&gt;</code>, il sera ignor\u00e9)</li> <li>L'ordre des \u00e9l\u00e9ments joue un r\u00f4le pour la construction de l'arbre de      sortie du moteur: les \u00e9l\u00e9ments (propri\u00e9t\u00e9s, mod\u00e8les, groupes, fields)      seront repris dans l'arbre dans le m\u00eame ordre que celui de la descript.</li> </ul> <p>Dans la suite de la documentation, nous reviendrons fr\u00e9quemment sur les  notions de mod\u00e8le, dossier, groupe, tuple, etc. La table ci-dessous illustre  la correspondance entre un terme utilis\u00e9 au niveau de la description  (fichier <code>descript.xml</code>) et le terme correspondant pour d\u00e9signer une  instance. Par exemple, le dossier est une instance d'un mod\u00e8le, le tuple  est une instance de groupe, etc.</p> Description Instance Mod\u00e8le Dossier Groupe Tuple Champ Valeur"},{"location":"reference/descript/#proprietes-properties","title":"Propri\u00e9t\u00e9s (<code>&lt;properties&gt;</code>)","text":"<p>Comme indiqu\u00e9 plus haut, les propri\u00e9t\u00e9s sont des valeurs personnalis\u00e9es que  l'on peut sp\u00e9cifier au niveau de la descript, des mod\u00e8les, des groupes ou  des champs.</p> <p>Les propri\u00e9t\u00e9s peuvent contenir du texte ou du xml. Par d\u00e9faut, la valeur  pass\u00e9e \u00e0 une propri\u00e9t\u00e9 est reprise quasi telle quelle dans l'arbre de sortie. Il est cependant possible de demander au moteur de retraiter ladite valeur  en lui sp\u00e9cifiant une r\u00e8gle de traitement sous la forme d'un  namespace.</p>"},{"location":"reference/descript/#namespaces","title":"Namespaces","text":"<p>Les \u00e9l\u00e9ments <code>&lt;property&gt;</code> peuvent contenir des sortes d'instructions de  traitement. Ces instructions s'expriment au moyen de namespaces que l'on  place au niveau des \u00e9l\u00e9ments ou de leurs attributs. Il est ainsi possible  de demander au moteur d'effectuer une traduction de libell\u00e9 ou une  substitution de variable (voir ci-dessous). L'arbre de sortie reprendra  alors l'attribut ou l'\u00e9l\u00e9ment qui \u00e9tait marqu\u00e9 d'un namespace dans l'arbre  de sortie (le namespace lui-m\u00eame n'est pas repris dans l'arbre de sortie)  et la valeur de l'attribut ou de l'\u00e9l\u00e9ment sera adapt\u00e9e en fonction de la  r\u00e8gle attendue.</p> <p>Les namespaces s'appliquent aux \u00e9l\u00e9ments <code>&lt;property&gt;</code>, \u00e0 leurs sous-\u00e9l\u00e9ments et \u00e0 leurs attributs. Il est ainsi possible de d\u00e9l\u00e9guer \u00e0 Ewt la charge  d'adapter un libell\u00e9 en fonction de la locale, de substituer une r\u00e9f\u00e9rence  de champ en fonction du contexte, etc.</p> <p>Les namespaces reconnus sont:</p> <ul> <li><code>ch.epilogic.ewt.i18n</code></li> <li><code>ch.epilogic.ewt.script</code></li> <li><code>ch.epilogic.ewt.text</code></li> <li><code>ch.epilogic.ewt.sql</code></li> <li><code>ch.epilogic.ewt.scss</code></li> <li><code>ch.epilogic.ewt.instr</code></li> </ul> <p>Les chapitres ci-dessous donnent plus d'information sur le r\u00f4le de ces  namespaces.</p> <p>Il est important de pr\u00e9ciser que Ewt ne traite les namespaces sur les  attributs que si l'\u00e9l\u00e9ment ne poss\u00e8de pas d'autre attribut du m\u00eame nom.  Ainsi, pour un \u00e9l\u00e9ment </p> <pre><code>&lt;foo label=\"Salut\"\n     i18n:label=\"hello.world.label\"/&gt;\n</code></pre> <p>le moteur n'effectuera aucun traitement de l'attribut <code>i18n:label</code> car cela  engendrerait in fine un doublon d'attribut <code>label</code> au niveau de l'arbre de  sortie, ce qui ne serait pas valide du point de vue xml.</p>"},{"location":"reference/descript/#namespace-chepilogicewti18n","title":"Namespace <code>ch.epilogic.ewt.i18n</code>","text":"<p>Ce namespace (mapp\u00e9 par convention sur le pr\u00e9fixe <code>i18n</code>) fait r\u00e9f\u00e9rence \u00e0  l'internationalisation. Il permet d'indiquer au moteur qu'il doit substituer  la valeur de l'attribut ou de l'\u00e9l\u00e9ment par la valeur correspondante dans la  langue du client.</p> <p>Par exemple, un attribut <code>i18n:label=\"hello.world.label\"</code> sera  automatiquement chang\u00e9 en <code>label=\"Salut monde\"</code> dans le cas o\u00f9 le client  utilise une locale <code>fr</code> et \u00e0 condition \u00e9videmment que l'entr\u00e9e  <code>hello.world.label</code> soit d\u00e9finie dans le bundle de langue. Le libell\u00e9 sera  adapt\u00e9 automatiquement en fonction de la locale.</p> <p>Le namespace peut \u00e9galement s'appliquer \u00e0 un \u00e9l\u00e9ment. Dans ce cas, c'est  la valeur de l'\u00e9l\u00e9ment qui doit contenir la r\u00e9f\u00e9rence de bundle. Par  exemple, l'\u00e9l\u00e9ment <code>&lt;i18n:value&gt;hello.world.label&lt;/i18n:value&gt;</code> sera  remplac\u00e9 par <code>&lt;value&gt;Salut monde&lt;/value&gt;</code> dans l'arbre de sortie.</p> <p>Le document 05 - internationalisation  revient \u00e9galement sur les aspects de namespace. Un exemple y est donn\u00e9.</p>"},{"location":"reference/descript/#namespace-chepilogicewttext","title":"Namespace <code>ch.epilogic.ewt.text</code>","text":"<p>Ce namespace (mapp\u00e9 par convention sur le pr\u00e9fixe <code>text</code>) indique que la valeur du param\u00e8tre est un texte pouvant contenir des r\u00e9f\u00e9rences de variables \u00e0 substituer. Par exemple, un attribut <code>text:id=\"${data:idVendeur}\"</code> appara\u00eetra comme <code>id=\"12\"</code> dans l'arbre de sortie dans le cas o\u00f9 le champ <code>idVendeur</code> du dossier courant contient la valeur \"12\".</p>"},{"location":"reference/descript/#namespace-chepilogicewtscript","title":"Namespace <code>ch.epilogic.ewt.script</code>","text":"<p>[NON IMPL\u00c9MENT\u00c9] Ce namespace (mapp\u00e9 par convention sur le  pr\u00e9fixe <code>script</code>) indique que la valeur du param\u00e8tre est un script \u00e0  \u00e9valuer. Par exemple, un attribut <code>script:label=\"return 1+2;\"</code> appara\u00eetra  comme <code>label=\"3\"</code> dans l'arbre de sortie.</p>"},{"location":"reference/descript/#namespace-chepilogicewtsql","title":"Namespace <code>ch.epilogic.ewt.sql</code>","text":"<p>[NON IMPL\u00c9MENT\u00c9] Ce namespace (mapp\u00e9 par convention sur le pr\u00e9fixe  <code>sql</code>) indique que la valeur du param\u00e8tre est une requ\u00eate SQL. Le moteur  se chargera alors d'\u00e9valuer la requ\u00eate et de reprendre le premier r\u00e9sultat  en tant que valeur de l'attribut. Par exemple, un attribut  <code>sql:label=\"select Date from Vente where idVendeur=? and idVenteEchange=?--${data:idVente},${refVenteEchange}\"</code>  pourra appara\u00eetre comme <code>label=\"2023-01-01\"</code> dans l'arbre de sortie.</p>"},{"location":"reference/descript/#namespace-chepilogicewtscss","title":"Namespace <code>ch.epilogic.ewt.scss</code>","text":"<p>Ce namespace (mapp\u00e9 par convention sur le pr\u00e9fixe <code>scss</code>) indique que la valeur du param\u00e8tre est du SCSS qui doit \u00eatre compil\u00e9 en CSS. L'arbre de  sortie affichera donc la valeur compil\u00e9e. La compilation est effectu\u00e9e au  chargement de la descript. Cela \u00e9vite de la refaire au runtime \u00e0 chaque  g\u00e9n\u00e9ration d'\u00e9cran.</p> <p>Exemple de propri\u00e9t\u00e9 utilisant le namespace <code>ch.epilogic.ewt.scss</code> pour  compiler une feuille de style CSS.</p> <pre><code>&lt;property name=\"inline-css\"&gt;\n  &lt;scss:style&gt;\n    .model-offre .group-detail {\n      .header-position    { width:  5%;   min-width:  60px; }\n      .header-description { width: 45%;   min-width: 250px; }\n      .header-remarque    { width: 25%;   min-width: 200px; }\n      .header-chiffrage   { width:  7.5%; min-width: 125px; }\n      .header-tarif       { width:  7.5%; min-width: 100px; }\n      .header-montantHT   { width: 10%;   min-width: 125px; }\n      .field-chiffrage    { text-align: right; }\n      .field-tarif        { text-align: right; }\n      .field-montant      { text-align: right; }\n    }\n  &lt;/scss:style&gt;\n&lt;/property&gt;\n</code></pre>"},{"location":"reference/descript/#namespace-chepilogicewtinstr","title":"Namespace <code>ch.epilogic.ewt.instr</code>","text":"<p>Ce namespace (mapp\u00e9 par convention sur le pr\u00e9fixe <code>instr</code>) d\u00e9signe des  instructions de traitement pass\u00e9es au moteur. Ces instructions ne sont  pas reprises dans l'arbre de sortie et sont r\u00e9serv\u00e9es au moteur. Elles  permettent d'indiquer au moteur comment traiter l'attribut. La version  actuelle du moteur pr\u00e9voit les instructions suivantes:</p> <ul> <li> <p>attribut <code>destination</code> : indique dans quelle(s) branche(s) de l'arbre de      sortie l'\u00e9l\u00e9ment doit \u00eatre repris; la valeur peut \u00eatre:</p> <ul> <li><code>descript</code> (valeur par d\u00e9faut) si la propri\u00e9t\u00e9 doit \u00eatre reprise au    niveau du sous-arbre <code>&lt;descript&gt;</code> de l'arbre de sortie</li> <li><code>document</code> si la propri\u00e9t\u00e9 doit \u00eatre reprise au niveau du sous-arbre    <code>&lt;document&gt;</code> de l'arbre de sortie</li> <li><code>header</code> si la propri\u00e9t\u00e9 doit \u00eatre reprise au niveau du sous-arbre    <code>&lt;header&gt;</code> de l'arbre de sortie (uniquement dans le cas de groupes    multi)</li> </ul> <p>Il est possible, comme dans l'exemple ci-dessous, de sp\u00e9cifier  plusieurs destinations en les s\u00e9parant par une virgule. Ici l'instruction  <code>destination</code> demande au moteur de reprendre le n\u0153ud <code>property</code> au  niveau des documents et des headers.</p> <pre><code>&lt;property name=\"extractions\" instr:destination=\"document,header\"&gt;\n    &lt;extraction position=\"after\"&gt;\n      ...\n    &lt;/extraction&gt;\n&lt;/property&gt;\n</code></pre> </li> </ul> <p>Il convient de mentionner que certaines substitutions (notamment les  r\u00e9f\u00e9rences \u00e0 des valeurs de dossiers) ne pourront se faire que dans le cas  o\u00f9 la destination inclut <code>document</code>.</p>"},{"location":"reference/descript/#modele-model","title":"Mod\u00e8le (<code>&lt;model&gt;</code>)","text":"<p>L'\u00e9l\u00e9ment <code>&lt;model&gt;</code> permet de d\u00e9crire un mod\u00e8le. Un mod\u00e8le est un ensemble  de champs structur\u00e9s en groupes. Le moteur s'appuie sur la description des  mod\u00e8les pour d\u00e9terminer la repr\u00e9sentation m\u00e9moire des donn\u00e9es \u00e0 traiter.</p> <p>Chaque mod\u00e8le reconna\u00eet les \u00e9l\u00e9ments suivants:</p> <ul> <li>attribut <code>name</code>: nom du groupe</li> <li>attribut <code>maingroup</code>: nom du groupe principal, c.-\u00e0-d. le groupe de type      <code>single</code> dont le tuple sera le tuple principal du dossier. L'identifiant      du dossier reprend ainsi l'identifiant de son tuple principal.</li> <li>attribut <code>mainfield</code>: nom du champ principal, c.-\u00e0-d. le champ qui      enregistre l'identifiant du tuple principal</li> <li>attribut <code>statefield</code>: facultatif, nom du champ dans lequel est      enregistr\u00e9 le statut du dossier</li> <li>attribut <code>autoflush</code>: facultatif, liste d'actions pour lesquelles on      souhaite activer l'auto-flush. L'auto-flush est une fonctionnalit\u00e9      consistant \u00e0 sauvegarder automatiquement les donn\u00e9es d'un dossier en base      de donn\u00e9es lors de n'importe quelle action d\u00e9clench\u00e9e depuis l'interface      utilisateur. Ainsi, les donn\u00e9es sont automatiquement sauvegard\u00e9es \u00e0 la      fermeture d'un dossier, lors d'un ajout de tuple, etc. Par d\u00e9faut      l'auto-flush est activ\u00e9 pour toutes les actions. Il est cependant possible      de sp\u00e9cifier explicitement les actions pour lesquelles on autorise      l'auto-flush. Le cas \u00e9ch\u00e9ant, les actions doivent \u00eatre inscrites sous la      forme d'une cha\u00eene s\u00e9par\u00e9e par une virgule, par exemple \"save,close\" si on      souhaite que le flush se fasse lors de l'enregistrement et lors de la      fermeture d'un dossier. La liste des actions est disponible dans le      chapitre qui traite des identity policies dans le document     Gestion d'acc\u00e8s - Policies. \u00c0 noter que      l'action \"save\" est implicite : elle effectue toujours un flush     (c'est son r\u00f4le) ind\u00e9pendamment de la valeur de l'attribut <code>autoflush</code>.</li> <li> <p>attribut <code>locktype</code>: facultatif, type de lock \u00e0 utiliser pour les      dossiers du mod\u00e8le. L'attribut peut prendre l'une des valeurs suivantes:</p> <ul> <li><code>optimistic</code> (en r\u00e9alit\u00e9, n'importe quelle valeur diff\u00e9rente des     autres valeurs ci-dessous): gestion optimiste de la concurrence.     C'est le mode par d\u00e9faut si l'attribut <code>locktype</code> n'est pas sp\u00e9cifi\u00e9.</li> <li><code>pessimistic</code> (en r\u00e9alit\u00e9, n'importe quelle valeur qui d\u00e9bute par      le caract\u00e8re <code>p</code>): gestion pessimiste de la concurrence</li> <li><code>none</code> ou <code>false</code>: pas de gestion de la concurrence</li> </ul> <p>Ces notions sont d\u00e9taill\u00e9es dans le chapitre  Gestion de la concurrence.</p> </li> <li> <p>attribut <code>locklevel</code>: facultatif, niveau de lock attendu pour les     dossiers du mod\u00e8le. L'attribut peut prendre l'une des valeurs suivantes:</p> <ul> <li><code>tuple</code> (ou toute autre valeur diff\u00e9rente de celles ci-dessous):     gestion de lock au niveau tuple. Dans ce cas, un conflit de     concurrence d\u00e9tect\u00e9 lors d'une mise \u00e0 jour n'impacte que le tuple en     question. Les autres tuples du dossier sont mis \u00e0 jour lorsque cela     est possible. Il s'agit du mode par d\u00e9faut si l'attribut n'est pas      sp\u00e9cifi\u00e9.</li> <li><code>doc</code> ou <code>document</code>: gestion de lock au niveau document. Dans ce      cas, un probl\u00e8me de concurrence d\u00e9tect\u00e9 au niveau d'un des tuples du      dossier entra\u00eene le rollback de toutes les requ\u00eates de mises \u00e0 jour      des tuples (aucun tuple n'est mis \u00e0 jour)</li> <li><code>none</code> ou <code>false</code>: pas de test de concurrence. \u00c9crasement de valeur     existante ou mode \"Client Wins\" / \"Last in Wins\".</li> </ul> <p>Ces notions sont d\u00e9taill\u00e9es dans le chapitre  Gestion de la concurrence. -   attribut <code>lockforce</code>: facultatif, flag <code>true</code>/<code>false</code> indiquant que le  mod\u00e8le autorise l'utilisateur \u00e0 forcer un enregistrement de valeurs en  base de donn\u00e9es en cas de probl\u00e8mes de concurrence d\u00e9tect\u00e9, en effectuant  en second <code>save</code> des valeurs; cela ne concerne que la gestion optimiste -   attribut <code>indexname</code>: facultatif, nom de l'index dans lequel les  dossiers doivent \u00eatre index\u00e9s -   attribut <code>indexstore</code>: facultatif, flag <code>true</code>/<code>false</code> indiquant que  la valeur des champs doit \u00eatre stock\u00e9e ou non dans l'index (voir le  chapitre Indexation et recherche pour comprendre ce que  cela signifie) -   attribut <code>indexmode</code>: facultatif, mode d'indexation des valeurs (voir Indexation et recherche) -   attribut <code>policy</code>: facultatif, nom de la ou des policies \u00e0 appliquer au  mod\u00e8le. Il est possible de r\u00e9f\u00e9rencer plusieurs policies en les s\u00e9parant  par une virgule. Les policies r\u00e9f\u00e9renc\u00e9es via cet attribut s'ajoutent \u00e0  celles d\u00e9finies ou r\u00e9f\u00e9renc\u00e9es via l'\u00e9l\u00e9ment <code>policies</code>  -   \u00e9l\u00e9ment <code>groups</code>: groupes de champs du mod\u00e8le -   \u00e9l\u00e9ment <code>views</code>: types de vues du mod\u00e8le</p> </li> </ul>"},{"location":"reference/descript/#groupe-group","title":"Groupe (<code>&lt;group&gt;</code>)","text":"<p>L'\u00e9l\u00e9ment <code>&lt;group&gt;</code> repr\u00e9sente un ensemble de champs. Chaque groupe doit \u00eatre  li\u00e9 \u00e0 une table d\u00e9finie dans le fichier de description de la base de donn\u00e9es  (voir fichier <code>schema.xml</code>).</p> <p>Il est important de voir qu'un groupe ne peut pas r\u00e9unir des champs de  plusieurs tables.</p> <p>Chaque groupe doit poss\u00e9der un nom, un type et une r\u00e9f\u00e9rence de table. Le  nom sert \u00e0 identifier le groupe, le type indique si le groupe est <code>single</code> ou  <code>multi</code>. Un groupe <code>single</code> contient un et un seul tuple alors qu'un groupe  <code>multi</code> peut en contenir 0 ou n.</p> <p>Chaque dossier doit avoir un groupe principal de type <code>single</code>, c'est-\u00e0-dire  un groupe dont le tuple contient les donn\u00e9es de base du dossier. L'identifiant  du tuple fait de facto office d'identifiant du dossier.</p> <p>Les groupes <code>multi</code> doivent sp\u00e9cifier comment ils sont rattach\u00e9s au main  group. Pour cela, la d\u00e9finition du groupe devra sp\u00e9cifier un attribut  <code>mainfieldreference</code> qui indique quel champ du groupe <code>multi</code> contient la  r\u00e9f\u00e9rence vers le main group. Le moteur se charge alors de renseigner ce  champ automatiquement lors de l'ajout de tuples.</p> <p>Il est possible de d\u00e9finir un groupe sans table, par exemple si on souhaite  d\u00e9finir des champs qui sont uniquement des \u00e9l\u00e9ments d'interfaces (boutons,  libell\u00e9s statiques, etc.) ou des champs qui ont uniquement une valeur  stock\u00e9e en m\u00e9moire. En l'absence de table, le moteur ne peut cependant pas  identifier la primary key. Cela est particuli\u00e8rement g\u00eanant sur les groupes  multi, car la primary key est n\u00e9cessaire pour identifier les tuples. Le  moteur pr\u00e9voit un attribut de groupe <code>primarykey</code> qui permet de d\u00e9clarer le  champ faisant office de primary key.</p> <p>Les attributs <code>indexstore</code> et <code>indexmode</code> peuvent \u00eatre appliqu\u00e9s aux groupes.  Ils remplissent le m\u00eame r\u00f4le que pour le niveau <code>model</code>, et viennent  surcharger la valeur des attributs correspondants \u00e9ventuellement d\u00e9finis au(x)  niveau(x) parent(s).</p> <p>L'attribut <code>policy</code> peut \u00eatre utilis\u00e9 pour r\u00e9f\u00e9rencer une ou plusieurs  policies \u00e0 appliquer au groupe. Il est possible de r\u00e9f\u00e9rencer plusieurs  policies en les s\u00e9parant par une virgule. Les policies r\u00e9f\u00e9renc\u00e9es via cet  attribut s'ajoutent \u00e0 celles d\u00e9finies ou r\u00e9f\u00e9renc\u00e9es via l'\u00e9l\u00e9ment <code>policies</code>.</p>"},{"location":"reference/descript/#tri-filtre-et-pagination","title":"Tri, filtre et pagination","text":"<p>Les notions de tri, de filtre et de pagination sont regroup\u00e9es sous le terme  g\u00e9n\u00e9rique d'arrangement, qui prend en fran\u00e7ais le sens d'organisation,  de disposition ou d'agencement. Un arrangement est donc une fa\u00e7on  d'agencer les tuples \u00e0 l'\u00e9cran.</p> <p>On d\u00e9finit une r\u00e8gle d'arrangement au niveau du groupe via l'\u00e9l\u00e9ment  <code>&lt;arrangement&gt;</code>. L'\u00e9l\u00e9ment est compos\u00e9 de trois parties: <code>sort</code>, <code>filter</code> et  <code>pagination</code>. Les types d'arrangement <code>sort</code> et <code>filter</code> s'appuient  exclusivement sur des champs du groupe. Chaque champ du groupe pourra \u00e0 son  tour sp\u00e9cifier comment la valeur doit \u00eatre int\u00e9gr\u00e9e dans la clause de tri ou  de filtre, ce qui permet de construire des clauses de tri et de filtre  avanc\u00e9es (voir chapitre Champ (<code>&lt;field&gt;</code>)).</p> <pre><code>&lt;arrangement&gt;\n  &lt;sort customizable=\"true\"&gt;\n    &lt;field name=\"position\" order=\"desc\"/&gt;\n    &lt;field name=\"description\" order=\"asc\"/&gt;\n  &lt;/sort&gt;\n  &lt;filter customizable=\"true\"&gt;\n    &lt;field name=\"position\" method=\"range\" type=\"auto\" mode=\"text\"&gt;\n      &lt;value&gt;0&lt;/value&gt;\n      &lt;value&gt;&lt;/value&gt;\n    &lt;/field&gt;\n    &lt;field name=\"date\" method=\"contains\" type=\"auto\" mode=\"sql\"&gt;\n      &lt;value&gt;select Valeur from Configuration where Param=?&lt;/value&gt;\n      &lt;param type=\"varchar\"&gt;#info.Remarque&lt;/param&gt;\n    &lt;/field&gt;\n  &lt;/filter&gt;\n  &lt;pagination customizable=\"true\"&gt;\n    &lt;offset mode=\"text\"&gt;&lt;value&gt;0&lt;/value&gt;&lt;/offset&gt;\n    &lt;limit mode=\"text\"&gt;&lt;value&gt;30&lt;/value&gt;&lt;/limit&gt;\n  &lt;/pagination&gt;\n&lt;/arrangement&gt;\n</code></pre>"},{"location":"reference/descript/#tri-sort","title":"Tri (<code>&lt;sort&gt;</code>)","text":"<p>Exemple de r\u00e8gles de tri:</p> <pre><code>&lt;sort customizable=\"true\"&gt;\n  &lt;field name=\"position\" order=\"desc\"/&gt;\n  &lt;field name=\"description\" order=\"asc\"/&gt;\n&lt;/sort&gt;\n</code></pre> <p>L'attribut <code>customizable=\"true\"</code> indique que l'on autorise l'utilisateur \u00e0  modifier les r\u00e8gles de tri.</p> <p>L'ordre des \u00e9l\u00e9ments joue un r\u00f4le important : le moteur conserve l'ordre des  \u00e9l\u00e9ments lorsqu'il construit la clause <code>ORDER BY</code>.</p> <p>En l'absence de r\u00e8gle d'arrangement de type <code>sort</code>, le moteur applique  automatiquement une clause <code>ORDER BY</code> bas\u00e9e sur l'identifiant de tuple afin  que l'ordre des tuples reste constant.</p>"},{"location":"reference/descript/#filtre-filter","title":"Filtre (<code>&lt;filter&gt;</code>)","text":"<p>Une r\u00e9f\u00e9rence de champ permet d'indiquer sur quel champ doit porter le  filtre. Comme le filtre est lui-m\u00eame susceptible de contenir une liste de  valeurs et/ou une valeur par d\u00e9faut, on peut consid\u00e9rer la r\u00e9f\u00e9rence de  champ comme un champ \u00e0 part enti\u00e8re. Ainsi, certaines propri\u00e9t\u00e9s d'un champ  de filtre utilisent la m\u00eame syntaxe que les champs de donn\u00e9es eux-m\u00eame, en  particulier pour la d\u00e9finition d'options et de valeur par d\u00e9faut.</p> <p>Exemple de r\u00e8gles de filtre:</p> <pre><code>&lt;filter customizable=\"true\"&gt;\n  &lt;field name=\"position\" method=\"exact\" type=\"auto\" class=\"both\"&gt;\n    &lt;default mode=\"text\"&gt;\n      &lt;value&gt;1&lt;/value&gt;\n    &lt;/default&gt;\n  &lt;/field&gt;\n  &lt;field name=\"date\" method=\"range\" type=\"auto\" mode=\"sql\"&gt;\n    &lt;default mode=\"sql\"&gt;\n      &lt;value&gt;select Valeur from Configuration where Param=?&lt;/value&gt;\n      &lt;param type=\"varchar\"&gt;#info.Remarque&lt;/param&gt;\n    &lt;/default&gt;\n  &lt;/field&gt;\n&lt;/filter&gt;\n</code></pre> <p>L'attribut <code>customizable=\"true\"</code> indique que l'on autorise l'utilisateur \u00e0 modifier les filtres de colonnes.</p> <p>Les attributs <code>name</code> et <code>method</code> sont obligatoires pour chaque r\u00e9f\u00e9rence de  champ.</p> <p>L'attribut <code>name</code> indique le nom du champ sur lequel porte le filtre. Il  doit correspondre \u00e0 un champ du groupe.</p> <p>L'attribut <code>method</code> permet d'indiquer la m\u00e9thode de filtre \u00e0 appliquer. Il peut prendre les valeurs suivantes:</p> <ul> <li><code>exact</code> : Cette m\u00e9thode filtre en appliquant un test d'\u00e9galit\u00e9 stricte.</li> <li><code>contains</code>: Cette m\u00e9thode applique un filtre de type <code>like</code></li> <li> <p><code>range</code> : Cette m\u00e9thode filtre de mani\u00e8re diff\u00e9rente en fonction du nombre   de param\u00e8tres qu'on lui passe:</p> <ul> <li>Lorsque 2 param\u00e8tres sont sp\u00e9cifi\u00e9s, le filtre effectue un test   <code>between</code> sur les deux valeurs : seules les valeurs situ\u00e9es entre les   bornes sont retenues.</li> <li>Lorsque seul le premier param\u00e8tre est d\u00e9fini, le filtre effectue un test   de type <code>&gt;=</code>.</li> <li>Lorsque seul le second param\u00e8tre est renseign\u00e9, le filtre effectue un   test de type <code>&lt;=</code>.</li> </ul> </li> <li> <p><code>list</code> : Ce type applique un filtre de type <code>in</code>.</p> </li> </ul> <p>Il est possible de sp\u00e9cifier que l'on souhaite appliquer une logique invers\u00e9e. Ainsi, la pr\u00e9sence de l'attribut <code>inverse=\"true\"</code> fait fonctionner les m\u00e9thodes de filtre en mode inverse:</p> <ul> <li>inverse <code>exact</code> : Revient \u00e0 faire un test <code>!=</code></li> <li>inverse <code>contains</code> : Revient \u00e0 faire un test de type <code>not like</code></li> <li>inverse <code>range</code> : Revient \u00e0 faire un test <code>not between</code>, <code>&lt;</code> ou <code>&gt;</code> en   fonction du nombre et des valeurs de param\u00e8tres</li> <li>inverse <code>list</code> : Revient \u00e0 faire un test <code>not in</code>.</li> </ul> <p>Les r\u00e8gles de filtre font toujours r\u00e9f\u00e9rence \u00e0 un champ (r\u00e9f\u00e9rence faite par  l'attribut <code>name</code>). La valeur de r\u00e9f\u00e9rence quant \u00e0 elle peut \u00eatre d\u00e9finie  sous forme de texte (<code>mode=\"text\"</code>), au moyen d'une requ\u00eate SQL  (<code>mode=\"sql\"</code>) ou au moyen d'un script (<code>mode=\"script\"</code>). Dans les modes  <code>sql</code> et <code>script</code>, le moteur se charge de l'\u00e9valuation afin de d\u00e9terminer la  valeur \u00e0 utiliser comme condition.</p> <p>L'attribut <code>type</code> joue le m\u00eame r\u00f4le que dans le cas des champs (voir  Champ (<code>&lt;field&gt;</code>)) : il permet d'indiquer le type de champ  que l'interface doit afficher. Si la valeur de l'attribut est <code>auto</code> (ou si  l'attribut n'est pas sp\u00e9cifi\u00e9), alors le type reprend le type du champ  r\u00e9f\u00e9renc\u00e9. </p> <p>L'attribut <code>class</code> permet d'indiquer la classe de filtre. Il existe deux  classes, et un filtre peut appartenir \u00e0 l'une, l'autre ou les deux:</p> <ul> <li><code>variable</code> : Cette classe indique que le champ fait partie des \u00e9l\u00e9ments    personnalisables par l'utilisateur. La classe <code>variable</code> est active    par d\u00e9faut lorsque l'attribut <code>class</code> n'est pas sp\u00e9cifi\u00e9.   Le moteur reprendra dans l'arbre de sortie uniquement les filtres variables.</li> <li><code>permanent</code> : Cette classe indique que le filtre est permanent,    c'est-\u00e0-dire qu'il est appliqu\u00e9 en permanence et n'est pas modifiable par    l'utilisateur. On indiquera un filtre permanent par exemple lorsque l'on    souhaite qu'un groupe ne soit constitu\u00e9s que d'un sous-ensemble de tuples    d'une table. Le filtre en question peut par exemple tenir compte des r\u00f4les    de l'utilisateur connect\u00e9: ainsi le groupe n'affichera que des tuples que    l'utilisateur est autoris\u00e9 de voir et/ou modifier.   Les filtres purement permanents ne sont pas repris dans l'arbre de sortie    du moteur.</li> </ul> <p>Il est possible de sp\u00e9cifier <code>class=\"both\"</code> ou <code>class=\"variable,permanent\"</code>  (les deux notations sont \u00e9quivalentes) pour indiquer que le filtre  appartient aux deux classes.</p> <p>Remarque sur la notation</p> <p>L'utilisation d'une classe combin\u00e9e (avec <code>both</code> ou <code>variable,permanent</code>)  permet de simplifier la notation. Pr\u00e9cisons cependant qu'il est \u00e9galement  possible de faire coexister les filtres permanent et variable au sein de  r\u00e9f\u00e9rences de champs distinctes. </p> <p>L'exemple donn\u00e9 plus haut utilise la classe <code>both</code> pour le champ de  filtre <code>position</code>. On aurait \u00e9galement pu construire le filtre ainsi, ce  qui donne le m\u00eame r\u00e9sultat:</p> <pre><code>&lt;filter customizable=\"true\"&gt;\n    &lt;field name=\"position\" method=\"exact\" type=\"text\" mode=\"text\" class=\"permanent\"&gt;\n        &lt;value&gt;1&lt;/value&gt;\n    &lt;/field&gt;\n    &lt;field name=\"position\" method=\"exact\"/&gt;\n    ...\n&lt;/filter&gt;\n</code></pre> <p>Il peut tr\u00e8s bien arriver que le filtre permanent et le filtre variable  n'utilisent pas la m\u00eame m\u00e9thode. On peut par exemple avoir un filtre  permanent qui applique une m\u00e9thode <code>range</code> et un filtre variable qui  applique une m\u00e9thode <code>contains</code>. Dans ce cas, la notation combin\u00e9e n'est  plus possible et il devient n\u00e9cessaire de d\u00e9finir les filtres au moyen de  deux r\u00e9f\u00e9rences distinctes.</p> <p>Un filtre qui est purement permanent ne sera pas repris dans l'arbre de sortie. Du point de vue de l'utilisateur final, ce filtre n'existe pas  (il s'agit d'un filtre appliqu\u00e9 par l'application, mais non modifiable  par l'utilisateur).</p> <p>Un filtre variable est syst\u00e9matiquement repris dans l'arbre de sortie pour permettre \u00e0 l'utilisateur final d'en modifier la condition (la  valeur du filtre).</p> <p>Toutefois si le filtre est \u00e0 la fois permanent et variable, le filtre est  repris au niveau de l'arbre de sortie, mais la valeur de filtre du filtre  permanent n'est pas reprise dans l'arbre de sortie. Si l'utilisateur saisit  une valeur de condition pour un filtre permanent et variable, alors le  moteur va g\u00e9n\u00e9rer 2 clauses pour le champ : une clause pour le filtre  permanent et une seconde pour le filtre variable. </p> <p>Il est possible de d\u00e9finir une ou plusieurs valeurs par d\u00e9faut pour le champ. La ou les valeurs seront utilis\u00e9es comme valeur de filtre par d\u00e9faut. La  syntaxe est la m\u00eame que pour la d\u00e9finition de valeur par d\u00e9faut au niveau  des champs. Voir Champ (<code>&lt;field&gt;</code>).</p> <p>Il est possible de d\u00e9finir une liste d'options, c'est-\u00e0-dire une liste de  valeurs possibles pour le champ. La syntaxe est la m\u00eame que pour la  d\u00e9finition d'options au niveau des champs. Voir  Champ (<code>&lt;field&gt;</code>).</p> <p>Autres propri\u00e9t\u00e9s</p> <p>Il est possible de d\u00e9finir d'autres propri\u00e9t\u00e9s au niveau des champs  (validation, pattern de formatage, etc.). Dans la version actuelle, les  \u00e9ventuelles propri\u00e9t\u00e9s suppl\u00e9mentaires d\u00e9finies au niveau des champs de  filtre ne sont pas prises en compte pour les champs de filtre.</p>"},{"location":"reference/descript/#pagination-pagination","title":"Pagination (<code>&lt;pagination&gt;</code>)","text":"<p>Les r\u00e8gles de pagination sont constitu\u00e9es de 2 param\u00e8tres: un d\u00e9calage de  base (<code>offset</code>) et un nombre d'\u00e9l\u00e9ments (<code>limit</code>).</p> <pre><code>&lt;pagination customizable=\"true\"&gt;\n  &lt;offset mode=\"text\"&gt;&lt;value&gt;10&lt;/value&gt;&lt;/offset&gt;\n  &lt;limit mode=\"text\"&gt;&lt;value&gt;30&lt;/value&gt;&lt;/limit&gt;\n&lt;/pagination&gt;\n</code></pre> <p>L'attribut <code>customizable=\"true\"</code> indique que l'on autorise l'utilisateur \u00e0 modifier la pagination.</p> <p>Dans l'exemple ci-dessus, la pagination d\u00e9coupe les tuples en portions de 30  lignes, auxquelles on applique un d\u00e9calage de 10 (on commence \u00e0 afficher \u00e0  partir du 11<sup>e</sup> tuple). Le param\u00e8tre <code>offset</code> est optionnel, sa  valeur par d\u00e9faut \u00e9tant 0.</p> <p>Dans la version actuelle, il n'est pas possible de sp\u00e9cifier les r\u00e8gles de  pagination autrement qu'en mode <code>text</code>.</p> <p>Prise en compte des modifications apport\u00e9es \u00e0 la descript</p> <p>Dans la version actuelle, les modifications apport\u00e9es \u00e0 la descript  concernant les options d'arrangements ne sont pas directement prises en  compte lors du reset sur les dossiers ouverts. Elles sont bien charg\u00e9es au  niveau du moteur, mais elles ne sont prises en compte pour un dossier  que lors de son ouverture.</p> <p>Si le reset est r\u00e9alis\u00e9 alors qu'un utilisateur travaille sur un dossier, les modifications apport\u00e9es ne seront donc pas imm\u00e9diatement prises en  compte pour cet utilisateur. Cela vient du fait que l'utilisateur a  potentiellement modifi\u00e9 des param\u00e8tres de tri, de filtre ou de  pagination. Les options d'arrangement d\u00e9finies par l'utilisateur sont donc  li\u00e9es \u00e0 l'instance de document charg\u00e9e dans la session de l'utilisateur  et il n'est pas souhaitable qu'elles soient chang\u00e9es tant que le dossier  reste \u00e9dit\u00e9 par l'utilisateur.</p> <p>En tant que d\u00e9veloppeur, il faut donc penser \u00e0 fermer et rouvrir un  dossier pour tester les modifications apport\u00e9es \u00e0 la descript.</p>"},{"location":"reference/descript/#champ-field","title":"Champ (<code>&lt;field&gt;</code>)","text":"<p>L'\u00e9l\u00e9ment <code>&lt;field&gt;</code> permet de d\u00e9crire un champ. Un champ est constitu\u00e9 des  \u00e9l\u00e9ments suivants:</p> <ul> <li>attribut <code>name</code> : nom du champ interne, utilis\u00e9 pour r\u00e9f\u00e9rencer le champ      au niveau des ressources de langues (i18n) </li> <li>attribut <code>column</code> : nom de la colonne enregistrant la donn\u00e9e du champ en      base de donn\u00e9es; si non d\u00e9fini, alors un attribut <code>datatype</code> est requis</li> <li>attribut <code>datatype</code> : cet attribut n'est \u00e0 utiliser que si on ne d\u00e9finit      pas de <code>column</code> mais que l'on souhaite malgr\u00e9 tout que la valeur du champ      soit conserv\u00e9e en m\u00e9moire (dans la session). Si <code>column</code> et <code>datatype</code> ne      sont pas renseign\u00e9s, le moteur consid\u00e8re que le champ n'enregistre pas de      valeur (c'est par exemple le cas si le champ doit repr\u00e9senter un bouton,      un message statique, etc.). Cet attribut renseigne le moteur sur le type      de donn\u00e9e g\u00e9r\u00e9 par le champ; il reprend le m\u00eame type de valeur que      l'attribut <code>type</code> de la colonne qui aurait \u00e9t\u00e9 r\u00e9f\u00e9renc\u00e9 par <code>column</code>      (voir document Sch\u00e9ma de base de donn\u00e9es pour plus      d'infos sur cet attribut)</li> <li> <p>\u00e9l\u00e9ment <code>type</code> : type de champ de formulaire html; quelques types sont      r\u00e9serv\u00e9s et interpr\u00e9t\u00e9s par le moteur, les autres types sont libres. Ainsi:</p> <ul> <li><code>hidden</code>: r\u00e9serv\u00e9 pour d\u00e9signer un champ cach\u00e9 (le moteur a besoin de      savoir si un champ est un champ cach\u00e9 pour g\u00e9rer correctement les      filtres de groupes multi)</li> <li><code>binary</code> ou <code>bin</code> ou <code>file</code>: r\u00e9serv\u00e9 pour d\u00e9signer un champ binaire      (le moteur a besoin de savoir si un view affiche des champs binaires;     cela permet d'indiquer dans l'arbre de sortie le type de formulaire      attendu en r\u00e9ponse: en pr\u00e9sence de fichiers, il indiquera un type      multipart, sinon il indiquera un type url-encoded)</li> </ul> </li> <li> <p>\u00e9l\u00e9ment <code>formatting</code> : pattern de formatage du champ; le type de pattern      utilis\u00e9 doit \u00eatre compatible avec le type de champ SQL utilis\u00e9 dans la      table </p> </li> <li>\u00e9l\u00e9ment <code>default</code> : valeur par d\u00e9faut du champ</li> <li>\u00e9l\u00e9ment <code>options</code> : liste d'options pour les listes d\u00e9roulantes</li> <li>\u00e9l\u00e9ment <code>policies</code> : r\u00e8gles de gestion des droits</li> <li>\u00e9l\u00e9ment <code>validation</code> : r\u00e8gles de validation de la donn\u00e9e en provenance du      formulaire HTML (voir chapitre      Validation de donn\u00e9es client ci-dessous)</li> <li>attributs <code>indexstore</code> et <code>indexmode</code>: ils remplissent le m\u00eame r\u00f4le que     pour le niveau <code>model</code>, et viennent surcharger la valeur des attributs     correspondants \u00e9ventuellement d\u00e9finis au(x) niveau(x) parent(s).</li> <li>\u00e9l\u00e9ment <code>arrangement</code> : r\u00e8gles \u00e0 appliquer lorsqu'un tri ou un filtre est      demand\u00e9 sur le champ; voir Arrangement.</li> <li>attribut <code>policy</code> : facultatif, nom de la ou des policies \u00e0 appliquer au     champ. Il est possible de r\u00e9f\u00e9rencer plusieurs policies en les s\u00e9parant     par une virgule. Les policies r\u00e9f\u00e9renc\u00e9es via cet attribut s'ajoutent \u00e0     celles d\u00e9finies ou r\u00e9f\u00e9renc\u00e9es via l'\u00e9l\u00e9ment <code>policies</code></li> <li>\u00e9l\u00e9ment <code>properties</code> : propri\u00e9t\u00e9s de champs; ces propri\u00e9t\u00e9s ne sont pas     trait\u00e9es par le moteur (hormis les \u00e9l\u00e9ments d'internationalisation; voir      le chapitre relatif \u00e0 ce sujet pour plus de d\u00e9tails), mais transmis tels     quels dans l'arbre de sortie. Les attributs peuvent \u00eatre du texte simple,     du XML, du JSON, du SCSS, etc.</li> </ul>"},{"location":"reference/descript/#validation-de-donnees-client","title":"Validation de donn\u00e9es client","text":"<p>La validation consiste \u00e0 contr\u00f4ler voire \u00e0 nettoyer une valeur en provenance  d'un champ de formulaire envoy\u00e9 au moteur. Le moteur autorise donc deux  types d'actions (\u00e0 d\u00e9finir dans un attribut <code>action</code>):</p> <ul> <li><code>check</code> : la validation consiste \u00e0 contr\u00f4ler la valeur; une erreur est      retourn\u00e9e \u00e0 l'utilisateur si le contr\u00f4le \u00e9choue</li> <li><code>sanitize</code> : la validation consiste \u00e0 nettoyer la valeur pour qu'elle ne      contienne aucun \u00e9l\u00e9ment susceptible de provoquer une injection XSS;      lorsque la valeur est modifi\u00e9e suite \u00e0 une op\u00e9ration de nettoyage, un      message d'avertissement est retourn\u00e9 \u00e0 l'utilisateur</li> </ul> <p>L'action par d\u00e9faut est <code>check</code>. Cela signifie que si l'attribut <code>action</code>  n'est pas sp\u00e9cifi\u00e9, le moteur consid\u00e8re que la validation doit effectuer un  contr\u00f4le.</p> <p>Pour chaque type d'action, on indiquera la m\u00e9thode de validation au moyen de  l'attribut <code>method</code>. Ce dernier est obligatoire.</p>"},{"location":"reference/descript/#controle-check","title":"Contr\u00f4le (<code>check</code>)","text":"<p>Le contr\u00f4le de valeur est possible de trois fa\u00e7ons:</p> <ol> <li> <p>Au moyen d'une r\u00e8gle pr\u00e9d\u00e9finie (<code>rule</code>) : Une r\u00e8gle est une description      d'autorisations ou de refus relatifs au contenu du champ. La r\u00e8gle peut      \u00eatre d\u00e9finie sous diff\u00e9rentes formes.</p> <ol> <li> <p>La forme la plus simple est une cha\u00eene de caract\u00e8res qui r\u00e9f\u00e9rence des      r\u00e8gles pr\u00e9-d\u00e9finies du moteur. Dans la version actuelle, Ewt int\u00e8gre      les r\u00e8gles de contr\u00f4le pr\u00e9-d\u00e9finies suivantes: </p> <ul> <li><code>MANDATORY</code> : indique que le champ est obligatoire et ne peut pas      \u00eatre laiss\u00e9 vide</li> <li><code>EMAIL</code> : indique que la valeur du champ doit \u00eatre une adresse      email</li> </ul> <p>\u00c0 ces r\u00e8gles s'ajoutent \u00e9galement les r\u00e8gles pr\u00e9-d\u00e9finies dans la  librairie Owasp (<code>FORMATTING</code>, <code>BLOCKS</code>, <code>STYLES</code>, <code>LINKS</code>, <code>TABLES</code>,  <code>IMAGES</code>). Voir le chapitre relatif au <code>sanitize</code> ci-dessous pour  avoir une description de ces r\u00e8gles.</p> <p>Pr\u00e9cisons au passage qu'il est possible de cumuler plusieurs  mots-cl\u00e9s au sein d'une m\u00eame r\u00e8gle de validation. Pour ce faire, il  suffit de s\u00e9parer les diff\u00e9rents mots-cl\u00e9s par une barre verticale  <code>|</code> (p.ex. <code>EMAIL|MANDATORY|FORMATTING</code>)</p> </li> <li> <p>La r\u00e8gle peut \u00eatre d\u00e9finie en json. Cette forme permet un contr\u00f4le      plus avanc\u00e9 des autorisations et des refus. La notation json reprend      la syntaxe de l'action <code>sanitize</code> d\u00e9crite plus bas dans ce document.      Un exemple de <code>check</code> utilisant une r\u00e8gle d\u00e9finie en json est      \u00e9galement donn\u00e9 dans les exemples plus bas.</p> </li> </ol> </li> <li> <p>Au moyen d'une expression r\u00e9guli\u00e8re (<code>regex</code>) : On sp\u00e9cifie une      expression r\u00e9guli\u00e8re qui repr\u00e9sente la valeur. Si la valeur correspond \u00e0      l'expression, la validation r\u00e9ussit, sinon elle \u00e9choue et une erreur est      signal\u00e9e.</p> </li> <li> <p>Au moyen d'un script (<code>script</code>) : On d\u00e9crit une expression de script qui      r\u00e9alise le test de la valeur. Le moteur s'attend \u00e0 ce que le script      retourne <code>true</code> si la validation r\u00e9ussi et <code>false</code> si elle \u00e9choue. La      valeur \u00e0 tester est disponible via la variable <code>data</code>. </p> </li> </ol> <p>Nous tenons \u00e0 pr\u00e9ciser que la m\u00e9thode <code>script</code> n\u00e9cessite davantage de ressources et est susceptible de sensiblement ralentir l'application.</p>"},{"location":"reference/descript/#nettoyage-sanitize","title":"Nettoyage (<code>sanitize</code>)","text":"<p>Le nettoyage de valeur est possible de deux fa\u00e7ons:</p> <ol> <li> <p>Au moyen d'une r\u00e8gle (<code>rule</code>) : Comme dans le cas de l'action <code>check</code>,      les r\u00e8gles du <code>sanitize</code> peuvent \u00eatre d\u00e9finies de diff\u00e9rentes fa\u00e7ons.</p> <ol> <li> <p>La forme la plus simple est une cha\u00eene de caract\u00e8res qui r\u00e9f\u00e9rence des      r\u00e8gles pr\u00e9-d\u00e9finies de la librairie (dans la nomenclature Owasp, ces      r\u00e8gles sont appel\u00e9s policies, mais nous \u00e9vitons ce terme ici pour ne      pas cr\u00e9er de confusion avec les policies de gestion des droits      d'acc\u00e8s).</p> <p>Par d\u00e9faut, Owasp applique une politique de validation stricte, mais il  est possible de sp\u00e9cifier des r\u00e8gles qui autorisent certains types  d'\u00e9l\u00e9ments (sanitizers).</p> <p>Les sanitizers pr\u00e9d\u00e9finis sont:</p> <ul> <li><code>FORMATTING</code> : Autorise les \u00e9l\u00e9ments standard de formatage comme      &lt;b&gt;,&lt;i&gt;, etc.</li> <li><code>BLOCKS</code> : Autorise les \u00e9l\u00e9ments standard de blocs tels que &lt;     p&gt;, &lt;h1&gt;, etc.</li> <li><code>STYLES</code> : Autorise certaines propri\u00e9t\u00e9s CSS s\u00fbres dans les      attributs du type <code>style=\"...\"</code></li> <li><code>LINKS</code> : Autorise HTTP, HTTPS, MAILTO et les liens relatifs</li> <li><code>TABLES</code> : Autorise les \u00e9l\u00e9ments standard li\u00e9s aux tables</li> <li><code>IMAGES</code> : Autorise les \u00e9l\u00e9ments &lt;img&gt; \u00e0 partir de HTTP,      HTTPS et les sources relatives</li> </ul> <p>Les sanitizers ci-dessus peuvent \u00eatre cha\u00een\u00e9s comme dans l'exemple  suivant:</p> <pre><code>FORMATTING|BLOCKS|STYLES|LINKS|TABLES|IMAGES\n</code></pre> </li> <li> <p>La r\u00e8gle peut \u00eatre d\u00e9finie en json. Cette forme permet un contr\u00f4le     plus avanc\u00e9 des autorisations et des refus. L'objet json attendu est      soit un dictionnaire (map), soit un tableau (array) de dictionnaires.      Les dictionnaires peuvent reprendre les m\u00e9thodes de la classe      HtmlPolicyBuilder.</p> <p>Les propri\u00e9t\u00e9s reconnues sont les suivantes:</p> <ul> <li> <p><code>allowAttributes</code>: Autorise les attributs indiqu\u00e9s. La r\u00e8gle peut      \u00eatre affin\u00e9e au moyen d'une propri\u00e9t\u00e9 <code>matching</code> qui permet de      sp\u00e9cifier une expression r\u00e9guli\u00e8re de filtre, <code>onElements</code> qui      permet d'inventorier les \u00e9l\u00e9ments sur lesquels la r\u00e8gle s'applique,      ainsi qu'une propri\u00e9t\u00e9 <code>globally</code> indiquant que la r\u00e8gle s'applique      \u00e0 tout type d'\u00e9l\u00e9ment (sous r\u00e9serve qu'il respecte la regex de la      propri\u00e9t\u00e9 <code>matching</code>). Exemple:</p> <pre><code>{ \n    \"allowAttributes\": [ \"id\" ],\n    \"matching\": \"[a-zA-Z0-9\\\\:\\\\-_\\\\.]+\",\n    \"globally\": true\n}\n</code></pre> </li> <li> <p><code>allowCommonBlocElements</code>: Correspond \u00e0 <code>BLOCKS</code> lorsque la r\u00e8gle      est d\u00e9finie en tant que cha\u00eene de caract\u00e8res. Exemple:</p> <pre><code>{ \"allowCommonBlocElements\": true }\n</code></pre> </li> <li> <p><code>allowCommonInlineFormattingElements</code>: Correspond \u00e0 <code>FORMATTING</code>      lorsque la r\u00e8gle est d\u00e9finie en tant que cha\u00eene de caract\u00e8res.      Exemple:</p> <pre><code>{ \"allowCommonInlineFormattingElements\": true }\n</code></pre> </li> <li> <p><code>allowElements</code>: Autorise les \u00e9l\u00e9ments indiqu\u00e9s. Exemple:</p> <pre><code>{ \"allowElements\": [ \"i\", \"b\" ] }\n</code></pre> </li> <li> <p><code>allowStandardUrlProtocols</code>: Autorise les protocols d'URL <code>http</code>,      <code>https</code> et <code>mailto</code>. Exemple:</p> <pre><code>{ \"allowStandardUrlProtocols\": true }\n</code></pre> </li> <li> <p><code>allowStyling</code>: Correspond \u00e0 <code>STYLES</code> lorsque la r\u00e8gle     est d\u00e9finie en tant que cha\u00eene de caract\u00e8res. Exemple:</p> <pre><code>{ \"allowStyling\": true }\n</code></pre> </li> <li> <p><code>allowTextIn</code>: Autorise le texte dans les \u00e9l\u00e9ments indiqu\u00e9s.      Exemple:</p> <pre><code>{ \"allowTextIn\": [ \"span\", \"div\" ] }\n</code></pre> </li> <li> <p><code>allowUrlProtocols</code>: Ajoute un set de protocols autoris\u00e9s dans les      attributs d'URL. Exemple:</p> <pre><code>{ \"allowUrlProtocols\": [ \"ssh\", \"ldap\", \"ldaps\" ] }\n</code></pre> </li> <li> <p><code>allowWithoutAttributes</code>: En supposant que les \u00e9l\u00e9ments donn\u00e9s sont      autoris\u00e9s, permet de les faire appara\u00eetre sans attributs. Exemple:  </p> <pre><code>{ \"allowWithoutAttributes\": [ \"i\", \"b\" ] }\n</code></pre> </li> <li> <p><code>disallowAttributes</code>: Inverse de <code>allowAttributes</code>, les propri\u00e9t\u00e9s      <code>matching</code>, <code>onElements</code> et <code>globally</code> sont \u00e9galement applicables</p> </li> <li><code>disallowElements</code>: Refuse les \u00e9l\u00e9ments indiqu\u00e9s</li> <li><code>disallowTextIn</code>: Refuse le text dans les \u00e9l\u00e9ments indiqu\u00e9s</li> <li><code>disallowUrlProtocols</code>: Inverse de <code>allowUrlProtocols</code></li> <li><code>disallowWithoutAttributes</code>: Interdit les \u00e9l\u00e9ments indiqu\u00e9s      d'appara\u00eetre sans attributs</li> <li> <p><code>requireRelNofollowOnLinks</code>: Ajoute <code>rel=nofollow</code> sur les liens.      Exemple:</p> <pre><code>{ \"requireRelNofollowOnLinks\": true }\n</code></pre> </li> <li> <p><code>requireRelsOnLinks</code>: Ajoute <code>rel=\"...\"</code> aux balises      <code>&lt;a href=\"...\"&gt;</code>.      Exemple:</p> <pre><code>{ \"requireRelsOnLinks\": true }\n</code></pre> </li> <li> <p><code>skipRelsOnLinks</code>: Permet d'\u00e9viter l'ajout de <code>rel=\"...\"</code> au liens      indiqu\u00e9s. Exemple:</p> <pre><code>{ \"skipRelsOnLinks\": [ \"noopener\", \"noreferrer\" ] }\n</code></pre> </li> </ul> <p>Une r\u00e8gle est donc un tableau qui contient diff\u00e9rents objets utilisant  la syntaxe ci-dessus. Un exemple de r\u00e8gle est donn\u00e9 plus bas dans les  exemples.</p> </li> </ol> </li> <li> <p>Au moyen d'un script (<code>script</code>) : On d\u00e9crit une expression qui retourne      la valeur nettoy\u00e9e de la valeur d'entr\u00e9e. Si la valeur en sortie est      diff\u00e9rente de la valeur initiale, un avertissement est envoy\u00e9 \u00e0      l'utilisateur.</p> </li> </ol> <p>Nous tenons \u00e0 pr\u00e9ciser que la m\u00e9thode <code>script</code> n\u00e9cessite davantage de  ressources et est susceptible de sensiblement ralentir l'application.</p>"},{"location":"reference/descript/#source-de-la-validation","title":"Source de la validation","text":"<p>Pour chaque r\u00e8gle de validation, on peut indiquer \u00e0 l'aide de l'attribut  <code>source</code> sur quelle valeur la r\u00e8gle doit s'appliquer. L'attribut peut  prendre les valeurs:</p> <ul> <li><code>raw</code> : repr\u00e9sente la valeur brute re\u00e7ue du formulaire html, c'est-\u00e0-dire      la valeur avant nettoyage des \u00e9ventuels \u00e9l\u00e9ments de formatage; une date      brute pourra par exemple \u00eatre \"15/10/2022\"</li> <li><code>std</code> : repr\u00e9sente la valeur standardis\u00e9e, \u00e9ventuellement retrait\u00e9e et      normalis\u00e9e dans le cas o\u00f9 le champ utilise un formatage; dans le cas de      notre date, on aura la valeur \"2022-10-15\".</li> </ul> <p>Par d\u00e9faut, c'est-\u00e0-dire si aucune source n'est sp\u00e9cifi\u00e9e, la validation  s'effectue sur la valeur standardis\u00e9e, pour les raisons \u00e9voqu\u00e9es dans la note ci-dessous.</p> <p>Remarques par rapport au formatage</p> <p>Certains r\u00e8gles de validation peuvent entrer en conflit avec les r\u00e8gles de  formatage de valeurs. Il est donc important d'indiquer si la r\u00e8gle de  validation doit porter sur la valeur brute ou la valeur remise en forme  standardis\u00e9e.</p> <p>Il est recommand\u00e9 de s'appuyer sur la forme standard car il peut arriver  que l'utilisateur apporte des variations dont il faudrait tenir compte  dans la r\u00e8gle de validation. Il peut \u00e9galement arriver que la forme de la  donn\u00e9e brute soit diff\u00e9rente selon la locale du navigateur du client.  L'\u00e9laboration d'une r\u00e8gle de validation sur la donn\u00e9e brute peut par  cons\u00e9quent vite devenir un casse-t\u00eate. La forme standard est plus simple  \u00e0 valider.</p>"},{"location":"reference/descript/#message-derreur-ou-davertissement","title":"Message d'erreur ou d'avertissement","text":"<p>Lorsqu'une r\u00e8gle de validation n'est pas respect\u00e9e, le moteur g\u00e9n\u00e8re un  message d'erreur ou d'avertissement. Un message pr\u00e9d\u00e9fini est retourn\u00e9, mais  il est possible de surcharger ce dernier au moyen d'un message personnalis\u00e9.  Pour ce faire, il suffit d'ajouter un attribut <code>label</code> qui fait r\u00e9f\u00e9rence \u00e0  une entr\u00e9e de bundle. Le libell\u00e9 du message sera donc \u00e0 sp\u00e9cifier au niveau  des fichiers de langues du dossier <code>i18n</code> de l'application.</p> <p>Quelques exemples de r\u00e8gles de validation:</p> <pre><code>&lt;validation action=\"check\" method=\"regex\" source=\"raw\"&gt;^[\\w!#$%&amp;amp;\u2019*+/=?`{|}~^-]+(?:\\.[\\w!#$%&amp;amp;\u2019*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$&lt;/validation&gt;\n&lt;validation action=\"check\" method=\"rule\" source=\"raw\"&gt;EMAIL|MANDATORY|FORMATTING|LINKS&lt;/validation&gt;\n&lt;validation action=\"sanitize\" method=\"rule\" source=\"raw\"&gt;FORMATTING|LINKS&lt;/validation&gt;\n&lt;validation action=\"check\" method=\"script\" source=\"std\" label=\"msg.invalidValue\"&gt;return $str.match(data, \"^[\\w!#$%&amp;amp;\u2019*+/=?`{|}~^-]+(?:\\.[\\w!#$%&amp;amp;\u2019*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$\");&lt;/validation&gt;\n&lt;validation action=\"sanitize\" method=\"script\" source=\"std\"&gt;return $str.upper(data);&lt;/validation&gt;\n&lt;validation method=\"rule\" source=\"raw\" action=\"check\"&gt;\n    [\n        { allowElements: [ \"i\" ] },\n        { allowAttributes: \"class\", onElements: \"i\" }\n    ]\n&lt;/validation&gt;\n</code></pre> <p>Dans le dernier exemple ci-dessus, on d\u00e9finit une r\u00e8gle de contr\u00f4le qui  v\u00e9rifie que la valeur n'autorise que la pr\u00e9sence de balise <code>&lt;i&gt;</code> et que  le seul attribut autoris\u00e9 pour cette derni\u00e8re est l'attribut <code>class</code>. </p>"},{"location":"reference/descript/#types-de-champs","title":"Types de champs","text":"<p>L'\u00e9l\u00e9ment <code>&lt;type&gt;</code> d\u00e9fini au niveau d'un champ correspond plus ou moins au  type d'input \u00e0 afficher dans le formulaire html. Ewt n'agit pas sur ce type  et le reprend tel quel dans l'arbre de sortie. Il est donc du ressort de la  feuille de style d'interpr\u00e9ter ce type pour construire les champs du  formulaire affich\u00e9.</p> <p>Ewt s'appuie toutefois sur le type pour identifier deux cat\u00e9gories de champs:</p> <ul> <li>les champs cach\u00e9s : Ewt consid\u00e8re qu'un champ est cach\u00e9 si son type est      <code>hidden</code></li> <li>les champs binaires : Ewt consid\u00e8re qu'un champ est un champ contenant des      donn\u00e9es binaires si son type est <code>file</code> (il est \u00e9galement possible      d'utiliser <code>binary</code> ou <code>bin</code>)</li> </ul> <p>Notez que le type de champ peut avoir une incidence sur les r\u00e8gles de  formatage. En effet, sur une page HTML 5, il se peut que le client (le  navigateur) interpr\u00e8te le type et effectue de lui-m\u00eame un formatage. C'est  le cas des types <code>date</code>, <code>time</code>, <code>datetime-local</code>, <code>number</code>, etc. </p> <p>Il est donc important de tenir compte du <code>type</code> et du <code>formatting</code> de  mani\u00e8re coh\u00e9rente. Le chapitre qui suit tente de donner plus d'\u00e9l\u00e9ments \u00e0 ce  sujet. </p>"},{"location":"reference/descript/#formatting","title":"Formatting","text":"<p>Le formatting consiste \u00e0 mettre en forme une donn\u00e9e pour qu'elle soit plus  facilement lisible \u00e0 l'\u00e9cran. Il est possible de g\u00e9rer le formatting au  niveau de l'application via la d\u00e9finition d'un pattern de formatage (\u00e9l\u00e9ment  <code>&lt;formatting&gt;</code>). Il est \u00e9galement possible de s'appuyer sur HTML5 pour g\u00e9rer  le formatage de valeurs (en particulier les dates et les heures - le type  pr\u00e9vu pour les nombres n'est quant \u00e0 lui pas id\u00e9al pour le formatage). Ces  deux aspects sont pr\u00e9sent\u00e9s ci-dessous.</p>"},{"location":"reference/descript/#nombres","title":"Nombres","text":"<p>Le formatting des nombres peut utiliser les r\u00e8gles de pattern d\u00e9finies dans  la documentation de la classe java  DecimalFormat.  Le champ HTML devra alors \u00eatre de type <code>text</code>, avec \u00e9ventuellement un  <code>pattern</code> de validation (voir pattern).</p> <p>Remarque concernant l'\u00e9l\u00e9ment <code>input type=\"number\"</code> en HTML5</p> <p>Le type de champ <code>number</code> est pr\u00e9vu pour g\u00e9rer des nombres. Le navigateur  effectuera automatiquement un filtre des entr\u00e9es pour n'autoriser que la  saisie de caract\u00e8res permettant de d\u00e9finir un nombre. Toutefois il faut  \u00e9mettre quelques r\u00e9serves:</p> <ul> <li>Ce champ ne g\u00e8re pas le formatting de nombres; selon la      documentation de mozilla, l'attribut <code>pattern</code> des inputs HTML n'est      pas adapt\u00e9 \u00e0 ce type de champ. Par cons\u00e9quent, le moteur enverra      toujours une valeur non format\u00e9e dans l'arbre de sortie lorsqu'il      d\u00e9tecte qu'un champ utilise le type <code>number</code>.</li> <li>Le champ <code>input type=\"number\"</code> peut \u00eatre une source d'erreur chez      certains utilisateurs : si un utilisateur saisit un champ de ce type,     puis souhaite scroller dans le formulaire \u00e0 l'aide de la souris, il      se peut que la valeur de l'input soit modifi\u00e9e par le scroll mais      que l'utilisateur ne s'en rende pas compte.</li> </ul> <p>Pour ces raisons, nous recommandons de d\u00e9finir un champ num\u00e9rique avec  formatage de la mani\u00e8re suivante:</p> <pre><code>&lt;field name=\"monChamp\" type=\"text\" column=\"MonChamp\"&gt;\n  &lt;formatting&gt;#,##0.00&lt;/formatting&gt;\n&lt;/field&gt;\n</code></pre> <p>Algorithme de suppression du formatage</p> <p>La gestion du formatage des nombres est intrins\u00e8quement li\u00e9e \u00e0 celui de  la locale. En effet, le rendu final d'une valeur format\u00e9e d\u00e9pend de la  locale pour laquelle la valeur est format\u00e9e. Pour ne rien arranger, la  repr\u00e9sentation peut \u00e9galement changer en fonction de la valeur de la  propri\u00e9t\u00e9 <code>java.locale.providers</code> : par exemple la valeur <code>COMPAT</code> force  java \u00e0 appliquer les r\u00e8gles de locale telles que d\u00e9finies pour java 8. </p> <p>Ainsi, une valeur <code>1234567.89</code> aura diff\u00e9rentes repr\u00e9sentations en  fonction de la locale utilis\u00e9e, par exemple pour la locale \"fr-CH\",  cette valeur sera format\u00e9e en <code>1\u00a0234\u00a0567,89</code> en mode standard et  <code>1'234'567.89</code> en mode <code>COMPAT</code>. </p> <p>D'autres types de s\u00e9parateurs de milliers et de d\u00e9limiteurs de d\u00e9cimales  sont \u00e9galement utilis\u00e9s par d'autres locales, ce qui complique encore la  t\u00e2che.</p> <p>Partant de ce constat, un algorithme de suppression du formatage a \u00e9t\u00e9  mis au point dans Ewt pour tenter d'interpr\u00e9ter un nombre de la mani\u00e8re  la plus juste possible et qui soit le moins li\u00e9 possible avec la locale.  Cette fonction cherche \u00e0 retirer tous les d\u00e9limiteurs et utilise le <code>.</code>  comme d\u00e9limiteur de d\u00e9cimales. L'algorithme est amen\u00e9 parfois \u00e0 faire des  suppositions. Ainsi, s'il trouve un nombre comportant diff\u00e9rents types de  d\u00e9limiteurs, il consid\u00e9rera que le d\u00e9limiteur plac\u00e9 le plus \u00e0 droite dans  le nombre sera le d\u00e9limiteur de d\u00e9cimales. Cela qui peut donner lieu \u00e0  des interpr\u00e9tations surprenantes. Ainsi, une valeur <code>1a2a3b4</code> sera  interpr\u00e9t\u00e9e comme le nombre <code>123.4</code>. Il peut donc se r\u00e9v\u00e9ler utile de  mettre en place des contr\u00f4les de validit\u00e9 de la valeur brute afin de  limiter les risques d'erreur d'interpr\u00e9tation des donn\u00e9es lors de la  suppression de formatage.</p>"},{"location":"reference/descript/#date","title":"Date","text":"<p>Il est possible de d\u00e9l\u00e9guer la gestion des dates \u00e0 l'\u00e9l\u00e9ment <code>input</code> en lui  sp\u00e9cifiant un type <code>date</code>. Ce type de champ HTML5 filtre la saisie et  fournit nativement un picker de date. Ewt reconna\u00eet ce type et adaptera la  valeur au niveau de l'arbre de sortie pour qu'elle soit compatible avec ce  type de champ.</p> <p>Il est \u00e9galement possible d'utiliser une r\u00e8gle de formatting via l'\u00e9l\u00e9ment  <code>&lt;formatting&gt;</code>. Dans ce cas, la syntaxe de pattern est d\u00e9finie par la classe  SimpleDateFormat.</p> <p>Il n'est pas recommand\u00e9 d'utiliser \u00e0 la fois un pattern et un type d'<code>input</code>  sp\u00e9cifique. En effet, l'<code>input</code> s'attend \u00e0 recevoir les donn\u00e9es brutes non  format\u00e9es.</p> <p>Exemple:</p> <pre><code>&lt;!-- variante utilisant un formatage personnalis\u00e9 --&gt;\n&lt;field name=\"dateCreation\" type=\"text\" column=\"DateCreation\"&gt;\n  &lt;formatting&gt;dd/MM/yyyy&lt;/formatting&gt;\n&lt;/field&gt;\n\n&lt;!-- variante utilisant HTML5 --&gt;\n&lt;field name=\"dateCreation\" type=\"date\" column=\"DateCreation\"/&gt;\n</code></pre> <p>Remarque concernant le format des dates</p> <p>En interne, Ewt g\u00e8re les dates selon le format ISO 8601 au format  standard (par opposition au format basique). Concr\u00e8tement, la date du 15  octobre 2015 sera enregistr\u00e9e dans la forme \"2015-10-15\".</p>"},{"location":"reference/descript/#time","title":"Time","text":"<p>Idem que pour \"Date\". Dans ce cas, le type de l'\u00e9l\u00e9ment <code>input</code> sera <code>time</code>.</p> <p>Si l'option pattern est choisie, la syntaxe doit respecter les r\u00e8gles  d\u00e9finies par la classe SimpleDateFormat.</p> <p>Il n'est pas recommand\u00e9 d'utiliser \u00e0 la fois un pattern et un type d'<code>input</code> sp\u00e9cifique. En effet, l'<code>input</code> s'attend \u00e0 recevoir les donn\u00e9es brutes non format\u00e9es.</p> <p>Exemple:</p> <pre><code>&lt;!-- variante utilisant un formatage personnalis\u00e9 --&gt;\n&lt;field name=\"heureCreation\" type=\"text\" column=\"HeureCreation\"&gt;\n  &lt;formatting&gt;HH:mm:ss&lt;/formatting&gt;\n&lt;/field&gt;\n\n&lt;!-- variante utilisant HTML5 --&gt;\n&lt;field name=\"heureCreation\" type=\"time\" column=\"HeureCreation\"/&gt;\n</code></pre> <p>Remarque concernant le format des heures</p> <p>En interne, Ewt g\u00e8re les heures selon le format ISO 8601. Concr\u00e8tement,  l'heure 9 heures 28 minutes 32 secondes sera enregistr\u00e9e dans la forme  \"09:28:32\".</p>"},{"location":"reference/descript/#timestamp","title":"Timestamp","text":"<p>Idem que pour \"Date\". Dans ce cas, le type de l'\u00e9l\u00e9ment <code>input</code> sera  <code>datetime-local</code>.</p> <p>Si l'option pattern est choisie, la syntaxe doit respecter les r\u00e8gles d\u00e9finies par la classe SimpleDateFormat.</p> <p>Il n'est pas recommand\u00e9 d'utiliser \u00e0 la fois un pattern et un type d'<code>input</code> sp\u00e9cifique. En effet, l'<code>input</code> s'attend \u00e0 recevoir les donn\u00e9es brutes non format\u00e9es.</p> <p>Exemple:</p> <pre><code>&lt;!-- variante utilisant un formatage personnalis\u00e9 --&gt;\n&lt;field name=\"tsCreation\" type=\"text\" column=\"TSCreation\"&gt;\n  &lt;formatting&gt;dd/MM/yyyy HH:mm:ss.SSS&lt;/formatting&gt;\n&lt;/field&gt;\n\n&lt;!-- variante utilisant HTML5 --&gt;\n&lt;field name=\"tsCreation\" type=\"datetime-local\" column=\"TSCreation\"/&gt;\n</code></pre> <p>Remarque concernant le format des timestamps</p> <p>En interne, Ewt g\u00e8re les heures selon le format ISO 8601. Un timestamp  sera par exemple repr\u00e9sent\u00e9 ainsi : \"2015-10-15 09:28:32.123\". La  pr\u00e9cision au niveau des milli/micro/nano secondes varient en fonction de  la machine virtuelle java et de l'OS utilis\u00e9.</p>"},{"location":"reference/descript/#valeur-par-defaut","title":"Valeur par d\u00e9faut","text":"<p>La d\u00e9finition de valeur par d\u00e9faut se fait au moyen de l'\u00e9l\u00e9ment <code>&lt;default&gt;</code>. Cet \u00e9l\u00e9ment prend plusieurs formes en fonction du mode d'obtention de la  valeur (texte, sql ou script).</p>"},{"location":"reference/descript/#valeur-textuelle-modetext","title":"Valeur textuelle (<code>mode=\"text\"</code>)","text":"<p>La valeur est pass\u00e9e via l'\u00e9l\u00e9ment <code>&lt;value&gt;</code>. Elle peut contenir des  r\u00e9f\u00e9rences de variables ou de donn\u00e9es:</p> <pre><code>&lt;default mode=\"text\"&gt;\n  &lt;value&gt;test ${data:numero}&lt;/value&gt;\n&lt;/default&gt;\n</code></pre>"},{"location":"reference/descript/#valeur-obtenue-par-sql-modesql","title":"Valeur obtenue par SQL (<code>mode=\"sql\"</code>)","text":"<p>L'\u00e9l\u00e9ment <code>&lt;value&gt;</code> attend une requ\u00eate SQL. Les \u00e9ventuels param\u00e8tres \u00e0  passer au prepared statements  sont \u00e0 placer dans des \u00e9l\u00e9ments <code>&lt;param&gt;</code>. On placera autant d'\u00e9l\u00e9ment  <code>&lt;param&gt;</code> qu'il y a de r\u00e9f\u00e9rences au niveau de la requ\u00eate. Ces \u00e9l\u00e9ments  <code>&lt;param&gt;</code> doivent \u00eatre typ\u00e9s au moyen de l'attribut <code>type</code>.</p> <pre><code>&lt;default mode=\"sql\"&gt;\n  &lt;value&gt;select coalesce(max(numero),0)+1 from Vendeur where categorie=?&lt;/value&gt;\n  &lt;param type=\"integer\"&gt;${data:categorie}&lt;/param&gt;\n&lt;/default&gt;\n</code></pre>"},{"location":"reference/descript/#valeur-calculee-par-script-modescript","title":"Valeur calcul\u00e9e par script (<code>mode=\"script\"</code>)","text":"<p>L'\u00e9l\u00e9ment <code>&lt;value&gt;</code> attend un script. Dans la version actuelle, le script  doit \u00eatre inscrit inline et ne peut pas prendre de param\u00e8tre.</p> <pre><code>&lt;default mode=\"script\"&gt;\n  &lt;value&gt;return $cal.timestamp();&lt;/value&gt;\n&lt;/default&gt;\n</code></pre> <p>Il est pr\u00e9vu de permettre une r\u00e9f\u00e9rence de fichier de script et le passage  de param\u00e8tres dans une version future.</p>"},{"location":"reference/descript/#listes-doptions","title":"Listes d'options","text":"<p>Certains champs peuvent proposer une liste de valeurs possibles. C'est le  cas des listes d\u00e9roulantes, des listes de cases \u00e0 cocher, des listes de  puces, etc.</p> <p>Pour d\u00e9finir une liste d'options, on utilise l'\u00e9l\u00e9ment <code>&lt;options&gt;</code> et on  indique le type de liste d\u00e9crite au moyen de l'attribut <code>mode</code>. Ce dernier  peut prendre les valeurs suivantes:</p> <ul> <li> <p><code>sql</code> : Ce mode permet de d\u00e9finir la liste d'options au moyen d'une      requ\u00eate SQL. La requ\u00eate peut utiliser la notation pr\u00e9vue pour les     prepared statements.      Dans ce cas, les param\u00e8tres sont \u00e0 placer dans des \u00e9l\u00e9ments <code>param</code>.      Exemple:</p> <pre><code>&lt;options mode=\"sql\" level=\"field\"&gt;\n  &lt;value&gt;SELECT idVendeur,resumeText FROM Vendeur WHERE idVendeur=? ...&lt;/value&gt;\n  &lt;param type=\"int\"&gt;${data:benevoles.idVendeur}&lt;/param&gt;\n  &lt;param type=\"int\"&gt;${data:benevoles.idVenteEchange}&lt;/param&gt;\n&lt;/options&gt;\n</code></pre> </li> <li> <p><code>inline</code> : Ce mode permet de sp\u00e9cifier les valeurs directement dans la      descript, en dur. Exemple:</p> <pre><code>&lt;options mode=\"inline\" level=\"field\"&gt;\n  &lt;option value=\"val1\" label=\"some.label.from.language.bundle\"/&gt;\n  &lt;option value=\"val2\"&gt;Libell\u00e9 en dur&lt;/option&gt;\n&lt;/options&gt;\n</code></pre> </li> </ul> <p>L'attribut <code>label</code> permet de r\u00e9f\u00e9rencer un libell\u00e9 d\u00e9fini au niveau du  bundle de langues.</p> <p>L'attribut <code>level</code> permet d'indiquer \u00e0 quel niveau dans l'arbre de sortie on  souhaite voir appara\u00eetre les valeurs d'options du champ. Cela permet d'\u00e9viter  les r\u00e9p\u00e9titions de listes d'options, en particulier sur les groupes  \"multi\". L'attribut <code>level</code> peut prendre les valeurs suivantes:</p> <ul> <li><code>model</code> : la liste d'options est reprise au niveau de la description de      mod\u00e8le dans l'arbre de sortie; cette option est souhaitable lorsque la      liste d'option peut \u00eatre longue (ce qui \u00e9vite de la r\u00e9p\u00e9ter sur chaque      dossier ou chaque champ) et que ses donn\u00e9es ne sont pas d\u00e9pendantes d'un      dossier ou d'un champ en particulier.</li> <li><code>doc</code> ou <code>document</code> : la liste d'options est reprise au niveau du dossier;      cette option est souhaitable lorsque la liste peut \u00eatre longue et      d\u00e9pendante du dossier ouvert</li> <li><code>group</code> : la liste d'options est reprise au niveau du groupe; cette option      est souhaitable lorsque la liste peut \u00eatre longue et d\u00e9pendante du groupe</li> <li><code>tuple</code> : la liste d'option est reprise au niveau du tuple; cette option      est souhaitable lorsque la liste est d\u00e9pendante du champ ou d'un autre      champ du tuple, et pour autant que la liste d'option ne soit utilis\u00e9e que      par un seul champ du tuple</li> <li><code>field</code> : la liste d'option est reprise au niveau du champ; cette      option est souhaitable lorsque la liste est d\u00e9pendante du champ ou d'un      autre champ du tuple</li> </ul> <p>La valeur par d\u00e9faut du champ est <code>field</code>.</p>"},{"location":"reference/descript/#champs-binaires","title":"Champs binaires","text":"<p>Le servlet <code>/web</code> supporte aussi bien les formulaires standards url-encoded  que les formulaires multipart. Ainsi les donn\u00e9es binaires peuvent \u00eatre  envoy\u00e9es dans le m\u00eame formulaire HTML que les donn\u00e9es textuelles.</p> <p>Pour uploader un fichier, on utilise un champ HTML de type  <code>&lt;input type=\"file\"&gt;</code>. Le formulaire HTML lui-m\u00eame sera de type multipart:</p> <pre><code>&lt;form id=\"form\" method=\"post\"\n      enctype=\"multipart/form-data\"\n      accept-charset=\"UTF-8\"&gt;\n  ...\n  &lt;input type=\"file\" name=\"EWT:DATA-2ecc5dec-b127-4c94-9787-455fca2277a4\"/&gt;\n&lt;/form&gt;\n</code></pre> <p>Aide au choix du type de formulaire</p> <p>Le traitement de formulaire url-encoded est habituellement plus l\u00e9ger  que le traitement de formulaires multipart. Il est donc conseill\u00e9  d'\u00e9viter d'utiliser un formulaire multipart lorsque cela n'est pas  n\u00e9cessaire. Au moment de construire l'arbre de sortie, Ewt  analyse les types de champs des dossiers \u00e0 traiter et renseigne l'entr\u00e9e  <code>/output/session/formType</code> de l'arbre de sortie avec le type de  formulaire le plus adapt\u00e9. La feuille de style qui construit le  formulaire HTML peut donc s'appuyer sur cette entr\u00e9e pour alimenter  l'attribut <code>enctype</code> du formulaire HTML.</p> <p>Voici un exemple de code XSL qui construit la balise <code>&lt;form&gt;</code> en  s'appuyant sur le type de formulaire propos\u00e9 par Ewt:</p> <pre><code>&lt;form id=\"form\" method=\"post\" accept-charset=\"UTF-8\"\n      enctype=\"{/output/session/formType}\" autocomplete=\"off\"&gt;\n  ...        \n&lt;/form&gt;\n</code></pre> <p>Au niveau de la description de champ, le champ peut \u00eatre d\u00e9crit de la  mani\u00e8re suivante:</p> <pre><code>&lt;field name=\"monDocument\" type=\"binary\" column=\"MonDocument\"/&gt;\n</code></pre> <p>Le champ r\u00e9f\u00e9rence une colonne <code>MonDocument</code> (d\u00e9finie au niveau de la  description de sch\u00e9ma de base de donn\u00e9es) qui  pourra utiliser l'un des types \"large object\" pr\u00e9vus par le SGBD. Le  chapitre PostgreSQL et les blobs  explique les diff\u00e9rents types de champs que propose PostgreSQL pour le  stockage des \"large objects\". </p>"},{"location":"reference/descript/#attributs-de-fichiers","title":"Attributs de fichiers","text":"<p>Nous avons abord\u00e9 ci-dessus le stockage d'un fichier en base de donn\u00e9es.  Toutefois cela ne concerne que le corps du fichier. Il peut \u00eatre utile de  conserver \u00e9galement certaines metadonn\u00e9es suppl\u00e9mentaires \u00e0 propos du  fichier, \u00e0 commencer par son nom initial, sa taille et son mime-type. Ces  informations doivent \u00eatre stock\u00e9es dans des champs distincts au niveau de la  base de donn\u00e9es, mais rattach\u00e9s au fichier du point de vue de la descript.</p> <p>Au niveau du fichier <code>schema.xml</code>, les champs pr\u00e9vus pour l'enregistrement  des attributs sont \u00e0 d\u00e9clarer comme tout autre champ, par exemple:</p> <pre><code>&lt;column name=\"NomDocPublipostage\" type=\"varchar(100)\"/&gt;\n&lt;column name=\"TailleDocPublipostage\" type=\"integer\"/&gt;\n&lt;column name=\"MimeTypeDocPublipostage\" type=\"varchar(100)\"/&gt;\n</code></pre> <p>Ewt s'attend toutefois \u00e0 ce que ces champs se trouvent dans la m\u00eame table  que le champ qui stocke les donn\u00e9es binaires. La cons\u00e9quence de cela est que  le champ doit poss\u00e9der une valeur en base de donn\u00e9es pour poss\u00e9der des  metadonn\u00e9es. Il n'est pas possible d'associer des m\u00e9tadonn\u00e9es \u00e0 un champ  virtuel. Il n'est pas non plus possible d'associer des m\u00e9tadonn\u00e9es au champ  faisant office de cl\u00e9 primaire.</p> <p>Au niveau du fichier <code>descript.xml</code>, on pourra alors r\u00e9f\u00e9rencer ces derniers  en tant qu'attributs pour le fichier selon la syntaxe suivante:</p> <pre><code>&lt;field name=\"docPublipostage\" type=\"binary\" column=\"DocPublipostage\"&gt;\n  &lt;metadata&gt;\n    &lt;attribute name=\"file:name\" column=\"NomDocPublipostage\"/&gt;\n    &lt;attribute name=\"file:size\" column=\"TailleDocPublipostage\"/&gt;\n    &lt;attribute name=\"file:mimetype\" column=\"MimeTypeDocPublipostage\"/&gt;\n  &lt;/metadata&gt;\n&lt;/field&gt;\n</code></pre> <p>Remarque : Le pr\u00e9fixe <code>file:</code> permet d'indiquer \u00e0 Ewt qu'il s'agit d'un  attribut de fichier. Il est possible que le concept de metadonn\u00e9e soit  \u00e9tendu \u00e0 l'avenir \u00e0 d'autres types de champs. Le pr\u00e9fixe sert donc \u00e0  distinguer les attributs \"r\u00e9serv\u00e9s\" par Ewt des autres. </p> <p>\u00c0 noter que l'enregistrement de metadonn\u00e9es n'est pas obligatoire, mais  recommand\u00e9.</p> <p>Chargement des champs binaires</p> <p>Lorsqu'on \u00e9dite un dossier qui contient des champs binaires, Ewt ne  t\u00e9l\u00e9charge pas syst\u00e9matiquement les donn\u00e9es binaires. Les m\u00e9tadonn\u00e9es  sont bien r\u00e9cup\u00e9r\u00e9es dans la session, mais, pour des questions de  performances, le contenu du large object n'est pas t\u00e9l\u00e9charg\u00e9.  Celui-ci n'est t\u00e9l\u00e9charg\u00e9 que lorsque cela est n\u00e9cessaire, c'est-\u00e0-dire  lorsque l'utilisateur le demande explicitement (par exemple en cliquant  sur un lien de t\u00e9l\u00e9chargement, ou via un appel XHR).</p>"},{"location":"reference/descript/#arrangement","title":"Arrangement","text":"<p>L'\u00e9l\u00e9ment <code>arrangement</code> permet d'indiquer au moteur quel crit\u00e8re de tri et quelle condition de filtre il doit appliquer pour le champ lorsqu'un arrangement de tuples est demand\u00e9 au niveau du groupe.</p> <p>Par d\u00e9faut (c'est-\u00e0-dire si aucune r\u00e8gle d'arrangement n'est d\u00e9finie au niveau du champ), le moteur s'appuie sur la valeur brute du champ, c.-\u00e0-d. la valeur en base de donn\u00e9es. Cela fonctionne bien lorsque le champ contient une valeur num\u00e9rique ou une cha\u00eene de caract\u00e8res standard. Par contre c'est probl\u00e9matique lorsque le champ est une r\u00e9f\u00e9rence vers un autre dossier ou lorsque l'on souhaite trier/filtrer sur une version modifi\u00e9e de la valeur brute.</p> <p>Par exemple, si un groupe demande un arrangement qui trie selon une colonne <code>idVendeur</code> et que ce dernier est une r\u00e9f\u00e9rence d'identifiant, un tri standard aurait pour cons\u00e9quence d'ajouter une clause <code>ORDER BY idVendeur ASC</code> \u00e0 la requ\u00eate d'extraction des tuples, ce qui n'est pas tr\u00e8s judicieux car il y a toutes les chances que l'utilisateur ne comprenne pas le tri et pense que le tri ne fonctionne pas. \u00c0 la place il est plus efficace de trier d'apr\u00e8s le nom ou le pr\u00e9nom du vendeur que r\u00e9f\u00e9rence cet identifiant.</p> <p>L'\u00e9l\u00e9ment <code>arrangement</code> permet justement de sp\u00e9cifier quel crit\u00e8re appliquer lorsqu'un groupe demande un tri ou un filtre sur le champ et que la valeur brute de ce dernier n'est pas exploitable directement.</p> <pre><code>&lt;arrangement&gt;\n  &lt;rule type=\"sort\" mode=\"field\" model=\"vendeur\"&gt;\n    &lt;field name=\"nom\"/&gt;\n    &lt;field name=\"prenom\"/&gt;\n  &lt;/rule&gt;\n  &lt;rule type=\"filter\" mode=\"sql\" table=\"Vendeur\"&gt;\n    &lt;value type=\"varchar\"&gt;concat(Vendeur.Nom, Vendeur.Prenom)&lt;/value&gt;\n  &lt;/rule&gt;\n&lt;/arrangement&gt;\n</code></pre> <p>Dans l'exemple ci-dessus, on d\u00e9finit une r\u00e8gle pour le tri qui s'appuie sur les champs <code>nom</code> et <code>prenom</code> du mod\u00e8le <code>vendeur</code> (le moteur s'attend \u00e0 trouver ces champs dans le groupe principal du mod\u00e8le), ainsi qu'une r\u00e8gle de filtre qui s'appuie sur une clause SQL \u00e0 appliquer sur la table <code>Vendeur</code>. Le fait d'utiliser le mode <code>field</code> pour le tri et le mode <code>sql</code> pour le filtre est un exemple, mais l'inverse est \u00e9galement possible. Il est m\u00eame possible de combiner les deux types d'arrangement en une seule r\u00e8gle. Dans ce cas on sp\u00e9cifierait le type selon la forme  <code>type=\"sort,filter\"</code>.</p> <p>Mode SQL Arr\u00eatons-nous quelques instants sur le mode <code>sql</code> pour aborder diff\u00e9rents aspects:</p> Typage Les clauses SQL d\u00e9finies au moyen de l'\u00e9l\u00e9ment <code>value</code> doivent \u00eatre typ\u00e9es. En effet, le moteur n'est pas en mesure de d\u00e9terminer le type attendu par l'expression SQL et demande que celui-ci soit clairement sp\u00e9cifi\u00e9 pour permettre le passage de valeur selon la notation des prepared statements,  afin d'\u00e9viter tout risque d'injection. Le type attendu par la clause SQL  doit donc \u00eatre sp\u00e9cifi\u00e9 \u00e0 l'aide de l'attribut <code>type</code>. La valeur de cet  attribut doit contenir le type. Il n'est par contre pas n\u00e9cessaire de  sp\u00e9cifier la taille. L'exemple ci-dessus d\u00e9clare le type <code>varchar</code> sans  mentionner sa longueur. Table <p>Dans le mode SQL, lorsqu'on souhaite r\u00e9f\u00e9rencer des colonnes d'une autre table comme dans l'exemple ci-dessus, on doit pr\u00e9fixer les noms de colonnes avec un nom de table. Ce nom de table doit \u00eatre sp\u00e9cifi\u00e9 via l'attribut <code>table</code>. Dans l'exemple ci-dessus on a indiqu\u00e9 le nom \"Vendeur\" (qui correspond au vrai nom de la table), mais on peut tr\u00e8s bien sp\u00e9cifier n'importe quel nom en r\u00e9alit\u00e9. En d\u00e9finissant un attribut <code>table=\"HelloWorld\"</code>, on pourrait alors \u00e9crire la clause SQL ainsi:</p> <pre><code>&lt;value type=\"varchar\"&gt;concat(HelloWorld.Nom, HelloWorld.Prenom)&lt;/value&gt;\n</code></pre> <p>En effet en pr\u00e9sence d'arrangement selon le mode SQL le moteur construit une requ\u00eate dans laquelle il int\u00e8gre les tables externes \u00e0 l'aide de jointures gauches (<code>LEFT JOIN</code>). Pour \u00e9viter les doublons, les noms de tables sont affubl\u00e9s d'un alias (g\u00e9n\u00e9r\u00e9 dynamiquement). Le moteur doit alors adapter le clause SQL sp\u00e9cifi\u00e9e dans le champ pour remplacer le nom de la table par le nom de l'alias.</p> <p>\u00c0 noter en passant qu'il est \u00e9galement possible de d\u00e9couper la clause en deux:</p> <pre><code>&lt;value type=\"varchar\"&gt;HelloWorld.Nom&lt;/value&gt;\n&lt;value type=\"varchar\"&gt;HelloWorld.Prenom&lt;/value&gt;\n</code></pre> <p>Cette notation est d'ailleurs pr\u00e9f\u00e9rable pour des raisons de compatibilit\u00e9. En effet, l'utilisation du mot-cl\u00e9 <code>concat</code> comme dans l'exemple initial peut poser des probl\u00e8mes sur certains SGBD. Il n'est par exemple pas reconnu sur SQLite.</p> <p>On peut se passer de sp\u00e9cifier un nom de table lorsque la clause n'implique pas de r\u00e9f\u00e9rence \u00e0 une colonne. Par exemple la clause suivante est autoris\u00e9e:</p> <pre><code>&lt;rule type=\"sort\" mode=\"sql\"&gt;\n  &lt;value&gt;1&lt;/value&gt;\n&lt;/rule&gt;\n</code></pre> <p>Sur certains SGBD, cette clause signifie que l'on souhaite trier selon la premi\u00e8re colonne du <code>SELECT</code>. Attention toutefois, il s'agit ici d'un exemple pour illustrer le propos, mais ce type de notation n'est pas recommand\u00e9 car l'ordre des colonnes utilis\u00e9es dans la requ\u00eate g\u00e9n\u00e9r\u00e9e par le moteur peut changer d'un appel \u00e0 l'autre (en particulier si on rajoute de nouveaux champs dans la descript).</p> <p>Notons enfin que le mode SQL autorise l'utilisation de param\u00e8tres selon la m\u00eame notation que pour les \u00e9l\u00e9ments <code>option</code> ou <code>default</code> du champ.</p>"},{"location":"reference/descript/#vue-view","title":"Vue (<code>&lt;view&gt;</code>)","text":"<p>Une vue est un assemblage de groupes. Elle permet de d\u00e9crire comment  afficher les \u00e9l\u00e9ments \u00e0 l'\u00e9cran, o\u00f9 plut\u00f4t, elle permet de savoir  quelles donn\u00e9es Ewt doit fournir dans l'arbre de sortie en fonction du style  \u00e0 utiliser.</p> <p>Chaque vue est constitu\u00e9e des \u00e9l\u00e9ments suivants:</p> <ul> <li>attribut <code>name</code> : nom de la vue</li> <li>attribut <code>style</code> : nom du style (attention, pour rappel ce nom ne d\u00e9signe      pas une stylesheet XSL, mais un style d\u00e9clar\u00e9 au niveau du fichier      de configuration et faisant lui-m\u00eame r\u00e9f\u00e9rence \u00e0 une stylesheet XSL)</li> <li>attribut <code>public</code> : facultatif; cet attribut permet de statuer sur      l'accessibilit\u00e9 de la vue : une vue est consid\u00e9r\u00e9e publique (valeur <code>true</code>)      si l'utilisateur a la possibilit\u00e9 de la s\u00e9lectionner explicitement. \u00c0      l'inverse, une vue priv\u00e9e (valeur <code>false</code>) n'est pas visible de      l'utilisateur. Typiquement, on qualifiera une vue en <code>public=\"false\"</code> s'il      s'agit d'une vue activable uniquement par un script, mais non directement      par l'utilisateur au niveau de l'interface</li> <li>\u00e9l\u00e9ment(s) <code>group</code> : liste des groupes qui composent la vue</li> </ul> <p>Les vues permettent donc de construire des \u00e9crans. Elles permettent de  d\u00e9crire, pour un style donn\u00e9, quels groupes doivent \u00eatre repris dans l'arbre  de sortie. \u00c0 ce titre, elles remplissent deux r\u00f4les importants:</p> <ol> <li> <p>Comme mentionn\u00e9 en introduction, les vues permettent d'indiquer quoi      afficher en fonction du style actuel. Le style pouvant \u00eatre forc\u00e9 depuis      un script, la vue permet d'indiquer quels groupes afficher en fonction du      style impos\u00e9 par le script. Ainsi il est possible de filtrer le contenu      affich\u00e9 en fonction du style. </p> </li> <li> <p>Les vues remplissent un second r\u00f4le plus subtil. Elles permettent      la cohabitation de plusieurs dossiers diff\u00e9rents au sein d'un m\u00eame      \u00e9cran. Pour rappel, Ewt permet d'afficher plusieurs dossiers      simultan\u00e9ment. Par cons\u00e9quent, il peut tr\u00e8s bien arriver que l'on doive      afficher conjointement des dossiers de mod\u00e8les diff\u00e9rents. Si chaque      mod\u00e8le n\u00e9cessite une feuille de style sp\u00e9cifique, il ne serait pas      possible d'afficher simultan\u00e9ment tous les dossiers car la feuille de      style pr\u00e9vue pour un mod\u00e8le ne serait pas capable d'afficher les donn\u00e9es      d'un autre mod\u00e8le. Avec les vues, il est possible de d\u00e9crire comment      un dossier doit s'afficher si telle ou telle feuille de style est      utilis\u00e9e. Ainsi, lorsque le moteur se trouve devant le d\u00e9fi d'afficher      simultan\u00e9ment plusieurs dossiers de mod\u00e8les diff\u00e9rents, il recherche les      vues qui sont communes entre les diff\u00e9rents mod\u00e8les. Pour ce faire, il      s'appuie sur les styles associ\u00e9s \u00e0 ces diff\u00e9rentes vues. Il s\u00e9lectionne      alors une vue qui est capable d'afficher tous les dossiers \u00e0 la fois.</p> </li> </ol>"},{"location":"reference/descript/#clonage","title":"Cl\u00f4nage","text":"<p>La descript permet de sp\u00e9cifier le comportement du moteur concernant le  cl\u00f4nage de dossier. Par d\u00e9faut, le cl\u00f4nage de dossier est d\u00e9sactiv\u00e9  pour tous les mod\u00e8les.</p> <p>Il est possible, pour un mod\u00e8le donn\u00e9, d'activer le cl\u00f4nage. Pour ce  faire, on ajoute l'attribut <code>cloneable</code> \u00e0 l'\u00e9l\u00e9ment <code>&lt;model&gt;</code>:</p> <pre><code>&lt;model name=\"demande\" maingroup=\"info\" mainfield=\"idDemande\"\n       workflow=\"demande\" statefield=\"idStatut\" cloneable=\"true\"&gt;\n  ...\n&lt;/model&gt;\n</code></pre> <p>La d\u00e9claration ci-dessus indique que le cl\u00f4nage est possible sur ce mod\u00e8le.</p> <p>Il est possible de d\u00e9clarer des modes de cl\u00f4nage. Cela permet par exemple  de g\u00e9n\u00e9rer une copie de dossier diff\u00e9rente en fonction de l'utilisateur qui  effectue la copie, du statut du dossier, etc. Il est possible de g\u00e9rer plusieurs modes diff\u00e9rents pour un m\u00eame mod\u00e8le. Pour d\u00e9clarer les modes, on  utilisera la syntaxe suivante: </p> <pre><code>&lt;model name=\"demande\" maingroup=\"info\" mainfield=\"idDemande\"\n       workflow=\"demande\" statefield=\"idStatut\" cloneable=\"foo,bar\"&gt;\n  ...\n&lt;/model&gt;\n</code></pre> <p>Les valeurs <code>true</code>, <code>false</code> et <code>inherit</code> priment sur les \u00e9ventuels modes. Cela  signifie que la valeur <code>cloneable=\"foo,true,bar\"</code> est \u00e9quivalente \u00e0  <code>cloneable=\"true\"</code> : les autres modes sont simplement ignor\u00e9s et inclus dans  <code>true</code>.</p> <p>La valeur <code>true</code> indique que le cl\u00f4nage de l'\u00e9l\u00e9ment est possible dans tous les  cas. La valeur <code>false</code> indique que le cl\u00f4nage de l'\u00e9l\u00e9ment n'est pas  possible. La valeur <code>inherit</code> indique que le cl\u00f4nage de l'\u00e9l\u00e9ment est possible  dans les m\u00eames modes que pour son parent.</p> <p>Lorsque le cl\u00f4nage est activ\u00e9 pour un mod\u00e8le, il est valable pour tous les  tuples et tous les champs du dossier, pour tous les modes d\u00e9clar\u00e9s. Il est  cependant possible de court-circuiter cela au niveau du groupe ou du champ au  moyen d'un sous-arbre du genre: </p> <pre><code>&lt;clone&gt;false&lt;/clone&gt;\n</code></pre> <p>ou</p> <pre><code>&lt;clone&gt;\n  &lt;mode name=\"foo\"&gt;false&lt;/mode&gt;\n  &lt;mode name=\"bar\"&gt;false&lt;/mode&gt;\n&lt;/clone&gt;\n</code></pre> <p>Il est recommand\u00e9 de sp\u00e9cifier explicitement la r\u00e8gle de cl\u00f4nage des champs  qui sont des r\u00e9f\u00e9rences internes de dossier (typiquement le champ qui fait  le lien entre un tuple multi et le maintuple). En effet, en principe ces  champs ne devraient pas \u00eatre clon\u00e9s, sinon cela reviendrait \u00e0 rajouter un  tuple au dossier source. Le moteur effectue donc un check dans ce sens et  affiche un avertissement lorsqu'il rencontre ce genre de champ. Il est  possible d'indiquer au moteur d'appliquer la r\u00e8gle du parent au moyen de la  valeur:</p> <pre><code>&lt;clone&gt;inherit&lt;/clone&gt;\n</code></pre> <p>Le mode entre en jeu lorsqu'on d\u00e9clenche l'action <code>clone</code>: on indiquera \u00e0 l'action le mode de cl\u00f4nage et le moteur sera en mesure de cl\u00f4ner uniquement les champs qui correspondent au mode s\u00e9lectionn\u00e9.</p>"},{"location":"reference/ewt-rap/","title":"Ewt et Rap","text":"<p>Ce chapitre s'adresse aux personnes qui sont famili\u00e8res avec Rap. Il pr\u00e9sente les principaux \u00e9l\u00e9ments qui diff\u00e9rencient Ewt de Rap et  d\u00e9crit les concepts propres \u00e0 Ewt qui peuvent \u00eatre pi\u00e8ges pour une  personne habitu\u00e9e \u00e0 Rap.</p>"},{"location":"reference/ewt-rap/#generalites","title":"G\u00e9n\u00e9ralit\u00e9s","text":"<p>Il convient de pr\u00e9ciser d'entr\u00e9e que Ewt et Rap sont diff\u00e9rents \u00e0 bien  des \u00e9gards, et ne sont pas compatibles entre eux. Cela signifie qu'une  application Ewt ne peut pas tourner sur Rap, de m\u00eame qu'une application Rap ne peut pas tourner sur Ewt. Cela vient des concepts mis en place  dans les deux moteurs qui ne sont pas \u00e9quivalents. D'autre part certains concepts sont propres \u00e0 l'un ou l'autre des moteurs. Enfin, Ewt  est beaucoup plus jeune que Rap et certains \u00e9l\u00e9ments n'y sont tout  simplement pas encore impl\u00e9ment\u00e9s, voire ne le seront jamais (car trop  sp\u00e9cifiques ou pas applicables sur Ewt).</p> <p>\u00c0 titre d'exemple, prenons le cas de l'upload de fichier. Dans Rap, les uploads se font via un servlet d\u00e9di\u00e9 (<code>RAPv4VUE.RAP_GenUpld</code>). Le moteur g\u00e9n\u00e8re alors un autoeval (<code>afterUpload</code>) qui permet \u00e0 l'application d'ex\u00e9cuter un traitement apr\u00e8s upload du fichier. Cette m\u00e9canique ne fait pas sens sur Ewt car les donn\u00e9es binaires et les donn\u00e9es textuelles sont trait\u00e9es simultan\u00e9ment et via le m\u00eame servlet: les deux types de donn\u00e9es peuvent \u00eatre transmis \u00e0 Ewt au sein d'un m\u00eame formulaire multipart.</p> <p>Certaines m\u00e9caniques de Rap existent \u00e9galement dans Ewt sous une forme diff\u00e9rente. Par exemple la notification <code>doc-save</code> dans Ewt joue \u00e0 la fois le r\u00f4le de l'<code>afterPageSave</code> et du <code>onModification</code> de Rap.</p> <p>D'autres particularit\u00e9s de Rap tels que la table <code>DtaTbl00</code>, le format des noms de champ (<code>R0</code>, <code>R1000</code>, etc.), les secucodes, etc. n'existent pas dans Ewt ou sont mis en \u0153uvre tr\u00e8s diff\u00e9remment.</p> <p>La suite de ce chapitre revient sur un grand nombre d'\u00e9l\u00e9ments qui diff\u00e9rencient Ewt de Rap.</p>"},{"location":"reference/ewt-rap/#code-source","title":"Code source","text":"<p>Le code source de Ewt est tr\u00e8s diff\u00e9rent de celui de Rap. La structure  des classes, l'impl\u00e9mentation de la logique de gestion des requ\u00eates,  l'organisation des fonctions de scripts, etc. ont \u00e9t\u00e9 \u00e9crites de z\u00e9ro  pour Ewt.</p> <p>\u00c0 l'heure o\u00f9 ces lignes sont r\u00e9dig\u00e9es, l'\u00e9tat du code est le suivant:</p> Lignes Rap Ewt Lignes de code (total) 159'511 87'918 Lignes de code source 114'376 56'997 Lignes de commentaires 23'785 21'158 Lignes vides 21'350 9'763 Classes (nombre) 185 366"},{"location":"reference/ewt-rap/#structure-dapplication","title":"Structure d'application","text":"<p>Rap s'appuie sur une description m\u00e9tier (fichier <code>descript.rap</code>). Ce fichier d\u00e9crit la structure de donn\u00e9es d'une application. Il est possible de concevoir une application sans mod\u00e8le, mais ce n'est pas le cadre standard d'une application Rap. Le fichier en lui-m\u00eame reste obligatoire sous peine  de voir appara\u00eetre un message du style description missing.</p> <p>Une application Ewt quant \u00e0 elle n'a pas forc\u00e9ment besoin d'une description, ni m\u00eame d'une base de donn\u00e9es ou de feuilles de styles. Une application Ewt peut \u00eatre constitu\u00e9e uniquement d'un fichier de configuration (qui d\u00e9clare les notifications \u00e0 envoyer) et de  scripts de traitement (qui traitent les requ\u00eates et y  r\u00e9pondent). Ce type d'application peut par exemple faire office de service  web, de proxy, etc.</p>"},{"location":"reference/ewt-rap/#descript-dossier-pages-s-et-page-m","title":"Descript, dossier, pages S et page M","text":"<p>La structure de la descript d'une application Ewt diff\u00e8re de celle d'une  application Rap. Ewt s'appuie sur les notions de mod\u00e8le, de groupe et de champ, que l'on peut plus ou moins mettre en relation avec les notions de mod\u00e8le, page et champ de Rap. Le fichier de documentation descript pr\u00e9sente la  descript de mani\u00e8re plus d\u00e9taill\u00e9e.</p> <p>Les groupes</p> <p>Attention, un groupe sur Ewt n'a rien \u00e0 voir avec un groupe sur Rap. La notion de \"groupe\" dans Ewt est plus proche de la notion de \"page\" de Rap dans la mesure o\u00f9 les groupes Ewt peuvent \u00eatre single ou multi (dans Rap, les pages peuvent \u00eatre de type S ou M). Toutefois l'analogie s'arr\u00eate l\u00e0, car le groupe sous Ewt n'aborde pas la question d'affichage comme le fait la page sur Rap via l'attribut <code>style</code>. En fait on peut consid\u00e9rer que la notion de \"page\" de Rap est le cumul des notions de \"groupe\" et de \"vue\" dans Ewt. La notion de \"vue\" est pr\u00e9sent\u00e9e plus bas dans ce document.</p> <p>Par ailleurs, la descript de Rap englobe \u00e0 la fois les aspects de structure (description des mod\u00e8les, des pages, des champs, etc.) et les aspects de stockage (table et colonne de destination). Dans Ewt, ces deux aspects sont distincts : un fichier <code>descript.xml</code> se charge de d\u00e9crire la structure  logique alors qu'un fichier <code>schema.xml</code> d\u00e9crit la structure physique de la  base de donn\u00e9es. Cela concerne autant les tables de donn\u00e9es que les tables  d'infrastructure.</p>"},{"location":"reference/ewt-rap/#dossier","title":"Dossier","text":"<p>Rap et Ewt g\u00e8rent tous deux des dossiers. Toutefois il y a des diff\u00e9rences  au niveau de leur structure, de la fa\u00e7on de les identifier et de les  mettre \u00e0 jour.</p> <p>Rap s'appuie sur une table <code>DtaTbl00</code> dans laquelle sont inventori\u00e9s tous  les dossiers de l'application. Par convention, l'identifiant de dossier est  enregistr\u00e9 dans un champ <code>R0</code>.</p> <p>Sur Ewt il n'existe pas de table centrale analogue \u00e0 <code>DtaTbl00</code>. Il n'existe  pas non plus de convention concernant le champ r\u00e9serv\u00e9 \u00e0 l'identifiant de dossier. Cela signifie qu'au niveau de la descript, on indiquera pour chaque  mod\u00e8le le nom du champ qui porte le r\u00f4le d'identifiant (le d\u00e9veloppeur est  libre de conserver le nom <code>R0</code> s'il le d\u00e9sire) et dans quelle table cet  identifiant est stock\u00e9 (pour autant que l'application utilise une base de  donn\u00e9es).</p> <p>Sur Ewt, les dossiers doivent imp\u00e9rativement \u00eatre identifi\u00e9s au moyen de  leur identifiant ET de leur nom de mod\u00e8le. En effet, il est possible  que des dossiers de mod\u00e8les diff\u00e9rents aient un m\u00eame identifiant. C'est  particuli\u00e8rement vrai lorsque l'on utilise des identifiants de type <code>int</code>.</p> <p>Cela vient du fait que Ewt s'appuie sur une structure volontairement proche  de la structure des donn\u00e9es en base de donn\u00e9es. La notion de tuple est  d'ailleurs tr\u00e8s importante sur Ewt: pour rappel un tuple correspond plus  ou moins \u00e0 une ligne dans une table de la base de donn\u00e9es et poss\u00e9dant une  primary key. Un dossier Ewt n'est donc rien d'autre qu'un tuple,  \u00e9ventuellement compl\u00e9t\u00e9 par d'autres tuples li\u00e9s. </p> <p>L'identifiant d'un tuple n'est pas unique dans l'absolu, tout comme une cl\u00e9 primaire n'est pas unique dans l'absolu: il est tout \u00e0 fait possible que  deux tables distinctes poss\u00e8dent toutes deux une ligne portant un cl\u00e9  primaire \u00e9quivalente. Sur Ewt un dossier doit donc \u00eatre identifi\u00e9 au moyen  de son mod\u00e8le et de son identifiant (de la m\u00eame fa\u00e7on qu'une ligne de data  doit \u00eatre identifi\u00e9e par le nom de sa table et de sa primary key au niveau  de la base de donn\u00e9es).</p> <p>Notons au passage que par d\u00e9faut Ewt d\u00e9l\u00e8gue la cr\u00e9ation des identifiants  de tuples (et donc de dossiers) au SGBD. Le format d'identifiant par d\u00e9faut  est l'entier (type <code>int</code>). Il est toutefois possible d'opter pour d'autres  formats tels que le <code>bigint</code> ou l'<code>uuid</code> si le SGBD le supporte. Ewt autorise  \u00e9galement le format <code>snowflake</code>, mais ce dernier n'est pas g\u00e9n\u00e9r\u00e9 par le  SGBD.</p>"},{"location":"reference/ewt-rap/#pages-s-et-pages-m","title":"Pages S et pages M","text":"<p>Le concept champ S ou M existe dans Ewt, mais pas de la m\u00eame fa\u00e7on que dans Rap. En premier lieu, la notion de page est volontairement absente  de Ewt car elle a une connotation trop orient\u00e9e \"affichage\". Ewt cherche  \u00e0 rester proche des donn\u00e9es et pr\u00e9f\u00e8re la notion de  groupe. Le groupe est un ensemble de champs,  de la m\u00eame fa\u00e7on qu'une table est un ensemble de colonnes. Un groupe Ewt  correspond donc \u00e0 une page de Rap en tant que conteneur, mais l'analogie  s'arr\u00eate l\u00e0 car les autres notions associ\u00e9es \u00e0 la page de Rap ne se  retrouvent pas forc\u00e9ment au niveau du groupe dans Ewt. Par exemple, une  page dans Rap peut contenir des champs issus de diff\u00e9rentes tables,  mais ce n'est pas permis sur Ewt. </p> <p>Continuons avec la fa\u00e7on de distinguer les types de pages. Sur Rap, la  distinction entre une page S et une page M se fait au moyen du style (premier caract\u00e8re du nom de la feuille de style). Sur Ewt, la distinction  se fait au moyen d'un attribut <code>type</code> qui peut prendre les valeurs <code>single</code>  ou <code>multi</code>. La notion de page d'alias sur Ewt est quant \u00e0 elle g\u00e9r\u00e9e au  moyen de vues. Pour faire simple, une vue est une  organisation de groupes qui s'affiche au moyen d'un style, de la m\u00eame fa\u00e7on qu'une page d'alias est une organisation de pages qui s'affichent au moyen d'une feuille de style.</p> <p>Dans Rap, chaque dossier poss\u00e8de habituellement une page S. Cette derni\u00e8re d\u00e9clare notamment les champs de base (<code>R0</code>, <code>R999997</code> et <code>R999999</code>). De la m\u00eame mani\u00e8re, Ewt part du principe que tout dossier contient au moins un tuple principal. L'identifiant de ce tuple principal permet d'identifier le dossier: ainsi un dossier Ewt est donc identifi\u00e9 au moyen  de son mod\u00e8le et de l'identifiant de son tuple principal. Ewt ne pr\u00e9voit  pas de noms pr\u00e9-d\u00e9finis \u00e9quivalents aux champs <code>R0</code>, <code>R999997</code> et <code>R999999</code>.  Les champs servant \u00e0 l'enregistrement de l'identifiant et du statut doivent  \u00eatre d\u00e9clar\u00e9s dans le fichier <code>descript.xml</code>. Ewt ne pr\u00e9voit pas de champ  pour enregistrer le mod\u00e8le \u00e9tant donn\u00e9 que le mod\u00e8le est n\u00e9cessaire \u00e0  l'identification du dossier (voir chapitre pr\u00e9c\u00e9dent.</p> <p>La descript permet bien d'indiquer si un groupe est de type single ou  multi, mais ceci mis \u00e0 part, les champs mono ou multi-valu\u00e9s se pr\u00e9sentent  tous de la m\u00eame fa\u00e7on : ils appartiennent \u00e0 un tuple qui poss\u00e8de un  identifiant unique au sein de leur table en base de donn\u00e9es (= primary key).  En cons\u00e9quence, on ne retrouvera jamais une ligne multi d'un dossier  portant le m\u00eame identifiant qu'une ligne multi d'un autre dossier du  m\u00eame mod\u00e8le.</p> <p>Voyons ce que cela implique. Une page M de Rap doit contenir un champ qui reprend le <code>R0</code> du dossier et un second champ qui est un identifiant de ligne unique au sein du dossier. En l'absence de tel  champ, Rap s'appuie sur les valeurs enti\u00e8res ou texte du tuple.</p> <p>Sur Ewt, on retrouve \u00e9galement un identifiant de dossier (ou plus exactement une r\u00e9f\u00e9rence \u00e0 l'identifiant du tuple principal du dossier) et un identifiant de tuple qui tient le r\u00f4le de l'identifiant de ligne. La grande diff\u00e9rence ici est que cet identifiant de ligne est obligatoire  et il est unique sur toute la table, car il s'agit de l'identifiant de tuple  de la ligne multi. Cet identifiant est donc suffisant pour identifier une  ligne de groupe multi. Ewt n'impl\u00e9mente donc pas d'identification de ligne  bas\u00e9e sur les valeurs enti\u00e8res ou texte comme le fait Rap.</p>"},{"location":"reference/ewt-rap/#champs-de-formulaire","title":"Champs de formulaire","text":"<p>Dans Ewt, les champs single ou multi peuvent tous \u00eatre repr\u00e9sent\u00e9s au moyen d'une notation commune (on l'appellera  contexte) contenant le nom de mod\u00e8le, l'identifiant du tuple principal (= num\u00e9ro de dossier), le nom de groupe (= page), l'identifiant de tuple et le nom de champ.</p> <p>Le contexte ainsi d\u00e9fini peut \u00eatre exprim\u00e9 selon forme suivante:</p> <pre><code>model[3].group[2].abc\n</code></pre> <p>Ici <code>model</code> d\u00e9signe le nom du mod\u00e8le de dossier, la valeur <code>3</code> est l'identifiant de dossier, <code>group</code> d\u00e9signe le nom du groupe, <code>2</code> d\u00e9signe l'id de tuple et <code>abc</code> est le nom du champ. Cette notation de contexte joue un grand r\u00f4le dans Ewt car elle est r\u00e9utilis\u00e9e \u00e0 de nombreux endroits: au niveau des champs de formulaire HTML, au niveau des scripts, au niveau de la descript, etc.</p> <p>Ainsi, un champ HTML qui repr\u00e9sente un champ de dossier peut \u00eatre d\u00e9fini de la mani\u00e8re suivante, qu'il s'agisse d'un champ \"S\" ou d'un champ \"M\" :</p> <pre><code>&lt;input type=\"text\"\n       name=\"EWT:DATA-model[3].group[2].abc\"\n       value=\"ma valeur\"/&gt;\n</code></pre> <p>Remarque concernant la s\u00e9curit\u00e9</p> <p>Il ne serait pas prudent de r\u00e9utiliser la notation de contexte ci-dessus dans un champ de formulaire HTML. En effet, un champ dans lequel le  contexte appara\u00eet en clair comme ci-dessus serait trop facilement  corruptible.</p> <p>Dans les faits, chaque champ HTML est repr\u00e9sent\u00e9 au niveau du formulaire HTML par un contexte exprim\u00e9 sous la forme d'un uuid. Dans le cas de notre champ, on aurait donc:</p> <pre><code>&lt;input type=\"text\"\n       name=\"EWT:DATA-3ed048d4-1e27-4cbe-a727-04a6792e52f4\"\n       value=\"ma valeur\"/&gt;\n</code></pre> <p>Ewt se charge de maintenir au sein de la session une table de  correspondance entre les contextes et leur repr\u00e9sentation uuid.  Ces derniers sont en outre r\u00e9g\u00e9n\u00e9r\u00e9s \u00e0 chaque session (voir paragraphe  ci-dessous concernant les sessions).</p> <p>Le document 11 - script revient sur la notion de contexte. Il d\u00e9crit un outre diff\u00e9rentes mani\u00e8res  d'exprimer le contexte (notation raccourcie, contexte implicite, notation  \"sharp\", etc.)</p>"},{"location":"reference/ewt-rap/#sessions","title":"Sessions","text":"<p>L'une des diff\u00e9rences majeures entre Ewt et Rap est l'utilisation d'une session cliente. Une session client est automatiquement cr\u00e9\u00e9e \u00e0 la premi\u00e8re requ\u00eate envoy\u00e9e par un client \u00e0 Ewt. La session a une dur\u00e9e de vie ainsi qu'une dur\u00e9e d'inactivit\u00e9 d\u00e9finies (voir propri\u00e9t\u00e9s  <code>sessionTTL</code> et  <code>sessionEOL</code> de la config).</p> <p>La session enregistre diff\u00e9rents param\u00e8tres relatifs \u00e0 l'activit\u00e9 du client: dossier(s) ouvert(s), objets v\u00e9hicul\u00e9s entre les requ\u00eates, table de correspondances entre uuid et contextes, etc.</p> <p>La session joue \u00e9galement un r\u00f4le de s\u00e9curit\u00e9. Elle permet de v\u00e9rifier que les donn\u00e9es re\u00e7ues via une requ\u00eate sont coh\u00e9rentes avec ce qui avait \u00e9t\u00e9 livr\u00e9 lors de la r\u00e9ponse pr\u00e9c\u00e9dente. Par exemple, si Ewt g\u00e9n\u00e8re un arbre de sortie dans lequel il indique qu'un champ est en lecture seule, il ne s'attend pas \u00e0 recevoir de valeur pour ce champ. Une erreur est g\u00e9n\u00e9r\u00e9e si ce cas de figure se pr\u00e9sente. La session joue \u00e9galement un r\u00f4le pour les performances: elle permet de stocker des donn\u00e9es en m\u00e9moire entre les diff\u00e9rentes requ\u00eates, ce qui \u00e9vite les \u00e9changes co\u00fbteux avec la base de donn\u00e9es.</p> <p>Il est important de garder \u00e0 l'esprit cette notion de session lors du d\u00e9veloppement d'une application. En particulier, il faut \u00eatre conscient que lorsqu'on ouvre un dossier, Ewt charge ce dossier en m\u00e9moire et le conserve jusqu'\u00e0 sa fermeture ou jusqu'\u00e0 la fin de la session. Cela peut \u00eatre source d'incompr\u00e9hension, en particulier lorsqu'on a l'habitude de travailler sur des applications Rap. Ewt encourage le d\u00e9veloppeur \u00e0 effectuer les traitements au niveau de la session plut\u00f4t qu'au niveau de la base de donn\u00e9es. Prenons un exemple pour illustrer cela. Le script ci-dessous effectue une mise \u00e0 jour de champs en DB au moyen d'une requ\u00eate SQL (ici au moyen d'un prepared statements):</p> <pre><code>$sql.update(`update ListeArticle\n             set ( idVenteEchange,\n                   idVendeur, Password,\n                   Nom, Prenom,\n                   Adresse, Localite,\n                   EMail, Telephone ) =\n                 ( select ?,\n                          idVendeur, ?,\n                          Nom, Prenom,\n                          Adresse, Localite,\n                          EMail, Telephone\n                   from Vendeur\n                   where idVendeur=? )\n             where idListeArticle=?`::T,\n            [ refVenteEchange, secret, currdoc, newdoc ] );\n</code></pre> <p>Cette op\u00e9ration met \u00e0 jour les champs directement au niveau de la base de donn\u00e9es. Si l'update porte sur un dossier actuellement ouvert par l'utilisateur, cela cr\u00e9e une d\u00e9synchronisation entre les informations stock\u00e9es au niveau de la session et celles stock\u00e9es au niveau de la base de donn\u00e9es. En outre la requ\u00eate ci-dessus ne tient pas compte du type de lock qui peut exister sur le tuple modifi\u00e9.</p> <p>Dans le cas pr\u00e9sent, il importe donc de forcer un reload des donn\u00e9es de la session \u00e0 partir des valeurs de la base de donn\u00e9es au moyen de la fonction <code>$data.reload(\"listeArticle[${newdoc}]\")</code> (ici <code>\"listeArticle[${newdoc}]\"</code> d\u00e9finit le contexte de notre dossier en notation raccourcie).</p>"},{"location":"reference/ewt-rap/#gestion-de-droits","title":"Gestion de droits","text":"<p>La gestion de droits change radicalement de Rap et s'appuie sur des  policies. Le concept de policies s'appuie sur les notions  d'identity policy (politique bas\u00e9e sur les identit\u00e9s) et de resource  policy (politique bas\u00e9e sur les ressources) mises en place dans l'IAM d'AWS.</p> <p>Tr\u00e8s bri\u00e8vement, une policy est un fichier XML d\u00e9crivant une ou plusieurs r\u00e8gles de s\u00e9curit\u00e9 qui concernent une ou plusieurs identit\u00e9s, ou qui  s'appliquent \u00e0 une ou plusieurs ressources.</p> <p>Les policies offrent diff\u00e9rents avantages:</p> <ul> <li>elles permettent de regrouper toutes les r\u00e8gles de s\u00e9curit\u00e9 \u00e0 un m\u00eame    endroit</li> <li>elles sont faciles \u00e0 \u00e9valuer par le moteur, ainsi elles permettent tr\u00e8s    rapidement de savoir si un utilisateur a le droit d'effectuer telle ou    telle action, de modifier un champ, d'effectuer un changement d'\u00e9tat, etc.</li> <li>elles permettent une gestion des droits au moyen de r\u00e8gles statiques,    de requ\u00eates SQL, de script, etc.</li> </ul> <p>Le document policy pr\u00e9sente les aspects de s\u00e9curit\u00e9  plus en d\u00e9tail.</p>"},{"location":"reference/ewt-rap/#etats","title":"\u00c9tats","text":"<p>Le concept d'\u00e9tat dans Ewt est actuellement assez basique et fera certainement l'objet d'am\u00e9liorations \u00e0 l'avenir. On notera quelques diff\u00e9rences avec Rap.</p> <p>Ewt ne g\u00e8re pas un seul fichier de description d'\u00e9tats, mais plusieurs fichiers de descriptions de mod\u00e8les d'\u00e9tats. Cela permet de d\u00e9crire diff\u00e9rents cycles de vie de dossier. Chaque mod\u00e8le de dossier, pour autant  qu'il souhaite impl\u00e9menter une gestion d'\u00e9tats, indiquera quel mod\u00e8le  d'\u00e9tats il souhaite mettre en \u0153uvre. Il devra aussi d\u00e9clarer dans quel  champ la valeur d'\u00e9tat devra \u00eatre enregistr\u00e9e (dans Ewt, il n'y a pas de  champ pr\u00e9-d\u00e9fini pour enregistrer l'\u00e9tat).</p> <p>Dans Ewt, la gestion d'\u00e9tats se concentre principalement sur les transitions  d'\u00e9tats. Ainsi, on effectuera un changement d'\u00e9tat en indiquant quelle  transition doit \u00eatre r\u00e9alis\u00e9e \u00e0 partir de l'\u00e9tat courant. \u00c0 noter que  l'action <code>setState</code> autorise \u00e9galement le  changement d'\u00e9tat explicite.</p> <p>Tous les aspects de s\u00e9curit\u00e9 qui peuvent d\u00e9couler de l'\u00e9tat d'un  dossier (verrouillage de champs, autorisation d'ex\u00e9cuter une action, etc.)  est d\u00e9l\u00e9gu\u00e9e aux policies. Chaque policy peut sp\u00e9cifier si une transition  est autoris\u00e9e ou refus\u00e9e.</p> <p>Le document statemodel d\u00e9crit le mod\u00e8le d'\u00e9tats  de Ewt.</p>"},{"location":"reference/ewt-rap/#lock-de-dossiers","title":"Lock de dossiers","text":"<p>Rap impl\u00e9mente un syst\u00e8me de lock dit \"pessimiste\" : pour pr\u00e9venir tout  risque de conflit, il appose un lock sur le dossier \u00e0 l'ouverture d'un dossier en \u00e9criture puis lib\u00e8re ce lock \u00e0 la fermeture du dossier.</p> <p>Ewt impl\u00e9mente \u00e9galement ce syst\u00e8me de lock, mais il ne s'agit pas du mode  par d\u00e9faut. De base, une application Ewt utilise un lock \"optimiste\". Dans  ce cas, le moteur n'appose pas de lock au moment de l'ouverture, mais v\u00e9rifie  qu'il n'y a pas eu de modification de valeur au moment de l'enregistrement. On parle de lock \"optimiste\" car le moteur s'attend a priori \u00e0 ce qu'il n'y  ait pas de conflit. L'utilisateur n'est invit\u00e9 \u00e0 traiter le conflit que cela  est n\u00e9cessaire.</p> <p>Il est possible de sp\u00e9cifier le type de lock \u00e0 utiliser pour chaque mod\u00e8le.</p>"},{"location":"reference/ewt-rap/#typage","title":"Typage","text":"<p>Rap s'appuie principalement sur des donn\u00e9es au format String: les identifiants, les dates, les variables RET, les retours de fonctions RET, etc. sont toutes stock\u00e9es en tant que String, que ce soit au niveau de la base de donn\u00e9es ou de la repr\u00e9sentation en m\u00e9moire.</p> <p>Ewt utilise des donn\u00e9es typ\u00e9es (ou pseudo-typ\u00e9es dans certains cas). Ainsi, les dates, les heures et les horodates sont stock\u00e9es en base de donn\u00e9es comme de vraies dates, heures ou timestamps lorsque le SGBD le supporte. Le langage de script utilise \u00e9galement le typage de valeurs. Il supporte les types suivants: array, map, date, time, timestamp, file,  function, object, method, null et value (qui englobe les types  string, number (entier ou d\u00e9cimal) et boolean en fonction de la valeur). La documentation 11 - script revient sur ces  types.</p> <p>Sous Ewt, la repr\u00e9sentation textuelle de certains types de donn\u00e9es peut  varier de celle utilis\u00e9e dans Rap. Par exemple, les dates sont  repr\u00e9sent\u00e9es au format standardis\u00e9  iso-8601 \u00e9tendu  <code>yyyy-mm-dd</code> sous Ewt alors que Rap utilise le format iso-8601 basique  <code>yyyymmdd</code>.</p>"},{"location":"reference/ewt-rap/#stockage-de-binaires","title":"Stockage de binaires","text":"<p>La gestion des donn\u00e9es binaires varie entre Ewt et Rap \u00e0 diff\u00e9rents  niveaux.</p> Upload L'upload de fichiers sur Rap se fait au moyen d'un servlet sp\u00e9cifique. Sur Ewt, l'upload d'un fichier se fait via le m\u00eame servlet que les  autres donn\u00e9es de dossiers. Nom de fichier Rap effectue un encodage des valeurs binaires stock\u00e9es dans des  champs de dossier pour y pr\u00e9fixer le nom de fichier. Ewt n'effectue  pas d'encodage de la sorte. Pour enregistrer le nom de fichier, mais  \u00e9galement la taille et le mimetype, Ewt s'appuie sur des champs de  m\u00e9tadonn\u00e9es. Il s'agit de champs associ\u00e9s \u00e0 un champ principal. Le document 04 - descript revient sur ce concept. Formats Ewt permet de stocker les binaires en tant que tableaux de bytes  (comme Rap), mais \u00e9galement en tant que r\u00e9f\u00e9rence d'objet lorsque  le SGBD le supporte. Voir  PostgreSQL et les blobs"},{"location":"reference/ewt-rap/#nom-dapplication","title":"Nom d'application","text":"<p>Une application Ewt n'a pas r\u00e9ellement de nom. Le fichier de config <code>config.xml</code> poss\u00e8de bien une entr\u00e9e <code>applicationName</code>, mais celle-ci est purement d\u00e9corative. Le moteur ne fait que de reprendre la valeur au niveau  de l'arbre de sortie, pour permettre \u00e0 l'interface d'afficher un nom. La valeur indiqu\u00e9e dans cette entr\u00e9e ne joue aucun r\u00f4le m\u00e9tier. En r\u00e9alit\u00e9, on  acc\u00e8de \u00e0 une application Ewt en pr\u00e9cisant dans l'URL le nom du dossier dans  lequel l'application est d\u00e9ploy\u00e9e.</p> <p>Ainsi, aucun fichier de configuration de Ewt ne fait r\u00e9f\u00e9rence \u00e0 un nom d'application. Cela offre diff\u00e9rents avantages: un m\u00eame fichier peut \u00eatre repris dans une autre application sans n\u00e9cessiter aucun changement. De plus, il est possible de faire fonctionner en parall\u00e8le plusieurs fois une m\u00eame application sans que ces diff\u00e9rentes instances n'entrent en conflit.</p>"},{"location":"reference/ewt-rap/#styles","title":"Styles","text":"<p>Dans Rap, les feuilles de style XSL et les ressources (images, fichiers css, javascript, etc.) sont pr\u00e9sents dans un m\u00eame r\u00e9pertoire (\u00e9ventuellement dans des sous-r\u00e9pertoires). \u00c0 l'ex\u00e9cution, les styles et les ressources doivent \u00eatre pr\u00e9sents au niveau du dossier de d\u00e9ploiement du serveur d'application (typiquement dans le WAR).</p> <p>Sur Ewt, les styles et les ressources sont g\u00e9r\u00e9s diff\u00e9remment. Ewt part du  principe que les styles (les fichiers XSL) sont des \u00e9l\u00e9ments qui font partie  de l'application, au m\u00eame titre que la descript, le fichier de config et ou  les fichiers de scripts. Ils ne doivent pas \u00eatre expos\u00e9s. En revanche, les  ressources (fichiers css, javascript, images, icones, etc.) sont des  \u00e9l\u00e9ments qui doivent remonter jusqu'au client (le navigateur utilis\u00e9 par  l'utilisateur) et doivent \u00eatre expos\u00e9s, et donc d\u00e9ploy\u00e9s dans le WAR.</p> <p>Les fichiers XSL et les ressources ne sont donc pas m\u00e9lang\u00e9s au niveau des fichiers de l'application (on les place dans des r\u00e9pertoires s\u00e9par\u00e9s).  Comme mentionn\u00e9 ci-dessus, seules les ressources sont d\u00e9ploy\u00e9es dans le WAR \u00e0  l'initialisation de l'application ou au reset. Elles peuvent m\u00eame \u00eatre  enregistr\u00e9es dans le projet sous la forme de ZIP : le moteur se charge de  d\u00e9zipper automatiquement les ressources (il faut pour cela que l'archive ZIP  soit accompagn\u00e9e d'un fichier homonyme portant l'extension <code>.dounzip</code>).</p> <p>Les feuilles de styles quant \u00e0 elles ne sont pas recopi\u00e9es dans le WAR. Elles sont utilis\u00e9es depuis le dossier de l'application directement.</p> <p>Les fichiers XSL utilis\u00e9s par des scripts (par exemple un XSL utilis\u00e9 pour cr\u00e9er un document PDF) peuvent se trouver dans un autre r\u00e9pertoire de l'application.</p> <p>Sur Rap les styles sont r\u00e9f\u00e9renc\u00e9s directement: par exemple l'identifiant  \"S1\" r\u00e9f\u00e9rence la feuille de style \"S1.xsl\". Ewt ajoute une couche  d'abstraction et ne permet pas le r\u00e9f\u00e9rencement direct. Ainsi, une feuille  de style doit \u00eatre d\u00e9clar\u00e9e au niveau de la configuration et est identifi\u00e9e  au moyen d'un nom au sein de l'application. L'application ne peut pas  r\u00e9f\u00e9rencer un fichier XSL directement : celui-ci doit \u00eatre r\u00e9f\u00e9renc\u00e9 au  moyen d'un nom de style d\u00e9clar\u00e9 dans le config.</p>"},{"location":"reference/ewt-rap/#langage-de-script","title":"Langage de script","text":"<p>Le langage de script de Ewt joue le r\u00f4le du langage RET de Rap,  c'est-\u00e0-dire un langage permettant de d\u00e9crire des calculs, des processus, des  t\u00e2ches, etc. La syntaxe de la version Ewt s'apparente quant \u00e0 elle au REX,  mais se distingue de celui-ci sur certains aspects:</p> <ul> <li>Le langage script est utilisable nativement dans Ewt, sans n\u00e9cessit\u00e9 de   compilation en un sous-langage (le RET dans le cas de Rap)</li> <li>Les scripts sont pr\u00e9-charg\u00e9s par Ewt et pr\u00e9-compil\u00e9s au chargement de   l'application par le moteur. Les \u00e9ventuelles erreurs de syntaxes sont    donc identifi\u00e9es imm\u00e9diatement au d\u00e9marrage de l'application. </li> <li>Sans indication d'encoding, les fichiers de script sont trait\u00e9s en utf-8   par d\u00e9faut. Il est possible de d\u00e9clarer un encoding au moyen d'une   annotation.</li> <li>L'extension est <code>.ewts</code> (ou <code>.script</code>) pour les scripts et <code>.ewtsub</code> (ou    <code>.subscript</code>) pour les d\u00e9pendances. En r\u00e9alit\u00e9 les d\u00e9pendances ont    exactement la m\u00eame forme que les scripts eux-m\u00eames, on utilisera    une extension diff\u00e9rente (<code>.ewtsub</code> ou <code>.subscript</code>) par convention pour   faciliter l'identification des d\u00e9pendances et \u00e9viter que le loader de   script ne les charge comme des scripts)</li> </ul> <p>Au niveau de la syntaxe, on peut relever les diff\u00e9rences suivantes:</p> <ul> <li>Les variables ont une port\u00e9e locale (appel\u00e9e \"scope\"), comme c'est le cas   sur la plupart des languages (mais pas RET/REX, o\u00f9 les variables sont   toutes globales) </li> <li>Les instructions <code>return</code>, <code>switch</code>, <code>break</code>, ainsi que des boucles   <code>for</code> ou <code>while</code> sont impl\u00e9ment\u00e9es de la m\u00eame fa\u00e7on qu'en java. En   particulier, le <code>return</code> met fin imm\u00e9diatement \u00e0 l'\u00e9valuation d'une   fonction, le <code>break</code> stoppe imm\u00e9diatement les it\u00e9rations d'une boucle et   le <code>continue</code> saute imm\u00e9diatement \u00e0 l'it\u00e9ration suivante.</li> <li>Il est possible de mettre fin imm\u00e9diatement \u00e0 l'ex\u00e9cution d'un script au   moyen de l'instruction <code>exit</code>.</li> <li>Le langage de script supporte la gestion d'exceptions via les mots-cl\u00e9s   <code>try</code>, <code>catch</code>, <code>throw</code> et <code>finally</code></li> <li>Le langage de script est typ\u00e9 : il supporte les types number, string,   date, time, timestamp, file, array, map, ainsi que les objets java (mais    ces derniers ne sont utilisables que comme r\u00e9f\u00e9rence, ils ne peuvent pas    \u00eatre modifi\u00e9s depuis un script)</li> <li>Le langage supporte nativement les notations de repr\u00e9sentation de tableaux    (p.ex <code>[ 1, 2 ]</code>) et de maps (ou dictionnaire, p.ex  <code>{ x : 1, y : 2 }</code>)</li> <li>Le langage impl\u00e9mente nativement les op\u00e9rateurs arithm\u00e9tiques <code>+</code>, <code>-</code>, <code>*</code>,   <code>/</code> et <code>%</code> (modulo). Cela signifie que ces op\u00e9rateurs sont calcul\u00e9s par le   processeur charg\u00e9 d'\u00e9valuer le script et non par une fonction \"ADD\", \"SUB\",   etc. qui serait d\u00e9finie au niveau d'une librairie.</li> <li>Le langage est capable de g\u00e9rer les valeurs infinies (en positif et   n\u00e9gatif), les valeurs NaN ainsi que le z\u00e9ro n\u00e9gatif.</li> <li>Les valeurs bool\u00e9ennes sont, en interne, associ\u00e9es aux valeurs 0 (false)   et 1 (true). Au niveau du langage de script, on utilisera toutefois   exclusivement les mots cl\u00e9s <code>false</code> et <code>true</code> et non 0 ou 1 pour que le   moteur de script sache s'il doit traiter une valeur en tant que bool\u00e9en ou   en tant qu'entier.</li> <li>Les erreurs d'ex\u00e9cution de script retournent une information sur la   position o\u00f9 l'erreur s'est produite dans le script</li> <li>Les scripts sont g\u00e9n\u00e9riques : ils ne contiennent pas de r\u00e9f\u00e9rence \u00e0 une   application en particulier.</li> <li>Le moteur int\u00e8gre un debugger compatible DAP (Debug Adapter Procotol), ce    qui signifie qu'un script Ewt peut \u00eatre d\u00e9buggu\u00e9 directement depuis un    outil compatible, tel que VS Code.</li> <li>Le langage de script d'Ewt introduit un nouveau d\u00e9limiteur de cha\u00eenes    de caract\u00e8res: le caract\u00e8re <code>`</code> peut \u00eatre utilis\u00e9 en plus de    <code>\"</code> et <code>'</code>. Les valeurs \u00e9chapp\u00e9es <code>\\n</code>,   <code>\\r</code>, <code>\\t</code>, etc. sont interpr\u00e9t\u00e9es comme dans en    java.</li> </ul>"},{"location":"reference/ewt-rap/#internationalisation","title":"Internationalisation","text":"<p>L'internationalisation (le multi-linguisme) est g\u00e9r\u00e9 au moyen de bundles  de ressources et la locale est interpr\u00e9t\u00e9e en fonction du navigateur plut\u00f4t  qu'en fonction du serveur. En clair: on s'appuie sur la locale du browser  pour d\u00e9terminer comment g\u00e9rer la langue, les formatages de valeurs/dates,  etc.</p>"},{"location":"reference/ewt-rap/#servlets","title":"Servlets","text":"<p>Ewt fournit un nombre r\u00e9duit d'endpoints. La table ci-dessous donne les  correspondances entre les endpoints par d\u00e9faut de Rap et de Ewt.</p> Endpoint Rap Endpoint Ewt Remarque <code>monitor</code> Certaines fonctions d'administration sont prises en charge par l'action <code>admin</code>, appelable via l'endpoint <code>web</code> <code>ping</code> <code>file</code> <code>data</code> L'endpoint <code>data</code> est en cours de d\u00e9veloppement mais permet d\u00e9j\u00e0 le t\u00e9l\u00e9chargement de donn\u00e9es blob en provenance de la base de donn\u00e9es.<sup>1</sup> <code>upload</code> <code>web</code> L'upload de fichier se fait au moyen d'un formulaire multipart \u00e0 envoyer sur l'endpoint <code>web</code> <code>uploadEx</code> <code>web</code> Idem ci-dessus <code>uploadSub</code> <code>web</code> Idem ci-dessus <code>image</code> <code>data</code> <code>print</code> <code>web</code> <code>rest</code> <code>rest</code> <code>select</code> Il n'existe pas de servlet dans Ewt qui remplisse le m\u00eame r\u00f4le que <code>select</code>, mais la fonctionnalit\u00e9 peut \u00eatre r\u00e9alis\u00e9e au moyen d'un script, via les endpoints <code>web</code> ou <code>rest</code>. <code>services</code> <code>soap</code> <code>goRAP</code> <code>web</code> <code>webdav</code> Non pris en charge dans la version actuelle de Ewt <code>websocket</code>"},{"location":"reference/ewt-rap/#correspondances-ewt-rap","title":"Correspondances Ewt &lt;-&gt; Rap","text":"<p>La suite de ce chapitre est une sorte de FAQ sur la mani\u00e8re de transposer  une fonctionnalit\u00e9 de Rap vers Ewt.</p>"},{"location":"reference/ewt-rap/#variables-doutput-vehiculer-une-valeur-depuis-un-script-vers-larbre-de-sortie","title":"Variables d'output - v\u00e9hiculer une valeur depuis un script vers l'arbre de sortie","text":"<p>Sur Rap, on utilise une variable d'output pour le faire.</p> <p>Sur Ewt, on peut utiliser une variable transient ou persistent, ou cr\u00e9er  un objet de session, voire un objet de thread.</p>"},{"location":"reference/ewt-rap/#imprimer-un-pdf","title":"Imprimer un PDF","text":"<p>Rap fournit diverses fonctions pour imprimer un PDF : l'impression est  possible au moyen de la fonction <code>doPrint</code>, ou en RET au moyen des m\u00e9thodes <code>PRINTDOC</code> et <code>PRINTDOCNOPAGE</code>.</p> <p>Ewt ne fournit qu'une seule mani\u00e8re d'imprimer un PDF, il s'agit de la  m\u00e9thode <code>$pdf.generate</code>.</p> <ol> <li> <p>Sur Rap, il est d'usage d'utiliser l'endpoint <code>file</code> pour r\u00e9cup\u00e9rer    un fichier g\u00e9n\u00e9r\u00e9 dans le dossier temporaire: l'application cr\u00e9e un    fichier dans le dossier temporaire (un PDF, un document Word, un zip,    etc.) et force la page web \u00e0 relancer une requ\u00eate au serveur via <code>file</code>    pour entra\u00eener un t\u00e9l\u00e9chargement du fichier en question.</p> <p>Ce mode op\u00e9ratoir ne s'applique pas dans le cas d'Ewt: le fichier    g\u00e9n\u00e9r\u00e9 par une application est imm\u00e9diatement retourn\u00e9 dans la r\u00e9ponse.    Il n'est donc pas n\u00e9cessaire de forcer un second appel au serveur pour    le r\u00e9cup\u00e9rer.\u00a0\u21a9</p> </li> </ol>"},{"location":"reference/faq/","title":"Faq","text":"<p>Ce document tente de r\u00e9pondre \u00e0 quelques questions qui peuvent appara\u00eetre au  cours du d\u00e9veloppement d'une application Ewt.</p> Ewt peut-il faire tourner une application Rap ? <p>Non. Sur certains aspects, le fonctionnement de Ewt est assez \u00e9loign\u00e9 de  celui de RAP. Prenons l'exemple de l'upload de fichier. Sous RAP, les  uploads doivent se faire soit via une servlet <code>upload</code> (ou ses d\u00e9riv\u00e9s),  soit via la servlet <code>rest</code>. Dans le cas de la servlet <code>upload</code>, RAP  d\u00e9clenche l'\u00e9valuation d'un auto-eval <code>afterUpload</code> dans lequel  l'application effectue des traitements sp\u00e9cifiques.</p> <p>Ewt g\u00e8re les uploads diff\u00e9remment : la ressource binaire est trait\u00e9e  directement depuis le formulaire de champs via la sevlet <code>web</code>. Ewt ne  d\u00e9clenche pas d'\u00e9v\u00e9nement particulier suite \u00e0 l'upload d'un binaire.</p> <p>Ce changement de fonctionnement entra\u00eene une structure et une m\u00e9canique de  fonctionnement assez diff\u00e9rente dans les deux cas. Cela ne s'applique pas  qu'\u00e0 l'upload, mais \u00e9galement \u00e0 de nombreux autres aspects (scripts,  gestion des status, recherche, etc.)</p> Lorsque j'upload un fichier dans un champ, le nom de ce fichier appara\u00eet dans le champ, mais dispara\u00eet du champ \u00e0 la prochaine ouverture du dossier L'enregistrement du nom de fichier doit se faire \u00e0 l'aide de metadonn\u00e9es  associ\u00e9es au champ. En l'absence de m\u00e9tadonn\u00e9e <code>file:name</code>, le nom de  fichier n'est pas conserv\u00e9 que durant le temps de vie du cache de session.  Il est ensuite perdu pour les ouvertures suivantes du dossier car il ne peut  pas \u00eatre conserv\u00e9 en base de donn\u00e9es. Si le nom du fichier, sa taille  et/ou son mime-type doivent \u00eatre conserv\u00e9s, il faut alors rattacher des  champs de m\u00e9tadonn\u00e9e au champ dans lequel est stock\u00e9 ledit fichier. Mon dossier contient un champ binaire, mais je ne retrouve pas le fichier dans le temp lorsque j'ouvre le dossier. <p>Ewt ne recharge pas syst\u00e9matiquement en local les donn\u00e9es binaires li\u00e9es \u00e0  un dossier. Pour des raisons de performances, les donn\u00e9es binaires ne sont  charg\u00e9es que lorsque cela est n\u00e9cessaire, c'est-\u00e0-dire lorsque le client  le demande explicitement.</p> <p>Par cons\u00e9quent, lorsque l'on charge un dossier, les donn\u00e9es binaires ne  sont pas reprises de la base de donn\u00e9es. Par contre les \u00e9ventuelles  metadonn\u00e9es associ\u00e9es \u00e0 ces donn\u00e9es binaires le sont.</p> <p>Le moteur chargera les donn\u00e9es binaires lorsque l'utilisateur cherchera \u00e0  les r\u00e9cup\u00e9rer, soit en direct via la servlet  <code>/data</code>, soit via un script.</p> La page HTML n'est pas compl\u00e8te bien que le navigateur ait termin\u00e9 le rafra\u00eechissement de la page <p>Ce probl\u00e8me peut \u00eatre li\u00e9 \u00e0 l'utilisation de caract\u00e8res dits \"surrogate\".  Ce genre de caract\u00e8res est utilis\u00e9 par exemple lorsque l'on ins\u00e8re des  emojis dans un texte. Les caract\u00e8res surrogate sont en r\u00e9alit\u00e9  constitu\u00e9s de plusieurs caract\u00e8res.</p> <p>Le parser SAX de java peut rencontre un probl\u00e8me lorsqu'il traite du xml  qui contient de tels caract\u00e8res. Le parser d\u00e9coupe le xml en morceaux de  1024 bytes. Il se peut qu'une paire de caract\u00e8re surrogates soit alors  s\u00e9par\u00e9e entre deux morceaux, ce qui provoque une erreur silentieuse. Une  trace de ce style devrait cependant s'afficher dans le log:</p> <pre><code>org.xml.sax.SAXException: java.io.IOException: Invalid UTF-16 surrogate detected: d83e ?\n</code></pre> <p>Il ne s'agit donc pas d'un bug de l'application ou du moteur, mais un  bug du parseur utilis\u00e9 par java. Une solution pourrait \u00eatre d'utiliser  un autre parseur. Le bug dispara\u00eet si les caract\u00e8res surrogates ne se  cituent pas exactement \u00e0 un multuple de 1024. Il suffit donc d'ajouter  du contenu \u00e0 l'arbre XML pour forcer les caract\u00e8res surrogates \u00e0 se  retrouver \u00e0 une autre position.</p>"},{"location":"reference/internationalisation/","title":"Internationalisation","text":"<p>Ce chapitre aborde la th\u00e9matique de l'internationalisation au niveau du  moteur Ewt et au niveau des applications.</p>"},{"location":"reference/internationalisation/#generalites","title":"G\u00e9n\u00e9ralit\u00e9s","text":"<p>D'une mani\u00e8re g\u00e9n\u00e9rale, tous les messages (informations, avertissements,  erreurs) et libell\u00e9s (noms de mod\u00e8les, noms de groupes, noms de champs,  etc.) pr\u00e9sent\u00e9s \u00e0 l'utilisateur final doivent \u00eatre internationalis\u00e9s,  c'est-\u00e0-dire adapt\u00e9s en fonction de la locale de la session utilisateur.  En r\u00e9alit\u00e9 l'internationalisation va plus loin que la simple correspondance  de langue. Les formats de valeurs, les formats de dates, etc. doivent  \u00e9galement tenir compte de la locale pour laquelle ils sont destin\u00e9s.</p> <p>Les messages internes au moteur et \u00e0 l'application, c'est-\u00e0-dire les  messages de debug ou d'erreur qui ne sont pas directement montr\u00e9s \u00e0  l'utilisateur peuvent \u00eatre r\u00e9dig\u00e9s en dur. Ils sont g\u00e9n\u00e9ralement r\u00e9dig\u00e9s  en anglais.</p> <p>i18n</p> <p>Dans la suite du chapitre nous utiliserons parfois le terme \"i18n\"  pour d\u00e9signer l'internationalisation. Ce terme est une version abr\u00e9g\u00e9e  du mot \"internationalisation\", o\u00f9 18 repr\u00e9sente le nombre de caract\u00e8res  entre le i initial et le n final du mot.</p> <p>L'internationalisation s'articule autour de bundles de langues. Un bundle  de langues est un ensemble de fichiers ayant un pr\u00e9fixe commun et un suffixe  d\u00e9signant la langue g\u00e9r\u00e9e. Ces fichiers doivent se retrouver dans un m\u00eame  dossier. En l'occurrence, Ewt recherche les bundles d'une application dans  le sous-dossier <code>i18n</code> de l'application.</p> <p>Par exemple, Ewt utilise un bundle par d\u00e9faut qui est nomm\u00e9 <code>language</code> pour  internationaliser les libell\u00e9s relatifs \u00e0 la descript (le nom du bundle peut  \u00eatre chang\u00e9 au moyen de la propri\u00e9t\u00e9 <code>bundles.descriptBundle</code> dans le  fichier de config de l'application). On peut ainsi d\u00e9finir un fichier  <code>language_fr.properties</code> pour y sp\u00e9cifier les libell\u00e9s pour le fran\u00e7ais,  <code>language_de.properties</code> pour l'allemand, <code>language_en.properties</code> pour  l'anglais, etc. Un fichier sans suffixe de langue (<code>language.properties</code>)  peut \u00eatre d\u00e9fini pour sp\u00e9cifier les libell\u00e9s de base, c'est-\u00e0-dire les  libell\u00e9s communs \u00e0 toutes les autres langues (voir \u00e9galement la note  relative \u00e0 la propri\u00e9t\u00e9 <code>bundles.defaultBundle</code>)</p> <p>Bundle embarqu\u00e9 dans Ewt</p> <p>Ewt embarque \u00e9galement son propre bundle pour les messages d'erreur  qu'il doit \u00e9ventuellement afficher lui-m\u00eame. Le bundle de langue du  moteur est enregistr\u00e9 dans le dossier <code>src/main/i18n</code> des sources.</p> <p>La suite de ce document revient sur ces notions.</p>"},{"location":"reference/internationalisation/#application","title":"Application","text":"<p>Comme mentionn\u00e9 en introduction, les bundles de langues d'une application  sont \u00e0 cr\u00e9er au niveau d'un sous-dossier <code>i18n</code>. Un bundle est constitu\u00e9 de  un ou plusieurs fichiers ayant un pr\u00e9fixe commun (ce pr\u00e9fixe est le nom du  bundle). Il est possible d'adjoindre un suffixe d\u00e9signant la langue pour  laquelle le fichier est valable. Les fichiers portent l'extension  <code>.properties</code>.</p> <p>Ainsi, les fichiers <code>mywindow.properties</code>, <code>mywindow_fr.properties</code> et  <code>mywindow_en.properties</code> constituent le bundle <code>mywindow</code> pour lequel on  d\u00e9finit 3 jeux de libell\u00e9s: un fichier de libell\u00e9s par d\u00e9faut, un fichier  pour l'anglais et un fichier pour l'allemand.</p>"},{"location":"reference/internationalisation/#bundle-language","title":"Bundle <code>language</code>","text":"<p>Par d\u00e9faut, le moteur charge le bundle <code>language</code> et y recherche les  libell\u00e9s des mod\u00e8les, groupes, champs, etc. Il est possible de d\u00e9finir des  bundles suppl\u00e9mentaires en fonction des besoins de l'application. Par  exemple, si on souhaite construire un style qui contient des libell\u00e9s  sp\u00e9cifiques, on pourra cr\u00e9er un bundle propre \u00e0 ce style. Pour ce faire, il  suffit de cr\u00e9er un bundle avec un nom personnalis\u00e9 (autre que <code>language</code>),  puis de lier ce bundle au style via une entr\u00e9e <code>bundles.style</code> du fichier de  configuration. Dans le cas de l'exemple du bundle <code>mywindow</code> donn\u00e9 plus  haut:</p> <ul> <li>on cr\u00e9e un style <code>mystyle</code></li> <li>on cr\u00e9e un bundle <code>mywindow.properties</code></li> <li> <p>on lie le bundle au style via l'entr\u00e9e suivante:</p> <pre><code>&lt;bundles&gt;\n    &lt;style name=\"mystyle\"&gt;mywindow&lt;/style&gt;\n    ...\n&lt;/bundles&gt;\n</code></pre> </li> </ul> <p>Ainsi, le moteur reprendra automatiquement les libell\u00e9s de <code>mywindow.properties</code> dans l'arbre de sortie lorsqu'une page est affich\u00e9e  avec le style <code>mystyle</code>.</p>"},{"location":"reference/internationalisation/#fichiers-de-langue","title":"Fichiers de langue","text":"<p>Les fichiers de langue permettent de d\u00e9finir diff\u00e9rents libell\u00e9s. Le fichier  est une simple liste d'entr\u00e9es <code>key = value</code> o\u00f9 <code>key</code> est le nom d'une  propri\u00e9t\u00e9 et <code>value</code> est le libell\u00e9 correspondant dans la langue du bundle.</p> <p>Le fichier <code>language.properties</code> permet quant \u00e0 lui de sp\u00e9cifier les  libell\u00e9s de champs. Un libell\u00e9 de champ sera d\u00e9sign\u00e9 par son identifiant  logique. Par exemple l'entr\u00e9e <code>field.vendeur.info.datenaissance.label</code>  correspond au libell\u00e9 du champ <code>datenaissance</code> pr\u00e9sent dans le groupe  <code>info</code> du mod\u00e8le <code>vendeur</code>. On utilisera donc la propri\u00e9t\u00e9 suivante  pour sp\u00e9cifier le libell\u00e9:</p> <pre><code>field.vendeur.info.datenaissance.label = Birthdate\n</code></pre> <p>Le pr\u00e9fixe <code>field</code> indique qu'il s'agit d'un libell\u00e9 portant sur un champ. Le moteur g\u00e8re les pr\u00e9fixes suivants:</p> <ul> <li><code>model</code> : d\u00e9signe un mod\u00e8le</li> <li><code>group</code> : d\u00e9signe un groupe</li> <li><code>field</code> : d\u00e9signe un champ</li> </ul> <p>Le suffixe <code>.label</code> d\u00e9signe ici l'\u00e9tiquette du champ. Le moteur pr\u00e9voit  diff\u00e9rents suffixes pr\u00e9d\u00e9finis:</p> <ul> <li><code>.label</code> : \u00e9tiquette du champ</li> <li><code>.description</code> : description d\u00e9taill\u00e9e du champ (utilisable dans un    <code>title</code> ou une aide en ligne)</li> <li><code>.placeholder</code> : valeur de placeholder (info affich\u00e9e dans le champ    lorsque celui-ci est vide)</li> </ul> <p>Le format attendu pour les libell\u00e9s relatifs aux \u00e9tats et aux transitions  sont d\u00e9taill\u00e9s dans la documentation qui traite des mod\u00e8les  d'\u00e9tats. </p> <p>G\u00e9n\u00e9ration de fichier de langue</p> <p>Ewt met \u00e0 disposition une fonction pour faciliter la cr\u00e9ation d'un  fichier de langue. La fonction <code>admin</code> propose une action  <code>gen-language-canvas</code> qui construit le canevas de base d'un fichier  de langue.</p>"},{"location":"reference/internationalisation/#namespace-chepilogicewti18n","title":"Namespace <code>ch.epilogic.ewt.i18n</code>","text":"<p>Le moteur retrouve automatiquement les libell\u00e9s correspondant aux mod\u00e8les,  groupes et champs, selon le principe d\u00e9crit ci-dessus (par exemple pour un  champ il recherche un libell\u00e9 correspondant \u00e0 une entr\u00e9e ayant la forme  <code>field.modelname.groupname.fieldname.label</code> dans le bundle <code>language</code>).  Il n'y a donc rien besoin de sp\u00e9cifier au niveau du <code>descript.xml</code> pour  faire le lien entre un mod\u00e8le, un groupe ou un champ et le libell\u00e9 i18n  correspondant.</p> <p>Toutefois, pour les autres types d'\u00e9l\u00e9ments, il devient n\u00e9cessaire  d'indiquer le nom de la propri\u00e9t\u00e9 contenant le libell\u00e9 i18n. Pour ce faire,  on utilisera le  namespace <code>ch.epilogic.ewt.i18n</code>.  Par convention, on mappera ce namespace sur le pr\u00e9fixe <code>i18n</code>.</p> <p>Ainsi, il est possible de r\u00e9f\u00e9rencer une propri\u00e9t\u00e9 et d'indiquer que l'on  souhaite l'utiliser comme label. Prenons l'exemple suivant:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;descript xmlns:i18n=\"ch.epilogic.ewt.i18n\"&gt;\n  &lt;properties&gt;\n    &lt;property name=\"categories\"&gt;\n      &lt;categorie name=\"vendeurs\" i18n:label=\"descript.attribute.categorie.vendeurs.label\"/&gt;\n      &lt;categorie name=\"vente\" i18n:label=\"descript.attribute.categorie.vente.label\"/&gt;\n      &lt;categorie name=\"administration\" i18n:label=\"descript.attribute.categorie.administration.label\"/&gt;\n    &lt;/property&gt;\n  &lt;/properties&gt;\n  ...\n</code></pre> <p>Dans cet exemple, on a d\u00e9fini des attributs <code>i18n:label</code> dont le pr\u00e9fixe  <code>i18n</code> r\u00e9f\u00e9rence le namespace <code>ch.epilogic.ewt.i18n</code>. Cela indique au moteur  qu'il doit r\u00e9cup\u00e9rer la valeur de la propri\u00e9t\u00e9 indiqu\u00e9e et la placer dans  l'attribut <code>label</code>. Ainsi \u00e0 l'ex\u00e9cution pour une locale en fran\u00e7ais,  la propri\u00e9t\u00e9 \"categories\" appara\u00eetrait ainsi dans l'arbre de sortie:</p> <pre><code>  &lt;property name=\"categories\"&gt;\n    &lt;categorie name=\"vendeurs\" label=\"Vendeurs\"/&gt;\n    &lt;categorie name=\"vente\" label=\"Vente\"/&gt;\n    &lt;categorie name=\"administration\" label=\"Administration\"/&gt;\n  &lt;/property&gt;\n</code></pre>"},{"location":"reference/locking/","title":"Gestion de la concurrence","text":"<p>Ewt impl\u00e9mente deux m\u00e9thodes de gestion de la concurrence : une m\u00e9thode  optimiste et une m\u00e9thode pessimiste. Il est possible de sp\u00e9cifier pour  chaque mod\u00e8le le type de lock \u00e0 utiliser. Sans indication particuli\u00e8re, Ewt  applique le type optimiste par d\u00e9faut.</p>"},{"location":"reference/locking/#prerequis","title":"Pr\u00e9requis","text":"<p>Pour \u00eatre fonctionnelle, la gestion du lock n\u00e9cessite deux \u00e9l\u00e9ments au  niveau de la base de donn\u00e9es:</p> <ol> <li>L'ajout d'une colonne d\u00e9di\u00e9e dans les tables de donn\u00e9es. Cette     colonne sert \u00e0 la fois pour le lock optimiste et le lock pessimiste.    La colonne allou\u00e9e \u00e0 ce r\u00f4le doit \u00eatre d\u00e9clar\u00e9e via l'entr\u00e9e     <code>admin.lockingColName</code> du fichier de configuration. Le nom de colonne par     d\u00e9faut est <code>ewt_locking</code>.</li> <li>Une table <code>ewt_locking</code> dans la base de donn\u00e9es. Cette table permet     d'enregistrer des informations compl\u00e9mentaires sur le type de lock, la     date/heure \u00e0 laquelle le lock est pos\u00e9, l'utilisateur concern\u00e9, etc.     Cette table est reprise automatiquement dans les scripts de cr\u00e9ation de     tables.</li> </ol>"},{"location":"reference/locking/#gestion-optimiste","title":"Gestion optimiste","text":"<p>Le mod\u00e8le de gestion optimiste est largement document\u00e9 en ligne. Le tutoriel  en ligne disponible \u00e0 l'adresse handling-concurrency  donne une bonne vision de la mani\u00e8re selon laquelle la gestion optimiste de  la concurrence est impl\u00e9ment\u00e9e dans Ewt. De nombreuses autres sources  peuvent \u00eatre facilement trouv\u00e9es sur la toile.</p> <p>L'id\u00e9e est de rester optimiste et de se dire que les conflits li\u00e9s \u00e0 la  concurrence sont peu fr\u00e9quents. La gestion de concurrence optimiste  signifie qu'on laisse le conflit se produire et que l'on prend les  mesures appropri\u00e9es lorsque cela se produit.</p> <p>Une gestion optimiste s'applique en g\u00e9n\u00e9ral aux enregistrements,  c'est-\u00e0-dire aux tuples dans le cas de Ewt. Ainsi, pour impl\u00e9menter ce type  de gestion, chaque tuple contient une colonne r\u00e9serv\u00e9e qui enregistre le  num\u00e9ro de version du tuple. Lorsqu'un utilisateur ouvre un dossier, le  num\u00e9ro de version est lu et conserv\u00e9 en m\u00e9moire au niveau du tuple (comme  c'est le cas pour les autres donn\u00e9es du tuple). Au moment de mettre \u00e0 jour  la valeur en base de donn\u00e9es, le moteur adapte la requ\u00eate de mise \u00e0 jour de  la mani\u00e8re suivante:</p> <pre><code>UPDATE table\nSET ...,                       --&gt; ensemble de champs \u00e0 mettre \u00e0 jour\n    _version = _version + 1\nWHERE idTuple=? AND _version=? \n</code></pre> <p>Si la requ\u00eate r\u00e9ussit, cela signifie qu'aucun autre utilisateur n'a modifi\u00e9  le tuple. Si la requ\u00eate \u00e9choue (c.-\u00e0-d. si elle ne modifie aucun tuple),  cela signifie que le tuple a \u00e9t\u00e9 modifi\u00e9 par un autre utilisateur (ou par le  m\u00eame utilisateur dans une autre session). L'application demande alors \u00e0  l'utilisateur de r\u00e9gler le conflit.</p> <p>On parle de gestion bas\u00e9e sur les tuples car le num\u00e9ro de version est  associ\u00e9 aux tuples. Toutefois il est possible de demander \u00e0 Ewt d'agir au  niveau du dossier et non uniquement au niveau du tuple lorsqu'un probl\u00e8me de  concurrence est d\u00e9tect\u00e9.</p> <p>Pour chaque mod\u00e8le, on indiquera via l'attribut <code>locklevel</code> le niveau de  lock attendu. Cet attribut peut prendre 3 valeurs:</p> <ul> <li><code>tuple</code> : Cette valeur indique qu'un conflit de concurrence d\u00e9tect\u00e9 par le   moteur au niveau d'un tuple ne bloque l'enregistrement que du tuple en    question. Les autres tuples du dossier (pour lesquels aucun conflit n'est    d\u00e9tect\u00e9) sont quant \u00e0 eux mis \u00e0 jour dans la base de donn\u00e9es.</li> <li><code>doc</code> : Cette valeur indique qu'un conflit de concurrence d\u00e9tect\u00e9 par le    moteur a une cons\u00e9quence au niveau de tout le dossier et pas uniquement au    niveau du/des tuple(s) concern\u00e9(s) par le conflit. En clair : d\u00e8s que le    moteur d\u00e9tecte un conflit sur l'un des tuples du dossier, aucune valeur    du dossier n'est mise \u00e0 jour en base de donn\u00e9es.</li> <li><code>none</code> : Dans ce cas, aucun test de concurrence n'est effectu\u00e9 sur le   mod\u00e8le. Chaque enregistrement \u00e9crase la valeur pr\u00e9c\u00e9dente dans la mesure   o\u00f9 elle existe encore. Il s'agit donc d'un mode \"Client Wins\" ou \"Last   in Wins\". Ce type de lock est dangereux et n'est \u00e0 utiliser que pour les   cas o\u00f9 une perte de donn\u00e9es est sans cons\u00e9quence.</li> </ul> <p>Il est \u00e9galement possible d'indiquer au mod\u00e8le le comportement que doit  avoir le moteur en cas de conflit. En r\u00e8gle g\u00e9n\u00e9rale, on propose deux choix  \u00e0 l'utilisateur en cas de conflit: forcer la mise \u00e0 jour des valeurs ou  recharger les valeurs de la base de donn\u00e9es.</p>"},{"location":"reference/locking/#exceptions","title":"Exceptions","text":"<p>Lorsqu'un conflit de concurrence optimiste est d\u00e9tect\u00e9, le moteur g\u00e9n\u00e8re une ou plusieurs exceptions que l'on retrouve dans l'arbre de sortie.</p> <pre><code>&lt;exceptions count=\"2\"&gt;\n  &lt;exception type=\"lock\" subtype=\"optimistic\" level=\"tuple\"\n             target=\"c4c8658e-e80d-4575-91fe-2a3064d2fc37\"\n             cause=\"tupleModifiedElsewhere\"&gt;\n    &lt;databaseValues&gt;\n      &lt;field target=\"2b1e2ffa-7d5c-44f7-aecb-c606b53bcb47\"&gt;12:05&lt;/field&gt;\n      &lt;field target=\"faba464f-d080-4540-91d8-d4736ac00c8f\"&gt;&lt;/field&gt;\n    &lt;/databaseValues&gt;\n  &lt;/exception&gt;\n  &lt;exception type=\"lock\" subtype=\"optimistic\" level=\"doc\"\n             target=\"fa35f7fb-b1f9-4af0-9b81-26d6ce1d4486\"\n             cause=\"documentModifiedElsewhere\"/&gt;\n&lt;/exceptions&gt;\n</code></pre> <p>Qu'il s'agisse de concurrence optimiste comme ici ou pessimiste comme  pr\u00e9sent\u00e9 plus bas, les exceptions li\u00e9es \u00e0 un probl\u00e8me de concurrence ont  toutes le type <code>lock</code>.</p> <p>L'attribut <code>subtype</code> reprend le type de lock appliqu\u00e9. Dans le cas de la  gestion optimiste, la valeur est <code>optimistic</code>.</p> <p>L'attribut <code>level</code> renseigne sur le niveau auquel l'exception est d\u00e9tect\u00e9e. Les valeurs fournies par cet attribut correspondent aux valeurs de l'attribut <code>locklevel</code> d\u00e9crit plus haut dans ce document.</p> <p>L'attribut <code>target</code> contient l'uuid du tuple sur lequel porte l'exception.</p> <p>L'attribut <code>cause</code> contient un identifiant d'erreur qui donne plus d'information sur la nature du conflit rencontr\u00e9. L'attribut peut prendre les valeurs suivantes:</p> <ul> <li><code>tupleModifiedElsewhere</code></li> <li><code>tupleModifiedElsewhereWithSameValues</code></li> <li><code>tupleNotFoundInDatabase</code></li> <li><code>documentModifiedElsewhere</code></li> <li><code>documentNotFoundInDatabase</code></li> </ul> <p>Les exceptions de niveau \"tuple\" contiennent \u00e9galement un d\u00e9tail de champs dont la valeur en base de donn\u00e9es diff\u00e8re de celle du dossier courant. Chaque champ r\u00e9f\u00e9renc\u00e9 contient un attribut <code>target</code> qui reprend l'identifiant de contexte du champ et une valeur.</p>"},{"location":"reference/locking/#gestion-pessimiste","title":"Gestion pessimiste","text":"<p>Le mod\u00e8le de gestion pessimiste est \u00e9galement largement document\u00e9 sur  internet. Ici l'id\u00e9e est de poser un lock syst\u00e9matique sur la ressource que  l'on souhaite modifier, afin que personne d'autre ne puisse la modifier tant  que le lock n'est pas lib\u00e9r\u00e9.</p> <p>Lorsqu'un utilisateur ouvre un dossier, le moteur recherche s'il existe d\u00e9j\u00e0  un lock sur le dossier. Si c'est le cas, le dossier n'est accessible qu'en  lecture. Si aucun lock pr\u00e9alable n'est pos\u00e9, alors un lock est pos\u00e9 pour  l'utilisateur. Le lock est lev\u00e9 \u00e0 la fermeture ou \u00e0 la suppression du dossier.</p> <p>Dans Ewt, le principe est similaire, mais le lock est pos\u00e9 au niveau  des tuples: la colonne g\u00e9rant le locking (<code>ewt_locking</code> ou autre en  fonction de ce qui est d\u00e9fini dans la propri\u00e9t\u00e9 <code>admin.lockingColName</code> de la  config de l'application) est mise \u00e0 jour sur chaque tuple du dossier. La  table <code>ewt_locking</code> quant \u00e0 elle enregistre des informations relatives au  contexte de verrouillage (date/heure, auteur, etc.)</p>"},{"location":"reference/locking/#exceptions_1","title":"Exceptions","text":"<p>Lorsqu'un conflit de concurrence pessimiste se produit, le moteur g\u00e9n\u00e8re une  ou plusieurs exceptions que l'on retrouve dans l'arbre de sortie. La  structure est sensiblement la m\u00eame que dans le cas de la gestion optimiste,  \u00e0 quelques diff\u00e9rences pr\u00e8s:</p> <ul> <li>L'exception ne contient pas d'\u00e9l\u00e9ment <code>databaseValues</code></li> <li>L'attribut <code>subtype</code> prend la valeur <code>pessimistic</code></li> <li> <p>L'attribut <code>cause</code> peut prendre les valeurs suivantes:</p> <ul> <li><code>cannotAcquireLock</code></li> <li><code>cannotReleaseLock</code></li> <li><code>corruptedLockingTable</code></li> <li><code>tupleLockedElsewhere</code></li> <li><code>tupleNotFoundInDatabase</code></li> <li><code>documentNotFoundInDatabase</code></li> <li><code>fatalLockingException</code></li> </ul> </li> </ul>"},{"location":"reference/main/","title":"Ewt - Epilogic Web Toolkit","text":""},{"location":"reference/main/#introduction","title":"Introduction","text":"<p>Le moteur Ewt est une application java qui doit \u00eatre d\u00e9ploy\u00e9e sur un serveur  d'applications. Ewt se pr\u00e9sente sous la forme d'un WAR comprenant les classes  du moteur, ses d\u00e9pendances et quelques \u00e9l\u00e9ments de configuration de base (<code>web.xml</code>, configuration du logger, configuration fop).</p> <p>Pour mettre en \u0153uvre Ewt, il suffit de d\u00e9ployer le WAR sur un serveur  d'application (Tomcat, JBoss, etc.) fonctionnant avec java 11 ou suiv.</p>"},{"location":"reference/main/#compatibilite-et-prerequis","title":"Compatibilit\u00e9 et pr\u00e9requis","text":"<p>Ewt n\u00e9cessite un serveur d'application et une jvm 11 ou sup\u00e9rieure. Il a \u00e9t\u00e9 test\u00e9 avec succ\u00e8s sur tomcat 9 avec une jvm OpenJDK 11.</p> <p>Java 11</p> <p>Java 11 a \u00e9t\u00e9 choisi plut\u00f4t qu'une version pr\u00e9c\u00e9dente pour diff\u00e9rentes  raisons:</p> <ul> <li>Limiter le plus possible les impr\u00e9vus   En effet, de nombreux changements ont \u00e9t\u00e9 apport\u00e9s \u00e0 java entre la    version 8 et la version 9, qu'il s'agisse de la gestion de la locale    ou de la gestion des bundles. Java 11 permet de passer outre ces    diff\u00e9rences de comportement.</li> <li>Am\u00e9liorer la s\u00e9curit\u00e9   Certaines librairies dont d\u00e9pend Ewt n\u00e9cessitent une JVM r\u00e9cente ou ne    sont maintenues \u00e0 jour (patchs de s\u00e9curit\u00e9) que sur les versions java    les plus r\u00e9centes.</li> <li>Am\u00e9liorer les performances   Certaines librairies sont \u00e9galement plus avanc\u00e9es ou plus performantes    sur java 11 que sur les versions pr\u00e9c\u00e9dentes.</li> </ul>"},{"location":"reference/main/#serveur-dapplication","title":"Serveur d'application","text":"<ul> <li>Tomcat 9.5</li> <li>JBoss 7.4</li> </ul> <p>Ewt est construit sur javax. La version actuelle ne supporte pas jakarta.  Par cons\u00e9quent, Ewt n'est actuellement pas disponible pour les derni\u00e8res  versions des serveurs d'applications ci-dessus.</p>"},{"location":"reference/main/#serveur-de-base-de-donnees","title":"Serveur de base de donn\u00e9es","text":"<p>Une application Ewt peut exploiter une base de donn\u00e9es utilisant les  serveurs suivants:</p> <ul> <li>Postgres versions 10 et suivantes (plugin uuid-ossp requis pour les id en   version uuid)</li> <li>Oracle versions 12c et suivantes</li> <li>MSSQL versions 2012 (11.x) et suivantes<sup>1</sup></li> <li>MySQL 5 et suivantes / MariaDB 10 et suivantes</li> <li>HSQL 2.7 et suivantes</li> <li>SQLite 3.35.0 ou sup.</li> </ul>"},{"location":"reference/main/#arborescence-dune-application-ewt","title":"Arborescence d'une application Ewt","text":"<p>L'arborescence typique d'une application Ewt est la suivante<sup>2</sup>: </p> <pre>\nroot\n\u251c\u2500\u2500\u2500i18n            Dossier contenant les bundles de langue\n\u2502   \u251c\u2500\u2500\u2500language_fr.properties\n\u2502   \u251c\u2500\u2500\u2500language_en.properties\n\u2502   \u2514\u2500\u2500\u2500...\n\u251c\u2500\u2500\u2500policies        Dossier contenant les policies\n\u2502   \u2514\u2500\u2500\u2500...\n\u251c\u2500\u2500\u2500resources       Dossier contenant les ressources\n\u2502   \u2514\u2500\u2500\u2500...\n\u251c\u2500\u2500\u2500scripts         Dossier contenant les scripts \n\u2502   \u2514\u2500\u2500\u2500...\n\u251c\u2500\u2500\u2500states          Dossier contenant les mod\u00e8les d'\u00e9tats\n\u2502   \u2514\u2500\u2500\u2500...\n\u251c\u2500\u2500\u2500stylesheets     Dossier contenant les feuilles de style\n\u2502   \u2514\u2500\u2500\u2500...\n\u251c\u2500\u2500\u2500config.xml      Fichier de configuration\n\u251c\u2500\u2500\u2500descript.xml    Fichier de description m\u00e9tier\n\u2514\u2500\u2500\u2500schema.xml      Fichier de description du sch\u00e9ma de base DB\n</pre> <p>L'\u00e9l\u00e9ment racine (<code>root</code> ci-dessus) est l'\u00e9l\u00e9ment qui, d'une certaine  mani\u00e8re, donne son nom \u00e0 l'application, car c'est l'\u00e9l\u00e9ment qui repr\u00e9sente  l'application au niveau de l'URL de connexion. Cet \u00e9l\u00e9ment ne peut \u00eatre  constitu\u00e9 que des caract\u00e8res parmi \"a-z\", \"A-Z\", \"0-9\", \"_\", \"-\" et ne peut  pas commencer par un chiffre ou par \"-\".</p> <p>Ce dossier contient tous les \u00e9l\u00e9ments m\u00e9tiers de l'application, c.-\u00e0-d. tous  les \u00e9l\u00e9ments g\u00e9r\u00e9s par le moteur. On y trouve les fichiers de base  (<code>config.xml</code>, <code>descript.xml</code>, <code>schema.xml</code>) et des r\u00e9pertoires contenant  les traductions (<code>i18n</code>), les policies, les ressources, les scripts, les  mod\u00e8les d'\u00e9tats (<code>states</code>) et les feuilles de style (<code>stylesheets</code>).</p> <p>D'autres r\u00e9pertoires ou fichiers peuvent \u00eatre ajout\u00e9s dans l'arborescence.  Dans la plupart des cas, ils seront ignor\u00e9s. </p>"},{"location":"reference/main/#nomenclature","title":"Nomenclature","text":"<p>Ce chapitre pr\u00e9sente quelques termes qui seront r\u00e9utilis\u00e9s dans la suite  de cette documentation.</p> Terme D\u00e9finition mod\u00e8le Un mod\u00e8le est un type de dossier. Le mod\u00e8le d\u00e9crit la fa\u00e7on selon laquelle les donn\u00e9es sont organis\u00e9es. dossier Un dossier est un ensemble de donn\u00e9es structur\u00e9es selon une forme bien \u00e9tablie. Un dossier est une instance de mod\u00e8le. groupe Un groupe est un ensemble de champs tuple Un tuple est un regroupement de valeurs. Le tuple est une instance de groupe. champ Un champ (field) est le contenant d'une valeur view Une vue est un assemblage de groupes. Une vue permet de d\u00e9crire quels \u00e9l\u00e9ments doivent \u00eatre repris pour former un \u00e9cran. policy Une policy est un ensemble de r\u00e8gles de s\u00e9curit\u00e9 portant sur un sujet (login, role, groupe) ou une ressource (mod\u00e8le, groupe, champ, etc.) i18n Ce terme est une abr\u00e9viation pour le mot \"internationalisation\". Il reprend la premi\u00e8re et derni\u00e8re lettre du mot et inscrit le nombre de caract\u00e8res interm\u00e9diaires. Il d\u00e9signe tout ce qui touche \u00e0 la gestion des langues au sein d'une application. sujet Le terme \"sujet\" d\u00e9signe une donn\u00e9e qui concerne un utilisateur. Il concerne donc soit un login, un r\u00f4le ou un groupe (ici le terme groupe d\u00e9signe un groupe d'utilisateurs) contexte Le contexte est un ensemble d'informations permettant d'identifier un objet g\u00e9r\u00e9 par une application Ewt (nom de mod\u00e8le, identifiant de dossier, nom de groupe, identifiant de tuple, nom de champ). Le contexte peut avoir diff\u00e9rentes repr\u00e9sentations: sous forme de cha\u00eene de caract\u00e8res (p.ex. <code>vendeur[12].article[5].prix</code>) ou sous forme de map (p.ex. <code>{ modelName: \"vendeur\", docId: 12, groupName: \"article\", tupleId: 5, fieldName: \"prix\" }</code>). <ol> <li> <p>Requis pour la notation <code>ORDER BY x OFFSET y ROWS FETCH NEXT z ROWS ONLY</code> \u21a9</p> </li> <li> <p>En r\u00e9alit\u00e9, l'arborescence illustr\u00e9e ici est l'arborescence compl\u00e8te.  Le strict minimum n\u00e9cessaire pour une application est le fichier <code>config.xml</code>  et \u00e9ventuellement des scripts responsables du traitement.\u00a0\u21a9</p> </li> </ol>"},{"location":"reference/monitoring/","title":"Monitoring","text":"<p>Prototype</p> <p>Ewt int\u00e8gre un syst\u00e8me de monitoring qui journalise l'\u00e9tat du moteur. Il  enregistre une s\u00e9rie de param\u00e8tres comme l'\u00e9tat de la m\u00e9moire, le nombre  de threads, les logs d'activit\u00e9 du scheduler, etc.</p> <p>Par d\u00e9faut ces informations sont stock\u00e9e dans une base de donn\u00e9es SQLite  cr\u00e9\u00e9e automatiquement dans le dossier de travail (workdir) allou\u00e9 au  moteur. La base SQLite \u00e9tant physiquement cr\u00e9\u00e9e dans le workdir, cela  signifie qu'elle dispara\u00eet si le serveur d'application est stopp\u00e9.</p> <p>Il est cependant possible de configurer le moteur pour forcer la cr\u00e9ation  de cette base \u00e0 un autre emplacement que le workdir. Il est \u00e9galement  possible de configurer le moteur pour qu'il enregistre ces informations  dans une autre base de donn\u00e9es. Ces deux possibilit\u00e9s \u00e9vitent la perte  de donn\u00e9es \u00e0 l'arr\u00eat du moteur.</p>"},{"location":"reference/notifications/","title":"Notifications","text":"<p>Ewt g\u00e9n\u00e8re des notifications en fonction des actions de l'utilisateur. Chaque notification correspond \u00e0 une ex\u00e9cution d'un script, pour autant qu'un  script de traitement soit d\u00e9clar\u00e9 dans la section <code>notifications</code> du fichier  de config.</p> <p>Exemple de notifications d\u00e9finies dans le fichier de config</p> <pre><code>&lt;notifications&gt;\n  &lt;notification name=\"doc-open:before\"&gt;initLayout&lt;/notification&gt;\n  &lt;notification name=\"doc-save\"&gt;logChanges&lt;/notification&gt;\n&lt;/notifications&gt;\n</code></pre> <p>D'une mani\u00e8re g\u00e9n\u00e9rale, les notifications sont toujours faites apr\u00e8s une action de type \"ajout\" ou \"cr\u00e9ation\", et toujours faites avant une action de type \"suppression\". Ceci dit, il est \u00e9galement possible  de forcer l'ex\u00e9cution avant ou apr\u00e8s action en ajoutant un suffixe  <code>:before</code> ou <code>:after</code> au nom de la notification (par exemple  <code>doc-open:before</code>). En l'absence de suffixe, le moteur lance la  notification selon le principe \u00e9voqu\u00e9 au d\u00e9but de ce paragraphe (voir  descriptions des notifications ci-dessous).</p> <p>Il est possible d'obtenir des infos de contexte sur l'action \u00e0 l'origine de  la notification depuis le script ex\u00e9cut\u00e9 au moyen de la variable  <code>$$.notification</code>.</p>"},{"location":"reference/notifications/#notifications-gerees-par-ewt","title":"Notifications g\u00e9r\u00e9es par Ewt","text":""},{"location":"reference/notifications/#doc-addtuple","title":"<code>doc-addtuple</code>","text":"<p>Ajout de tuple \u00e0 un dossier. En l'absence de suffixe <code>before</code> ou <code>after</code>, la notification est envoy\u00e9e  apr\u00e8s l'ajout du tuple.</p>"},{"location":"reference/notifications/#doc-arrange","title":"<code>doc-arrange</code>","text":"<p>Modification de param\u00e8tres d'arrangement (tri, filtre ou pagination de  groupe). En l'absence de suffixe <code>before</code> ou <code>after</code>, la notification est envoy\u00e9e  apr\u00e8s la modification d'arrangement.</p>"},{"location":"reference/notifications/#doc-close","title":"<code>doc-close</code>","text":"<p>Fermeture de dossier. En l'absence de suffixe <code>before</code> ou <code>after</code>, la notification est envoy\u00e9e  avant la fermeture du dossier (mais apr\u00e8s l'enregistrement des donn\u00e9es).</p>"},{"location":"reference/notifications/#doc-create","title":"<code>doc-create</code>","text":"<p>Cr\u00e9ation de dossier. En l'absence de suffixe <code>before</code> ou <code>after</code>, la notification est envoy\u00e9e  apr\u00e8s la cr\u00e9ation.</p>"},{"location":"reference/notifications/#doc-delete","title":"<code>doc-delete</code>","text":"<p>Suppression de dossier. En l'absence de suffixe <code>before</code> ou <code>after</code>, la notification est envoy\u00e9e  avant la suppression (mais apr\u00e8s l'enregistrement des donn\u00e9es).</p>"},{"location":"reference/notifications/#doc-deltuple","title":"<code>doc-deltuple</code>","text":"<p>Suppression de tuple. En l'absence de suffixe <code>before</code> ou <code>after</code>, la notification est envoy\u00e9e  avant la suppression (mais apr\u00e8s l'enregistrement des donn\u00e9es).</p>"},{"location":"reference/notifications/#doc-open","title":"<code>doc-open</code>","text":"<p>Ouverture de dossier. En l'absence de suffixe <code>before</code> ou <code>after</code>, la notification est envoy\u00e9e  apr\u00e8s l'ouverture.</p>"},{"location":"reference/notifications/#doc-save","title":"<code>doc-save</code>","text":"<p>Sauvegarde de donn\u00e9es de dossier. En l'absence de suffixe <code>before</code> ou <code>after</code>, la notification est envoy\u00e9e  apr\u00e8s la sauvegarde des donn\u00e9es dans le dossier.</p> <p>La variable <code>$$.notification</code> donne des informations de contexte sur le  mod\u00e8le et le dossier concern\u00e9, ainsi que le nombre et le d\u00e9tail des  modifications de valeurs de champs.</p> <p>Exemple de valeur de param\u00e8tre <code>$$.notification</code>:</p> <pre><code>{\n  \"name\": \"doc-save\",\n  \"params\": {\n    \"docId\": 15,\n    \"model\": \"venteEchange\",\n    \"modificationsCount\": 1,\n    \"modifications\": [\n      {\n        \"newValue\": 13,\n        \"field\": \"heureSolde\",\n        \"tupleId\": 15,\n        \"oldValue\": 12,\n        \"group\": \"info\"\n      }\n    ]\n  },\n  \"command\": {\n    \"action\": \"save\",\n    \"params\": {},\n    \"context\": {}\n  }\n}\n</code></pre> <p>Note</p> <p>Ewt permet d'avoir plusieurs dossiers ouverts \u00e0 la fois. La commande de sauvegarde peut par cons\u00e9quent concerner plusieurs dossiers \u00e0 la fois. Dans ce cas, Ewt d\u00e9clenche autant de notifications <code>doc-save</code> qu'il y a de dossier ouvert. Chaque \u00e9valuation de script re\u00e7oit des informations de contexte personnalis\u00e9es via la variable <code>$$.notification</code>.</p>"},{"location":"reference/notifications/#doc-enterstate","title":"<code>doc-enterstate</code>","text":"<p>Notification envoy\u00e9e lorsqu'un dossier arrive dans un \u00e9tat donn\u00e9.  La notification peut \u00eatre conditionn\u00e9e au moyen des suffixes <code>:before</code> et  <code>:after</code>. Si aucun suffixe n'est sp\u00e9cifi\u00e9, la notification <code>doc-enterstate</code>  correspond \u00e0 <code>doc-enterstate:before</code>.</p> <p>Le script a la possibilit\u00e9 d'annuler le changement d'\u00e9tat. Voir  Annulation d'action.</p>"},{"location":"reference/notifications/#doc-leavestate","title":"<code>doc-leavestate</code>","text":"<p>Notification envoy\u00e9e lorsqu'un dossier quitte un \u00e9tat donn\u00e9. La notification  peut \u00eatre conditionn\u00e9e au moyen des suffixes <code>:before</code> et <code>:after</code>. Si aucun  suffixe n'est sp\u00e9cifi\u00e9, la notification <code>doc-leavestate</code> correspond \u00e0  <code>doc-leavestate:before</code>.</p> <p>Lors d'un changement de statut, les notifications <code>doc-enterstate</code> et  <code>doc-leavestate</code> sont s\u00e9quenc\u00e9es ainsi:</p> <ul> <li><code>doc-leavestate:before</code></li> <li><code>doc-enterstate:before</code></li> <li><code>doc-leavestate:after</code></li> <li><code>doc-enterstate:after</code></li> </ul> <p>Une interruption de script est possible \u00e0 la demande du script depuis les notifications <code>doc-leavestate:before</code> et <code>doc-enterstate:before</code>. Voir Annulation d'action.</p>"},{"location":"reference/notifications/#doc-setview","title":"<code>doc-setview</code>","text":"<p>Changement de la vue pour un dossier. En l'absence de suffixe <code>before</code> ou <code>after</code>, la notification est envoy\u00e9e  apr\u00e8s le r\u00e9f\u00e9rencement de la nouvelle vue, pour autant qu'elle soit  possible.</p>"},{"location":"reference/notifications/#incoming-get-request","title":"<code>incoming-get-request</code>","text":"<p>D\u00e9clench\u00e9 lorsqu'une requ\u00eate de type GET arrive au moteur. Le nom peut \u00eatre  suffix\u00e9 pour limiter la notification \u00e0 une servlet en particulier. Par exemple,  pour limiter la notification au servlet <code>web</code>, on notera  <code>incoming-get-request:web</code>. En l'absence de suffixe, la notification sera  d\u00e9clench\u00e9e pour toutes les servlets.</p>"},{"location":"reference/notifications/#incoming-post-request","title":"<code>incoming-post-request</code>","text":"<p>D\u00e9clench\u00e9 lorsqu'une requ\u00eate de type POST arrive au moteur. Le nom peut \u00eatre suffix\u00e9 pour limiter la notification \u00e0 une servlet en particulier. Par exemple, pour limiter l'\u00e9v\u00e9nement au servlet <code>web</code>, on notera <code>incoming-post-request:web</code>. En l'absence de suffixe, la notification sera d\u00e9clench\u00e9e pour toutes les servlets.</p>"},{"location":"reference/notifications/#app-reset","title":"<code>app-reset</code>","text":"<p>Reset de l'application. En l'absence de suffixe <code>before</code> ou <code>after</code>, la notification est envoy\u00e9e  apr\u00e8s l'ex\u00e9cution du reset.</p>"},{"location":"reference/notifications/#app-setstyle","title":"<code>app-setstyle</code>","text":"<p>Changement de la feuille de style. En l'absence de suffixe <code>before</code> ou <code>after</code>, la notification est envoy\u00e9e  apr\u00e8s le changement de style.</p>"},{"location":"reference/notifications/#on-style","title":"<code>on-style</code>","text":"<p>Notification d\u00e9clench\u00e9e lorsque l'application est affich\u00e9e au moyen  de la feuille de style indiqu\u00e9e en suffixe. La notification s'utilise  toujours avec une notation du genre <code>on-style:somestyle</code>, o\u00f9 <code>somestyle</code>  d\u00e9signe un style d\u00e9fini au niveau de la section <code>&lt;styles&gt;</code> du config.</p> <p>Lorsqu'une telle notification est d\u00e9clar\u00e9e, le moteur invoque le script  indiqu\u00e9 juste avant la g\u00e9n\u00e9ration de l'output.</p>"},{"location":"reference/notifications/#gen-output","title":"<code>gen-output</code>","text":"<p>G\u00e9n\u00e9ration de l'arbre de sortie. La notification est envoy\u00e9e juste avant  que le moteur n'entame la g\u00e9n\u00e9ration de l'arbre de sortie. Il est  possible de court-circuiter la g\u00e9n\u00e9ration de l'arbre en for\u00e7ant la  r\u00e9ponse.</p>"},{"location":"reference/notifications/#annulation-daction","title":"Annulation d'action","text":"<p>Un script d\u00e9clench\u00e9 par une notification a la possibilit\u00e9 d'annuler l'action  demand\u00e9e par la commande, en particulier dans le cas o\u00f9 la notification est  d\u00e9clench\u00e9e avant la r\u00e9alisation de l'action (typiquement pour les  suppressions de tuples, les fermetures de dossier ou les suppressions de  dossiers).</p> <p>Pour ce faire, il suffit d'appeler la m\u00e9thode <code>$thread.abortAction()</code>.</p> <p>Une autre possibilit\u00e9, moins propre, consiste \u00e0 d\u00e9clencher une exception.  Cela mettra fin \u00e0 l'ex\u00e9cution du script et interrompra l'action.</p>"},{"location":"reference/out/","title":"Arbre de sortie XML","text":"<p>La forme de l'arbre de sortie XML d\u00e9pend du contexte et de l'\u00e9tat de la  session client.</p> <p>\u00c0 terminer</p>"},{"location":"reference/policy/","title":"Gestion d'acc\u00e8s - Policies","text":""},{"location":"reference/policy/#resume","title":"R\u00e9sum\u00e9","text":"<p>La gestion d'acc\u00e8s s'appuie sur des policies. Le mod\u00e8le s'inspire du mod\u00e8le de gestion d'acc\u00e8s d'AWS (avec toutefois ne nombreux \u00e9carts sur lesquels nous reviendrons plus tard)  ainsi que certains concepts en place sur  cerbos.</p> <p>Une policy (litt\u00e9ralement une politique) est un regroupement de r\u00e8gles qui  d\u00e9crivent une autorisation ou un refus en fonction</p> <ul> <li>du sujet (user, r\u00f4le, groupe),</li> <li>du contexte (mod\u00e8le, dossier, groupe, tuple, champ),</li> <li>des permissions d\u00e9sir\u00e9es (read, write),</li> <li>des actions d\u00e9sir\u00e9es (read, open, delete, save, etc.),</li> <li>des transitions d'\u00e9tat souhait\u00e9es</li> <li>des op\u00e9rations souhait\u00e9es</li> <li>de conditions</li> </ul> <p>Les r\u00e8gles en question sont appel\u00e9es statements. Ce sont elles qui  impl\u00e9mentent la logique d'autorisation (allow) ou de refus (deny). Il  est aussi possible que le statement ne fournisse pas de r\u00e9ponse (none).  Cela arrive si les crit\u00e8res de d\u00e9cision (sujet, contexte, permissions  demand\u00e9es, actions demand\u00e9es ou conditions) ne s'appliquent pas.</p> <p>Lorsqu'une policy est \u00e9valu\u00e9e, toutes les r\u00e8gles qui la composent sont  \u00e9valu\u00e9es. La policy accorde une autorisation lorsqu'au moins un  des statements accorde une autorisation et pour autant qu'aucun statement  n'indique un refus. La policy refuse donc une autorisation d\u00e8s qu'une r\u00e8gle  signale un refus. Dans les autres cas, c'est-\u00e0-dire lorsqu'aucune r\u00e8gle ne  s'applique au contexte, la policy ne donne pas d'avis et c'est \u00e0  l'application de d\u00e9cider si cela doit \u00eatre interpr\u00e9t\u00e9 comme une autorisation  ou un refus.</p> <p>Les policies fonctionnent sur le principe du refus implicite. Cela signifie que l'acc\u00e8s \u00e0 une ressource ou une action est syst\u00e9matiquement refus\u00e9 tant qu'il n'y a pas de policy qui l'autorise. \u00c0 noter qu'\u00e0 niveau de priorit\u00e9  \u00e9gal, un refus explicite peut \u00e9galement annuler une autorisation accord\u00e9e au  pr\u00e9alable. Cela signifie que si une policy accorde une autorisation mais  qu'une autre de m\u00eame priorit\u00e9 la refuse, c'est cette derni\u00e8re qui l'emporte.  La hi\u00e9rarchie entre les policies est \u00e9tablie selon deux axes (structure ou  priorit\u00e9). Ces aspects sont d\u00e9crits plus bas dans ce document.</p>"},{"location":"reference/policy/#evaluation-des-policies-par-le-moteur","title":"\u00c9valuation des policies par le moteur","text":"<p>Les policies sont prises en compte lors de diff\u00e9rents traitements par le  moteur:</p> <ol> <li>Lors de la cr\u00e9ation de session, le moteur v\u00e9rifie qu'il existe au moins      une policy qui autorise un acc\u00e8s (soit via une permission read, soit      via une permission write). Un code d'erreur HTTP 403 est retourn\u00e9 si ce      n'est pas le cas.</li> <li>Lors du traitement d'une commande, le moteur v\u00e9rifie que le sujet est en      droit d'invoquer l'action demand\u00e9e. Pour ce faire, le moteur      effectue une recherche d'autorisation parmi toutes les policies      applicables qui concernent l'action en question. L'action est autoris\u00e9e      si au moins une policy l'autorise et qu'aucune ne l'interdit.</li> <li> <p>Lors de la construction de l'arbre de sortie les policies sont      \u00e9galement \u00e9valu\u00e9es dans le but de d\u00e9terminer les permissions (read et      write) et les actions autoris\u00e9es. Ces informations apparaissent dans      l'arbre de sortie via un \u00e9l\u00e9ment <code>authorizations</code>. La feuille de style      qui met en forme l'\u00e9cran peut donc s'appuyer sur cet \u00e9l\u00e9ment pour      afficher/masquer/griser les \u00e9l\u00e9ments de l'interface.</p> <p>En mode debug, des attributs pr\u00e9fix\u00e9s par le namespace  <code>ch.epilogic.ewt.debug</code> sont ajout\u00e9s (ils ne sont pas pr\u00e9sents pour les  autres modes de fonctionnement). Ces \u00e9l\u00e9ments donnent une indication sur  la policy (et son niveau de priorit\u00e9) qui a permis de d\u00e9terminer le type  d'autorisation. </p> </li> </ol>"},{"location":"reference/policy/#types-de-policies","title":"Types de policies","text":"<p>Le mod\u00e8le de policies AWS pr\u00e9voit plusieurs types de policies https://docs.aws.amazon.com/fr_fr/IAM/latest/UserGuide/access_policies.html. Dans Ewt on ne retient que les deux principaux types (du moins pour le  moment):</p> <ul> <li>les policies de ressource : policy associ\u00e9e \u00e0 une ressource et     accordant une autorisation \u00e0 un sujet (utilisateur, groupe ou r\u00f4le)</li> <li>les policies d'identit\u00e9 : policy associ\u00e9e \u00e0 un utilisateur, un groupe     d'utilisateurs ou un r\u00f4le et donnant l'acc\u00e8s \u00e0 une ressource</li> </ul> <p>Les policies d'identit\u00e9s sont \u00e0 d\u00e9finir dans le sous-dossier <code>policies</code> de  l'application.</p> <p>Les policies de ressource peuvent \u00eatre d\u00e9finies inline dans la descript ou au niveau de fichiers XML plac\u00e9s dans le sous-dossier <code>policies</code> de l'application. Ces derniers doivent avoir l'extension <code>.policy</code> ou <code>.xml</code> (les autres types de fichiers sont ignor\u00e9s, par contre l'arborescence est parcourue r\u00e9cursivement, donc les fichiers pr\u00e9sents dans les sous-dossiers sont \u00e9galement trait\u00e9s).</p> <p>Les policies inline et les policies d\u00e9finies au niveau des fichiers externes peuvent \u00eatre r\u00e9f\u00e9renc\u00e9es au niveau de la description.</p>"},{"location":"reference/policy/#remarque-sur-le-format","title":"Remarque sur le format","text":"<p>Dans AWS, les policies sont d\u00e9finies au format JSON. Dans Ewt les policies  sont d\u00e9crites au format XML car celui-ci autorise les retours ligne, ce qui  le rend plus adapt\u00e9 \u00e0 l'\u00e9criture de conditions sous la forme de scripts.</p>"},{"location":"reference/policy/#resource-policy","title":"Resource policy","text":"<p>Une policy de ressource indique les droits rattach\u00e9s \u00e0 une ressource donn\u00e9e.  Les statements doivent donc d\u00e9crire les autorisations et refus d'acc\u00e8s \u00e0  cette ressource pour les diff\u00e9rentes populations de sujets susceptibles  d'utiliser l'application.</p> <p>Les policies de resource sont v\u00e9rifi\u00e9es r\u00e9cursivement: si aucune policy de ressource n'est d\u00e9finie pour un champ, on s'appuie sur la policy d\u00e9finie  pour son tuple parent, puis pour son groupe, puis son mod\u00e8le. </p>"},{"location":"reference/policy/#identity-policy","title":"Identity policy","text":"<p>Une policy d'identit\u00e9 d\u00e9crit les droits que poss\u00e8de un utilisateur, un  groupe d'utilisateur ou un r\u00f4le sur une ou plusieurs ressources.</p> <p>Notons que l'impl\u00e9mentation des policies d'identit\u00e9 dans Ewt varie de celle  d'AWS. En particulier, chaque policy d'identit\u00e9 doit indiquer \u00e0 quelle  cat\u00e9gorie de sujet elle s'applique. Cela se fait au moyen d'une entr\u00e9e  <code>appliesTo</code> dans la policy : on y d\u00e9crit le/les users concern\u00e9s, le/les  r\u00f4les concern\u00e9s et/ou le/les groupes concern\u00e9s.</p>"},{"location":"reference/policy/#permissions","title":"Permissions","text":"<p>Les permissions (read, write) indiquent quel type d'op\u00e9ration  le sujet peut effectuer sur un \u00e9l\u00e9ment de la descript (un dossier, un tuple,  un champ, etc.). La version actuelle pr\u00e9voit 2 niveaux de permission:</p> <ul> <li><code>read</code> : permet de lire le contenu mais pas de le modifier</li> <li><code>write</code> : permet de lire et de modifier le contenu</li> </ul>"},{"location":"reference/policy/#actions","title":"Actions","text":"<p>Les actions (open, save, close, delete, etc.) d\u00e9signent les types  d'actions que le client peut envoyer au moteur via une commande. Il est  important de noter que les actions portent uniquement sur les groupes, les  dossiers ou sur l'application, alors que les permissions portent sur tous  les types d'objets (dossier, tuple, champ, etc.). La version actuelle  impl\u00e9mente les actions suivantes:</p> <ul> <li><code>addTuple</code> (version 1.0)</li> <li><code>admin</code> (version 1.0)</li> <li><code>arrange</code> (version 1.0)</li> <li><code>close</code> (version 1.0)</li> <li><code>create</code> (version 1.0)</li> <li><code>clone</code> (version 1.0)</li> <li><code>delete</code> (version 1.0)</li> <li><code>delTuple</code> (version 1.0)</li> <li><code>dummy</code> (version 1.0)</li> <li><code>open</code> (version 1.0)</li> <li><code>reset</code> (version 1.0)</li> <li><code>save</code> (version 1.0)</li> <li><code>script</code> (version 1.0)</li> <li><code>setState</code> (version 1.0)</li> <li><code>setStyle</code> (version 1.0)</li> <li><code>setView</code> (version 1.0)</li> </ul> <p>Le num\u00e9ro de version indiqu\u00e9 est le num\u00e9ro de la version du moteur de  policies prenant en charge l'action donn\u00e9e. Nous revenons plus bas sur le  r\u00f4le du num\u00e9ro de version des policies.</p>"},{"location":"reference/policy/#transitions","title":"Transitions","text":"<p>Les transitions sont des r\u00e9f\u00e9rences \u00e0 des transitions d'\u00e9tats d\u00e9finies  au niveau des mod\u00e8les d'\u00e9tats (sous-dossier <code>states</code> d'une  application).</p> <p>Les r\u00e8gles <code>transition</code> fonctionnent sur le m\u00eame principe que les  r\u00e8gles <code>action</code>.</p>"},{"location":"reference/policy/#operations","title":"Op\u00e9rations","text":"<p>Les op\u00e9rations repr\u00e9sentent des ensembles de traitements propres \u00e0  l'application. Il ne s'agit pas d'une notion prise en charge par Ewt, mais  uniquement une facilit\u00e9 mise \u00e0 disposition pour v\u00e9rifier des droits sur la  base d'un \u00e9l\u00e9ment personnalis\u00e9.</p> <p>Par exemple, une op\u00e9ration pourrait \u00eatre \"launchDatabaseClean\". Le  traitement sous-jacent de cette op\u00e9ration est propre \u00e0 l'application et  n'est pas une fonctionnalit\u00e9 d'Ewt.</p> <p>L'id\u00e9e ici est de pouvoir demander \u00e0 Ewt si une op\u00e9ration  \"launchDatabaseClean\" a \u00e9t\u00e9 consid\u00e9r\u00e9e comme possible dans un contexte  donn\u00e9.</p>"},{"location":"reference/policy/#infos-de-base","title":"Infos de base","text":"<p>La policy est d\u00e9finie au moyen des \u00e9l\u00e9ments suivants:</p> <ul> <li> <p>attribut <code>name</code> : Nom de la policy form\u00e9 de caract\u00e8res alphanum\u00e9riques et     ne commen\u00e7ant pas par un chiffre. Ce nom sert \u00e0 identifier la policy. Il      peut \u00eatre repris ensuite pour r\u00e9f\u00e9rencer la policy, par exemple au niveau      de la descript.</p> </li> <li> <p>attribut <code>type</code> : Type de policy; peut contenir les valeurs <code>resource</code> ou     <code>identity</code></p> </li> <li> <p>attribut <code>priority</code> : Facultatif. Cet attribut permet de d\u00e9finir la      priorit\u00e9 de la policy. Voir le chapitre Hi\u00e9rarchie des policies de      ressource et plus sp\u00e9cifiquement      le point Hi\u00e9rarchie par priorit\u00e9 pour      une description plus d\u00e9taill\u00e9e.</p> </li> <li> <p>attribut <code>version</code> : Facultatif. Num\u00e9ro de version selon lequel la policy      doit \u00eatre trait\u00e9e. En pratique, le num\u00e9ro de version sert \u00e0 indiquer \u00e0 Ewt      sur quelle version du mod\u00e8le de policy il doit s'appuyer. Il s'agit d'un      garde-fou principalement destin\u00e9 \u00e0 l'interpr\u00e9tation de l'\u00e9l\u00e9ment wildcard.</p> <p>Pour comprendre le r\u00f4le la version, prenons l'exemple suivant: on d\u00e9finit  un statement qui est valable pour toutes les actions en notant  <code>&lt;action&gt;*&lt;/action&gt;</code>. Le p\u00e9rim\u00e8tre des actions concern\u00e9es peut varier au  fil du temps, en particulier si une version future du moteur impl\u00e9mente  une nouvelle action : dans ce cas, la nouvelle action sera de facto  comprise dans le statement, ce qui peut repr\u00e9senter un risque selon la  nature de cette nouvelle action.</p> <p>Pour \u00e9viter que l'expression wildcard n'englobe des fonctions non  connues et non souhait\u00e9es, on indiquera au moyen de l'attribut <code>version</code> la  version du moteur de traitement des policies \u00e0 utiliser. Actuellement  seule la version \"1.0\" est disponible, mais cela est susceptible d'\u00e9voluer  \u00e0 l'avenir.</p> <p>En l'absence de num\u00e9ro de version, le moteur consid\u00e8re que la policy est compatible avec la derni\u00e8re version en date du mod\u00e8le. Le m\u00eame r\u00e9sultat est \u00e9galement possible en sp\u00e9cifiant la valeur <code>latest</code>.</p> </li> <li> <p>attribut <code>disabled</code> : Facultatif. Cet attribut permet de d\u00e9sactiver une      policy. Dans ce cas, la policy n'est pas charg\u00e9e par le moteur.</p> <p>Cet attribut peut \u00eatre pratique pendant d\u00e9veloppement pour d\u00e9sactiver  provisoirement une policy.</p> </li> <li> <p>\u00e9l\u00e9ment <code>description</code> : Facultatif. Cet \u00e9l\u00e9ment ne joue aucun r\u00f4le. Il      permet de saisir une description de la policy, de son r\u00f4le, etc.</p> </li> <li> <p>\u00e9l\u00e9ment <code>appliesTo</code> (uniquement requis pour les policies d'identit\u00e9) :     Filtre indiquant \u00e0 quel genre de sujet la policy d'identit\u00e9 s'applique.     Il permet de filtrer les <code>user</code>, <code>role</code> et/ou <code>group</code> auxquels la policy      s'applique.</p> <p>L'\u00e9l\u00e9ment sert essentiellement pour l'optimisation de traitement en interne au moteur. Lors de l'\u00e9valuation des policies, l'application ne  v\u00e9rifiera que les policies qui s'appliquent r\u00e9ellement \u00e0 l'utilisateur  connect\u00e9.</p> </li> <li> <p>\u00e9l\u00e9ment(s) <code>statement</code> : R\u00e8gle de d'autorisation ou de refus (voir     ci-dessous)</p> </li> </ul>"},{"location":"reference/policy/#les-statements","title":"Les statements","text":"<p>Les statements sont des r\u00e8gles r\u00e9f\u00e9renc\u00e9es par la policy. Ces r\u00e8gles servent  \u00e0 d\u00e9finir le comportement de la policy. Une policy retournera un deny si  au moins un statement indique un deny ou si aucun statement n'indique un  allow.</p> <p>Un statement n'est \u00e9valu\u00e9 que si le contexte d\u00e9termin\u00e9 par le sujet, la ressource et/ou les conditions est v\u00e9rifi\u00e9. En outre, certaines \u00e9valuations de policies s'effectuent dans le cadre d'un contr\u00f4le de permission et/ou d'action. Les \u00e9l\u00e9ments correspondants sont donc \u00e9galement pris en compte dans ce cas.</p> <p>Les statements d'une policy sont g\u00e9n\u00e9ralement constitu\u00e9s de:</p> <ul> <li> <p>attribut <code>effect</code> : Cet \u00e9l\u00e9ment peut prendre les valeurs <code>allow</code> ou <code>deny</code>.     Il s'agit de la d\u00e9cision retourn\u00e9e par le statement si ce dernier est     applicable au contexte actuel (\u00e9tabli en fonction du contexte de     dossier et du sujet connect\u00e9).</p> </li> <li> <p>attribut <code>requireQualifiedContext</code> : Facultatif. Flag <code>true</code> / <code>false</code>     indiquant si l'\u00e9valuation du statement est r\u00e9serv\u00e9 aux \"contextes      qualifi\u00e9s\". Le terme \"contexte qualifi\u00e9\" s'oppose au terme \"contexte      abstrait\". Il d\u00e9signe un contexte qui r\u00e9f\u00e9rence un dossier, par      opposition au contexte abstrait qui r\u00e9f\u00e9rence un mod\u00e8le. Concr\u00e8tement,      un contexte qualifi\u00e9 sera a minima d\u00e9termin\u00e9 par un mod\u00e8le et un      identifiant de dossier. Un contexte abstrait ne r\u00e9f\u00e9rencera aucun      identifiant de dossier.</p> <p>On indiquera que le statement n\u00e9cessite un contexte qualifi\u00e9 lorsque au moins une de ses conditions r\u00e9f\u00e9rence un champ de dossier. Si on ne sp\u00e9cifie pas cette information, on risque de voir appara\u00eetre des erreurs dans le log car le moteur ne pourra pas r\u00e9cup\u00e9rer de valeurs de dossiers si aucun dossier n'est ouvert.</p> </li> <li> <p>\u00e9l\u00e9ment(s) <code>permission</code> : Cet \u00e9l\u00e9ment est une table de permissions \u00e0      autoriser/refuser. Les permissions sont <code>read</code> ou <code>write</code>. Pour      sp\u00e9cifier les deux permissions, il est possible de doubler      l'\u00e9l\u00e9ment <code>permission</code> ou de noter les permissions via un seul      \u00e9l\u00e9ment en utilisant la notation <code>read,write</code> (ou <code>write,read</code>).</p> </li> <li> <p>\u00e9l\u00e9ment(s) <code>action</code> : Cet \u00e9l\u00e9ment est une table d'actions \u00e0      autoriser/refuser. Les actions possibles (<code>open</code>, <code>save</code>, etc.) sont      donn\u00e9es plus haut dans ce document. Les actions peuvent \u00eatre not\u00e9es via      des \u00e9l\u00e9ments <code>action</code> distincts, ou regroup\u00e9s au sein d'une valeur s\u00e9par\u00e9e      par des virgules.</p> <p>Il est possible de d\u00e9signer \"toutes les actions\" au moyen de la valeur  wildcard <code>*</code>. Vous pouvez \u00e9galement sp\u00e9cifier des exceptions \u00e0 la  liste d'actions. Pour cela, il suffit d'ajouter un attribut  <code>except=\"true\"</code> \u00e0 l'\u00e9l\u00e9ment <code>action</code> (voir exemple plus bas). Veuillez  toutefois lire plus haut l'importance de l'attribut <code>version</code> lorsque  vous d\u00e9finissez une r\u00e8gle portant sur toutes les actions.  </p> <pre><code>&lt;statement effect=\"deny\"&gt;\n  ...\n  &lt;action&gt;*&lt;/action&gt;\n  &lt;action except=\"true\"&gt;open,close,arrange,save&lt;/action&gt;\n  ...\n&lt;/statement&gt;\n</code></pre> </li> <li> <p>\u00e9l\u00e9ment(s) <code>transition</code> : Cet \u00e9l\u00e9ment permet de sp\u00e9cifier une ou plusieurs     transitions \u00e0 autoriser/refuser. Les transitions peuvent \u00eatre not\u00e9es via      des \u00e9l\u00e9ments <code>transition</code> distincts, ou regroup\u00e9s au sein d'une valeur      s\u00e9par\u00e9e par des virgules.</p> </li> <li> <p>\u00e9l\u00e9ment(s) <code>operation</code> : Cet \u00e9l\u00e9ment permet de sp\u00e9cifier une ou plusieurs      op\u00e9rations \u00e0 autoriser/refuser. Les op\u00e9rations peuvent \u00eatre not\u00e9es via     des \u00e9l\u00e9ments <code>operation</code> distincts, ou regroup\u00e9s au sein d'une valeur     s\u00e9par\u00e9e par des virgules.</p> <p>Le terme op\u00e9ration ici ne d\u00e9signe pas une fonctionnalit\u00e9 offerte par Ewt, mais un processus mis en \u0153uvre par l'application. On peut par  exemple se servir de cet \u00e9l\u00e9ment pour d\u00e9terminer s'il faut mettre \u00e0  disposition ou non un bouton au niveau de l'interface utilisateur.</p> </li> <li> <p>\u00e9l\u00e9ment <code>subject</code> : Uniquement pour les policies de ressources.</p> <p>Cet \u00e9l\u00e9ment permet de d\u00e9crire les r\u00e8gles  d'identification de sujets sur lesquels s'applique le statement. On  d\u00e9finit la population au moyen de trois types d'\u00e9l\u00e9ments: <code>user</code>, <code>role</code>  et/ou <code>group</code>. Chaque \u00e9l\u00e9ment peut figurer entre 0 et n fois. Il est  possible de regrouper plusieurs valeurs d'un m\u00eame type (par exemple  plusieurs roles) en une seule en les s\u00e9parant par une virgule (par exemple  <code>&lt;role&gt;EWT_1,EWT_2,EWT_3&lt;/role&gt;</code>)</p> </li> <li> <p>\u00e9l\u00e9ment(s)<code>resource</code> : Uniquement pour les policies d'identit\u00e9. </p> <p>Cet \u00e9l\u00e9ment permet d'indiquer la ou les ressources pour lesquelles le  statement s'applique. Les ressources sont \u00e0 r\u00e9f\u00e9rencer \u00e0 l'aide d'une  expression de contexte.</p> <p>Il est possible de r\u00e9f\u00e9rencer n'importe quelle ressource en indiquant une  valeur wildcard <code>*</code>.</p> <p>Il est possible de sp\u00e9cifier une cha\u00eene de caract\u00e8res si on ne souhaite r\u00e9f\u00e9rencer qu'une seule valeur.</p> <p>Attention, la valeur <code>\"*\"</code> n'est pas \u00e9quivalente \u00e0 la valeur <code>\"\"</code>.</p> <p>La valeur <code>\"*\"</code> d\u00e9signe n'importe quel contexte non vide. Cela signifie qu'il faut qu'un dossier soit ouvert pour que le statement s'applique.</p> <p>La valeur vide (<code>&lt;resource/&gt;</code>) d\u00e9signe aucun contexte. La valeur  permet de repr\u00e9senter la cas o\u00f9 l'on est hors dossier. Ainsi, la r\u00e9f\u00e9rence  <code>&lt;resource&gt;,*&lt;!--&lt;resource--&gt;</code> permet d'englober \u00e0 la fois le contexte \"hors dossier\" et le contexte \"dossier ouvert\", ind\u00e9pendamment de son mod\u00e8le.</p> <p>Il est possible de ne pas sp\u00e9cifier de ressource au niveau d'un statement. Dans ce cas, le moteur n'effectue pas de contr\u00f4le de contexte.  Cela signifie qu'il \u00e9value le statement dans tous les cas, ind\u00e9pendamment du contexte actuel.</p> </li> <li> <p>\u00e9l\u00e9ment(s) <code>condition</code> : Cet \u00e9l\u00e9ment est une table de scripts      d\u00e9finissant les conditions d'application du statement. Chaque condition      est un script qui doit retourner une valeur <code>true</code> ou <code>false</code>. Lorsque      la condition est <code>true</code>, cela signifie que le statement est applicable      au contexte courant. </p> </li> </ul>"},{"location":"reference/policy/#policy-pour-acces-a-une-application","title":"Policy pour acc\u00e8s \u00e0 une application","text":"<p>Les servlets autorisent l'acc\u00e8s \u00e0 une application lorsque la policy de base  autorise au moins une action \u00e0 l'utilisateur. La policy de base est d\u00e9finie  dans la config via la propri\u00e9t\u00e9 <code>policies.policy</code>.</p> <p>Exemple de policy de base:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;policy name=\"main\" type=\"identity\" priority=\"-100\"&gt;\n  &lt;description&gt;Cette policy d'identit\u00e9 v\u00e9rifie le r\u00f4le technique...&lt;/description&gt;\n  &lt;appliesTo&gt;\n    &lt;role&gt;EWT&lt;/role&gt;\n  &lt;/appliesTo&gt;\n  &lt;statement effect=\"allow\"&gt;\n    &lt;permission&gt;read&lt;/permission&gt;\n    &lt;action&gt;*&lt;/action&gt;\n  &lt;/statement&gt;\n&lt;/policy&gt;\n</code></pre>"},{"location":"reference/policy/#hierarchie-des-policies-de-ressource","title":"Hi\u00e9rarchie des policies de ressource","text":"<p>Le moteur traite les policies de ressource de mani\u00e8re hi\u00e9rarchique selon deux  axes: la hi\u00e9rarchie de structure et la hi\u00e9rarchie par priorit\u00e9.</p>"},{"location":"reference/policy/#hierarchie-de-structure","title":"Hi\u00e9rarchie de structure","text":"<p>La hi\u00e9rarchie de structure s'appuie sur la structure de la descript. Comme  son nom l'indique, une policy d\u00e9finie pour un n\u0153ud donn\u00e9, par  exemple le n\u0153ud <code>&lt;model&gt;</code>, s'applique \u00e0 toute la structure de ce n\u0153ud,  donc \u00e0 ses groupes, ses tuples, ses champs.</p> <p>Il est possible de d\u00e9finir d'autres policies dans les \u00e9l\u00e9ments de la  sous-structure (groupes, tuples, champs) mais ces derni\u00e8res ne peuvent pas  contredire des r\u00e8gles d\u00e9finies plus haut. En particulier, elles ne peuvent  autoriser des actions qui ont \u00e9t\u00e9 refus\u00e9es \u00e0 un niveau sup\u00e9rieur.</p> <p>Par exemple, on peut concevoir qu'une policy accorde un droit de  lecture/\u00e9criture sur un mod\u00e8le \u00e0 une cat\u00e9gorie de personne. Une autre policy  limite le droit d'\u00e9criture \u00e0 un champ pour cette m\u00eame cat\u00e9gorie. Dans ce  cas, la policy d\u00e9finie au niveau du champ pourra surcharger celle d\u00e9finie au  niveau du mod\u00e8le car elle accorde un droit plus restreint que son parent  (elle limite l'\u00e9criture).</p> <p>Dans l'exemple ci-dessus, on applique une structure o\u00f9 le niveau sup\u00e9rieur  donne beaucoup de droits et les niveaux inf\u00e9rieurs limitent ces droits en  fonction des cas. Il se peut que le niveau sup\u00e9rieur impose une limitation  plus stricte. Les niveaux inf\u00e9rieurs ne pourront pas surpasser cette  limitation.</p>"},{"location":"reference/policy/#hierarchie-par-priorite","title":"Hi\u00e9rarchie par priorit\u00e9","text":"<p>La hi\u00e9rarchie par priorit\u00e9 offre une solution pour court-circuiter la  limitation impos\u00e9e par la hi\u00e9rarchie de structure, \u00e0 savoir le fait qu'un  niveau inf\u00e9rieur ne peut pas accorder plus d'autorisation que ne le permet  le niveau sup\u00e9rieur.</p> <p>Prenons le cas suivant: On souhaite d\u00e9finir une policy globale indiquant qu'un dossier est en lecture seule lorsque son statut est \"archiv\u00e9\". Pour cela, on d\u00e9finit la policy de ressource au niveau de la descript. En imaginant que tous les  mod\u00e8les poss\u00e8dent un champ \"statut\", la policy pourrait \u00eatre :</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;policy name=\"statut\" type=\"resource\"&gt;\n  &lt;description&gt;Cette policy d\u00e9finit les r\u00e8gles d'acc\u00e8s vis-\u00e0-vis du statut \n    d'un dossier: on refuse toute action sur un dossier archiv\u00e9&lt;/description&gt;\n  &lt;statement effect=\"deny\" requireQualifiedContext=\"true\"&gt;\n    &lt;permission&gt;write&lt;/permission&gt;\n    &lt;action&gt;*&lt;/action&gt;\n    &lt;subject&gt;\n      &lt;user/&gt;\n      &lt;role&gt;*&lt;/role&gt;\n      &lt;group/&gt;\n    &lt;/subject&gt;\n    &lt;condition&gt;return $array.contains([`refuse`,`archive`], `${data:statut}`);&lt;/condition&gt;\n  &lt;/statement&gt;\n&lt;/policy&gt;\n</code></pre> <p>Cependant, on aimerait malgr\u00e9 tout autoriser un administrateur \u00e0 intervenir  sur les champs d'un dossier archiv\u00e9 mais la hi\u00e9rarchie de structure  l'interdit. Pour contourner cette limitation, il est possible d'utiliser la  notion de priorit\u00e9. La priorit\u00e9 est repr\u00e9sent\u00e9e par une valeur num\u00e9rique  rattach\u00e9e \u00e0 la policy via l'\u00e9l\u00e9ment <code>priority</code>.</p> <p>Une policy peut accorder des droits plus \u00e9tendus que son parent \u00e0 la  condition qu'elle ait une priorit\u00e9 sup\u00e9rieure ou \u00e9gale \u00e0 la policy qui a  \u00e9tabli le deny sur une action donn\u00e9e.</p>"},{"location":"reference/policy/#evaluation-des-policies","title":"\u00c9valuation des policies","text":"<p>https://docs.aws.amazon.com/fr_fr/IAM/latest/UserGuide/reference_policies_evaluation-logic.html</p>"},{"location":"reference/policy/#exemple-de-policy-didentite","title":"Exemple de policy d'identit\u00e9","text":"<p>On souhaite donner acc\u00e8s \u00e0 une cat\u00e9gorie d'utilisateurs pour qu'ils  effectuent une t\u00e2che sp\u00e9cifique. Par exemple, on souhaite donner acc\u00e8s aux  listes d'articles \u00e0 des vendeurs pour qu'ils puissent saisir les articles  qu'ils veulent mettre en vente. Ces vendeurs ne doivent pouvoir acc\u00e9der qu'\u00e0  leur liste d'article et \u00e0 rien d'autre.</p> <p>On d\u00e9finit alors une policy d'identit\u00e9 qui interdit l'acc\u00e8s \u00e0 toute  ressource qui n'est pas la liste d'articles du vendeur.</p> <p>La policy suivante permet d'impl\u00e9menter cela:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;policy name=\"vendeur\" type=\"identity\"&gt;\n  &lt;description&gt;Cette policy g\u00e8re les droits des users de niveau 'vendeur'&lt;/description&gt;\n  &lt;appliesTo&gt;\n    &lt;role&gt;EWT_3&lt;/role&gt;\n  &lt;/appliesTo&gt;\n  &lt;statement effect=\"deny\"&gt;\n    &lt;description&gt;\n      Ce statement bloque la plupart des actions (hormis open, save et \n      script) aux vendeurs&lt;/description&gt;\n    &lt;action&gt;close,addTuple,admin,setView,create,delete,delTuple,reset,setStyle&lt;/action&gt;\n    &lt;resource&gt;listeArticle&lt;/resource&gt;\n  &lt;/statement&gt;\n  &lt;statement effect=\"deny\" requireQualifiedContext=\"true\"&gt;\n    &lt;description&gt;\n      Ce statement refuse l'acc\u00e8s aux vendeurs sur les listes d'articles qui \n      ne sont pas les leurs&lt;/description&gt;\n    &lt;permission&gt;read,write&lt;/permission&gt;\n    &lt;resource&gt;listeArticle&lt;/resource&gt;\n    &lt;condition&gt;\n      return (`${data:idListeArticle}` != ``\n        ? $request.getPrincipal() != $sql.select(`select Vendeur.Numero\n                                                  from ListeArticle inner join Vendeur on Vendeur.idVendeur=ListeArticle.idVendeur\n                                                  where idListeArticle=?`::T, [ #idListeArticle ])\n        : false);&lt;/condition&gt;\n  &lt;/statement&gt;\n&lt;/policy&gt;\n</code></pre>"},{"location":"reference/policy/#remarque-concernant-les-mises-a-jour-de-policy","title":"Remarque concernant les mises \u00e0 jour de policy","text":"<p>Lors du d\u00e9veloppement, on peut \u00eatre amen\u00e9 \u00e0 modifier, voire ajouter ou  supprimer des policies. Il faut alors demander \u00e0 l'application d'effectuer  un rechargement des policies pour que les modifications soient appliqu\u00e9es.  Ce rechargement peut \u00eatre effectu\u00e9 au moyen de la commande <code>reset</code>.</p> <p>Cette action a pour effet de forcer un rechargement complet de l'application, de la config, de la descript, des policies, etc. Toutefois elle ne peut pas  agir directement sur les objets charg\u00e9s en m\u00e9moire, en particulier les  dossiers ouverts. La nuance est peut-\u00eatre difficile \u00e0 percevoir. Pour mieux  comprendre les choses, voyons comment Ewt organise les \u00e9l\u00e9ments.</p> <p>L'application contient une table de policies. Lorsqu'une policy est appliqu\u00e9 \u00e0 une ressource (un mod\u00e8le, un tuple, un  champ, etc.), cette derni\u00e8re conserve en m\u00e9moire le nom de la policy en  question. La policy en elle-m\u00eame est d\u00e9crite au niveau de la table de  policies de l'application, mais le nom de la policy est rattach\u00e9 \u00e0 la  ressource.</p> <p>Lors d'un reset, la table des policies de l'application est recharg\u00e9e, mais  pas les r\u00e9f\u00e9rences par nom qui sont enregistr\u00e9es au niveau des ressources.  Cela fait qu'apr\u00e8s un reset, les ressources ont toujours les m\u00eames listes de  noms de policies, dans le m\u00eame ordre qu'avant le reset.</p> <p>Par cons\u00e9quent si le changement concerne purement la policy (ajout d'une  action, modification de l'effet, modification des conditions, etc.), alors  la nouvelle version de la policy sera bien prise en compte, car la ressource  continuera de r\u00e9f\u00e9rencer la policy et celle-ci sera mise \u00e0 jour.</p> <p>Par contre si la modification consiste \u00e0 ajouter une nouvelle policy \u00e0 une  ressource, ou \u00e0 modifier l'ordre des policies au sein d'une ressource, alors  la modification ne se remarquera pas imm\u00e9diatement car la ressource  conservera la liste de noms de policies qu'elle conna\u00eet, mais ignorera les  nouvelles policies ou le nouvel ordre des policies. La modification ne  s'appliquera qu'aux dossiers ouverts apr\u00e8s le reset et pas \u00e0 ceux qui  \u00e9taient d\u00e9j\u00e0 ouverts avant le reset. Pour ces derniers, il faudra fermer  puis rouvrir le dossier pour que la modification soit effective.</p>"},{"location":"reference/policy/#exemple","title":"Exemple","text":"<p>Ce chapitre pr\u00e9sente un exemple d'impl\u00e9mentation de gestion de droits sur la  base de policies. Pour cet exemple, nous nous appuyons sur une application  tr\u00e8s basique faisant intervenir 2 mod\u00e8les:</p> <ul> <li>entreprise : contient les informations de base d'une entreprise</li> <li>personne : contient les informations de base d'une personne et une      r\u00e9f\u00e9rence vers l'entreprise \u00e0 laquelle la personne est rattach\u00e9e</li> </ul> <pre><code>&lt;models&gt;\n  &lt;model name=\"entreprise\" maingroup=\"info\" mainfield=\"idEntreprise\"&gt;\n    &lt;groups&gt;\n      &lt;group name=\"info\" table=\"Entreprise\" type=\"single\"&gt;\n        &lt;fields&gt;\n          &lt;field name=\"idEntreprise\" type=\"hidden\" column=\"idEntreprise\"/&gt;\n          &lt;field name=\"nom\" type=\"text\" column=\"Nom\"/&gt;\n          &lt;field name=\"adresse\" type=\"textarea\" column=\"Adresse\"/&gt;\n          &lt;field name=\"remarque\" type=\"text\" column=\"Remarque\"/&gt;\n        &lt;/fields&gt;\n      &lt;/group&gt;\n    &lt;/groups&gt;\n    &lt;views&gt;\n      &lt;view name=\"viewDocuments\" style=\"documents\"&gt;\n        &lt;group name=\"info\"/&gt;\n      &lt;/view&gt;\n    &lt;/views&gt;\n  &lt;/model&gt;\n\n  &lt;model name=\"personne\" maingroup=\"info\" mainfield=\"idPersonne\"&gt;\n    &lt;groups&gt;\n      &lt;group name=\"info\" table=\"Personne\" type=\"single\"&gt;\n        &lt;fields&gt;\n          &lt;field name=\"idPersonne\" type=\"hidden\" column=\"idPersonne\"/&gt;\n          &lt;field name=\"nom\" type=\"text\" column=\"Nom\"/&gt;\n          &lt;field name=\"prenom\" type=\"text\" column=\"Prenom\"/&gt;\n          &lt;field name=\"email\" type=\"email\" column=\"EMail\"/&gt;\n          &lt;field name=\"idEntreprise\" type=\"text\" column=\"idEntreprise\"/&gt;\n          &lt;field name=\"login\" type=\"text\" column=\"Login\"/&gt;\n          &lt;field name=\"password\" type=\"password\" column=\"Password\"/&gt;\n          &lt;field name=\"remarque\" type=\"text\" column=\"Remarque\"/&gt;\n        &lt;/fields&gt;\n      &lt;/group&gt;\n    &lt;/groups&gt;\n    &lt;views&gt;\n      &lt;view name=\"viewDocuments\" style=\"documents\"&gt;\n        &lt;group name=\"info\"/&gt;\n      &lt;/view&gt;\n    &lt;/views&gt;\n  &lt;/model&gt;\n&lt;/models&gt;\n</code></pre> <p>On pr\u00e9voit 3 niveaux d'utilisateurs:</p> <ul> <li><code>contact</code> : ce compte re\u00e7oit les r\u00f4les <code>EWT</code> et <code>EWT-contact</code></li> <li><code>responsable</code> : ce compte re\u00e7oit les r\u00f4les <code>EWT</code> et <code>EWT-responsable</code></li> <li><code>admin</code> : ce compte re\u00e7oit les r\u00f4les <code>EWT</code> et <code>EWT-admin</code></li> </ul> <p>L'id\u00e9e est d'associer des contacts \u00e0 des entreprises. Pour l'exercice, on  pr\u00e9voit les contraintes de s\u00e9curit\u00e9 suivantes: </p> <ul> <li> <p>Les contacts ont la possibilit\u00e9 de modifier les infos de leur compte      personnel, \u00e0 l'exception de la r\u00e9f\u00e9rence \u00e0 l'entreprise et du champ      \"remarque\". On souhaite que le champ remarque soit en lecture seule et que     le champ \"entreprise\" ne soit pas visible de la personne.</p> </li> <li> <p>Les responsables ont tous les droits sur la fiche d'entreprise \u00e0 laquelle      ils sont rattach\u00e9s. Ils peuvent consulter les fiches des autres      entreprises en lecture seule.</p> <p>Ils ont \u00e9galement la possibilit\u00e9 de consulter les fiches de contact. La  fiche personnelle est consultable en lecture et \u00e9criture. Les fiches des  autres contacts sont accessibles en consultation uniquement, \u00e0 l'exception toutefois de la r\u00e9f\u00e9rence d'entreprise et de la remarque, qui sont  modifiables sous certaines conditions:</p> <ul> <li>La r\u00e9f\u00e9rence d'entreprise n'est modifiable que si elle est vide ou si      elle correspond \u00e0 l'entreprise \u00e0 laquelle le responsable est lui-m\u00eame      rattach\u00e9. </li> <li>Le champ remarque n'est modifiable que dans le second cas de figure      \u00e9voqu\u00e9 ci-dessus.</li> </ul> </li> <li> <p>Les administrateurs ont les droits sur tous les dossiers et tous les champs.</p> </li> </ul> <p>Note</p> <p>Pour des raisons de clart\u00e9, notre exemple consid\u00e8re une application sans  gestion d'\u00e9tats. De ce fait, les policies pr\u00e9sent\u00e9es ci-apr\u00e8s ne  contiennent aucune r\u00e8gle concernant les transitions.</p>"},{"location":"reference/policy/#mise-en-uvre","title":"Mise en \u0153uvre","text":"<p>Il est possible d'aborder l'exercice de diff\u00e9rentes fa\u00e7ons. Pour commencer, nous utilisons une gestion de droits uniquement bas\u00e9e sur des policies d'identit\u00e9.</p> <p>Dans un second temps, nous effectuerons une approche au moyen de policies  bas\u00e9es sur les ressources.</p>"},{"location":"reference/policy/#approche-au-moyen-de-policies-basees-sur-les-identites","title":"Approche au moyen de policies bas\u00e9es sur les identit\u00e9s","text":""},{"location":"reference/policy/#policy-de-base","title":"Policy de base","text":"<p>Une policy de base <code>main.policy</code> est pr\u00e9-d\u00e9finie et donne acc\u00e8s \u00e0 l'application en lecture seule \u00e0 tout utilisateur qui poss\u00e8de le r\u00f4le <code>EWT</code>. Les utilisateurs qui ne poss\u00e8dent pas ce r\u00f4le recevront une erreur HTTP 403.</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;policy name=\"main\" type=\"identity\" priority=\"-100\"&gt;\n  &lt;description&gt;\n    Cette policy d'identit\u00e9 v\u00e9rifie le r\u00f4le technique permettant d'acc\u00e9der\n    \u00e0 l'application. Comme il s'agit de la policy de base, on lui donne une\n    priorit\u00e9 de -100, ce qu'il fait que n'importe quelle autre policy prime\n    sur celle-ci.\n  &lt;/description&gt;\n  &lt;appliesTo&gt;\n    &lt;role&gt;EWT&lt;/role&gt;\n  &lt;/appliesTo&gt;\n  &lt;statement effect=\"allow\"&gt;\n    &lt;!-- la policy autorise l'acc\u00e8s uniquement en lecture --&gt;\n    &lt;permission&gt;read&lt;/permission&gt;\n    &lt;!-- on autorise la sauvegarde et l'\u00e9valuation de script (pour\n         la recherche --&gt;\n    &lt;action&gt;dummy,save,script&lt;/action&gt;\n  &lt;/statement&gt;\n&lt;/policy&gt;\n</code></pre>"},{"location":"reference/policy/#administrateur","title":"Administrateur","text":"<p>Le niveau administrateur est tr\u00e8s simple \u00e0 mettre en \u0153uvre. La policy  d'identit\u00e9 suivante donne acc\u00e8s \u00e0 tout:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;policy name=\"admin\" type=\"identity\" priority=\"0\"&gt;\n  &lt;description&gt;\n    Policy d'identit\u00e9 relative \u00e0 un administrateur\n  &lt;/description&gt;\n  &lt;appliesTo&gt;\n    &lt;role&gt;EWT-admin&lt;/role&gt;\n  &lt;/appliesTo&gt;\n  &lt;statement effect=\"allow\"&gt;\n    &lt;description&gt;\n      On autorise un acc\u00e8s complet sur toute l'application.\n      On ne sp\u00e9cifie aucune ressource ici car on ne souhaite pas que le\n      statement soit d\u00e9pendant d'une ressource en particulier.\n    &lt;/description&gt;\n    &lt;permission&gt;*&lt;/permission&gt;\n    &lt;action&gt;*&lt;/action&gt;\n  &lt;/statement&gt;\n&lt;/policy&gt;\n</code></pre>"},{"location":"reference/policy/#contact","title":"Contact","text":"<p>Pour rappel, les contacts ont la possibilit\u00e9 de modifier les infos de leur  compte personnel, \u00e0 l'exception de la r\u00e9f\u00e9rence \u00e0 l'entreprise et du champ  \"remarque\". On souhaite que le champ remarque soit en lecture seule et que  le champ \"entreprise\" ne soit pas visible de la personne.</p> <p>L'acc\u00e8s \u00e0 la fiche personnelle se fait au moyen de la recherche. Une  autorisation \u00e0 \u00e9valuer le script de recherche est donc \u00e9galement n\u00e9cessaire.  La policy ci-dessous impl\u00e9mente ces diff\u00e9rents aspects.</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;policy name=\"contact\" type=\"identity\" priority=\"0\"&gt;\n  &lt;description&gt;\n    Policy d'identit\u00e9 relative \u00e0 une personne de contact.\n    Les contacts ont la possibilit\u00e9 de modifier les infos de leur compte\n    personnel, \u00e0 l'exception de la r\u00e9f\u00e9rence \u00e0 l'entreprise et du champ\n    \"remarque\". Ils n'ont cependant aucune autre possibilit\u00e9 que l'\u00e9dition.\n  &lt;/description&gt;\n  &lt;appliesTo&gt;\n    &lt;role&gt;EWT-contact&lt;/role&gt;\n  &lt;/appliesTo&gt;\n\n  &lt;statement effect=\"allow\" requireQualifiedContext=\"true\"&gt;\n    &lt;description&gt;\n      Ce statement d\u00e9finit les droits de la personne de contact au sein\n      de sa fiche personnelle.\n    &lt;/description&gt;\n    &lt;resource&gt;personne&lt;/resource&gt;\n    &lt;permission&gt;*&lt;/permission&gt;\n    &lt;action&gt;save,open,close&lt;/action&gt;\n    &lt;condition&gt;\n      // le test ci-dessous retourne true si le user connect\u00e9 a le m\u00eame\n      // login que celui enregistr\u00e9 dans la fiche de personne\n      return ($request.getPrincipal() == $str.lowercase(#login));\n    &lt;/condition&gt;\n  &lt;/statement&gt;\n\n  &lt;statement effect=\"deny\"&gt;\n    &lt;description&gt;\n      Le statement pr\u00e9c\u00e9dent a donn\u00e9 les permissions read et write sur\n      tous les champs du mod\u00e8le \"personne\". Ici on va retirer le droit\n      d'\u00e9criture sur les champs remarque et idEntreprise\n    &lt;/description&gt;\n    &lt;resource&gt;personne.info.idEntreprise&lt;/resource&gt;\n    &lt;resource&gt;personne.info.remarque&lt;/resource&gt;\n    &lt;permission&gt;write&lt;/permission&gt;\n  &lt;/statement&gt;\n\n  &lt;statement effect=\"deny\"&gt;\n    &lt;description&gt;\n      On retire \u00e9galement le droit de lecture sur le champ idEntreprise\n    &lt;/description&gt;\n    &lt;resource&gt;personne.info.idEntreprise&lt;/resource&gt;\n    &lt;permission&gt;read&lt;/permission&gt;\n  &lt;/statement&gt;\n&lt;/policy&gt;\n</code></pre>"},{"location":"reference/policy/#responsable","title":"Responsable","text":"<p>Pour rappel, les responsables ont tous les droits sur la fiche d'entreprise \u00e0  laquelle ils sont rattach\u00e9s. Ils peuvent consulter les fiches des autres  entreprises en lecture seule. Les responsables ont \u00e9galement la possibilit\u00e9 de consulter les fiches de  contact, toutefois seules la r\u00e9f\u00e9rence d'entreprise et la remarque sont  modifiables sous certaines conditions:</p> <ul> <li>La r\u00e9f\u00e9rence d'entreprise n'est modifiable que si elle est vide ou si     elle correspond \u00e0 l'entreprise \u00e0 laquelle le responsable est lui-m\u00eame     rattach\u00e9.</li> <li>Le champ remarque n'est modifiable que dans le second cas de figure \u00e9voqu\u00e9     ci-dessus.</li> </ul> <p>Nous pouvons impl\u00e9menter les droits du responsable sur sa fiche entreprise  de deux mani\u00e8res:</p> <ol> <li>On peut d\u00e9finir un statement qui accorde les droits en lecture/\u00e9criture     sur tous les dossiers \"entreprise\", et d\u00e9finir un second statement qui     bloque l'\u00e9criture lorsque l'idEntreprise courant ne correspond pas \u00e0     celui de l'utilisateur.o</li> <li>\u00c0 l'inverse, on peut d\u00e9finir un statement qui autorise la lecture seule     sur tous les dossiers \"entreprise\", et d\u00e9finir un second statement qui     \u00e9tend le droit \u00e0 l'\u00e9criture lorsque l'idEntreprise correspond \u00e0 celui de     l'utilisateur.</li> </ol> <p>Dans l'impl\u00e9mentation ci-dessous nous mettons en \u0153uvre cette seconde  option, pour deux raisons: d'une part cette mani\u00e8re de g\u00e9rer les droits par  ajout d'autorisation est plus propre (cela \u00e9vite d'ajouter beaucoup de droits pour en retirer ensuite) et d'autre part cela permet de g\u00e9rer \u00e9galement l'acc\u00e8s en lecture seule aux fiches de personnes via le m\u00eame statement.</p> <p>La policy d'identit\u00e9 pour les responsables peut \u00eatre formul\u00e9e ainsi:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;policy name=\"responsable\" type=\"identity\" priority=\"0\"&gt;\n  &lt;description&gt;\n    Policy d'identit\u00e9 relative \u00e0 un responsable d'entreprise.\n    Les responsables ont tous les droits sur la fiche d'entreprise \u00e0\n    laquelle ils sont rattach\u00e9s (i.e. entreprise r\u00e9f\u00e9renc\u00e9es via le\n    champ idEntreprise de leur fiche personnelle).\n    Ils ont la possibilit\u00e9 de consulter les fiches de personnes et de\n    modifier les infos suivantes uniquement:\n      - la r\u00e9f\u00e9rence d'entreprise ne peut \u00eatre modifi\u00e9e que si elle est\n        vide ou si elle correspond \u00e0 la r\u00e9f\u00e9rence qui figure dans la\n        fiche personnelle du responsable\n      - la remarque est modifiable uniquement si la r\u00e9f\u00e9rence d'entreprise\n        de la fiche correspond \u00e0 celle de la fiche personnelle du\n        responsable.\n  &lt;/description&gt;\n  &lt;appliesTo&gt;\n    &lt;role&gt;EWT-responsable&lt;/role&gt;\n  &lt;/appliesTo&gt;\n\n  &lt;statement effect=\"allow\"&gt;\n    &lt;description&gt;\n      Ce statement accorde un acc\u00e8s en lecture \u00e0 tout dossier des mod\u00e8les\n      entreprise et personne.\n    &lt;/description&gt;\n    &lt;resource&gt;entreprise,personne&lt;/resource&gt;\n    &lt;permission&gt;read&lt;/permission&gt;\n    &lt;action&gt;open,save,close&lt;/action&gt;\n  &lt;/statement&gt;\n\n  &lt;statement effect=\"allow\" requireQualifiedContext=\"true\"&gt;\n    &lt;description&gt;\n      Ce statement \u00e9tend les droits du statement pr\u00e9c\u00e9dent et accorde un\n      acc\u00e8s en \u00e9criture au dossier qui appartiennent au responsable, i.e.\n      la fiche entreprise qui correspond \u00e0 l'idEntreprise de la fiche\n      personnelle de l'utilisateur et la fiche personnelle elle-m\u00eame.\n    &lt;/description&gt;\n    &lt;resource&gt;entreprise,personne&lt;/resource&gt;\n    &lt;permission&gt;write&lt;/permission&gt;\n    &lt;action&gt;delete,addTuple,delTuple&lt;/action&gt;\n    &lt;condition&gt;\n      // on n'\u00e9value cette condition que si le dossier est une entreprise\n      // cela \u00e9vite que le script essaie de charger une fiche entreprise\n      // alors qu'on travaille sur une personne\n      context \"entreprise\" {\n        var monEntreprise = $sql.select(`select idEntreprise\n                                         from Personne\n                                         where lower(Login)=?`::T,\n                                        [ $request.getPrincipal() ]);\n        return (#entreprise.idEntreprise == monEntreprise);\n      }\n    &lt;/condition&gt;\n    &lt;condition&gt;\n      // on limite l'\u00e9valuation au mod\u00e8le personne\n      context \"personne\" {\n        return ($request.getPrincipal() == $str.lowercase(#personne.login));\n      }\n    &lt;/condition&gt;\n  &lt;/statement&gt;\n\n  &lt;statement effect=\"allow\"&gt;\n    &lt;description&gt;\n      Ce statement accorde le droit d'\u00e9criture sur le champ idEntreprise\n      de la fiche personne lorsque l'entreprise en question est vide ou\n      qu'elle correspond \u00e0 l'entreprise du responsable\n    &lt;/description&gt;\n    &lt;resource&gt;personne.info.idEntreprise&lt;/resource&gt;\n    &lt;permission&gt;write&lt;/permission&gt;\n    &lt;condition&gt;\n      // #idEntreprise est une valeur typ\u00e9e, dans le cas pr\u00e9sent : un\n      // integer. Donc pour tester s'il est non renseign\u00e9, on doit\n      // v\u00e9rifier s'il vaut null; on aurait \u00e9galement pu faire le test\n      // sous la forme \"${data:idEntreprise}\" == \"\" car dans ce cas on\n      // aurait une repr\u00e9sentation de la valeur sous forme de string.\n\n      return #idEntreprise == null ||\n             $sql.select(`select idEntreprise\n                          from Personne\n                          where lower(Login)=?`::T,\n                         [ $request.getPrincipal() ]) == #idEntreprise;\n    &lt;/condition&gt;\n  &lt;/statement&gt;\n\n  &lt;statement effect=\"allow\"&gt;\n    &lt;description&gt;\n      Ce statement accorde le droit d'\u00e9criture sur le champ remarque de\n      la fiche personne lorsque celle-ci r\u00e9f\u00e9rence explicitement\n      l'entreprise du responsable\n    &lt;/description&gt;\n    &lt;resource&gt;personne.info.remarque&lt;/resource&gt;\n    &lt;permission&gt;write&lt;/permission&gt;\n    &lt;action&gt;save&lt;/action&gt;\n    &lt;condition&gt;\n      return $sql.select(`select idEntreprise\n                          from Personne\n                          where lower(Login)=?`::T,\n                         [ $request.getPrincipal() ]) == #idEntreprise;\n    &lt;/condition&gt;\n  &lt;/statement&gt;\n&lt;/policy&gt;\n</code></pre>"},{"location":"reference/policy/#bilan","title":"Bilan","text":"<p>L'approche par policy bas\u00e9e sur les identit\u00e9s est fonctionnelle. Elle  n\u00e9cessite l'\u00e9criture de 8 statements.</p> <p>On remarque toutefois qu'elle entra\u00eene des r\u00e9p\u00e9titions au niveau des  conditions des statements, en particulier au niveau de la policy  \"responsable\".</p> <p>Dans la pratique, on \u00e9vitera la r\u00e9p\u00e9tition de ces requ\u00eates SQL. Pour ce  faire, une solution serait d'utiliser un persistent object dans lequel on  pourrait stocker l'identifiant de l'entreprise du responsable. Les objets  persistents sont des objets stock\u00e9s au niveau de la session. Ils sont donc  disponibles en tout temps, tout au long de la session.</p> <p>Une solution alternative est \u00e0 l'\u00e9tude dans Ewt (mais non impl\u00e9ment\u00e9e  actuellement). Il s'agirait de construire un r\u00f4le d\u00e9riv\u00e9 de type \"owner\" qui  repr\u00e9sente un propri\u00e9taire de ressource. La notion de r\u00f4le d\u00e9riv\u00e9 s'inspire  de cerbos  soient \u00e9galement repris dans Ewt, en particulier les r\u00f4les d\u00e9riv\u00e9s.</p>"},{"location":"reference/policy/#approche-au-moyen-de-policies-de-ressource","title":"Approche au moyen de policies de ressource","text":"<p>Dans une approche bas\u00e9e sur des policies de ressource, il ne faut plus  chercher \u00e0 voir ce que peut faire un utilisateur, mais chercher \u00e0 d\u00e9terminer  ce que les ressources autorisent. L'id\u00e9e ici n'est plus d'attribuer des  droits en fonction du type de sujet connect\u00e9, mais de d\u00e9crire quels sujets  ont le droit d'acc\u00e9der aux ressources.</p> <p>La premi\u00e8re \u00e9tape consiste donc \u00e0 identifier les ressources. Dans notre  exercice, nous avons:</p> <ul> <li>l'application</li> <li>le mod\u00e8le \"entreprise\"</li> <li>le mod\u00e8le \"personne\"</li> <li>le champ \"personne.info.idEntreprise\"</li> <li>le champ \"personne.info.remarque\"</li> </ul> <p>Nous allons donc d\u00e9finir une policy pour chacune de ces ressources.</p>"},{"location":"reference/policy/#application","title":"Application","text":"<p>La policy \"main\" permet de d\u00e9finir les droits sur l'application. Dans le cas  de notre exercice, la policy doit a minima accorder un droit en lecture  seule sur la page d'accueil.</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;policy name=\"main\" type=\"resource\" priority=\"-100\"&gt;\n  &lt;description&gt;\n    Cette policy d\u00e9crit les autorisations de base.\n  &lt;/description&gt;\n\n  &lt;statement effect=\"allow\"&gt;\n    &lt;description&gt;\n      Ce statement accorde un droit de lecture sur l'application.\n    &lt;/description&gt;\n    &lt;subject&gt;\n      &lt;role&gt;EWT&lt;/role&gt;\n    &lt;/subject&gt;\n    &lt;permission&gt;read&lt;/permission&gt;\n    &lt;action&gt;dummy,save,script&lt;/action&gt;\n  &lt;/statement&gt;\n\n  &lt;statement effect=\"allow\"&gt;\n    &lt;description&gt;\n      Le r\u00f4le EWT-admin a tous les droits sur l'application. On d\u00e9finit\n      donc cette autorisation \u00e9galement au niveau de la policy main car\n      elle est valable pour toute l'application.\n    &lt;/description&gt;\n    &lt;subject&gt;\n      &lt;role&gt;EWT-admin&lt;/role&gt;\n    &lt;/subject&gt;\n    &lt;permission&gt;*&lt;/permission&gt;\n    &lt;action&gt;*&lt;/action&gt;\n  &lt;/statement&gt;\n&lt;/policy&gt;\n</code></pre> <p>La policy ci-dessous doit \u00eatre comprise ainsi: La policy <code>main</code> accorde une permission read et autorise les actions dummy, save et script aux  utilisateurs qui ont un r\u00f4le EWT. Elle accorde en outre toutes les permissions et autorise toutes les actions au r\u00f4le EWT-admin.</p>"},{"location":"reference/policy/#modele-entreprise","title":"Mod\u00e8le \"entreprise\"","text":"<p>La fiche entreprise est accessible en lecture seule par les responsables.  Elle est accessible en \u00e9criture par le responsable qui est rattach\u00e9 \u00e0 ladite  fiche ainsi que par les administrateurs. On peut ignorer les administrateurs  ici car les droits de ces derniers sont d\u00e9j\u00e0 enti\u00e8rement g\u00e9r\u00e9s par la policy  \"main\".</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;policy name=\"entreprise\" type=\"resource\" priority=\"0\"&gt;\n  &lt;description&gt;\n    Cette policy de ressource d\u00e9crit les droits relatifs au mod\u00e8le \"entreprise\"\n  &lt;/description&gt;\n\n  &lt;statement effect=\"allow\"&gt;\n    &lt;description&gt;\n      Ce statement accorde le droit de lecture sur les fiches entreprise pour\n      les responsables.\n      Note : Il n'est pas n\u00e9cessaire de r\u00e9f\u00e9rencer le r\u00f4le EWT-admin ici car\n      ce dernier est d\u00e9j\u00e0 g\u00e9r\u00e9 au niveau de l'application via la\n      policy main.\n    &lt;/description&gt;\n    &lt;subject&gt;\n      &lt;role&gt;EWT-responsable&lt;/role&gt;\n    &lt;/subject&gt;\n    &lt;permission&gt;read&lt;/permission&gt;\n    &lt;action&gt;open,save,close,create&lt;/action&gt;\n  &lt;/statement&gt;\n\n  &lt;statement effect=\"allow\" requireQualifiedContext=\"true\"&gt;\n    &lt;description&gt;\n      Ce statement accorde le droit d'\u00e9criture \u00e0 un responsable sur la\n      fiche entreprise s'il en est lui-m\u00eame responsable.\n    &lt;/description&gt;\n    &lt;subject&gt;\n      &lt;role&gt;EWT-responsable&lt;/role&gt;\n    &lt;/subject&gt;\n    &lt;permission&gt;write&lt;/permission&gt;\n    &lt;action&gt;delete,addTuple,delTuple&lt;/action&gt;\n    &lt;condition&gt;\n      return #idEntreprise == null ||\n             $sql.select(`select idEntreprise\n                          from Personne\n                          where lower(Login)=?`::T,\n                         [ $request.getPrincipal() ]) == #idEntreprise;\n    &lt;/condition&gt;\n  &lt;/statement&gt;\n&lt;/policy&gt;\n</code></pre> <p>Il reste \u00e0 faire le lien entre le mod\u00e8le \"entreprise\" et la policy  \"entreprise\". Pour cela, il suffit d'ajouter une r\u00e9f\u00e9rence au niveau de la  descript:</p> <pre><code>&lt;model name=\"entreprise\" maingroup=\"info\" mainfield=\"idEntreprise\"&gt;\n  &lt;policies&gt;\n    &lt;policy name=\"entreprise\"/&gt;\n  &lt;/policies&gt;\n  &lt;groups&gt;\n    ...\n  &lt;/groups&gt;\n  ...\n&lt;/model&gt;\n</code></pre>"},{"location":"reference/policy/#modele-personne","title":"Mod\u00e8le \"personne\"","text":"<p>Les r\u00e8gles d\u00e9finies pour cet exercice sont impl\u00e9mentables au moyen de trois  policies : l'une pour le mod\u00e8le, l'une pour le champ \"idEntreprise\" et la  derni\u00e8re pour le champ \"remarque\". La descript du mod\u00e8le ressemble donc \u00e0  ceci:</p> <pre><code>&lt;model name=\"personne\" maingroup=\"info\" mainfield=\"idPersonne\"&gt;\n  &lt;policies&gt;\n    &lt;policy name=\"personne\"/&gt;\n  &lt;/policies&gt;\n  &lt;groups&gt;\n    &lt;group name=\"info\" table=\"Personne\" type=\"single\"&gt;\n      &lt;fields&gt;\n        &lt;field name=\"idPersonne\" type=\"hidden\" column=\"idPersonne\"/&gt;\n        &lt;field name=\"nom\" type=\"text\" column=\"Nom\"/&gt;\n        &lt;field name=\"prenom\" type=\"text\" column=\"Prenom\"/&gt;\n        &lt;field name=\"email\" type=\"email\" column=\"EMail\"/&gt;\n        &lt;field name=\"idEntreprise\" type=\"text\" column=\"idEntreprise\"&gt;\n          &lt;policies&gt;\n            &lt;policy name=\"personne-idEntreprise\"/&gt;\n          &lt;/policies&gt;\n        &lt;/field&gt;\n        &lt;field name=\"login\" type=\"text\" column=\"Login\"/&gt;\n        &lt;field name=\"password\" type=\"password\" column=\"Password\"/&gt;\n        &lt;field name=\"remarque\" type=\"text\" column=\"Remarque\"&gt;\n          &lt;policies&gt;\n            &lt;policy name=\"personne-remarque\"/&gt;\n          &lt;/policies&gt;\n        &lt;/field&gt;\n      &lt;/fields&gt;\n    &lt;/group&gt;\n  &lt;/groups&gt;\n  &lt;views&gt;\n    &lt;view name=\"viewDocuments\" style=\"documents\"&gt;\n      &lt;group name=\"info\"/&gt;\n    &lt;/view&gt;\n  &lt;/views&gt;\n&lt;/model&gt;\n</code></pre> <p>La policy qui g\u00e8re le mod\u00e8le est la suivante:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;policy name=\"personne\" type=\"resource\" priority=\"0\"&gt;\n  &lt;description&gt;\n    Cette policy de ressource d\u00e9crit les droits relatifs au mod\u00e8le \"personne\"\n  &lt;/description&gt;\n\n  &lt;statement effect=\"allow\" requireQualifiedContext=\"true\"&gt;\n    &lt;description&gt;\n      Ce statement accorde un droit en lecture au contact sur son propre\n      dossier. Le refus d'acc\u00e8s sur les autres fiches de personnes reste\n      de vigueur (le deny est la r\u00e8gle par d\u00e9faut sur Ewt).\n    &lt;/description&gt;\n    &lt;subject&gt;\n      &lt;role&gt;EWT-contact&lt;/role&gt;\n    &lt;/subject&gt;\n    &lt;permission&gt;read,write&lt;/permission&gt;\n    &lt;action&gt;open,save,close,delete,addTuple,delTuple&lt;/action&gt;\n    &lt;condition&gt;\n      return $str.lowercase(#login) == $request.getPrincipal();\n    &lt;/condition&gt;\n  &lt;/statement&gt;\n\n  &lt;statement effect=\"allow\"&gt;\n    &lt;description&gt;\n      Ce statement accorde un droit de lecture au responsable.\n    &lt;/description&gt;\n    &lt;subject&gt;\n      &lt;role&gt;EWT-responsable&lt;/role&gt;\n    &lt;/subject&gt;\n    &lt;permission&gt;read&lt;/permission&gt;\n    &lt;action&gt;open,save,close&lt;/action&gt;\n  &lt;/statement&gt;\n\n  &lt;statement effect=\"allow\" requireQualifiedContext=\"true\"&gt;\n    &lt;description&gt;\n      Ce statement accorde tous les droits \u00e0 un responsable sur la\n      fiche personnelle.\n    &lt;/description&gt;\n    &lt;subject&gt;\n      &lt;role&gt;EWT-responsable&lt;/role&gt;\n    &lt;/subject&gt;\n    &lt;permission&gt;write&lt;/permission&gt;\n    &lt;action&gt;open,save,close,delete,addTuple,delTuple&lt;/action&gt;\n    &lt;condition&gt;\n      return $str.lowercase(#login) == $request.getPrincipal();\n    &lt;/condition&gt;\n  &lt;/statement&gt;\n&lt;/policy&gt;\n</code></pre> <p>La policy qui g\u00e8re les autorisations relatives au champ \"idEntreprise\" est:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;policy name=\"personne-idEntreprise\" type=\"resource\" priority=\"0\"&gt;\n  &lt;description&gt;\n    Cette policy g\u00e8re le cas particulier des droits du champ\n    personne.info.idEntreprise.\n  &lt;/description&gt;\n\n  &lt;statement effect=\"deny\"&gt;\n    &lt;description&gt;\n      Ce statement retire tous les droits sur le champ idEntreprise\n      \u00e0 un utilisateur de niveau contact.\n    &lt;/description&gt;\n    &lt;subject&gt;\n      &lt;role&gt;EWT-contact&lt;/role&gt;\n    &lt;/subject&gt;\n    &lt;permission&gt;read,write&lt;/permission&gt;\n  &lt;/statement&gt;\n\n  &lt;statement effect=\"allow\" requireQualifiedContext=\"true\"&gt;\n    &lt;description&gt;\n      Le responsable est autoris\u00e9 \u00e0 modifier la r\u00e9f\u00e9rence d'entreprise\n      si celle-ci est vide ou qu'elle r\u00e9f\u00e9rence l'entreprise du responsable.\n    &lt;/description&gt;\n    &lt;subject&gt;\n      &lt;role&gt;EWT-responsable&lt;/role&gt;\n    &lt;/subject&gt;\n    &lt;permission&gt;read,write&lt;/permission&gt;\n    &lt;condition&gt;\n      return #idEntreprise == null ||\n             $sql.select(`select idEntreprise\n                          from Personne\n                          where lower(Login)=?`::T,\n                         [ $request.getPrincipal() ]) == #idEntreprise;\n    &lt;/condition&gt;\n  &lt;/statement&gt;\n&lt;/policy&gt;\n</code></pre> <p>La policy qui g\u00e8re les autorisations relatives au champ \"remarque\" est:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;policy name=\"personne-remarque\" type=\"resource\" priority=\"0\"&gt;\n  &lt;description&gt;\n    Cette policy g\u00e8re le cas particulier des droits du champ\n    personne.info.remarque.\n  &lt;/description&gt;\n\n  &lt;statement effect=\"deny\"&gt;\n    &lt;description&gt;\n      Ce statement retire le droit d'\u00e9criture sur le champ remarque\n      pour les utilisateurs ayant un niveau contact.\n    &lt;/description&gt;\n    &lt;subject&gt;\n      &lt;role&gt;EWT-contact&lt;/role&gt;\n    &lt;/subject&gt;\n    &lt;permission&gt;write&lt;/permission&gt;\n  &lt;/statement&gt;\n\n  &lt;statement effect=\"allow\" requireQualifiedContext=\"true\"&gt;\n    &lt;description&gt;\n      Le responsable est autoris\u00e9 \u00e0 modifier la remarque sur la fiche\n      d'une personne rattach\u00e9e \u00e0 l'entreprise du responsable.\n    &lt;/description&gt;\n    &lt;subject&gt;\n      &lt;role&gt;EWT-responsable&lt;/role&gt;\n    &lt;/subject&gt;\n    &lt;permission&gt;read,write&lt;/permission&gt;\n    &lt;condition&gt;\n      return $sql.select(`select idEntreprise\n                          from Personne\n                          where lower(Login)=?`::T,\n                         [ $request.getPrincipal() ]) == #idEntreprise;\n    &lt;/condition&gt;\n  &lt;/statement&gt;\n&lt;/policy&gt;\n</code></pre>"},{"location":"reference/policy/#bilan_1","title":"Bilan","text":"<p>L'approche par policy bas\u00e9e sur les ressources est \u00e9galement fonctionnelle  et le r\u00e9sultat final est \u00e9quivalent si l'on se base sur le fonctionnement de  l'application. Elle fait intervenir 11 statements. C'est plus que pour  l'approche utilisant des policies bas\u00e9es sur les identit\u00e9s, mais ce n'est  pas forc\u00e9ment un signe de moins bonne performance : dans le cas des policies  de ressources, le moteur n'est pas oblig\u00e9 d'\u00e9valuer toutes les policies. Il  n'\u00e9value que celles qui apportent une information utile. En effet, le moteur  n'a pas besoin d'\u00e9valuer les policies r\u00e9f\u00e9renc\u00e9es dans le mod\u00e8le \"personne\"  lorsqu'il traite un dossier du mod\u00e8le \"entreprise\". </p> <p>Des deux approches, il est difficile de dire laquelle est la plus simple et  laquelle est la plus performante. Dans cet exemple nous avons confront\u00e9 deux  approches diam\u00e9tralement oppos\u00e9es. Toutefois il est possible de m\u00e9langer les  diff\u00e9rents types de policies : certains aspects peuvent \u00eatre trait\u00e9s au  moyen de policies bas\u00e9es sur les identit\u00e9s alors que d'autres peuvent  s'appuyer sur des policies de ressources.</p>"},{"location":"reference/policy/#approche-basee-sur-la-hierarchie-dacces","title":"Approche bas\u00e9e sur la hi\u00e9rarchie d'acc\u00e8s","text":"<p>Dans les deux approches ci-dessus, nous n'avons pas tenu compte de la  hi\u00e9rarchie qui peut \u00eatre \u00e9tablie entre les diff\u00e9rents r\u00f4les. Une solution  alternative pourrait \u00eatre d'impl\u00e9menter les policies sous forme de niveaux  d'acc\u00e8s ou de niveaux de privil\u00e8ges. Le r\u00f4le \"contact\" aurait un  niveau de base, le r\u00f4le \"responsable\" un niveau interm\u00e9diaire et le r\u00f4le  \"admin\" le niveau maximum.</p> <p>On peut alors construire des policies pour chaque niveau de privil\u00e8ge de 0  \u00e0 9. Pour le niveau 6, cela pourrait ressembler \u00e0:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;policy name=\"priv-6\" type=\"resource\"&gt;\n  &lt;description&gt;\n    Cette policy autorise un acc\u00e8s complet \u00e0 tous roles 6 et plus.\n  &lt;/description&gt;\n\n  &lt;statement effect=\"allow\"&gt;\n    &lt;subject&gt;\n      &lt;role&gt;EWT-6&lt;/role&gt;\n      &lt;role&gt;EWT-7&lt;/role&gt;\n      &lt;role&gt;EWT-8&lt;/role&gt;\n      &lt;role&gt;EWT-9&lt;/role&gt;\n    &lt;/subject&gt;\n    &lt;permission&gt;*&lt;/permission&gt;\n    &lt;action&gt;*&lt;/action&gt;\n  &lt;/statement&gt;\n\n  &lt;statement effect=\"deny\"&gt;\n    &lt;subject&gt;\n      &lt;role&gt;EWT-0&lt;/role&gt;\n      &lt;role&gt;EWT-1&lt;/role&gt;\n      &lt;role&gt;EWT-2&lt;/role&gt;\n      &lt;role&gt;EWT-3&lt;/role&gt;\n      &lt;role&gt;EWT-4&lt;/role&gt;\n      &lt;role&gt;EWT-5&lt;/role&gt;\n    &lt;/subject&gt;\n    &lt;permission&gt;*&lt;/permission&gt;\n    &lt;action&gt;*&lt;/action&gt;\n  &lt;/statement&gt;\n&lt;/policy&gt;\n</code></pre> <p>Il est possible de d\u00e9finir des policies \u00e9quivalentes pour les r\u00f4les  num\u00e9rot\u00e9s de 0 \u00e0 9. Ensuite il suffit de r\u00e9f\u00e9rencer les policies au niveau  de la descript. Cela permet d'impl\u00e9menter une gestion de droits bas\u00e9e sur  les niveaux de privil\u00e8ges.</p> <p>Attention toutefois, la policy ci-dessus ne fait pas de distinction entre  l'acc\u00e8s en lecture et l'acc\u00e8s en \u00e9criture. Il faudrait encore d\u00e9finie des  policies sp\u00e9cifiques pour les diff\u00e9rents types d'acc\u00e8s.</p>"},{"location":"reference/scheduler/","title":"T\u00e2ches planifi\u00e9es (Scheduler)","text":""},{"location":"reference/scheduler/#generalites","title":"G\u00e9n\u00e9ralit\u00e9s","text":"<p>Ewt int\u00e8gre un scheduler qui permet d'ex\u00e9cuter des t\u00e2ches planifi\u00e9es. Par  d\u00e9faut le moteur va chercher les t\u00e2ches \u00e0 ex\u00e9cuter dans la table <code>ewt_scheduler</code>. Celle-ci doit au minimum avoir les colonnes suivantes (les \u00e9ventuelles colonnes suppl\u00e9mentaires sont ignor\u00e9es).</p> <pre><code>ewt_scheduler\n  taskName       VARCHAR(50)\n  scriptName     VARCHAR(100)\n  scriptParams   CLOB\n  taskStart      TIMESTAMP\n  taskPeriod     INTEGER\n  taskPeriodUnit VARCHAR(10)\n  taskActive     INTEGER\n  instanceName   VARCHAR(50)\n</code></pre> <ul> <li><code>taskName</code>: Nom de la t\u00e2che. Doit \u00eatre unique sur la table.</li> <li><code>scriptName</code>: Nom du script \u00e0 lancer</li> <li><code>scriptParams</code>: Param\u00e8tres \u00e0 passer au script. Peut \u00eatre null ou vide. Si    d\u00e9fini, la valeur doit \u00eatre un arbre JSON.</li> <li><code>taskStart</code>: Date/Heure de la prochaine ex\u00e9cution du script<sup>1</sup>.</li> <li><code>taskPeriod</code>: P\u00e9riode entre deux ex\u00e9cutions de la t\u00e2che<sup>2</sup> (voir chapitre    \"P\u00e9riode\" ci-dessous)</li> <li><code>taskPeriodUnit</code>: Unit\u00e9 de la p\u00e9riode. Les unit\u00e9s reconnues sont les m\u00eames    que celles utilis\u00e9es dans les fonctions de calcul de dates/heures    (librairie <code>$cal</code> du langage de script), \u00e0 savoir</li> <li><code>y</code> ou <code>year</code></li> <li><code>m</code> ou <code>month</code></li> <li><code>d</code> ou <code>day</code></li> <li><code>h</code> ou <code>hour</code></li> <li><code>min</code> ou <code>minute</code></li> <li><code>sec</code> ou <code>second</code></li> <li><code>ms</code> ou <code>millisecond</code> </li> <li><code>taskActive</code>: Valeur 0, 1 ou 2 indiquant si le niveau d'activit\u00e9 de la    t\u00e2che.</li> <li>Niveau 0 : la t\u00e2che est inactive et ne sera pas d\u00e9marr\u00e9e par le scheduler</li> <li>Niveau 1 : la t\u00e2che est active et sera d\u00e9marr\u00e9e par le scheduler</li> <li>Niveau 2 : la t\u00e2che est active et en cours d'ex\u00e9cution   Si la valeur n'est pas sp\u00e9cifi\u00e9e, elle est consid\u00e9r\u00e9e comme un 0.</li> <li><code>instanceName</code>: Nom de l'instance sur laquelle la t\u00e2che doit s'ex\u00e9cuter.    Si la valeur est vide, la t\u00e2che est lanc\u00e9e sur toutes les instances.   Le nom d'instance doit \u00eatre d\u00e9clar\u00e9 au niveau de l'application via    l'entr\u00e9e <code>admin.instanceName</code> du fichier de configuration.</li> </ul>"},{"location":"reference/scheduler/#periode","title":"P\u00e9riode","text":"<p>La table des t\u00e2ches est relue toutes les 60 secondes. Cela signifie que les  modifications apport\u00e9es \u00e0 la table sont prises en consid\u00e9ration au plus tard  dans la minute suivante.</p> <p>Attention, il faut bien distinguer la p\u00e9riode de lecture de la table  scheduler et la p\u00e9riode d'ex\u00e9cution d'une t\u00e2che. Ces deux p\u00e9riodes ne  sont pas li\u00e9es.</p> <p>En effet, la p\u00e9riode d'ex\u00e9cution des t\u00e2ches (d\u00e9finie \u00e0 l'aide de  <code>taskPeriod</code> et <code>taskPeriodUnit</code>) peut tr\u00e8s bien \u00eatre inf\u00e9rieure \u00e0 la  p\u00e9riode de relecture de la table scheduler. Il est donc parfaitement  possible de sp\u00e9cifier une p\u00e9riode inf\u00e9rieure \u00e0 60 secondes pour une t\u00e2che.</p> <p>En r\u00e9alit\u00e9, chaque minute le moteur recherche les t\u00e2ches qui sont susceptibles de devoir d\u00e9marrer durant la minute \u00e0 venir. Il planifie alors l'ex\u00e9cution de ces t\u00e2ches. Par exemple si une t\u00e2che est configur\u00e9e avec une p\u00e9riode de 10 secondes, alors le moteur planifiera automatiquement des ex\u00e9cutions \u00e0 T+0, T+10, T+20, T+30, T+40 et T+50.</p> <p>Par contre, les changements apport\u00e9s sur la table scheduler ne prendront effet qu'\u00e0 la prochaine lecture de la table, soit apr\u00e8s au plus 60 secondes.</p> <p>Les t\u00e2ches sont toutes d\u00e9marr\u00e9es dans un thread s\u00e9par\u00e9.</p>"},{"location":"reference/scheduler/#demarrage-automatique","title":"D\u00e9marrage automatique","text":"<p>Pour que le scheduler d'une application d\u00e9marre imm\u00e9diatement apr\u00e8s  d\u00e9marrage du serveur d'application, il faut que l'application soit  r\u00e9f\u00e9renc\u00e9e dans la liste des <code>auto-load-applications</code> au niveau du fichier  de propri\u00e9t\u00e9s d'Ewt. Celui-ci se trouve dans le r\u00e9pertoire de base des  applications Ewt (<code>/opt/ewt</code> par d\u00e9faut).</p> <p>L'entr\u00e9e <code>admin.enableScheduler</code> du config permet d'indiquer si une  application utilise ou non le scheduler</p>"},{"location":"reference/scheduler/#notifications","title":"Notifications","text":""},{"location":"reference/scheduler/#chevauchement-de-taches-task-overlap","title":"Chevauchement de t\u00e2ches (task-overlap)","text":"<p>Lorsque le scheduler d\u00e9tecte qu'une t\u00e2che doit \u00eatre d\u00e9marr\u00e9e alors que  la derni\u00e8re ex\u00e9cution de cette m\u00eame t\u00e2che n'est pas termin\u00e9e, le traitement  est abandonn\u00e9 et report\u00e9 au prochain scan de t\u00e2ches (soit 1 minute plus tard  dans la configuration par d\u00e9faut).</p> <p>De plus, le moteur envoie la notification <code>task-overlap</code>. Il est donc  possible de sp\u00e9cifier le script de traitement \u00e0 appeler lorsque cette  notification est envoy\u00e9e. En plus des infos relatives \u00e0 la notification  elle-m\u00eame, le script en question recevra les param\u00e8tres suivants:</p> <ul> <li><code>taskName</code>: nom de la t\u00e2che</li> <li><code>taskStart</code>: date/heure d'ex\u00e9cution planifi\u00e9e, c'est-\u00e0-dire la date/heure \u00e0    laquelle la t\u00e2che aurait d\u00fb d\u00e9marrer</li> <li><code>taskPeriod</code>: p\u00e9riode entre deux ex\u00e9cutions, telle que d\u00e9finie dans la table</li> <li><code>taskPeriodUnit</code>: unit\u00e9 de la p\u00e9riode, sous forme de libell\u00e9 long</li> <li><code>instanceName</code>: nom de l'instance</li> <li><code>scriptName</code>: nom du script qui aurait d\u00fb \u00eatre ex\u00e9cut\u00e9</li> <li><code>scriptParams</code>: param\u00e8tres du script</li> <li><code>taskStartLast</code>: date/heure \u00e0 laquelle le moteur a cherch\u00e9 \u00e0 d\u00e9marrer la    t\u00e2che</li> <li><code>taskStartNext</code>: date/heure de prochaine ex\u00e9cution de la t\u00e2che</li> </ul>"},{"location":"reference/scheduler/#erreur-dexecution-task-error","title":"Erreur d'ex\u00e9cution (task-error)","text":"<p>Lorsqu'un script d\u00e9marr\u00e9 par le scheduler g\u00e9n\u00e8re une erreur et que celle-ci  interrompt le traitement du script, le scheduler d\u00e9clenche une notification  de type <code>task-error</code>.</p> <p>Cette notification est accompagn\u00e9e des m\u00eames param\u00e8tres que dans le cas de  la notification <code>task-overlap</code>, avec en plus le param\u00e8tre suivant:</p> <ul> <li><code>errors</code>: Tableau contenant toutes les erreurs d\u00e9clench\u00e9es par la t\u00e2che.    Les erreurs sont tri\u00e9es par ordre d\u00e9croissant de d\u00e9clenchement (la plus    r\u00e9cente erreur figure en premier). Chaque erreur est un objet contenant    les propri\u00e9t\u00e9s suivantes:</li> <li><code>message</code>: Message d'erreur</li> <li><code>stacktrace</code>: Stacktrace compl\u00e8te de l'erreur</li> </ul> <ol> <li> <p>Il n'est en fait pas tout-\u00e0-fait exact de parler de date/heure de  prochaine ex\u00e9cution. Cette affirmation n'est pas vraie dans le cas o\u00f9 la  p\u00e9riode d'ex\u00e9cution de la t\u00e2che est inf\u00e9rieure \u00e0 la p\u00e9riode de lecture de  la table scheduler. La date/heure inscrite dans ce champ est incr\u00e9ment\u00e9e  de 60 secondes \u00e0 chaque fois (p\u00e9riode de lecture de la table). Elle n'est  pas mise \u00e0 jour \u00e0 chaque ex\u00e9cution de t\u00e2che dans cet intervalle. Le  chapitre \"P\u00e9riode\" ci-dessous revient sur le cas de figure o\u00f9 les t\u00e2ches  doivent s'ex\u00e9cuter \u00e0 une fr\u00e9quence plus haute que la minute.\u00a0\u21a9</p> </li> <li> <p>Si la p\u00e9riode ou son unit\u00e9 ne sont pas d\u00e9finies, le moteur se base  sur la p\u00e9riode de fonctionnement du scheduler (en principe la minute). Par  cons\u00e9quent la t\u00e2che sera d\u00e9marr\u00e9e \u00e0 chaque check du scheduler.\u00a0\u21a9</p> </li> </ol>"},{"location":"reference/schema/","title":"Sch\u00e9ma de base de donn\u00e9es","text":"<p>Le fichier <code>schema.xml</code> permet de d\u00e9crire la structure des donn\u00e9es en base  de donn\u00e9es. La structure est tr\u00e8s simple:</p> <ul> <li>Un \u00e9l\u00e9ment <code>table</code> permet de d\u00e9crire une table de la base de donn\u00e9es.      Cet \u00e9l\u00e9ment attend un attribut <code>name</code> qui indique le nom de la table.</li> <li> <p>Un \u00e9l\u00e9ment <code>column</code> permet de d\u00e9crire une colonne de table de la base de      donn\u00e9es. Cet \u00e9l\u00e9ment peut avoir les attributs suivants:</p> <code>name</code> Nom de la colonne <code>type</code> Type de la colonne. Les types support\u00e9s sont d\u00e9crits dans le  chapitre Types de champs <code>isPrimaryKey</code> Cet attribut permet d'indiquer que la colonne est primary key. Il est obligatoire que chaque table poss\u00e8de une et une seule  colonne faisant office de cl\u00e9 primaire. <pre><code>La colonne est consid\u00e9r\u00e9e comme cl\u00e9 primaire si l'attribut vaut \n`true`, `yes` ou 1.\n</code></pre> <code>foreignTable</code> Cet attribut indique que la colonne r\u00e9f\u00e9rence la cl\u00e9 primaire d'une  autre table de la base de donn\u00e9es. La valeur de l'attribut est le  nom de la table r\u00e9f\u00e9renc\u00e9e. <code>autoIncrement</code> Cet attribut est optionnel et en principe il n'y a pas besoin de le  sp\u00e9cifier, car Ewt g\u00e8re l'auto-increment automatiquement. <pre><code>De base, Ewt active l'auto-increment sur toutes les colonnes \nfaisant office de cl\u00e9 primaire, _\u00e0 l'exception des colonnes qui sont \ndes r\u00e9f\u00e9rences externes_.\n\nEwt proc\u00e8de ainsi afin que toutes les tables `single` (c'est-\u00e0-dire \ntoutes les tables sur lesquelles s'appuient des groupes `single` qui \nne sont pas le maingroup) partagent un m\u00eame identifiant de tuple. \nAinsi, les tuples qui se rattachent \u00e0 un m\u00eame dossier mais \nenregistr\u00e9s dans des tables distinctes auront tous un m\u00eame \nidentifiant. Cela simplifie grandement la lisibilit\u00e9 des donn\u00e9es.\n\nEwt autorise toutefois de sp\u00e9cifier explicitement si l'on souhaite \nactiver ou d\u00e9sactiver l'auto-incr\u00e9ment d'une cl\u00e9 primaire. \nL'attribut est activ\u00e9 s'il vaut `true`, `yes` ou 1. Il est ignor\u00e9 \npour les colonnes qui ne sont pas des cl\u00e9s primaires.\n</code></pre> </li> </ul>"},{"location":"reference/schema/#types-de-champs","title":"Types de champs","text":"<p>L'attribut <code>type</code> permet de d\u00e9finir le type de colonne. Les types reconnus  sont:</p> <ul> <li><code>integer</code> : repr\u00e9sente un entier</li> <li><code>bigint</code> : repr\u00e9sente un long</li> <li><code>decimal(#,#)</code> : repr\u00e9sente un nombre d\u00e9cimal</li> <li><code>varchar(#)</code> : repr\u00e9sente une cha\u00eene de caract\u00e8res </li> <li><code>date</code> : repr\u00e9sente une date <code>yyyy-MM-dd</code></li> <li><code>time</code> : repr\u00e9sente une heure <code>hh:mm:ss</code></li> <li><code>timestamp</code> : repr\u00e9sente une date/heure <code>yyyy-MM-dd hh-mm-ss.lll</code></li> <li><code>clob</code> : repr\u00e9sente un texte long</li> <li><code>blob</code> : repr\u00e9sente un champ binaire (voir chapitre \"PostgreSQL et les   blobs\" ci-dessous)</li> <li><code>bytea</code> : repr\u00e9sente un champ binaire (voir chapitre \"PostgreSQL et les    blobs\" ci-dessous)</li> <li><code>auto</code> : uniquement utilisable sur les colonnes \"primary key\" et \"foreign    key\"; dans ce cas, le type est d\u00e9termin\u00e9 en fonction du type par d\u00e9faut de    primary key (selon la propri\u00e9t\u00e9 <code>admin.primaryKeyType</code> du fichier de    configuration)</li> </ul>"},{"location":"reference/schema/#exemple","title":"Exemple","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;schema&gt;\n  &lt;table name=\"Entreprise\"&gt;\n    &lt;column name=\"idEntreprise\" type=\"auto\" isPrimaryKey=\"true\"/&gt;\n    &lt;column name=\"Nom\" type=\"varchar(200)\"/&gt;\n    &lt;column name=\"Adresse\" type=\"varchar(2000)\"/&gt;\n    &lt;column name=\"Remarque\" type=\"varchar(500)\"/&gt;\n  &lt;/table&gt;\n\n  &lt;table name=\"Personne\"&gt;\n    &lt;column name=\"idPersonne\" type=\"auto\" isPrimaryKey=\"true\"/&gt;\n    &lt;column name=\"Nom\" type=\"varchar(200)\"/&gt;\n    &lt;column name=\"Prenom\" type=\"varchar(200)\"/&gt;\n    &lt;column name=\"EMail\" type=\"varchar(200)\"/&gt;\n    &lt;column name=\"idEntreprise\" type=\"auto\" foreignTable=\"Entreprise\"/&gt;\n    &lt;column name=\"Login\" type=\"varchar(20)\"/&gt;\n    &lt;column name=\"Password\" type=\"varchar(100)\"/&gt;\n    &lt;column name=\"Remarque\" type=\"varchar(500)\"/&gt;\n  &lt;/table&gt;\n\n  &lt;table name=\"DetailsPersonne\"&gt;\n    &lt;column name=\"idPersonne\" type=\"auto\" isPrimaryKey=\"true\" autoIncrement=\"false\" foreignTable=\"Personne\"/&gt;\n    &lt;column name=\"Telephone\" type=\"varchar(20)\"/&gt;\n    &lt;column name=\"Commentaire\" type=\"clob\"/&gt;\n  &lt;/table&gt;\n&lt;/schema&gt;\n</code></pre>"},{"location":"reference/schema/#postgresql-et-les-blobs","title":"PostgreSQL et les blobs","text":"<p>Ewt supporte les deux m\u00e9thodes de stockage de donn\u00e9es binaires que propose  PostgreSQL, \u00e0 savoir:</p> <ul> <li><code>bytea</code> : Comme son nom l'indique, ce type repr\u00e9sente un tableau de bytes.    Les donn\u00e9es binaires sont donc exprim\u00e9es en bytes et plac\u00e9es sous la forme    de tableau dans la DB, un peu comme les cha\u00eenes de caract\u00e8res qui sont    stock\u00e9s sous la forme d'un tableau de caract\u00e8res.</li> <li><code>oid</code> : Ce type est sp\u00e9cifique \u00e0 PostgreSQL et permet le stockage de    large objects. PostgreSQL utilise une structure sp\u00e9ciale pour ces objets    (appel\u00e9e <code>pg_largeobject</code>). Cela revient un peu comme de stocker les    donn\u00e9es binaires dans une GED et de conserver dans la DB un ID de l'entr\u00e9e    GED en question.</li> </ul> <p>PostgreSQL recommande l'usage du type <code>oid</code> car il est plus performant que  <code>bytea</code>. Attention toutefois, il y a un l\u00e9ger prix \u00e0 payer en termes de  maintenance avec l'utilisation du type <code>oid</code>. En effet, PostgreSQL ne  supprime pas automatiquement les donn\u00e9es large objects lorsque celles-ci  ne sont plus r\u00e9f\u00e9renc\u00e9es. Cela signifie que si on efface la valeur d'un  champ <code>oid</code>, la r\u00e9f\u00e9rence est bien effac\u00e9e, mais l'objet r\u00e9f\u00e9renc\u00e9 ne  l'est pas. PostgreSQL fournit cependant  un outil pour  effectuer un nettoyage des large objects qui ne sont pas r\u00e9f\u00e9renc\u00e9s. Au  niveau du serveur, on pourra effectuer ce nettoyage au moyen de la commande  suivante: </p> <pre><code>vacuumlo -U username -W -v nom_database\n</code></pre> <p>o\u00f9 <code>username</code> d\u00e9signe ici le nom d'utilisateur pour se connecter  \u00e0 la base de donn\u00e9es <code>nom_database</code>. </p>"},{"location":"reference/schema/#creation-de-tables","title":"Cr\u00e9ation de tables","text":"<p>Ewt ne g\u00e9n\u00e8re pas directement les identifiants de tuples mais utilise les  m\u00e9canismes d'auto-incr\u00e9mentation disponibles dans les diff\u00e9rents SGBD. Les  cl\u00e9s primaires doivent donc \u00eatre g\u00e9n\u00e9r\u00e9es en respectant la syntaxe propre \u00e0  chaque SGBD. Pour cette raison, il est recommand\u00e9 de laisser Ewt g\u00e9n\u00e9rer les  requ\u00eates de cr\u00e9ation ou de mise \u00e0 jour des tables de donn\u00e9es.</p>"},{"location":"reference/script/","title":"Scripts","text":"<p>Les scripts permettent d'\u00e9valuer des expressions, d'appliquer des  traitements, de calculer des valeurs, d'imprimer des documents, etc. Le  langage de script est un mini langage de programmation utilis\u00e9 \u00e0 diff\u00e9rents  endroits dans une application (en tant que script, comme expression de  validation de donn\u00e9es, comme condition de mise en \u0153uvre d'un statement de  policy, etc.)</p>"},{"location":"reference/script/#structure-dun-script","title":"Structure d'un script","text":"<p>Un script est un fichier contenant des instructions. Le script peut \u00eatre  limit\u00e9 \u00e0 une seule instruction, par exemple <code>1;</code> peut constituer un script  (\u00e0 l'int\u00e9r\u00eat certes tr\u00e8s limit\u00e9). Chaque instruction doit \u00eatre termin\u00e9e par  un point-virgule (<code>;</code>).</p> <p>Il est possible de d\u00e9finir des p\u00e9rim\u00e8tres d'\u00e9valuation plus restreints au  moyen des mots-cl\u00e9s <code>context</code> et <code>policy</code>. Ces mots-cl\u00e9s sont d\u00e9crits dans  la suite de ce document.</p>"},{"location":"reference/script/#syntaxe","title":"Syntaxe","text":"<p>Note</p> <p>Le fichier <code>syntax.txt</code> fournit la grammaire compl\u00e8te du langage. Ce document donne la structure g\u00e9n\u00e9rale d'un script. Il s'agit du document de r\u00e9f\u00e9rence utilis\u00e9 pour construire le parseur.</p>"},{"location":"reference/script/#encoding","title":"Encoding","text":"<p>Par d\u00e9faut Ewt charge les fichiers de script en consid\u00e9rant qu'ils utilisent  utf-8. Il est possible de d\u00e9clarer un autre type d'encoding via l'annotation  <code>@encoding(\"...\")</code>, par exemple:</p> <pre><code>@encoding(\"iso-8859-1\")\n\nvar x = \"\u00e9\";\n</code></pre> <p>L'annotation doit \u00eatre plac\u00e9e au tout d\u00e9but du fichier.</p> <p>Le chapitre Annotations plus bas d\u00e9crit les diff\u00e9rentes  annotations disponibles dans le langage.</p>"},{"location":"reference/script/#policy","title":"Policy","text":"<p>Le mot-cl\u00e9 <code>policy</code> permet de d\u00e9finir un bloc qui ne s'ex\u00e9cute que dans le cas o\u00f9 la policy indiqu\u00e9e l'autorise.</p> <pre><code>// le code plac\u00e9 ici est ex\u00e9cutable par n'importe quel utilisateur\n\npolicy \"priv-5\" {\n  // ce code n'est ex\u00e9cut\u00e9 que si la policy \"priv-5\" l'autorise\n}\n\npolicy \"priv-9\" {\n  // ce code n'est ex\u00e9cut\u00e9 que si la policy \"priv-9\" l'autorise\n}\n</code></pre>"},{"location":"reference/script/#contexte","title":"Contexte","text":"<p>Le contexte permet de d\u00e9signer des \u00e9l\u00e9ments de dossiers (mod\u00e8le, groupe, champ). La notion de contexte est utilis\u00e9e \u00e0 diff\u00e9rents endroits dans Ewt,  et a fortiori \u00e9galement dans le script.</p> <p>Le contexte contient jusqu'\u00e0 5 \u00e9l\u00e9ments:</p> <ul> <li>le mod\u00e8le</li> <li>le num\u00e9ro de dossier</li> <li>le groupe</li> <li>le num\u00e9ro de tuple</li> <li>le champ</li> </ul> <p>Le contexte peut \u00eatre d\u00e9crit au moyen d'une cha\u00eene de caract\u00e8res. Par exemple, la cha\u00eene <code>mymodel[13].mygroup[2].myfield</code> d\u00e9signe un contexte o\u00f9 le mod\u00e8le est <code>mymodel</code>, le num\u00e9ro de dossier est \"13\", le groupe est <code>mygroup</code>, le num\u00e9ro de tuple est \"2\" et le champ est <code>myfield</code>.</p> <p>Le contexte peut \u00e9galement \u00eatre d\u00e9crit au moyen d'un map. Dans ce cas, les  propri\u00e9t\u00e9s attendues sont:</p> <ul> <li><code>modelName</code></li> <li><code>docId</code></li> <li><code>groupName</code></li> <li><code>tupleId</code></li> <li><code>fieldName</code></li> </ul> <p>Des exemples de correspondance entre les deux formes de notation sont donn\u00e9s  plus bas.</p> <p>Il est possible de d\u00e9finir un contexte sans num\u00e9ro de dossier ou sans num\u00e9ro de tuple. Dans ce cas, on parle d'un contexte qui vient s'appliquer au  contexte courant, c'est-\u00e0-dire le contexte actif au moment de l'ex\u00e9cution. </p> <p>Il est \u00e9galement possible de d\u00e9finir un contexte qui se limite \u00e0 une sous-partie (le mod\u00e8le uniquement, ou le mod\u00e8le et le dossier, ou le mod\u00e8le et le groupe, etc.) D'autres aspects li\u00e9s \u00e0 la d\u00e9finition de contextes  partiels sont d\u00e9velopp\u00e9s plus bas dans ce document.</p> <p>Le mot-cl\u00e9 <code>context</code> permet de d\u00e9clarer un contexte d'ex\u00e9cution. Le contexte est identifi\u00e9 au moyen d'une expression (c'est-\u00e0-dire une cha\u00eene de caract\u00e8res ou une map) et son contenu n'est \u00e9valu\u00e9 que lorsque le contexte actuel d'ex\u00e9cution correspond au contexte d\u00e9clar\u00e9.</p> <p>Les deux d\u00e9clarations de contexte ci-dessous sont \u00e9quivalentes. Le contenu du contexte n'est \u00e9valu\u00e9 que si le dossier courant est du mod\u00e8le \"mymodel\".</p> <pre><code>context \"mymodel\" {\n  // ...\n}\n\ncontext { modelName: \"mymodel\" } {\n  // ...\n}\n</code></pre> <p>Le contexte peut \u00eatre d\u00e9fini au moyen du mod\u00e8le, du num\u00e9ro de dossier, du nom de groupe, du num\u00e9ro de tuple et du champ. Voici des exemples de d\u00e9finitions de contexte, sous forme de \"string\" ou de \"map\" :</p> Notation string Notation map <code>mymodel</code> <code>{ modelName: \"mymodel\" }</code> <code>mymodel[1]</code> <code>{ modelName: \"mymodel\", docId: 1 }</code> <code>mymodel.mygroup</code> <code>{ modelName: \"mymodel\", groupName: \"mygroup\" }</code> <code>mymodel[1].mygroup</code> <code>{ modelName: \"mymodel\", docId: 1, groupName: \"mygroup\" }</code> <code>mymodel[1].mygroup[2]</code> <code>{ modelName: \"mymodel\", docId: 1, groupName: \"mygroup\", tupleId: 2 }</code> <code>mymodel.mygroup.myfield</code> <code>{ modelName: \"mymodel\", groupName: \"mygroup\", fieldName: \"myfield\" }</code> <code>mymodel[1].mygroup[2].myfield</code> <code>{ modelName: \"mymodel\", docId: 1, groupName: \"mygroup\", tupleId: 2, fieldName: \"myfield\" }</code> <p>Si le filtre de contexte est null, une cha\u00eene de caract\u00e8res vide (<code>\"\"</code>) ou  une map vide (<code>{}</code>), le bloc ne sera \u00e9valu\u00e9 que s'il n'y a pas de contexte  courant d\u00e9fini.</p> <p>Enfin, il est possible de sp\u00e9cifier plusieurs contextes. Pour ce faire, on  notera les contextes sous forme de tableau, soit une liste de contextes  s\u00e9par\u00e9s par une virgule et plac\u00e9s entre crochets. Dans ce cas, le bloc est  \u00e9valu\u00e9 si le contexte courant correspond \u00e0 au moins l'un des contextes  test\u00e9s. </p> <pre><code>context [ \"foo\", { modelName: \"bar\" } ] {\n  // ...\n}\n</code></pre>"},{"location":"reference/script/#identifiants","title":"Identifiants","text":"<p>Au niveau du langage de script, les identifiants de variables, de propri\u00e9t\u00e9s  et de fonctions n'ont pas d'alphabet clairement d\u00e9fini. La seule condition  est qu'ils ne commencent pas par un chiffre et ne contiennent pas de caract\u00e8re  d\u00e9limiteur. Les caract\u00e8res d\u00e9limiteurs sont:</p> <pre><code>espace\ntabulation\nretour ligne\n.,;:=!?+-*/([{)]}%&lt;&gt;\"'`\u00b4&amp;|@#^~\\\n</code></pre> <p>Les autres caract\u00e8res sont autoris\u00e9s au niveau des identifiants. Cela  signifie qu'il est possible d'utiliser des emojis, des caract\u00e8res accentu\u00e9s,  etc. bien que la lisibilit\u00e9 d'un code utilisant ces caract\u00e8res reste  discutable (mais c'est peut-\u00eatre une forme d'obfuscation recherch\u00e9e). Quoi  qu'il en soit, si vous utilisez des caract\u00e8res sp\u00e9ciaux au niveau des  identifiants ou des valeurs, nous recommandons que le script soit enregistr\u00e9 en utf-8 pour \u00e9viter les probl\u00e8mes d'encoding.</p> <pre><code>// exemple de variables et de propri\u00e9t\u00e9s utilisant des emojis\nvar Ch\u00e2teau\u2764\ufe0fd\u2019\u0152x = { \u270c\ud83c\udffb: 123, \ud83e\uddd1\u200d\ud83d\ude80: \"x\", statut: \"\u2714\ufe0f\" };\n$logger.info(Ch\u00e2teau\u2764\ufe0fd\u2019\u0152x);\n</code></pre> <p>Le code ci-dessus a pour effet d'afficher la trace <code>\"{\"\u270c\ud83c\udffb\": 123, \"\ud83e\uddd1\u200d\ud83d\ude80\": x,  \"statut\": \u2714\ufe0f}\"</code> dans le log d'application.</p>"},{"location":"reference/script/#variables","title":"Variables","text":"<p>Le langage de script permet de cr\u00e9er des variables. Les variables doivent  \u00eatre d\u00e9clar\u00e9es selon la syntaxe:</p> <pre><code>var mavariable;\n</code></pre> <p>o\u00f9 <code>mavariable</code> est le nom de la variable \u00e0 cr\u00e9er. Ce dernier peut  contenir plus ou moins n'importe quel caract\u00e8re, mais ne doit pas commencer  par un chiffre.</p> <p>La d\u00e9claration d'une variable peut \u00eatre accompagn\u00e9e d'une assignation de  valeur, par exemple:</p> <pre><code>var mavariable = \"Hello World!\";\n</code></pre>"},{"location":"reference/script/#variable","title":"Variable <code>$$</code>","text":"<p>Le nom de variable <code>$$</code> est r\u00e9serv\u00e9. La variable <code>$$</code> contient les  param\u00e8tres pass\u00e9s au script. Ainis, une instruction du style <code>var $$ = 123;</code>  provoquera une erreur.</p>"},{"location":"reference/script/#utilisation-dune-variable","title":"Utilisation d'une variable","text":"<p>Une variable peut \u00eatre utilis\u00e9e en indiquant son nom, comme dans n'importe quel langage de programmation. Il est \u00e9galement possible de r\u00e9f\u00e9rencer une variable directement depuis une cha\u00eene de caract\u00e8res au moyen de la notation <code>${mavariable}</code>.</p>"},{"location":"reference/script/#declarations-de-variables-et-scopes","title":"D\u00e9clarations de variables et scopes","text":"<p>La valeur d'une variable peut \u00e9videmment \u00eatre modifi\u00e9e apr\u00e8s que la variable  ait \u00e9t\u00e9 d\u00e9clar\u00e9e. Pour cela, il suffit de (r\u00e9-)assigner une nouvelle valeur  comme ceci:</p> <pre><code>mavariable = \"nouvelle valeur\";\n</code></pre> <p>Par contre, une variable ne peut pas \u00eatre red\u00e9clar\u00e9e au sein d'un m\u00eame bloc,  ou plus exactement au sein d'un m\u00eame scope. En clair, le code suivant  g\u00e9n\u00e9rera une erreur \"Object `foo` already defined\" \u00e0 la seconde ligne:</p> <pre><code>var foo = 1;\nvar foo = 2;\n</code></pre> <p>Dans l'exemple ci-dessus, le fait de red\u00e9clarer <code>foo</code> \u00e0 l'aide du mot-cl\u00e9  <code>var</code> n'est pas permis. Toutefois, il est possible de d\u00e9clarer une variable  d\u00e9j\u00e0 existante, mais uniquement dans un autre scope. Ce point est abord\u00e9  plus bas dans le chapitre qui traite de la  Port\u00e9e des objets (scope).</p>"},{"location":"reference/script/#constantes","title":"Constantes","text":"<p>Les constantes sont des variables que l'on ne peut pas modifier a posteriori. Il est donc obligatoire d'assigner une valeur \u00e0 la constante.</p> <p>On d\u00e9clare une constante \u00e0 l'aide du mot-cl\u00e9 <code>const</code>. La syntaxe est  similaire \u00e0 <code>var</code>.</p> <pre><code>const maconstante = \"Hello World!\";\n</code></pre>"},{"location":"reference/script/#prefixe-data","title":"Pr\u00e9fixe <code>data:</code>","text":"<p>Le pr\u00e9fixe <code>data:</code> indique que l'on veut r\u00e9f\u00e9rencer une donn\u00e9e de dossier. Il s'agit d'une variante de la r\u00e9f\u00e9rence de variable au sein d'une cha\u00eene  de caract\u00e8res. Attention, cette notation retournera syst\u00e9matiquement une  valeur sous forme de String. Pour obtenir une valeur correctement typ\u00e9e,  utiliser la notation \"sharp\".</p> <p>La r\u00e9f\u00e9rence <code>${data:expr}</code> indique donc que l'on souhaite obtenir une  repr\u00e9sentation string de valeur de champ correspondant \u00e0 l'expression de  contexte <code>expr</code>. L'expression doit permettre d'identifier l'\u00e9l\u00e9ment \u00e0  retourner. Elle peut prendre diff\u00e9rentes formes en fonction du contexte  courant.</p> <p>Ainsi, en l'absence de contexte courant, la r\u00e9f\u00e9rence <code>${data:mymodel[13].mygroup[2].myfield}</code> d\u00e9signe la valeur du champ <code>myfield</code> du tuple <code>2</code> du groupe <code>mygroup</code> du dossier <code>13</code> du mod\u00e8le <code>mymodel</code>.</p> <p>La notation peut \u00eatre raccourcie:</p> <ul> <li>lorsque le contexte courant est d\u00e9fini,</li> <li>lorsque l'on souhaite r\u00e9cup\u00e9rer la valeur d'un champ du groupe principal,</li> <li>lorsque l'on souhaite r\u00e9cup\u00e9rer la valeur de tous les champs d'un groupe    multi</li> </ul> <p>Ainsi, si le contexte courant correspond \u00e0 <code>mymodel[13]</code>, on pourra simplement indiquer <code>${data:mygroup[2].myfield}</code> pour obtenir la valeur du champ <code>myfield</code> du groupe <code>mygroup</code> ayant l'id 2 sur ce dossier.</p> <p>Si le contexte courant correspond \u00e0 <code>mymodel[13].mygroup[2]</code>, on pourra se contenter de noter <code>${data:myfield}</code>.</p> <p>En cas d'incoh\u00e9rence entre le contexte courant et l'expression, c'est cette derni\u00e8re qui prime. Ainsi, dans le cas o\u00f9 le contexte courant correspond \u00e0 <code>mymodel[13].mygroup[2]</code>, l'expression <code>${data:mygroup[5].myfield}</code> retournera la valeur <code>myfield</code> du tuple <code>5</code> du groupe <code>mygroup</code>.</p> <p>L'identifiant de tuple est facultatif dans le cas des groupes de type single (qui ne poss\u00e8dent qu'une seule valeur de chaque champ). S'il est omis dans le cas d'un groupe multi, la valeur sera une repr\u00e9sentation d'un  tableau des valeurs correspondantes. Il n'est pas recommand\u00e9 d'exploiter  cette repr\u00e9sentation car elle ne suit pas une convention clairement \u00e9tablie.</p> <p>Il est possible de forcer une valeur par d\u00e9faut pour le cas o\u00f9 la r\u00e9f\u00e9rence de champ est invalide. Pour ce faire, il suffit d'ajouter un pipe (<code>|</code>) apr\u00e8s l'expression et de passer la valeur par d\u00e9faut, par exemple <code>${data:mygroup.myfield|0}</code> pour retourner 0 en cas de r\u00e9f\u00e9rence introuvable.</p> <p>Il est mentionn\u00e9 plus haut que la notation peut \u00eatre raccourcie lorsque l'on souhaite r\u00e9cup\u00e9rer la valeur d'un champ du groupe principal. En effet, le groupe principal est le groupe qui donne son <code>tupleId</code> au dossier. Par cons\u00e9quent le <code>tupleId</code> du groupe principal est toujours \u00e9quivalent au <code>docId</code> du dossier. La notation peut \u00eatre raccourcie, de sorte que <code>mymodel[13].mygroup[13].field</code> peut \u00eatre exprim\u00e9 avec <code>mymodel[13].myfield</code>.</p> <p>Remarque concernant le typage</p> <p>La notation <code>${data:myfield}</code> est utilisable au sein d'une string.  L'expression</p> <pre><code>var x = \"${data:montant}\";\n</code></pre> <p>permet de r\u00e9cup\u00e9rer la valeur du champ <code>montant</code> dans la variable <code>x</code>,  mais cette derni\u00e8re sera alors de type <code>string</code> et non de type num\u00e9rique  comme on pourrait s'y attendre. La notation <code>${data:...}</code> sert donc  essentiellement \u00e0 reprendre des valeurs au sein de cha\u00eenes de caract\u00e8res.</p> <p>Dans le cas de l'exemple ci-dessus, il existe deux solutions pour que la  variable <code>x</code> soit de type num\u00e9rique: effectuer un cast de la valeur ou  utiliser la notation \"sharp\". L'exemple ci-dessous  illustre ces deux possibilit\u00e9s: </p> <pre><code>// option 1 : cast de valeur\nvar x = (number) \"${data:montant}\";\n\n// option 2 : notation sharp (pr\u00e9f\u00e9rable en termes de performances)\nvar x = #montant;\n</code></pre>"},{"location":"reference/script/#notation-sharp","title":"Notation \"sharp\"","text":"<p>On appelle notation \"sharp\" la syntaxe consistant \u00e0 r\u00e9f\u00e9rencer un champ ou  plusieurs champs au moyen d'une expression de contexte ayant un caract\u00e8re  <code>#</code> en pr\u00e9fixe, par exemple:</p> <pre><code>#mygroup[5].myfield\n</code></pre> <p>La notation \"sharp\" permet d'obtenir la valeur d'un champ, comme c'est le  cas avec la notation <code>${data:field}</code>, mais elle apporte plusieurs avantages.</p>"},{"location":"reference/script/#type","title":"Type","text":"<p>En premier lieu, la notation \"sharp\" r\u00e9sout le probl\u00e8me de perte du type  lorsque l'on souhaite r\u00e9cup\u00e9rer une valeur de champ. Comme d\u00e9crit dans la  remarque du chapitre pr\u00e9c\u00e9dent, le r\u00e9f\u00e9rencement de valeur de champ \u00e0 l'aide  de la notation <code>${data:field}</code> nous fait perdre le type de la valeur, car  cette notation n'est utilisable qu'au sein d'une cha\u00eene de caract\u00e8res (la  valeur dans ce cas est donc toujours de type string). </p> <p>La notation \"sharp\" permet de r\u00e9cup\u00e9rer la valeur dans le bon type,  c'est-\u00e0-dire le type du champ lui-m\u00eame.</p> <p>Performances</p> <p>Une alternative au probl\u00e8me de typage pourrait \u00eatre un cast de type  (d\u00e9crit plus bas), mais cette fa\u00e7on de faire n'est pas recommand\u00e9e car  elle est sensiblement moins performante que d'utiliser la notation  \"sharp\". En effet, les expressions inscrites en notation \"sharp\" peuvent  \u00eatre pr\u00e9-trait\u00e9es par le processeur de script, alors que les expressions  donn\u00e9es au moyen de la notation <code>${data:...}</code> n\u00e9cessitent un parsing \u00e0  l'ex\u00e9cution. Le cast de type impose \u00e9galement un travail suppl\u00e9mentaire  de la part du processeur au moment du runtime.</p>"},{"location":"reference/script/#valeurs-multi","title":"Valeurs \"multi\"","text":"<p>Remarque</p> <p>En r\u00e9alit\u00e9 la notation <code>${data:field}</code> permet \u00e9galement de traiter  des champs \"multi\", mais la valeur g\u00e9n\u00e9r\u00e9e dans ce cas est une  repr\u00e9sentation des donn\u00e9es sous forme de texte et non des  donn\u00e9es typ\u00e9es exploitables de mani\u00e8re propre.</p> <p>Comme mentionn\u00e9 au d\u00e9but de ce chapitre, la notation \"sharp\" permet de  r\u00e9f\u00e9rencer un ou plusieurs champs. En effet, il peut arriver que l'on  souhaite r\u00e9cup\u00e9rer toutes les occurrences d'un champ \"multi\". La notation  \"sharp\" permet de le faire.</p> <p>Ainsi, si on g\u00e9n\u00e8re une r\u00e9f\u00e9rence de champ \"multi\" sans que l'identifiant de  tuple ne soit clairement d\u00e9fini (que ce soit au niveau du contexte  courant ou de la r\u00e9f\u00e9rence \"sharp\" elle-m\u00eame), alors la valeur de  retour sera un tableau contenant des map contenant l'identifiant de tuple et  la valeur de champ. Par exemple, la r\u00e9f\u00e9rence <code>${data:mygroup.myfield}</code>  pourrait retourner le tableau suivant si le groupe contient les tuples \"1\",  \"2\" et \"5\":</p> <pre><code>[ { \"idTuple\": 1, myfield: \"un\" },\n  { \"idTuple\": 2, myfield: \"deux\" },\n  { \"idTuple\": 5, myfield: \"cinq\" } ];\n</code></pre> <p>Le tableau g\u00e9n\u00e9r\u00e9 contient autant d'entr\u00e9es qu'il y a de tuples dans le  groupe contenant le champ. Chaque entr\u00e9e est un map contenant le champ  faisant office de cl\u00e9 primaire (si existant) et du champ r\u00e9f\u00e9renc\u00e9 lui-m\u00eame.</p>"},{"location":"reference/script/#filtre-et-tri","title":"Filtre et tri","text":"<p>Remarque</p> <p>Dans la version actuelle du langage, les options de filtre et de tri ne  sont prises en compte que sur les r\u00e9f\u00e9rences de champs \"multi\". Elles  sont ignor\u00e9es dans le cas de champs \"single\".</p> <p>La notation \"sharp\" permet en outre d'appliquer des r\u00e8gles de filtre et de tri  sur le fieldset r\u00e9f\u00e9renc\u00e9. Pour ce faire, il suffit d'ajouter un param\u00e8tre \u00e0  la notation. Le param\u00e8tre attendu sera alors un map qui permet de fournir les  fonctions de callback pour r\u00e9aliser le filtre et le tri.</p> <p>La fonction de callback pour le filtre attend 1 param\u00e8tre (le  tuple sur lequel la r\u00e8gle de filtre doit se prononcer) et doit \u00eatre  mapp\u00e9e sur la propri\u00e9t\u00e9 <code>filter</code>. Ce param\u00e8tre est un map contenant tous les  champs du tuple.</p> <p>La fonction de callback pour le tri attend 2 param\u00e8tres (une paire de  tuples \u00e0 comparer) et doit \u00eatre mapp\u00e9e sur la propri\u00e9t\u00e9 <code>sort</code>. Les  param\u00e8tres re\u00e7us sont des maps contenant tous les champs des tuples \u00e0  comparer. La fonction de callback doit \u00eatre construite selon le m\u00eame  principe que la fonction de callback <code>mode</code> pass\u00e9e en option \u00e0 la m\u00e9thode  <code>$array.sort</code>. On attend qu'elle  retourne une valeur selon le principe suivant:</p> <ul> <li>0 lorsque <code>p1 == p2</code></li> <li>&lt;0 lorsque <code>p1 &lt; p2</code> (lorsque <code>p1</code> doit \u00eatre plac\u00e9 avant <code>p2</code> dans la      table tri\u00e9e)</li> <li>&gt;0 lorsque <code>p2 &lt; p1</code> (lorsque <code>p1</code> doit \u00eatre plac\u00e9 apr\u00e8s <code>p2</code> dans la     table tri\u00e9e)</li> </ul> <p>L'exemple ci-dessous montre comment sp\u00e9cifier des r\u00e8gles de filtre  et de tri sur un fieldset d\u00e9sign\u00e9 par la notation \"sharp\". La valeur <code>data</code>  g\u00e9n\u00e9r\u00e9e contiendra uniquement les tuples dont la position est un chiffre  pair. Ces tuples seront en outre tri\u00e9s de fa\u00e7on d\u00e9croissante.</p> <pre><code>var data = #articles.description({\n    filter: function(tuple) {\n        return tuple.id % 2 == 0;\n    },\n    sort: mySortMethod\n});\n\n$logger.info(data);\n\nfunction mySortMethod(tuple1, tuple2) {\n    return tuple2.position - tuple1.position;\n}\n</code></pre> <p>Dans cet exemple, nous illustrons comment d\u00e9finir les fonctions de  callback de deux fa\u00e7ons diff\u00e9rentes. La propri\u00e9t\u00e9 <code>filter</code> est d\u00e9finie au  moyen d'une fonction inline. Celle-ci doit \u00eatre annonc\u00e9e au moyen du  mot-cl\u00e9 <code>function</code>. La propri\u00e9t\u00e9 <code>sort</code> quant \u00e0 elle r\u00e9f\u00e9rence une fonction  d\u00e9clar\u00e9e ailleurs dans le code. Il aurait \u00e9galement \u00e9t\u00e9 possible d'utiliser  une fonction inline.</p> <p>Notons enfin que la notation \"sharp\" est \u00e9galement utilis\u00e9e pour d\u00e9signer  les champs pour lesquels on souhaite d\u00e9finir un calcul. Ce sujet est trait\u00e9  plus bas dans ce document.</p>"},{"location":"reference/script/#autres-options","title":"Autres options","text":"<p>La notation \"sharp\" supporte \u00e9galement les options suppl\u00e9mentaires suivantes:</p> <code>binary</code> (ou <code>bin</code>, ou <code>binaries</code>) Flag <code>true</code>/<code>false</code> indiquant si les fichiers binaires doivent \u00eatre  t\u00e9l\u00e9charg\u00e9s depuis la base de donn\u00e9es. Par d\u00e9faut le flag est <code>false</code>  pour r\u00e9duire l'impact sur les performances"},{"location":"reference/script/#portee-des-objets-scope","title":"Port\u00e9e des objets (scope)","text":"<p>La port\u00e9e d'une variable est l'ensemble des sections dans lesquelles la variable est d\u00e9finie. Typiquement, une port\u00e9e couvre l'ensemble d'un bloc d\u00e9limit\u00e9 par les caract\u00e8res <code>{</code> et <code>}</code>.</p> <p>Par d\u00e9faut, les objets (variables ou fonctions) cr\u00e9\u00e9s par un script sont  enregistr\u00e9s dans le scope courant et sont accessibles dans le bloc o\u00f9 ils ont  \u00e9t\u00e9 cr\u00e9\u00e9s. Les scopes fils peuvent r\u00e9cup\u00e9rer et modifier des objets cr\u00e9\u00e9s  dans les scopes parents.</p> <pre><code>var foo = \"\u2764\";       // cr\u00e9ation d'une variable dans le scope racine\n\nfunction bar() {\n  var sub = \"sub\";    // cr\u00e9ation d'une variable dans le scope de la fonction\n  foo = \"bar\";        // modif de valeur de la variable foo du scope racine\n  $logger.debug(foo);\n}\n\n$logger.debug(foo);   // imprime \"\u2764\"\nbar();                // imprime \"bar\"\n$logger.debug(foo);   // imprime \"bar\"\n$logger.debug(sub);   // g\u00e9n\u00e8re une erreur car sub n'existe pas\n                      // dans le scope racine\n</code></pre> <p>Une cons\u00e9quence de cela est que les fonctions d\u00e9finies dans une d\u00e9pendance  et r\u00e9f\u00e9renc\u00e9e par le mot-cl\u00e9 <code>import</code> sont inutilisables car elles sont  d\u00e9finies dans le scope de la d\u00e9pendance elle-m\u00eame. Il existe heureusement  une mani\u00e8re d'indiquer que l'on souhaite rendre un objet visible de partout:  pour cela il faut utiliser le mot-cl\u00e9 <code>export</code>.</p> <p>Le mot-cl\u00e9 <code>export</code> supporte trois types de notation (voir \u00e9l\u00e9ment  <code>ExportStatement</code> dans la grammaire du langage) :</p> <pre><code>export var a;\nexport var b = \"exemple\";\nexport function c() { }\n\nvar d, e;\nexport { d, e as newE }; \n</code></pre> <p>Les objets \"export\u00e9s\" sont r\u00e9f\u00e9renc\u00e9s au niveau du scope racine. Cela  signifie qu'ils deviennent accessibles depuis n'importe quel endroit du code  du script, soit sous leur nom d'origine, soit sous le nouveau nom d\u00e9fini par  l'alias (introduit par le mot-cl\u00e9 <code>as</code>).</p>"},{"location":"reference/script/#redefinition-de-variable","title":"Red\u00e9finition de variable","text":"<p>On a vu qu'il n'est pas possible de d\u00e9finir plusieurs fois une m\u00eame variable  au niveau d'un scope (cf. chapitre Variables). Toutefois, il  est possible dans certains cas de red\u00e9clarer une variable d\u00e9j\u00e0 existante.</p> <p>Par exemple, le code suivant est fonctionnel:</p> <pre><code>var bar = \"x\";\n$logger.info(\"a: ${bar}\");    // inscrit \"a: x\"\n\n{\n  // ici on est dans un nouveau scope et il est possible de d\u00e9clarer\n  // une nouvelle variable \"bar\" ind\u00e9pendante de celle d\u00e9clar\u00e9e plus\n  // haut; il est m\u00eame possible de r\u00e9f\u00e9rencer la variable \"bar\" d\u00e9j\u00e0\n  // existante\n  var bar = bar &amp; \"y\";  // on construit une nouvelle variable \"bar\"\n                        // en s'appuyant sur la valeur de l'autre\n  bar &amp;= \"z\";\n  $logger.info(\"b: ${bar}\");  // inscrit \"b: xyz\"\n}\n\n// ici la variable \"bar\" d\u00e9clar\u00e9e dans le bloc ci-dessus n'existe plus\n// c'est la variable \"bar\" d\u00e9clar\u00e9e au d\u00e9but du script qui est visible\n// uniquement et donc la valeur \n$logger.info(\"c: ${bar}\");    // inscrit \"c: x\"\n</code></pre> <p>Cela n'est pas possible dans tous les cas: les m\u00e9thodes mises \u00e0 disposition  par le moteur, les variables utilis\u00e9es pour le contr\u00f4le des boucles <code>for</code>,  les param\u00e8tres de fonctions ainsi que quelques variables pr\u00e9d\u00e9finies par le  moteur ne peuvent pas \u00eatre surcharg\u00e9s.</p>"},{"location":"reference/script/#remarques-sur-les-fonctions","title":"Remarques sur les fonctions","text":""},{"location":"reference/script/#portee-scope","title":"Port\u00e9e (scope)","text":"<p>Le scope des fonctions est bas\u00e9 sur le scope du bloc dans lequel la fonction  est d\u00e9finie, non sur le scope de l'\u00e9l\u00e9ment depuis lequel la fonction est  invoqu\u00e9e. Prenons l'exemple suivant:</p> <pre><code>function test1() {\n  var foo = \"bar\";\n}\n\nfunction test2() {\n  var foo = \"foo\";\n  test1();\n  // \u00e0 ce niveau, la variable foo vaut \"foo\"\n}\n</code></pre> <p>Dans cet exemple, la fonction <code>test2</code> cr\u00e9e une variable <code>foo</code> puis appelle  la fonction <code>test1</code>. Cette derni\u00e8re d\u00e9finit \u00e9galement une variable <code>foo</code>. Le  fait que le scope de <code>test1</code> d\u00e9pende du scope de base et non du scope de  <code>test2</code> (depuis lequel la fonction <code>test1</code> est appel\u00e9e) fait que la  red\u00e9finition de la variable <code>foo</code> est permise et ne g\u00e9n\u00e8re pas de conflit  avec la variable du m\u00eame nom d\u00e9j\u00e0 existante dans <code>test2</code>.</p> <p>Une autre cons\u00e9quence est le fait qu'il est possible de d\u00e9clarer des  fonctions homonymes, pour autant que cela ne cr\u00e9e pas de doublon au  sein du bloc. Prenons l'exemple suivant:</p> <pre><code>{ \n  function foo() {\n    return 1;\n  }\n\n  export var x = foo();   // x vaut 1\n}\n\n{\n  function foo() {\n    return 2;\n  }\n\n  export var y = foo();   // x vaut 2\n}\n</code></pre> <p>Le code ci-dessus ne g\u00e9n\u00e8re pas d'erreur malgr\u00e9 le fait que l'on d\u00e9clare 2  fonctions <code>foo()</code> car ces deux fonctions ne se trouvent pas dans le m\u00eame bloc.</p>"},{"location":"reference/script/#declaration-tardive","title":"D\u00e9claration tardive","text":"<p>Il est possible de r\u00e9f\u00e9rencer une fonction avant que celle-ci ne soit  d\u00e9clar\u00e9e. Concr\u00e8tement, cela signifie qu'il est possible d'appeler une  fonction alors que la d\u00e9claration de cette derni\u00e8re est faite plus bas dans  le code du script. Ainsi le code ci-dessous est fonctionnel:</p> <pre><code>// exemple de base\nfoo();\n\nfunction foo() {\n  $logger.info(\"\ud83d\udc4d\");\n}\n\n// exemple avec une fonction export\u00e9e\nbar();\n\nexport function bar() {\n  $logger.info(\"\ud83d\udc4d\");\n}\n</code></pre> <p>Cependant, cela ne s'applique qu'aux fonctions d\u00e9clar\u00e9es au sein du bloc ou  au niveau racine du script. Les fonctions d\u00e9clar\u00e9es dans des librairies  externes doivent \u00eatre disponibles au moment de leur invocation. Il n'est  donc pas possible d'invoquer une m\u00e9thode de librairie qui serait import\u00e9e  apr\u00e8s coup.</p> <p>De plus, la fonction doit \u00eatre d\u00e9clar\u00e9e selon la notation illustr\u00e9e  ci-dessus, ou \u00e9ventuellement avec une clause <code>export</code> comme dans le cas de  la fonction <code>bar</code> ci-dessus. Par contre si une fonction est mapp\u00e9e sur une  variable, la d\u00e9claration tardive ne sera pas prise en compte. Voici un  exemple:</p> <pre><code>foo(); // -&gt; g\u00e9n\u00e8re une erreur car foo est une variable non d\u00e9clar\u00e9e\n\nvar foo = function() {\n  $logger.info(\"\u274c\");\n};\n</code></pre>"},{"location":"reference/script/#typage-des-objets","title":"Typage des objets","text":"<p>Les objets cr\u00e9\u00e9s ou r\u00e9f\u00e9renc\u00e9s dans un script sont typ\u00e9s. Cela concerne les  variables, les param\u00e8tres de fonction, les valeurs de retour, les valeurs de  champs d'un dossier, etc.</p> <p>Le typage est en principe automatique : il n'est pas n\u00e9cessaire de sp\u00e9cifier  le type d'une variable \u00e0 sa d\u00e9claration. Le moteur se charge de typer l'objet  en fonction de la valeur. Par exemple dans le cas de la d\u00e9claration  ci-dessous, le moteur se charge automatiquement de traiter la variable <code>x</code>  avec le type <code>number</code>.</p> <pre><code>var x = 1.2;\n</code></pre> <p>Il est cependant possible de caster une valeur. Cela est d\u00e9crit plus bas  dans ce document.</p> <p>La version actuelle du langage utilise les types suivants:</p> <ul> <li>string : cha\u00eene de caract\u00e8res</li> <li>number : valeur num\u00e9rique, pouvant \u00eatre un nombre entier,    un nombre flottant ou une valeur bool\u00e9enne</li> <li>boolean : valeur num\u00e9rique interpr\u00e9t\u00e9e comme un bool\u00e9en</li> <li>array : tableau de valeurs (ces derni\u00e8res ayant \u00e0 leur tour    l'un des types d\u00e9crits ici)</li> <li>map : table de cl\u00e9s/valeurs; les cl\u00e9s doivent \u00eatre des    strings et les valeurs ont l'un des types d\u00e9crits ici</li> <li>date : date au format <code>yyyy-MM-dd</code></li> <li>time : heure au format <code>HH:mm:ss</code></li> <li>timestamp : date et heure au format <code>yyyy-MM-dd HH:mm:ss.SSSSSS</code></li> <li>file : r\u00e9f\u00e9rence de fichier; ce type ne stocke pas directement le fichier    en m\u00e9moire, mais est une r\u00e9f\u00e9rence vers un fichier du filesystem; l'objet    stocke \u00e9galement le mimetype du fichier</li> <li>pojo : (pour \"Plain Old Java Object\") r\u00e9f\u00e9rence d'objet java conserv\u00e9 en    m\u00e9moire; ce type permet de r\u00e9f\u00e9rencer un objet java en vue d'une    r\u00e9utilisation ult\u00e9rieure par une librairie</li> <li>function : une \"function\" d\u00e9signe une fonction \u00e9crite en script, c.-\u00e0-d.    par le d\u00e9veloppeur de l'application m\u00e9tier </li> <li>null : ce type repr\u00e9sente un objet null</li> <li>method : une \"method\" est une fonction mise \u00e0 disposition par le moteur    Ewt; par exemple <code>$logger.debug</code> est une m\u00e9thode pr\u00e9-existante; il n'est    par contre pas possible de cr\u00e9er de m\u00e9thodes depuis un script.</li> </ul> <pre><code>var a = 1;                                 // a aura un type \"number\"\nvar b = \"1\";                               // b aura un type \"string\"\nvar c = true;                              // c aura un type \"boolean\"\nvar d = [1, \"a\"];                          // d aura un type \"array\"\nvar e = { a : 1, b : \"1\", c : [1, \"a\"] };  // e aura un type \"map\"\n</code></pre> <p>La cr\u00e9ation d'objets d'autres types que ceux illustr\u00e9s ci-dessus n\u00e9cessitent  l'utilisation de m\u00e9thodes fournies par le moteur. Par exemple pour cr\u00e9er un  objet \"date\" on utilisera des m\u00e9thodes de la librairie <code>$cal</code>; un objet  <code>file</code> pourra \u00eatre cr\u00e9\u00e9 au moyen de la librairie <code>$file</code>, etc.</p> <p>Les op\u00e9rateurs arithm\u00e9tiques (\"+\", \"-\", \"*\", \"/\", \"%\") sont r\u00e9serv\u00e9s aux  donn\u00e9es de type <code>number</code>.</p> <p>La concat\u00e9nation de <code>string</code> se fait au moyen de l'op\u00e9rateur <code>&amp;</code>.</p>"},{"location":"reference/script/#type-string","title":"Type <code>string</code>","text":"<p>Les cha\u00eenes de caract\u00e8res sont enregistr\u00e9s en tant que <code>string</code>.</p> <p>Le langage de script permet de sp\u00e9cifier une cha\u00eene de caract\u00e8res au moyen  de trois types de d\u00e9limiteurs:</p> <ul> <li>Le guillemet double <code>\"</code></li> <li>L'apostrophe <code>'</code></li> <li>Le backtick (ou accent grave) <code>`</code></li> </ul> <p>Le d\u00e9limiteur doit \u00eatre \"\u00e9chapp\u00e9\" au moyen d'un backspace <code>\\</code> s'il doit \u00eatre  utilis\u00e9 dans la cha\u00eene de caract\u00e8res, par exemple:</p> <pre><code>var valeur = 'l\\'avion';\n</code></pre>"},{"location":"reference/script/#type-number","title":"Type <code>number</code>","text":"<p>Le type <code>number</code> d\u00e9signe tout type de nombre, qu'il s'agisse d'entiers, de  valeurs d\u00e9cimales. Il d\u00e9signe \u00e9galement les valeurs bool\u00e9ennes, ainsi que  les valeurs \"infini\" (positif et n\u00e9gatif). Il prend \u00e9galement en charge les  valeurs \"NaN\" et le z\u00e9ro n\u00e9gatif.</p> <p>Bien que les valeurs enti\u00e8res et d\u00e9cimales sont toutes consid\u00e9r\u00e9es comme  <code>number</code>, Ewt tente de conserver la nature des valeurs. Ainsi une op\u00e9ration  arithm\u00e9tique r\u00e9alis\u00e9e sur des entiers donnera un entier (pour autant que  cela soit possible). Une illustration est donn\u00e9e dans les exemples  ci-dessous.</p> <pre><code>$logger.info(1 + 1);        // 2\n$logger.info(1 + 1.2);      // 2.2\n$logger.info(2 - 1);        // 1\n$logger.info(1.2 - 0.2);    // 1.0\n\nvar infinityP = 1 / 0;\nvar infinityM = -1 / 0;\n\n$logger.info(infinityP);    // Infinity\n$logger.info(infinityM);    // -Infinity\n$logger.info(infinityP + infinityP);    // Infinity\n$logger.info(infinityP + infinityM);    // NaN\n</code></pre>"},{"location":"reference/script/#type-boolean","title":"Type <code>boolean</code>","text":"<p>Le type <code>boolean</code> est en r\u00e9alit\u00e9 un alias du type <code>number</code> appliqu\u00e9 \u00e0 des  objets pouvant valoir 0 ou 1. La valeur 0 est associ\u00e9 \u00e0 <code>false</code> et 1 est  associ\u00e9 \u00e0 <code>true</code>.</p> <p>Les mots-cl\u00e9s <code>true</code> et <code>false</code> sont reconnus par le langage et repr\u00e9sentent  respectivement les valeurs 1 et 0.</p> <p>En logique bool\u00e9enne, l'addition (<code>+</code>) est associ\u00e9e \u00e0 un OU et la  multiplication est associ\u00e9e \u00e0 un ET. Les autres op\u00e9rateurs arithm\u00e9tiques ne  sont pas autoris\u00e9s. Il n'est pas non plus permis d'effectuer des op\u00e9rations  arithm\u00e9tiques m\u00e9langeant des valeurs bool\u00e9ennes et des valeurs non  bool\u00e9ennes. Notez l'utilisation d'une clause <code>try</code>/<code>catch</code> dans l'exemple  ci-dessous pour traiter l'exception d\u00e9clench\u00e9e par l'op\u00e9ration <code>true / true</code>.</p> <pre><code>$logger.info(true + true);   // true\n$logger.info(true + false);  // true\n$logger.info(true * true);   // true\n$logger.info(true * false);  // false\n$logger.info(true == true);  // true\n$logger.info(true == false); // false\n\ntry {\n    $logger.info(true / true);\n}\ncatch (e) {\n    $logger.error(e);        // Exception : Unsupported operator on boolean value\n}\n\n// exemple avec un op\u00e9rateur de cast\n$logger.info((boolean) 1 * (boolean) 0);    // false\n</code></pre>"},{"location":"reference/script/#type-array","title":"Type <code>array</code>","text":"<p>Un tableau (<code>array</code>) peut \u00eatre d\u00e9clar\u00e9 au moyen de la m\u00eame notation qu'en  javascript, c'est-\u00e0-dire au moyen de crochets <code>[</code> et <code>]</code>. La librairie  <code>$array</code> permet en outre de r\u00e9aliser des op\u00e9rations sur les tableaux de  valeurs.</p> <p>Les \u00e9l\u00e9ments d'un tableau peuvent \u00e9galement \u00eatre extraits au moyen  de la notation standard utilisant les crochets. L'indice de l'\u00e9l\u00e9ment doit  \u00eatre sp\u00e9cifi\u00e9 entre les crochets. La num\u00e9rotation des \u00e9l\u00e9ments commence \u00e0 0.</p> <pre><code>var valeur = [ 1, 2, 3 ];\n$logger.info(valeur[1]);        // 2\n</code></pre> <p>Certains op\u00e9rateurs peuvent \u00eatre utilis\u00e9s pour des tableaux. C'est le cas de  <code>+</code>, <code>+=</code>, <code>&amp;</code> et <code>&amp;=</code>. Le chapitre Tableaux revient sur ces  notions plus en d\u00e9tail.</p>"},{"location":"reference/script/#type-map","title":"Type <code>map</code>","text":"<p>Un <code>map</code> est une table de correspondances cl\u00e9/valeur. Le map peut \u00eatre  d\u00e9clar\u00e9 au moyen de la m\u00eame notation qu'en javascript. Dans le cas une cl\u00e9  doit utiliser des caract\u00e8res non standard, il est recommand\u00e9 de la passer  sous forme de cha\u00eene de caract\u00e8res.</p> <p>La r\u00e9f\u00e9rence d'une entr\u00e9e de map se fait au moyen du point <code>.</code> ou \u00e0 l'aide  de crochets.</p> <pre><code>var valeur = {\n        a: 1,\n        b: 2,\n        \"hello-world\": \"bonjour\"\n    };\n$logger.info(valeur.a);                 // 1\n$logger.info(valeur[\"hello-world\"]);    // \"bonjour\"\n</code></pre> <p>Les maps sont d\u00e9crits plus en d\u00e9tail dans le chapitre Map plus bas  dans ce document.</p>"},{"location":"reference/script/#type-date","title":"Type <code>date</code>","text":"<p>Il n'est pas possible d'instancier une date directement. Les objets de  type <code>date</code> doivent \u00eatre cr\u00e9\u00e9s au moyen de la librairie <code>$cal</code>.</p>"},{"location":"reference/script/#type-time","title":"Type <code>time</code>","text":"<p>Il n'est pas possible d'instancier une heure directement. Les objets de type <code>time</code> doivent \u00eatre cr\u00e9\u00e9s au moyen de la librairie <code>$cal</code>.</p>"},{"location":"reference/script/#type-timestamp","title":"Type <code>timestamp</code>","text":"<p>Il n'est pas possible d'instancier un timestamp directement. Les objets de type <code>timestamp</code> doivent \u00eatre cr\u00e9\u00e9s au moyen de la librairie <code>$cal</code>.</p>"},{"location":"reference/script/#type-file","title":"Type <code>file</code>","text":"<p>Un objet <code>file</code> est une r\u00e9f\u00e9rence vers un fichier. Le fichier en question ne  doit pas obligatoirement exister, un objet <code>file</code> peut tr\u00e8s bien r\u00e9f\u00e9rencer  un fichier qui n'existe pas encore (par exemple dans le cas o\u00f9 on veut  justement le cr\u00e9er et y ajouter des donn\u00e9es).</p> <p>Il n'est pas possible d'instancier un objet <code>file</code> directement. Les objets de ce type doivent \u00eatre cr\u00e9\u00e9s au moyen de la librairie <code>$file</code>. \u00c0 noter  que d'autres librairies permettent \u00e9galement d'instancier des objets <code>file</code>.</p>"},{"location":"reference/script/#type-pojo","title":"Type <code>pojo</code>","text":"<p>Un objet <code>pojo</code> (pour \"Plain Old Java Object\") est en r\u00e9alit\u00e9 une r\u00e9f\u00e9rence  d'objet java conserv\u00e9 en m\u00e9moire par le processeur de script. Il n'est pas  possible d'instancier ce type d'objet directement. Il est utilis\u00e9 dans le  cas de certaines m\u00e9thodes qui doivent manipuler des objets java.</p>"},{"location":"reference/script/#type-function","title":"Type <code>function</code>","text":"<p>Le type <code>function</code> d\u00e9signe une fonction \u00e9crite au niveau d'un script. Une  fonction peut \u00eatre mapp\u00e9e sur une variable ou pass\u00e9e en callback. Les  fonctions sont d\u00e9clar\u00e9es au moyen de l'instruction <code>function</code>.</p> <p>L'exemple ci-dessous donne deux variantes de d\u00e9finition de fonction. Notez  le point-virgule obligatoire \u00e0 la fin de la d\u00e9finition de \"bar\" (car on est  dans le contexte d'une d\u00e9claration de variable dans ce cas):</p> <pre><code>function foo() {\n    return \"foo\";\n}\n\nvar bar = function() {\n    return \"bar\";\n};                      // -&gt; ne pas oublier le \";\"\n\n$logger.info(foo());    // affiche \"foo\"\n$logger.info(bar());    // affiche \"bar\"\n</code></pre>"},{"location":"reference/script/#type-null","title":"Type <code>null</code>","text":"<p>Ce type repr\u00e9sente un objet <code>null</code>. Le mot-cl\u00e9 <code>null</code> lui-m\u00eame est une  instance du type <code>null</code>.</p>"},{"location":"reference/script/#type-method","title":"Type <code>method</code>","text":"<p>Le type <code>method</code> d\u00e9signe une m\u00e9thode de librairie fournie par Ewt. On  distingue les \"m\u00e9thodes\" des \"fonctions\" justement par le fait que les  m\u00e9thodes sont fournies par le moteur, alors que les fonctions sont fournies  par le script lui-m\u00eame.</p> <p>Il n'est pas possible de cr\u00e9er d'objet de ce type depuis un script.</p>"},{"location":"reference/script/#cast-de-valeur","title":"Cast de valeur","text":"<p>Les valeurs sont donc pseudo-typ\u00e9es et certaines fonctions s'attendent \u00e0 ce  que les valeurs soient typ\u00e9es correctement. Cela est particuli\u00e8rement  important sur certains SGBD, comme illustr\u00e9 dans l'exemple plus bas.</p> <p>Le langage permet de caster des valeurs avec la notation standard utilisant  les parenth\u00e8ses. Ainsi, il dispose des expressions suivantes pour effectuer  les conversions de type:</p> <ul> <li><code>(number)</code></li> <li><code>(string)</code></li> <li><code>(boolean)</code></li> <li><code>(date)</code></li> <li><code>(time)</code></li> <li><code>(timestamp)</code></li> <li><code>(file)</code></li> </ul> <p>Note</p> <p>Les op\u00e9rations de cast sont g\u00e9n\u00e9ralement gourmandes en ressources et ne  sont par cons\u00e9quent pas recommand\u00e9es, en particulier dans les grandes  boucles. Si l'intention de d\u00e9veloppeur est de convertir une valeur de  champ obtenue \u00e0 l'aide de la notation <code>${data:xxx}</code>, peut-\u00eatre est-il bon  d'envisager d'utiliser la notation \"sharp\", ce qui revient \u00e0 noter <code>#xxx</code>  dans le cas pr\u00e9sent. La valeur retourn\u00e9e par la notation \"sharp\" est  toujours typ\u00e9e en fonction du type du champ.</p>"},{"location":"reference/script/#exemple","title":"Exemple","text":"<p>La conversion peut se r\u00e9v\u00e9ler obligatoire dans certains cas. Par exemple,  prenons l'expression suivante:</p> <pre><code>$sql.select(`select count(*)\n             from Vendeur\n             where Numero &lt;&gt; ?`::T, [ \"{$data:numero}\" ]);\n</code></pre> <p>Le champ \"Numero\" \u00e9tant un entier, Postgres signalera l'erreur suivante:</p> <pre><code>ERROR: operator does not exist: integer &lt;&gt; character varying\n  Indice : No operator matches the given name and argument type(s). You\n           might need to add explicit type casts.\n  Position : 43\nException occurred because of SQLSTATE(42883), ErrorCode(0)\n</code></pre> <p>Cela vient du fait que l'expression <code>\"{$data:numero}\"</code> est une string et que  Postgres ne sait pas faire l'op\u00e9ration <code>&lt;&gt;</code> entre un entier et une string.</p> <p>Pour \u00e9viter l'erreur, plusieurs options s'offrent \u00e0 nous:</p> <ol> <li>On peut forcer le cast au niveau de la requ\u00eate SQL. Cela revient \u00e0     remplacer le test d'in\u00e9galit\u00e9 du <code>where</code> par <code>... Numero &lt;&gt; ?::int</code></li> <li>On peut caster la valeur au niveau des param\u00e8tres pass\u00e9s au statement:</li> </ol> <pre><code>[ (number) \"${data:numero}\" ]\n</code></pre> <ol> <li>On peut utiliser la notation sharp au niveau des param\u00e8tres pass\u00e9s au     statement:</li> </ol> <pre><code>[ #numero ]\n</code></pre> <p>Les options 2 et 3 ci-dessus sont pr\u00e9f\u00e9rables \u00e0 la premi\u00e8re car elles  permettent de conserver une requ\u00eate plus compatible entre diff\u00e9rents SGBD.  L'option 3 est quant \u00e0 elle pr\u00e9f\u00e9rable \u00e0 la seconde pour des raisons de  performances.</p> <p>Remarque concernant l'impl\u00e9mentation</p> <p>En interne, Ewt stocke les valeurs enti\u00e8res en tant que \"BigInteger\" pour  supporter les grands nombres et les valeurs flottantes en tant que  \"BigDecimal\" afin de garantir un niveau de pr\u00e9cision suffisant au niveau  des d\u00e9cimales.</p>"},{"location":"reference/script/#mot-cle-typeof","title":"Mot-cl\u00e9 <code>typeof</code>","text":"<p>L'op\u00e9rateur <code>typeof</code> permet de d\u00e9terminer le type d'un objet. Il retourne le type sous la forme de cha\u00eene de caract\u00e8res.</p> <p>Si l'objet est <code>null</code> ou s'il est d\u00e9clar\u00e9 mais n'a pas de valeur, l'op\u00e9rateur  retournera une cha\u00eene de caract\u00e8res avec la valeur \"null\".</p> <pre><code>var foo;\n$logger.info(typeof foo);     // affiche \"null\"\n</code></pre> <p>Si l'objet n'existe pas, l'op\u00e9rateur retournera la valeur \"undefined\".  L'op\u00e9rateur peut donc servir \u00e0 d\u00e9terminer si un param\u00e8tre de script est bien  d\u00e9fini.</p> <pre><code>if (typeof $$.test != \"undefined\") {\n  // ...\n}\n</code></pre>"},{"location":"reference/script/#chaines-de-caracteres","title":"Cha\u00eenes de caract\u00e8res","text":"<p>Les cha\u00eenes de caract\u00e8res sont \u00e0 d\u00e9limiter par les caract\u00e8res <code>\"</code> (double  guillemets), <code>'</code> (apostrophe) ou <code>`</code> (accent grave, ou backtick).  Les trois types de d\u00e9limiteurs sont \u00e9quivalents. Le d\u00e9limiteur utilis\u00e9 sur  une cha\u00eene doit \u00eatre \u00e9chapp\u00e9 au moyen d'un \"backspace\" (<code>\\</code>) si  on souhaite l'utiliser en tant que texte dans la cha\u00eene.</p> <p>Les s\u00e9quences d'\u00e9chappement reconnues sont:</p> S\u00e9quence Description \\t Ins\u00e8re une tabulation \\n Ins\u00e8re un saut de ligne \\r Ins\u00e8re un retour chariot \\\\ Ins\u00e8re un backslash \\b Ins\u00e8re un backspace \\f Ins\u00e8re un page break <p>Le langage permet de traiter ou au contraire de conserver les s\u00e9quences  d'\u00e9chappement. Le chapitre Suffixes <code>::ESC</code> et <code>::esc</code> pr\u00e9sente ces options plus en d\u00e9tail.</p> <p>Les cha\u00eenes de caract\u00e8res peuvent \u00eatre multilignes et peuvent contenir des  r\u00e9f\u00e9rences de variables inlines selon la notation d\u00e9crite au prochain  chapitre.</p>"},{"location":"reference/script/#resolution-de-variables","title":"R\u00e9solution de variables","text":"<p>Il est possible d'int\u00e9grer des r\u00e9f\u00e9rences de variables au sein d'une cha\u00eene  de caract\u00e8res. Pour ce faire, on utilise la notation suivante: <code>${ref}</code>  o\u00f9 <code>ref</code> est une r\u00e9f\u00e9rence de variable. Ainsi, une cha\u00eene  <code>\"il est ${a} heures\"</code> sera retrait\u00e9e pour substituer la partie <code>${a}</code> avec  la valeur de <code>a</code>.</p> <p>Les variables DOIVENT exister au moment o\u00f9 on les r\u00e9f\u00e9rence, sans quoi le  processeur g\u00e9n\u00e9rera une erreur et substituera la variable avec une valeur  vide.</p> <p>Exemples de r\u00e9solutions de variables:</p> <pre><code>var a = 1;                       // a contient 1\nvar b = \"var ${a}\";              // b contient \"var 1\"\nvar c = \"var ${a}\"::raw;         // c contient \"var ${a}\"\nvar d = c;                       // d contient \"var ${a}\"\nvar e = \"c\";                     // e contient \"c\"\nvar f = \"var $${a}\";             // f contient \"var ${a}\"\n$logger.debug(a &amp; \" \" &amp;\n              b &amp; \" \" &amp;\n              c &amp; \" \" &amp;\n              d);                // affiche \"1 var 1 var ${a} var ${a}\"\n$logger.debug(\"${a} ${b} ${c} ${d}\"); // affiche \"1 var 1 var 1 var 1\"\n$logger.debug(\"${${e}}\");        // affiche \"var 1\"\n</code></pre> <p>Comme on peut le voir dans les exemples ci-dessus, il est possible  d'indiquer au processeur de NE PAS effectuer de substitution. Pour ce  faire, il existe deux solutions:</p> <ol> <li>On peut pr\u00e9fixer la d\u00e9finition de variable avec un <code>$</code> suppl\u00e9mentaire (par     exemple <code>\"$${a}\"</code>)</li> <li>On peut ajouter le suffixe <code>::raw</code> \u00e0 la cha\u00eene (par exemple <code>\"${a}    \"::raw\"</code>). Le suffixe agit sur toute la cha\u00eene, donc il ignore les     substitutions de toutes les r\u00e9f\u00e9rences de variables qui s'y trouvent.</li> </ol> <p>Attention, les indicateurs servant \u00e0 d\u00e9sactiver la substitution ne portent que  sur la cha\u00eene statique \u00e0 laquelle ils sont rattach\u00e9s, et non sur les  \u00e9ventuelles r\u00e9f\u00e9rences \u00e0 cette cha\u00eene. Voyons cela avec un exemple:</p> <pre><code>var foo = \"123\";\nvar bar = \"${foo}\"::raw;\n$logger.debug(\"test: ${bar}\");  // affiche \"test: 123\"\n$logger.debug(\"test: \" &amp; bar);  // affiche \"test: ${foo}\"\n</code></pre> <p>La valeur de la variable <code>bar</code> est d\u00e9finie avec un suffixe <code>::raw</code>, ce qui  signifie que la variable <code>bar</code> contient la valeur <code>${foo}</code>. Toutefois,  le suffixe ne joue plus aucun r\u00f4le lorsque l'on r\u00e9f\u00e9rence cette  variable dans une autre expression. Or comme la substitution est r\u00e9cursive,  l'expression <code>${bar}</code> revient \u00e0 r\u00e9cup\u00e9rer la valeur de <code>foo</code>.</p> <p>La substitution de variables est r\u00e9alis\u00e9e au moyen de la libraire Apache  Commons Text. La documentation en ligne sur  StringSubstitutor donne plus de d\u00e9tails sur les possibilit\u00e9s du moteur de substitution.</p>"},{"location":"reference/script/#resolution-de-valeurs-de-champs","title":"R\u00e9solution de valeurs de champs","text":"<p>Le langage autorise deux variantes pour r\u00e9cup\u00e9rer une valeur de champ:</p> <ol> <li>la notation <code>#contexte</code> : cette notation permet de r\u00e9cup\u00e9rer la valeur      typ\u00e9e, c'est-\u00e0-dire dans un type qui correspond \u00e0 celui d\u00e9clar\u00e9 dans la      description de sch\u00e9ma (= le type de champ en base de donn\u00e9es).</li> <li>la notation <code>${data:contexte}</code> : cette notation retournera toujours la      valeur sous forme de string; il est possible d'int\u00e9grer cette notation au      sein d'une cha\u00eene de caract\u00e8res pour y faire appara\u00eetre la valeur du      champ, comme dans l'exemple suivant:<pre><code>Bonjour ${data:prenom} !\n</code></pre> </li> </ol> <p>Les deux variantes attendent une r\u00e9f\u00e9rence de champ sous la forme d'un  contexte en notation \"string\" (par opposition \u00e0 la notation \"map\" comme  d\u00e9crit au chapitre Contexte). Pour rappel, le contexte est une  description de dossier, de groupe et/ou de champ ayant la forme suivante:</p> <pre><code>modelName[docId].groupName[tupleId].fieldName\n</code></pre> <p>o\u00f9</p> <ul> <li><code>modelName</code> d\u00e9signe le nom du mod\u00e8le,</li> <li><code>docId</code> est l'identifiant du dossier,</li> <li><code>groupName</code> d\u00e9signe le nom du groupe,</li> <li><code>tupleId</code> est l'identifiant de tuple (il correspond forc\u00e9ment \u00e0 <code>docId</code>    dans le cas o\u00f9 le tuple est de type single),</li> <li><code>fieldName</code> est le nom du champ. La partie qui r\u00e9f\u00e9rence le mod\u00e8le et le    dossier sont optionnels si le script est \u00e9valu\u00e9 dans un contexte de    dossier. La partie qui r\u00e9f\u00e9rence le groupe et le tuple sont optionnels si    le champ est un champ single.</li> </ul> <p>Ainsi, les expressions <code>#client[34].facture[12].montant</code> et <code>${data:client[34].facture[12].montant}</code> permettent par exemple de  r\u00e9cup\u00e9rer la valeur du champ \"montant\" de la facture ayant l'id \"12\" du  dossier client ayant l'id \"34\". Le moteur se charge d'obtenir la donn\u00e9e  correspondante \u00e0 partir de la base de donn\u00e9es si n\u00e9cessaire.</p> <p>Comme mentionn\u00e9 plus haut, certaines parties du contexte sont optionnelles  lorsque le script est \u00e9valu\u00e9 dans un contexte d\u00e9j\u00e0 connu du syst\u00e8me (par  exemple dans le cas d'un script \u00e9valu\u00e9 suite \u00e0 un \u00e9v\u00e9nement, ou dans un bloc  de script de type <code>context</code>). Ainsi, en supposant que le script est \u00e9valu\u00e9  dans le contexte du dossier <code>client[34]</code>, on peut raccourcir l'expression \u00e0 <code>#facture[12].montant</code> ou <code>${data:facture[12].montant}</code>.</p> <p>Si on souhaite r\u00e9cup\u00e9rer une valeur de base du dossier, c.-\u00e0-d. une valeur  pr\u00e9sente dans le groupe principal du dossier (pour rappel, le groupe  principal doit \u00eatre d\u00e9fini au niveau de la description, et c'est l'identifiant  de ce tuple qui sert d'identifiant au dossier), il est possible de  simplifier encore l'expression. Ainsi, la r\u00e9f\u00e9rence <code>#nom</code> ou <code>${data:nom}</code>  sera reconnue.</p> <pre><code>// exemple hors contexte\n$logger.warn(\"${data:venteEchange[6].date}\"); -&gt; 2023-04-02\n$logger.warn(#venteEchange[6].date);          -&gt; 2023-04-02\n$logger.warn(typeof #venteEchange[6].date);   -&gt; date\n\n// exemple avec un contexte actif\ncontext \"vente\" {\n  $logger.warn(\"${data:date}\");               -&gt; 2023-04-02\n  $logger.warn(#date);                        -&gt; 2023-04-02\n  $logger.warn(typeof #date);                 -&gt; date\n}\n</code></pre> <p>Les parties de description de contexte peuvent prendre diff\u00e9rentes formes  selon le type de notation utilis\u00e9.</p> <p>Avec la notation <code>#contexte</code>, les \u00e9l\u00e9ments <code>modelName</code>, <code>groupName</code> et  <code>fieldName</code> sont des \u00e9l\u00e9ments constants. Cela signifie que le mod\u00e8le, le  groupe et le champ doivent \u00eatre not\u00e9s en toutes lettres. Il n'est pas  possible d'utiliser de r\u00e9f\u00e9rence pour d\u00e9signer ces parties (du moins dans la  version actuelle du langage de script). Les \u00e9l\u00e9ments <code>docId</code> et <code>tupleId</code>  quant \u00e0 eux repr\u00e9sentent des identifiants. Il est possible d'utiliser des  r\u00e9f\u00e9rences ou des expressions pour d\u00e9signer ces identifiants. Voici  diff\u00e9rents exemples de r\u00e9f\u00e9rences de champs dans lesquelles l'identifiant de  dossier est exprim\u00e9 de diff\u00e9rentes fa\u00e7ons:</p> <pre><code>#venteEchange[6].date;\n\nvar six = 6;\n#venteEchange[six].date;\n#venteEchange[\"${six}\"].date;\n\nfunction add(x, y) { return x + y; }\n#venteEchange[add(2, 4)].date;\n\n#venteEchange[$sql.select(`select 6`)].date;\n</code></pre> <p>Avec la notation <code>${data:contexte}</code>, il est \u00e9galement possible de substituer  les \u00e9l\u00e9ments <code>docId</code> et <code>tupleId</code> par des r\u00e9f\u00e9rences. De plus, il est aussi possible de substituer les parties <code>modelName</code>, <code>groupName</code> et <code>fieldName</code>.  Par contre la notation doit former un tout : il n'est pas possible de  d\u00e9couper l'expression sur plusieurs strings, cf. le dernier cas dans les  exemples ci-dessous:</p> <pre><code>\"${data:venteEchange[6].date}\";\n\nvar six = 6;\n\"${data:venteEchange[\"${six}\"].date}\";\n\nvar m = \"venteEchange\";\n\"${data:${m}[${six}].date}\"\n\n// attention, la notation ci-dessous n'est pas trait\u00e9e comme une r\u00e9f\u00e9rence\n// de champ mais comme une concat\u00e9nation de strings; cela a pour effet de\n// construire la cha\u00eene \"${data:venteEchange[6].date}\" et non de r\u00e9cup\u00e9rer\n// la valeur de champ\n\"${data:venteEchange[\" &amp; 6 &amp; \"].date}\";\n</code></pre>"},{"location":"reference/script/#suffixes-de-valeurs-literales","title":"Suffixes de valeurs lit\u00e9rales","text":"<p>Le chapitre pr\u00e9c\u00e9dent a pr\u00e9sent\u00e9 le r\u00f4le du suffixe <code>::raw</code>. Le langage  supporte \u00e9galement d'autres suffixes.</p> Suffixe Description <code>::raw</code> D\u00e9sactive le m\u00e9canisme de r\u00e9solution des variables <code>::T</code> Supprime les retours lignes dans la string et ajoute un espace \u00e0 l'emplacement du saut de ligne <code>::t</code> Supprime les retours lignes dans la string sans ajout d'espace <code>::Q</code> Double les quotes dans la string <code>::q</code> Change les <code>''</code> en <code>'</code> dans la string (inverse de <code>::Q</code>) <code>::X</code> Echappe les caract\u00e8res sp\u00e9ciaux de l'XML <code>::x</code> Effet inverse de <code>::X</code> <code>::R</code> Echappe les caract\u00e8res sp\u00e9ciaux des expressions r\u00e9guli\u00e8res <code>::r</code> Effet inverse de <code>::R</code> <code>::ESC</code> Force la substitution des caract\u00e8res de contr\u00f4le \u00e9chapp\u00e9s par les vrais caract\u00e8res ASCII correspondant. Voir le chapitre Suffixes <code>::ESC</code> et <code>::esc</code> <code>::esc</code> Indique de conserver les caract\u00e8res de contr\u00f4le \u00e9chapp\u00e9s. Voir le chapitre Suffixes <code>::ESC</code> et <code>::esc</code> <p>Les suffixes sont sensibles \u00e0 la casse: le suffixe <code>::T</code> ne remplit pas le m\u00eame r\u00f4le que <code>::t</code>. La table ci-dessous donne la liste exhaustive des suffixes disponibles.</p> <p>Il est possible de d\u00e9finir plusieurs suffixes pour une m\u00eame valeur lit\u00e9rale  ou pour une m\u00eame variable. Pour ce faire il suffit de cha\u00eener les suffixes,  par exemple <code>::raw::T</code>.</p> <p>Attention, il se peut toutefois que certains suffixes soient incompatibles entre eux ou s'annulent mutuellement. Par exemple <code>::Q::q</code> est sans effet, mais oblige le processeur \u00e0 effectuer une double conversion, ce qu'on \u00e9vitera. Le suffixe <code>::raw</code> prime sur les autres : s'il est absent, la substitution de variables est r\u00e9alis\u00e9e avant l'effet des autres suffixes. Sinon pour le reste, les traitements relatifs aux suffixes sont r\u00e9alis\u00e9s dans l'ordre d'apparition des suffixes.</p> <p>Les suffixes peuvent \u00eatre appliqu\u00e9s aux valeurs lit\u00e9rales de type \"string\" (par exemple <code>\"a &lt; b\"::X</code>), aux r\u00e9f\u00e9rences de variables (par exemple <code>\"${var::X}\"</code>, ainsi qu'aux r\u00e9f\u00e9rences de champs faites au moyen des notations <code>#contexte</code> ou <code>${data:contexte}</code>.</p> <p>Attention toutefois: l'utilisation d'un suffixe de formatage sur la notation <code>#contexte</code> entra\u00eenera automatiquement la conversion de la valeur en string. On perd donc le type du champ dans ce cas.</p> <pre><code>\"a &lt; b\"::X;       -&gt; g\u00e9n\u00e8re \"a &amp;lt; b\"\n\"l'apostrophe\"::Q -&gt; g\u00e9n\u00e8re \"l''apostrophe\"\n\nvar val = `'a&lt;b &amp; c&gt;d'`;\n\"${val::X}\";      -&gt; g\u00e9n\u00e8re \"&amp;apos;a&amp;lt;b &amp;amp; c&amp;gt;d&amp;apos;\" \n\"${val::Q}\";      -&gt; g\u00e9n\u00e8re \"''a&lt;b &amp; c&gt;d''\"\n\"${val::Q::X}\";   -&gt; g\u00e9n\u00e8re \"&amp;apos;&amp;apos;a&amp;lt;b &amp;amp; c&amp;gt;d&amp;apos;&amp;apos;\" \n\"${val::X::Q}\";   -&gt; g\u00e9n\u00e8re \"&amp;apos;a&amp;lt;b &amp;amp; c&amp;gt;d&amp;apos;\" \n\ntypeof #venteEchange[6].date;     -&gt; date\ntypeof #venteEchange[6].date::X;  -&gt; string\n</code></pre>"},{"location":"reference/script/#suffixes-esc-et-esc","title":"Suffixes <code>::ESC</code> et <code>::esc</code>","text":"<p>La signification des suffixes <code>::ESC</code> et <code>::esc</code> peut \u00eatre complexe \u00e0 cerner.  Ce chapitre essaie d'apporter un peu plus de clart\u00e9 sur ce sujet.</p> <p>Ces suffixes agissent sur les s\u00e9quences d'\u00e9chappement pr\u00e9sentes au sein des cha\u00eenes de caract\u00e8res. Il s'agit des s\u00e9quences de  caract\u00e8res <code>\\b</code> (backspace), <code>\\f</code> (form feed), <code>\\n</code> (new line), <code>\\r</code>  (carriage return) et <code>\\t</code>(tab).</p> <p>Le suffixe <code>::ESC</code> indique de conserver ces s\u00e9quences de telles quelles, de  sorte qu'elles apparaissent sous forme de texte.</p> <p>Le suffixe <code>::esc</code> au contraire demande de forcer la substitution de ces  s\u00e9quences par les vrais caract\u00e8res ASCII correspondants.</p> <p>Le moteur impl\u00e9mente une logique interne pour l'interpr\u00e9tation de ces  s\u00e9quences, et ces suffixes permettent d'alt\u00e9rer la fa\u00e7on de les interpr\u00e9ter.</p> <p>Le plus simple pour se faire une id\u00e9e est de voir quelques exemples.  Commen\u00e7ons par des cha\u00eenes de caract\u00e8res inscrites \"en dur\" dans un script. </p> Expression de script Repr\u00e9sentation de la valeur <code>\"line 1\\r\\nline 2\"</code> line 1line 2 <code>\"line 1\\r\\nline 2\"::ESC</code> line 1\\r\\nline 2 <code>\"line 1\\r\\nline 2\"::esc</code> line 1line 2 <code>\"line 1\\\\r\\\\nline 2\"</code> line 1\\r\\nline 2 <code>\"line 1\\\\r\\\\nline 2\"::ESC</code> line 1\\r\\nline 2 <code>\"line 1\\\\r\\\\nline 2\"::esc</code> line 1\\r\\nline 2 <code>\"line 1\\\\\\r\\\\\\nline 2\"</code> line 1\\line 2 <code>\"line 1\\\\\\r\\\\\\nline 2\"::ESC</code> line 1\\\\r\\\\nline 2 <code>\"line 1\\\\\\r\\\\\\nline 2\"::esc</code> line 1\\line 2 <p>Pr\u00e9cisons enfin que les suffixes sont sans effet sur les valeurs qui ne contiennent pas de s\u00e9quence d'\u00e9chappement. Par exemple, le suffixe ne modifie en rien la valeur dans le cas d'une expression telle que:</p> <pre><code>\"line 1\nline 2\"::ESC\n</code></pre> <p>Passons \u00e0 pr\u00e9sent \u00e0 un cas o\u00f9 la cha\u00eene de caract\u00e8res n'est pas inscrite \"en  dur\" dans le script mais provient d'une source ext\u00e9rieure, par exemple un  champ de dossier.</p> <p>Soit un champ \"valeur\" qui contient la cha\u00eene <code>\"a\\tb\\r\\nc\\td\"</code>. Le caract\u00e8re  \"\u2192\" de la table ci-dessous symbolise la tabulation.</p> Expression de script Repr\u00e9sentation de la valeur <code>\"${data:valeur}\"</code> a\u2192bc\u2192d <code>#valeur</code> a\\tb\\r\\nc\\td <code>\"${data:valeur::ESC}\"</code> a\u2192bc\u2192d <code>\"${data:valeur}\"::ESC</code> a\\tb\\r\\nc\\td <code>#valeur::ESC</code> a\\tb\\r\\nc\\td <code>\"${data:valeur::esc}\"</code> a\u2192bc\u2192d <code>\"${data:valeur}\"::esc</code> a\u2192bc\u2192d <code>#valeur::esc</code> a\u2192bc\u2192d <p>On notera que la syntaxe <code>\"${data:xxx}</code> traite automatiquement les s\u00e9quences  d'\u00e9chappement alors que la notation sharp <code>#xxx</code> conserve la valeur telle  quelle. </p>"},{"location":"reference/script/#mot-cle-null","title":"Mot-cl\u00e9 <code>null</code>","text":"<p>Le mot-cl\u00e9 <code>null</code> repr\u00e9sente une valeur null. Il repr\u00e9sente un objet  qui n'existe pas. La valeur <code>null</code> est diff\u00e9rente d'une cha\u00eene vide.</p> <p>Le terme peut \u00eatre utilis\u00e9 dans des tests d'\u00e9quivalence. Voici quelques  exemples de test sur des <code>null</code>.</p> <pre><code>var map = { x : 1, y : 2 };\n$logger.debug(map.z == null);                 -&gt; affiche 1 (true)\n\nvar test = map.z;\n$logger.debug(test == null);                  -&gt; affiche 1 (true)\n$logger.debug($scope.isNull(\"test\"));         -&gt; affiche 1 (true)\n$logger.debug($scope.isNullOrEmpty(\"test\"));  -&gt; affiche 1 (true)\n$logger.debug(null == \"\");                    -&gt; affiche 0 (false)\n</code></pre>"},{"location":"reference/script/#imports","title":"Imports","text":"<p>Le mot cl\u00e9 <code>import</code> permet de r\u00e9f\u00e9rencer un fichier de script externe. Ce  dernier, on l'appelera le sous-script, a exactement la m\u00eame structure qu'un  script standard : il est constitu\u00e9 d'un ensemble d'instructions et il peut \u00e0  son tour r\u00e9f\u00e9rencer un autre fichier de script.</p> <p>Lorsqu'un <code>import</code> est d\u00e9fini, le code du sous-script est \u00e9valu\u00e9, comme si  son contenu se trouvait dans le fichier source. L'instruction <code>import</code> peut  \u00eatre plac\u00e9e n'importe o\u00f9 dans le code. Il est donc possible de d\u00e9finir des  imports conditionn\u00e9s par un test <code>if</code> par exemple.</p> <p>Attention toutefois, les objets d\u00e9finis au niveau d'un sous-script sont  cr\u00e9\u00e9s dans un scope sp\u00e9cifique au sous-script. Ils ne sont donc disponibles  qu'au niveau du sous-script, \u00e0 moins que ces objets soient d\u00e9clar\u00e9s avec le  mot-cl\u00e9 <code>export</code>, auquel cas ils deviennent globaux.</p> <p>Exemple de sous-script:</p> <pre><code>export function hello(name) {\n  $logger.debug(\"Hello: \" + name);\n}\n\nvar x = 1;\n</code></pre> <p>Exemple de script:</p> <pre><code>import \"lib1.subscript\";\nif (false) import \"lib2.subscript\"; // -&gt; import non pris en compte\n\nhello(\"world!\");\n$logger.debug(x);           // -&gt; g\u00e9n\u00e9rere une erreur car x pas visible\n</code></pre>"},{"location":"reference/script/#remarque","title":"Remarque","text":"<p>Il est \u00e9galement possible d'ex\u00e9cuter un script depuis un script au moyen de la m\u00e9thode <code>$script.call</code>. Cette m\u00e9thode permet en plus de passer des param\u00e8tres au script. Elle retourne un map contenant les objets (variables, fonctions, etc.) export\u00e9s par le script.</p> <p>Exemple:</p> <pre><code>// script \"otherScript.script\"\nvar text = \"Hello ${me}!\",\nvar func = function(p) {\n  return $logger.debug(\"calling func(${p}) !\");\n};\nexport { text, func };\n</code></pre> <pre><code>// autre script\nvar res = $script.call(\"otherScript\", { me : \"Foo\" });\n$logger.debug(res);           // -&gt; {\"func\": function[], \"text\": \"Hello Foo!\"}\n$logger.debug(res.text);      // -&gt; Hello Foo!\n$logger.debug(res.func(123)); // 2 fois -&gt;  func(123) !\n</code></pre>"},{"location":"reference/script/#tableaux","title":"Tableaux","text":"<p>Le langage supporte les tableaux de valeurs. Les \u00e9l\u00e9ments d'un tableau sont  accessibles \u00e0 l'aide de la notation <code>x[]</code>.</p> <pre><code>var x = [ 1, \"a\" ];\nvar y = [ 1, [ \"a\", 5], \"z\" ];\n\n$logger.debug(x[0]);     // retourne 1\n$logger.debug(x[1]);     // retourne a\n$logger.debug(y[1]);     // retourne [\"a\", 5]\n$logger.debug(y[1][1]);  // retourne 5\n</code></pre>"},{"location":"reference/script/#operateurs","title":"Op\u00e9rateurs","text":"<p>Il est possible d'utiliser les op\u00e9rateurs <code>+</code>, <code>+=</code>, <code>&amp;</code> et <code>&amp;=</code> pour ajouter  des \u00e9l\u00e9ments \u00e0 un tableau. Il faut pour cela que le membre de gauche de  l'op\u00e9ration soit un tableau. Ainsi:</p> <ul> <li>l'op\u00e9rateur <code>+</code> permet de g\u00e9n\u00e9rer un nouveau tableau form\u00e9 des deux    membres de l'op\u00e9ration; attention, cet op\u00e9rateur ne modifie pas le tableau    r\u00e9f\u00e9renc\u00e9 dans le membre de gauche</li> <li>l'op\u00e9rateur <code>+=</code> permet d'ajouter un \u00e9l\u00e9ment au membre de gauche</li> <li>l'op\u00e9rateur <code>&amp;</code> permet de g\u00e9n\u00e9rer un nouveau tableau r\u00e9sultant de la    concat\u00e9nation des deux membres de l'op\u00e9ration; le r\u00e9sultat est identique \u00e0    l'op\u00e9rateur <code>+</code>, \u00e0 l'exception du cas o\u00f9 le membre de droite est \u00e9galement    un tableau. Dans ce cas, le contenu du tableau de droite est concat\u00e9n\u00e9 au    contenu du tableau de gauche</li> <li>l'op\u00e9rateur <code>&amp;=</code> permet de concat\u00e9ner l'\u00e9l\u00e9ment de droite au contenu de    l'\u00e9l\u00e9ment de gauche; le r\u00e9sultat est identique \u00e0 l'op\u00e9rateur <code>+=</code>, \u00e0    l'exception du cas o\u00f9 le membre de droite est \u00e9galement   un tableau. Dans ce cas, le tableau de gauche est le r\u00e9sultat de la fusion    des deux tableaux</li> </ul> <pre><code>var a = [1, 2];\nvar b = 3;\nvar c = [4, 5];\n\n$logger.debug(a + b);  // affiche [1, 2, 3]\n$logger.debug(a + c);  // affiche [1, 2, [4, 5]]\n\n$logger.debug(a &amp; b);  // affiche [1, 2, 3]\n$logger.debug(a &amp; c);  // affiche [1, 2, 4, 5]\n</code></pre>"},{"location":"reference/script/#map","title":"Map","text":"<p>Le langage supporte les maps (ou dictionnaires). Un map est un objet constitu\u00e9  d'un ensemble de propri\u00e9t\u00e9s auxquelles peuvent \u00eatre associ\u00e9es une valeur ou  un objet (map, tableau, fonction, etc.).</p> <p>Les propri\u00e9t\u00e9s d'un map peuvent \u00eatre r\u00e9f\u00e9renc\u00e9s au moyen de la notation  <code>map.property</code> ou de la notation <code>map[\"property\"]</code>, comme en javascript.</p> <pre><code>var m01 = { x : 1, y : 2 };\n$logger.debug(m01.x);\n$logger.debug(m01['y']);\n</code></pre> <p>Une fonction d\u00e9finie en tant que propri\u00e9t\u00e9 d'un map peut r\u00e9f\u00e9rencer ce  dernier au moyen du mot-cl\u00e9 <code>this</code>. Voici un exemple:</p> <pre><code>var malib = {\n    mode: \"web\",\n    getMode: function() {\n        return this.mode;\n    },\n    extract1: function(obj) {\n        return obj[this.mode];\n    },\n    extract2: function(obj) {\n        return \"${obj[this.mode]}\";\n    },\n    extract3: function(obj) {\n        return \"${obj.${this.mode}}\";\n    },\n    extract4: function(obj) {\n        return \"${obj['${this.mode}']}\";\n    }\n};\n\n$logger.info(malib.getMode());\n\nvar obj = { print: 1, web: 2, other: 3 };\n$logger.info(malib.extract1(obj));\n$logger.info(malib.extract2(obj));\n$logger.info(malib.extract3(obj));\n$logger.info(malib.extract4(obj));\n</code></pre> <p>\u00c0 l'ex\u00e9cution, le script ci-dessus inscrira les lignes \"web\" suivi de quatre  fois \"2\" dans le log. Les diff\u00e9rentes variantes de la fonction <code>extract</code>  illustrent comment on peut r\u00e9f\u00e9rencer une propri\u00e9t\u00e9 d'un map. </p>"},{"location":"reference/script/#operateurs_1","title":"Op\u00e9rateurs","text":"<p>Les maps supportent les op\u00e9rateurs <code>&amp;</code> et <code>&amp;=</code> qui permettent d'\u00e9tendre le  map de gauche par le map de droite. Il faut donc que les deux membres de  l'op\u00e9rateur soient des maps (le membre de droite peut \u00eatre <code>null</code>, auquel  cas l'op\u00e9ration est sans effet).</p> <pre><code>var foo = { a: \"hello\", label: \"foo\" };\nvar bar = { b: \"world\", label: \"bar\" };\n\n$logger.info(foo &amp; bar);    // {\"a\": hello, \"b\": world, \"label\": bar}\n$logger.info(bar &amp; foo);    // {\"a\": hello, \"b\": world, \"label\": foo}\n\nfoo &amp;= bar;\n$logger.info(foo);          // {\"a\": hello, \"b\": world, \"label\": bar}\n\n$logger.info(bar &amp; null);   // {\"b\": world, \"label\": bar}\n</code></pre>"},{"location":"reference/script/#arithmetique","title":"Arithm\u00e9tique","text":"<p>Le moteur de script supporte les op\u00e9rations arithm\u00e9tiques de base <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code> et <code>%</code> (modulo). Ils sont interpr\u00e9t\u00e9s comme op\u00e9rateurs  arithm\u00e9tiques lorsque le membre de gauche de l'op\u00e9ration est un nombre.</p> <p>Si le membre de gauche est une cha\u00eene de caract\u00e8res, le moteur essaiera  d'effectuer un cast de la valeur pour en d\u00e9duire un nombre. Ainsi, une somme  <code>\"2\" + \"3\"</code> donnera le r\u00e9sultat <code>5</code> (sous forme de nombre). Ce m\u00e9canisme  permet d'additionner des r\u00e9f\u00e9rences de champs, par exemple  <code>${data:prix} + ${data:tva}</code> et d'obtenir un nombre en r\u00e9sultat.</p> <pre><code>$logger.info(typeof (\"2\" + \"3\"));       // affiche \"number\"\n</code></pre> <p>Certains op\u00e9rateurs peuvent fonctionner diff\u00e9remment selon le type de  donn\u00e9es sur lesquels ils sont utilis\u00e9s. C'est le cas notamment des tableaux,  qui interpr\u00e8tent les op\u00e9rateurs <code>+</code> et <code>&amp;</code> (ainsi que <code>+=</code> et <code>&amp;=</code>) de  mani\u00e8re particuli\u00e8re (voir chapitre relatif aux tableaux.)</p>"},{"location":"reference/script/#infinity-et-nan","title":"Infinity et NaN","text":"<p>Le moteur de script supporte les valeurs \"Infinity\", \"-Infinity\", \"NaN\"  ainsi que le \"negative zero\". Cela signifie qu'un calcul du type <code>1 / 0</code> ne  d\u00e9clenchera pas d'erreur, mais renverra une valeur \"Infinity\". Un calcul du  type <code>1 / -0</code> retournera quant \u00e0 lui une valeur \"-Infinity\" (le langage  int\u00e8gre la notion de signature des z\u00e9ros inspir\u00e9e de l'IEEE 754).</p> <p>Les op\u00e9rations arithm\u00e9tiques et les fonctions de tests sont capables, dans une certaine mesure, de travailler avec ces types de valeurs. Ainsi par exemple, le code ci-dessous affichera la valeur \"true\":</p> <pre><code>if (5 / 0 &gt; 10) {               // -&gt; le test Infinity &gt; 10 est VRAI\n  $logger.println(\"true\");\n} else {\n  $logger.println(\"false\");\n} \n</code></pre>"},{"location":"reference/script/#true-et-false","title":"true et false","text":"<p>Les mots-cl\u00e9s <code>true</code> et <code>false</code> sont pr\u00e9vus par le langage. Ils repr\u00e9sentent  les valeurs <code>1</code> et <code>0</code>.</p> <p>Note</p> <p>Il est possible d'utiliser les op\u00e9rateurs arithm\u00e9tiques sur les  valeurs bool\u00e9ennes. Ainsi par exemple <code>true + true</code> retournera <code>2</code>. Ce comportement peut \u00eatre amen\u00e9 \u00e0 changer dans les versions futures.</p>"},{"location":"reference/script/#concatenation","title":"Concat\u00e9nation","text":"<p>L'op\u00e9rateur permettant la concat\u00e9nation de strings est <code>&amp;</code>. Cet op\u00e9rateur  peut prendre des op\u00e9randes de type \"number\" ou \"string\", mais retournera  syst\u00e9matiquement un r\u00e9sultat sous forme de \"string\".</p>"},{"location":"reference/script/#boucles","title":"Boucles","text":"<p>Les boucles sont possibles via les mots-cl\u00e9s <code>for</code> et <code>while</code>. La notation  <code>do..while</code> est \u00e9galement support\u00e9e. La syntaxe est la m\u00eame qu'en java:</p> <pre><code>var i;\nfor (i = 0; i &lt; 10; i++) {\n  ...\n}\n\nfor (i : [1, 2, 3]) {\n  ...\n}\n\ni = 0;\nwhile (i++ &lt; 10) {\n  ...\n}\n\ni = 0;\ndo {\n  ...\n} while (i++ &lt; 10);\n</code></pre> <p>Les boucles peuvent \u00eatre stopp\u00e9es au moyen du mot-cl\u00e9 <code>break</code>. Le mot cl\u00e9  <code>break</code> met fin imm\u00e9diatement \u00e0 la boucle. Les instructions qui suivent le  <code>break</code> ne sont pas \u00e9valu\u00e9es.</p> <p>De mani\u00e8re similaire, le mot-cl\u00e9 <code>continue</code> permet de sauter le reste du  traitement d'une boucle jusqu'\u00e0 l'it\u00e9ration suivante.</p>"},{"location":"reference/script/#tests-logiques-selection","title":"Tests logiques / S\u00e9lection","text":""},{"location":"reference/script/#ifthenelse","title":"If/Then/Else","text":"<p>Les tests de type \"if/then/else\" sont r\u00e9alisables au moyen de deux variantes:</p> <pre><code>if (i &lt; 10) {\n  ...\n} else {\n  ...\n}\n\nvar x = i &lt; 10 ? \"foo\" : \"bar\"; \n</code></pre> <p>Dans le premier cas ci-dessus, la partie \"else\" est optionnelle.</p>"},{"location":"reference/script/#switch","title":"Switch","text":"<p>Le switch utilise la m\u00eame syntaxe que java :</p> <pre><code>switch (x) {\n  case 1:\n  case 2:\n    $logger.debug(\"1-2\");\n    break;\n  case 3:\n  case 4: {\n    $logger.debug(\"3-4\");\n    break;\n  }\n  case 5: {\n    $logger.debug(\"5\");\n    // pas de break =&gt; on continue avec les cases suivants\n  }\n  case 6:\n    $logger.debug(\"6\");\n    break;\n  case \"empty\": {\n    $logger.debug(x);\n    break;\n  }\n  default: {\n    $logger.debug(\"99\");\n  }\n}\n</code></pre>"},{"location":"reference/script/#fonctions","title":"Fonctions","text":"<p>On peut d\u00e9clarer une fonction au moyen du mot-cl\u00e9 <code>function</code>. Il existe deux  mani\u00e8res de d\u00e9clarer une fonction :</p> <ol> <li> <p>Via une d\u00e9claration de fonction nomm\u00e9e, par exemple:</p> <pre><code>function foo(msg) {\n  return msg;\n}\n\nvar x = foo(\"foo\");\n</code></pre> </li> <li> <p>Via une d\u00e9claration inline. Dans ce cas, la fonction doit \u00eatre mapp\u00e9e sur      une variable ou une propri\u00e9t\u00e9 d'objet. Le \";\" est requis apr\u00e8s la      d\u00e9finition de la fonction.</p> <pre><code>var foo = function(msg) {\n  return msg;\n};\n</code></pre> </li> </ol> <p>Le mot-cl\u00e9 <code>return</code> permet de g\u00e9n\u00e9rer un retour de valeur pour la fonction.  L'\u00e9valuation du mot-cl\u00e9 <code>return</code> met imm\u00e9diatement fin \u00e0 l'ex\u00e9cution de la  fonction: les instructions qui figurent apr\u00e8s le <code>return</code> ne sont pas \u00e9valu\u00e9es.</p>"},{"location":"reference/script/#parametres","title":"Param\u00e8tres","text":"<p>Les param\u00e8tres doivent \u00eatre d\u00e9clar\u00e9s au niveau d'une fonction (la fonction  ne g\u00e8re pas de param\u00e8tres du style <code>param1</code>, <code>param2</code>, etc.).</p> <p>Il est possible de sp\u00e9cifier une valeur par d\u00e9faut sur les param\u00e8tres. Cette  valeur par d\u00e9faut est reprise lorsque l'appel de fonction comporte moins de  param\u00e8tres que le nombre attendu par la fonction. Pour sp\u00e9cifier une valeur  par d\u00e9faut, il suffit d'ajouter un <code>=</code> apr\u00e8s le nom du param\u00e8tre et de  pr\u00e9ciser la valeur \u00e0 attribuer. La valeur peut \u00eatre une expression, mais  elle ne peut pas d\u00e9pendre d'autres param\u00e8tres de la fonction.</p> <pre><code>function foo(a, b, c = 3) {\n  if (b == null) b = 2;\n  return a + b + c;\n}\n\nvar x = foo(1, 2, 3);    // attendu: 6\nvar y = foo(2, 2);       // attendu: 7\nvar z = foo(3);          // attendu: 8\n</code></pre>"},{"location":"reference/script/#passage-de-parametre-par-valeur-ou-par-reference-operateur","title":"Passage de param\u00e8tre par valeur ou par r\u00e9f\u00e9rence (op\u00e9rateur <code>&amp;</code>)","text":"<p>Les param\u00e8tres de fonction peuvent \u00eatre pass\u00e9s par valeur ou par r\u00e9f\u00e9rence.</p> <p>Les variables de type \"value\" (donc les string lit\u00e9rales ou les nombres) sont par d\u00e9faut toujours pass\u00e9es par valeur. Ainsi, dans l'exemple suivant,  la valeur de la variable <code>foo</code> n'est pas modifi\u00e9 par la fonction.</p> <pre><code>function add(x) {\n  x = x + 1;\n}\n\nvar foo = 1;\nadd(foo);     // foo contient 1\n</code></pre> <p>Il en est de m\u00eame pour les objets de type \"array\" ou \"map\": ces derniers sont par d\u00e9faut pass\u00e9s par valeur. Cela signifie que lors d'un appel de fonction, l'objet \"array\" ou \"map\" est clon\u00e9 avant d'\u00eatre pass\u00e9 \u00e0 la fonction. Les modifications apport\u00e9es au param\u00e8tre par une fonction ne modifient pas l'objet initial.</p> <pre><code>function modify(x) {\n  x.bar = 1;\n}\n\nvar foo = {};\nmodify(foo);      // foo vaut {}\n</code></pre> <p>Il est cependant possible de passer ces objets par r\u00e9f\u00e9rence. Dans ce cas, l'objet n'est plus clon\u00e9 mais pass\u00e9 en direct en param\u00e8tre. Cela signifie que les modifications d'objet r\u00e9alis\u00e9es par la fonction modifient r\u00e9ellement l'objet initial.</p> <p>Le passage par r\u00e9f\u00e9rence est r\u00e9alis\u00e9 au moyen de l'op\u00e9rateur <code>&amp;</code> plac\u00e9 en pr\u00e9fixe du nom de variable lors de l'appel de fonction.</p> <pre><code>function modify(x) {\n  x.bar = 1;\n}\n\nvar foo = {};\nmodify(&amp;foo);     // foo vaut { bar: 1 }\n</code></pre> <p>Le passage par r\u00e9f\u00e9rence est recommand\u00e9 dans le cas de gros objets pour des questions de performances car il \u00e9vite les copies de donn\u00e9es en m\u00e9moire. \u00c0 noter que les objets de type \"pojo\" sont automatiquement pass\u00e9s par r\u00e9f\u00e9rence.</p>"},{"location":"reference/script/#methodes-mises-a-disposition-par-ewt","title":"M\u00e9thodes mises \u00e0 disposition par Ewt","text":"<p>Note pr\u00e9liminaire : Dans la suite de ce document, nous nous effor\u00e7ons  d'utiliser des termes distincts pour identifier les fonctions pr\u00e9sentes  dans un script et les m\u00e9thodes pr\u00e9sentes dans une librairie Ewt. Ainsi, et  sans autre indication particuli\u00e8re:</p> <ul> <li>le terme \"fonction\" d\u00e9signe une fonction d\u00e9finie au niveau d'un script;</li> <li>le terme \"m\u00e9thode\" d\u00e9signe quant \u00e0 lui une m\u00e9thode mise \u00e0 disposition    par une librairie Ewt.</li> </ul> <p>La fonction est \u00e9crite en script alors que la m\u00e9thode est \u00e9crite en java. </p> <p>Le moteur fournit une s\u00e9rie de librairies de m\u00e9thodes utilisables depuis les  scripts. Ces m\u00e9thodes sont impl\u00e9ment\u00e9es au niveau du package <code>ch.epilogic.ewt.scripts.library</code>. Les m\u00e9thodes sont regroup\u00e9es en librairies. Ainsi, les m\u00e9thodes permettant de g\u00e9n\u00e9rer des traces dans le log sont  regroup\u00e9es au niveau de la librairie <code>$logger</code>.</p> <p>Les librairies sont d\u00e9crites dans le chapitre  Librairie de m\u00e9thodes.</p> <p>Notes pour le d\u00e9veloppement de librairies Ewt</p> <p>Chaque classe qui veut \u00eatre utilisable en tant que librairie doit \u00eatre  r\u00e9f\u00e9renc\u00e9e au moyen de l'annotation <code>@EwtScriptLibrary</code>. En param\u00e8tre de  l'annotation on indiquera le nom de la librairie qui sera vue par le script,  ainsi que d'\u00e9ventuels alias. Par exemple:</p> <pre><code>@EwtScriptLibrary(name = \"$cal\", alias = { \"$calendar\", \"$datetime\" })\n</code></pre> <p>Au sein d'une librairie, les m\u00e9thodes mises \u00e0 disposition des scripts  doivent \u00eatre des m\u00e9thodes statiques et \u00eatre r\u00e9f\u00e9renc\u00e9es au moyen de  l'annotation <code>@EwtScriptMethod</code>. En param\u00e8tre de l'annotation on indiquera le  nom de la m\u00e9thode qui sera vue par le script, ainsi que d'\u00e9ventuels alias.  Par exemple:</p> <pre><code>@EwtScriptMethod(name = \"checkPermissions\", alias = { \"checkPermission\", \"hasPermission\" })\n</code></pre> <p>Les m\u00e9thodes mises \u00e0 disposition sont visibles comme des propri\u00e9t\u00e9s de la  librairie. Ainsi, par exemple la librairie <code>EwtScriptLogger</code> est annot\u00e9e  avec le libell\u00e9 <code>$logger</code>. Elle met \u00e0 disposition une m\u00e9thode <code>debug</code> qui  est elle aussi annot\u00e9e avec le libell\u00e9 <code>debug</code>. Vue du script, cette m\u00e9thode  sera accessible en tant que <code>$logger.debug()</code>.</p> <p>Le processeur s'attend \u00e0 ce que chaque m\u00e9thode mise \u00e0 disposition par une  librairie re\u00e7oive une r\u00e9f\u00e9rence au processeur lui-m\u00eame en premier param\u00e8tre.  Ce param\u00e8tre est utile \u00e0 la m\u00e9thode pour conna\u00eetre le thread d'ex\u00e9cution,  les informations concernant l'application, les dossiers ouverts ou le  connecteur \u00e0 la base de donn\u00e9es. Les autres param\u00e8tres de la m\u00e9thode sont  libres : le processeur essaie de mapper les param\u00e8tres pass\u00e9s par le script  vers les param\u00e8tres de la m\u00e9thode.</p>"},{"location":"reference/script/#fonction-de-callback","title":"Fonction de callback","text":"<p>Certaines librairies peuvent n\u00e9cessiter des fonctions de callback. Il s'agit  de fonctions d\u00e9finies au niveau des scripts, mais invoqu\u00e9es depuis une  librairie.</p> <p>Par exemple, il est possible de passer une fonction de callback aux m\u00e9thodes  <code>$script.call</code>, <code>$http.request</code>, <code>$http.get</code> et <code>$http.post</code> via une propri\u00e9t\u00e9  <code>onprogress</code>. Cela permet au script de recevoir un feedback sur l'\u00e9tat  d'avancement de la t\u00e2che (ex\u00e9cution de script ou t\u00e9l\u00e9chargement). Voici deux  exemples de code qui, in fine, r\u00e9alisent le m\u00eame travail.</p> <p>Exemple 1:</p> <pre><code>$http.get(\"https://planet.osm.ch/switzerland.obf\", {\n  destfile: $file.load(\"C:/Temp/switzerland.obf\"),\n  onprogress: function(event) {\n    $logger.info(\"${event.progress}%\");\n  }\n});\n</code></pre> <p>Exemple 2:</p> <pre><code>$http.get(\"https://planet.osm.ch/switzerland.obf\", {\n  destfile: $file.load(\"C:/Temp/switzerland.obf\"),\n  onprogress: progress\n});\n\nfunction progress(event) {\n  $logger.info(\"${event.progress}%\");\n}\n</code></pre> <p>Le premier exemple d\u00e9clare une fonction de callback inline alors que le  second r\u00e9f\u00e9rence une fonction existante. Dans le cas de <code>onprogress</code>, la  fonction de callback est invoqu\u00e9e toutes les secondes. Notez au passage  que le langage de script autorise de r\u00e9f\u00e9rencer une fonction d\u00e9clar\u00e9e plus  bas dans le code.</p> <p>Certaines m\u00e9thodes interpr\u00e8tent la valeur de retour de la fonction de  callback. Si l'on reprend l'exemple 1 ci-dessus, il est par exemple  possible d'interrompre le t\u00e9l\u00e9chargement en effectuant un <code>return false;</code>  depuis la fonction de callback. Par exemple:</p> <pre><code>$http.get(\"https://planet.osm.ch/switzerland.obf\", {\n  destfile: $file.load(\"C:/Temp/switzerland.obf\"),\n  onprogress: function(event) {\n    $logger.info(\"${event.progress}%\");\n\n    // si le fichier fait plus de 50Mo, on stoppe\n    return (event.loaded &lt;= 52428800);\n  }\n});\n</code></pre> <p>Veuillez vous r\u00e9f\u00e9rer \u00e0 la documentation des m\u00e9thodes pour conna\u00eetre les  param\u00e8tres et les valeurs de retour possibles.</p>"},{"location":"reference/script/#calcul-de-champs-de-dossier","title":"Calcul de champs de dossier","text":"<p>Le langage de script permet de d\u00e9finir des blocs de calcul de champs de  dossiers. On peut voir ces blocs comme des fonctions dont le r\u00e9sultat est  enregistr\u00e9 en tant que valeur dans le champ concern\u00e9. </p> <p>Il existe en r\u00e9alit\u00e9 plusieurs fa\u00e7ons de mettre \u00e0 jour un champ de dossier:</p> <ol> <li>La m\u00e9thode <code>$data.set</code> permet de renseigner un champ directement dans un      dossier (en m\u00e9moire)</li> <li>Il est possible de forcer une valeur directement au niveau de la base de      donn\u00e9es, mais dans ce cas, il faudra indiquer \u00e0 Ewt de recharger les      donn\u00e9es \u00e0 partir de la base de donn\u00e9es, sans quoi la valeur inscrite en      base de donn\u00e9es sera remplac\u00e9e par la valeur en m\u00e9moire lors du prochain      flush</li> <li>Il est possible de d\u00e9finir des blocs de calcul. C'est ce mode de      fonctionnement que nous d\u00e9crivons dans la suite de ce chapitre.</li> </ol> <p>Les m\u00e9thodes 1 et 2 ci-dessus sont assez simples \u00e0 comprendre : on met \u00e0  jour une valeur de champ de fa\u00e7on directe, soit en m\u00e9moire, soit en base de  donn\u00e9es.</p> <p>La 3e m\u00e9thode est plus avanc\u00e9e et offre un avantage sur les autres: elle  int\u00e8gre un m\u00e9canisme de r\u00e9solution automatique des d\u00e9pendances. Cela  signifie que lorsqu'on r\u00e9f\u00e9rence un champ pour lequel il existe  un calcul, le moteur se charge de calculer ce champ si cela n'a pas d\u00e9j\u00e0  \u00e9t\u00e9 fait durant le traitement.</p> <p>Le moteur ne recherche les calculs que dans le bloc courant ou dans un bloc  parent. Nous reviendrons plus tard sur cette notation. Pour l'instant,  voyons en pratique ce que permet le m\u00e9canisme de r\u00e9solution des d\u00e9pendances  au moyen d'un exemple. </p> <pre><code>$logger.info(#tva);\n\n#tva {\n    return 8.1 / 100;\n}\n\n#totalTTC {\n    return (1 + #tva) * #totalHT;\n}\n\n#totalHT {\n    return $aggregate.sum(#item.prixHT);\n}\n\n#item.prixHT {\n    return #item.quantite * #item.prixUnite;\n}\n</code></pre> <p>Pour d\u00e9finir une r\u00e8gle de calcul, on utilise la notation  \"sharp\". Dans l'exemple ci-dessus, nous calculons donc les  champs <code>#tva</code>, <code>#totalTTC</code>, <code>#totalHT</code> et <code>#item.prixHT</code>. Les trois premiers  champs sont des champs \"single\" et le dernier est un champ \"multi\".</p> <p>Format de la r\u00e9f\u00e9rence</p> <p>Dans cet exemple on a utilis\u00e9 la notation \"sharp\", mais le m\u00e9canisme de  r\u00e9solution des d\u00e9pendances fonctionne \u00e9galement pour les r\u00e9f\u00e9rences  utilisant la notation <code>${data:...}</code>.</p> <p>On note que la ligne 1 contient une r\u00e9f\u00e9rence au champ \"tva\". Lorsqu'il  existe un calcul pour un champ r\u00e9f\u00e9renc\u00e9 dans le m\u00eame bloc ou dans un bloc  parent de l'actuel, et que ce champ n'a pas d\u00e9j\u00e0 \u00e9t\u00e9 calcul\u00e9, le moteur met  l'ex\u00e9cution du script en suspens et \u00e9value le champ imm\u00e9diatement afin que la  r\u00e9f\u00e9rence re\u00e7oive la valeur calcul\u00e9e. Concr\u00e8tement, cela signifie que la  r\u00e9f\u00e9rence au champ \"tva\" de la ligne 1 entra\u00eene l'\u00e9valuation du bloc <code>#tva</code>  des lignes 3 \u00e0 5. Une fois que ce champ est calcul\u00e9, sa valeur est transmise \u00e0  la m\u00e9thode <code>$logger.info</code>.</p> <p>Dans la m\u00eame id\u00e9e, on note que le calcul de <code>#totalTTC</code> s'appuie sur  <code>#totalHT</code> qui est calcul\u00e9 plus bas dans le code. Ewt se charge  automatiquement de calculer ce dernier afin de pouvoir calculer <code>#totalTTC</code>  avec la bonne valeur.</p> <p>De mani\u00e8re analogue, on voit que <code>#totalHT</code> requiert <code>#item.prixHT</code> dans son  calcul. L\u00e0 encore Ewt se charge de calculer ce dernier au moment o\u00f9 cela  est n\u00e9cessaire.</p> <p>Le cas de <code>#item.prixHT</code> est particulier. Ce champ est un champ \"multi\", ce  qui signifie qu'il peut exister plusieurs tuples pour ce champ. Dans ce cas,  le moteur se charge d'it\u00e9rer sur tous les tuples pour calculer la valeur du  champ \"multi\". Il est possible d'appliquer un filtre et un tri sur ces  it\u00e9rations. Pour ce faire, on utilisera le m\u00eame m\u00e9canisme de filtre et de  tri que celui d\u00e9crit dans le chapitre traitant de  notation \"sharp\".</p>"},{"location":"reference/script/#blocs-de-calculs","title":"Blocs de calculs","text":"<p>Lorsque le processeur traite un bloc (c'est-\u00e0-dire un ensemble  d'instructions d\u00e9limit\u00e9 par les caract\u00e8res <code>{</code> et <code>}</code>), il recherche  imm\u00e9diatement tous les blocs de calculs d\u00e9finis dans ce bloc et les ajoute \u00e0  sa liste de r\u00e8gles de calculs \u00e0 traiter.</p> <p>Si une instruction fait r\u00e9f\u00e9rence \u00e0 l'un de ces champs, alors le calcul du  champ est d\u00e9clench\u00e9 et le calcul est retir\u00e9 de la liste de calculs \u00e0 traiter.</p> <p>Cela signifie que le moteur ne cherchera \u00e0 r\u00e9soudre que les champs pour  lesquels il a connaissance qu'un bloc de calcul existe. Cela signifie  \u00e9galement qu'il est possible de conditionner tout un ensemble de calculs.  Par exemple, on peut imaginer la situation suivante:</p> <pre><code>if (x == 1) {\n    #comment {\n        return #remark;\n    }\n\n    #remark {\n        return \"only computed when x == 1\";\n    }\n}\n</code></pre> <p>Dans l'exemple ci-dessus, les champs \"comment\" et \"remark\" ne sont calcul\u00e9s  que si la condition est remplie.</p>"},{"location":"reference/script/#desactivation-de-boucle","title":"D\u00e9sactivation de boucle","text":"<p>Par d\u00e9faut, le calcul d'un champ \"multi\" consiste \u00e0 it\u00e9rer sur tous les tuples du groupe auquel le champ appartient. Le moteur se charge d'it\u00e9rer automatiquement sur les tuples pr\u00e9sents en m\u00e9moire, et enregistre la valeur de retour du bloc dans le champ du i-\u00e8me tuple.</p> <p>Il peut arriver que l'on veuille calculer un champ \"multi\" autrement qu'en mode it\u00e9ratif. Par exemple, il se peut qu'on veuille le calculer au moyen d'une requ\u00eate SQL. Dans ce cas, le mode it\u00e9ratif doit \u00eatre d\u00e9sactiv\u00e9.</p> <p>Pour ce faire, il suffit de sp\u00e9cifier une option <code>{ iterate: false }</code> \u00e0 la r\u00e9f\u00e9rence \"sharp\":</p> <pre><code>#detail.montantHT({ iterate: false, sync: true }) {\n    $sql.update(`update DetailOffre\n                 set MontantHT = Chiffrage * coalesce(Tarif, ?)\n                 where idOffre=?`::T, [ #info.tarif, #info.idOffre ]);\n}\n</code></pre> <p>On notera que le bloc ci-dessus ne contient pas d'instruction <code>return</code>. Ici on ne souhaite pas renseigner la valeur du champ, mais uniquement faire une mise \u00e0 jour en base de donn\u00e9es.</p> <p>On notera \u00e9galement la pr\u00e9sence d'une option <code>sync</code> qui indique au moteur de forcer une synchronisation avec la base de donn\u00e9es. Cela implique un flush des donn\u00e9es avant traitement, et un reload apr\u00e8s traitement afin  que les valeurs du champ en m\u00e9moire soient synchrones avec celles  enregistr\u00e9es en base de donn\u00e9es. L'option <code>sync</code> est ignor\u00e9e  en mode it\u00e9ratif.</p> <p>Options <code>iterate</code> et <code>sync</code></p> <p>Les options <code>iterate</code> et <code>sync</code> ne sont valables que dans le cas de  r\u00e9f\u00e9rences \"sharp\". Elles sont sans effet sur une notation \"sharp\"  utilis\u00e9e pour lire une valeur de champ.</p>"},{"location":"reference/script/#mise-a-jour-multiple","title":"Mise \u00e0 jour multiple","text":"<p>Dans l'exemple du chapitre pr\u00e9c\u00e9dent, nous avons montr\u00e9 comment mettre \u00e0 jour un champ \"multi\" sans it\u00e9ration et sans instruction <code>return</code>.</p> <p>Une alternative utilisant le <code>return</code> est possible et peut \u00eatre exprim\u00e9e ainsi:</p> <pre><code>#detail.montantHT({ iterate: false }) {\n    return $sql.mselect(`select idDetailOffre, Chiffrage * coalesce(Tarif, ?)\n                         from DetailOffre\n                         where idOffre=?`::T, [ #info.tarif, #info.idOffre ]);\n}\n</code></pre> <p>L'option <code>sync</code> doit \u00eatre retir\u00e9e, car la mise \u00e0 jour de valeur se fait directement en m\u00e9moire. Il n'y a donc pas lieu de recharger les valeurs depuis la base de donn\u00e9es.</p> <p>\u00ccci l'id\u00e9e est de mettre \u00e0 jour directement les valeurs en m\u00e9moire. Le bloc attend donc un set de valeurs \u00e0 enregistrer dans les champs. Ce set peut se pr\u00e9senter sous diff\u00e9rentes formes:</p> <ul> <li>un tableau 2D (comme dans l'exemple ci-dessus)</li> <li> <p>un tableau de maps contenant les propri\u00e9t\u00e9s correspondant \u00e0 l'id de     tuple et la valeur du champ, par exemple:</p> <pre><code>[ { \"idDetailOffre\": 12, \"montantHT\": 123.5 },\n  { \"idDetailOffre\": 14, \"montantHT\": 50 } ]\n</code></pre> </li> <li> <p>un map dans lequel la cl\u00e9 est la valeur de l'identifiant de tuple et la     valeur est la valeur \u00e0 enregistrer dans le champ, par exemple:</p> <pre><code>{ \"12\": 123.5, \"14\": 50 }\n</code></pre> </li> </ul>"},{"location":"reference/script/#contexte_1","title":"Contexte","text":"<p>Le contexte joue un r\u00f4le essentiel dans le traitement des calculs de  champs. Les expressions sharp utilis\u00e9es pour d\u00e9signer les champs doivent  d\u00e9signer un champ (ou un ensemble de champs mutli) valide au moment de  l'ex\u00e9cution.</p> <p>Pour comprendre la port\u00e9e de cette remarque, consid\u00e9rons le code suivant:</p> <pre><code>$doc.open(\"vendeur[2]\");\n\n#email {\n    return #prenom &amp; \".\" &amp; #nom &amp; \"@my.domain\";\n}\n</code></pre> <p>Le code ci-dessus n'est pas fonctionnel, voire peut \u00eatre mal interpr\u00e9t\u00e9  par le moteur au moment de l'ex\u00e9cution. Comme le calcul du champ  <code>#email</code> est plac\u00e9 \u00e0 la racine du script, le moteur va chercher \u00e0  r\u00e9soudre le contexte correspondant d\u00e8s le d\u00e9marrage du script, avant  m\u00eame que l'instruction <code>$doc.open</code> ne soit invoqu\u00e9e.</p> <p>En effet, comme les r\u00e9f\u00e9rences de champs peuvent \u00eatre plac\u00e9es avant les  d\u00e9finitions de calculs, le moteur est oblig\u00e9 de rechercher tous les  calculs d\u00e9clar\u00e9s dans le bloc courant (en l'occurrence la racine du  script) avant d'\u00e9valuer le contenu du bloc.</p> <p>Par cons\u00e9quent, si le script ci-dessus est \u00e9valu\u00e9 en-dehors de tout  contexte, l'ex\u00e9cution g\u00e9n\u00e9rera une erreur car le moteur ne saura pas  comment interpr\u00e9ter la r\u00e9f\u00e9rence <code>#email</code>. Si le script est \u00e9valu\u00e9 dans  le contexte d'un dossier ouvert, alors la r\u00e9f\u00e9rence <code>#email</code> portera sur  le dossier en question et non pas sur le dossier \"vendeur[2]\" que l'on  ouvre au moyen de l'instruction de la premi\u00e8re ligne.</p> <p>Pour s'assurer que les r\u00e9f\u00e9rences soient \u00e9valu\u00e9es apr\u00e8s que le dossier  \"vendeur[2]\" en soit ouvert, il faut placer le calcul dans un sous-bloc:</p> <pre><code>$doc.open(\"vendeur[2]\");\n\n{\n    #email {\n        return #prenom &amp; \".\" &amp; #nom &amp; \"@my.domain\";\n    }\n}\n</code></pre> <p>Il faut garder \u00e0 l'esprit que Ewt essaie d'interpr\u00e9ter toutes les  r\u00e9f\u00e9rences de champs au moment o\u00f9 il commence \u00e0 traiter un bloc (ou le  script lui-m\u00eame). Donc dans le cas ci-dessus, la r\u00e9f\u00e9rence <code>#email</code> se  rapportera bien au champ du dossier \"vendeur[2]\". </p>"},{"location":"reference/script/#instruction-exit","title":"Instruction <code>exit</code>","text":"<p>L'instruction <code>exit</code> met imm\u00e9diatement fin \u00e0 l'ex\u00e9cution d'un script.</p> <p>On utilisera par exemple cette instruction pour interrompre l'ex\u00e9cution d'un script lorsqu'une tentative d'injection est d\u00e9tect\u00e9e.</p> <p>Cas particulier du <code>finally</code></p> <p>Pour \u00eatre exact, il existe un cas de figure dans lequel le script  n'est pas imm\u00e9diatement arr\u00eat\u00e9. Si l'instruction <code>exit</code> est  d\u00e9clench\u00e9e au sein d'un bloc <code>try/finally</code>, le code du bloc  <code>finally</code> reste malgr\u00e9 tout ex\u00e9cut\u00e9 apr\u00e8s le <code>exit</code>. Dans ce cas,  'ex\u00e9cution du script se termine juste apr\u00e8s l'\u00e9valuation du bloc  <code>finally</code>.</p>"},{"location":"reference/script/#region","title":"Region","text":"<p>Il est possible de d\u00e9finir des sections de code qui peuvent \u00eatre reprises  ailleurs dans le code. Ces sections sont appel\u00e9s <code>region</code> et elles peuvent  \u00eatre d\u00e9finies \u00e0 n'importe quel endroit dans le code. Elles peuvent m\u00eame  \u00eatre surcharg\u00e9es. Le fait de d\u00e9finir une r\u00e9gion permet d'\u00e9viter des  copier-coller de code au sein d'un m\u00eame script.</p> <p>Pour d\u00e9finir une r\u00e9gion, on utilise la syntaxe suivante:</p> <pre><code>region maregion {\n  // ensemble d'instructions\n}\n</code></pre> <p>o\u00f9 \"maregion\" est le nom donn\u00e9 \u00e0 l'ensemble d'instructions figurant entre  les accolades.</p> <p>Pour r\u00e9f\u00e9rencer une r\u00e9gion on notera simplement:</p> <pre><code>region maregion;\n</code></pre> <p>Le code plac\u00e9 entre les accolades est ex\u00e9cut\u00e9 \u00e0 l'endroit o\u00f9 il est  d\u00e9fini. Il est \u00e9galement \u00e9valu\u00e9 depuis l'endroit o\u00f9 il est r\u00e9f\u00e9renc\u00e9.</p>"},{"location":"reference/script/#exception","title":"Exception","text":"<p>Le langage supporte le d\u00e9clenchement et le traitement d'exceptions.  L'instruction <code>throw</code> permet de d\u00e9clencher une exception. Les instructions  <code>try</code>, <code>catch</code> et <code>finally</code> permettent quant \u00e0 elles de traiter l'exception.  Les exceptions qui ne sont pas explicitement d\u00e9clench\u00e9es par une instruction  <code>throw</code> sont \u00e9galement intercept\u00e9es. C'est par exemple le cas lorsque l'on  ex\u00e9cute une requ\u00eate SQL incorrecte.</p> <pre><code>try {\n  $logger.debug(\"before\");\n  throw \"ceci est une exception\";\n  $logger.debug(\"after\");             // -&gt; non ex\u00e9cut\u00e9\n}\ncatch (e) {\n  $logger.debug(e);\n}\nfinally {\n  $logger.debug(\"finally\");\n}\n</code></pre> <p>Le finally est ex\u00e9cut\u00e9 m\u00eame en cas d'instruction <code>exit</code> (notons au passage  que l'instruction <code>catch</code> n'est pas obligatoire):</p> <pre><code>try {\n  $logger.debug(\"hello\");\n  exit;\n  $logger.debug(\"world\");             // -&gt; non ex\u00e9cut\u00e9\n}\nfinally {\n  $logger.debug(\"finally\");           // ex\u00e9cut\u00e9 apr\u00e8s le exit\n}\n</code></pre> <p>Si une exception est g\u00e9n\u00e9r\u00e9e avec <code>throw</code> mais non intercept\u00e9e par un bloc  <code>try</code>, c'est le moteur Ewt qui traite l'exception et g\u00e9n\u00e8re un message  d'erreur \u00e0 l'utilisateur.</p>"},{"location":"reference/script/#annotations","title":"Annotations","text":"<p>Les annotations sont des indications de traitement du script : elles  indiquent au moteur des modes de traitement \u00e0 prendre en compte.</p> <p>Une annotation est toujours pr\u00e9fix\u00e9e par le caract\u00e8re <code>@</code>. Il est suivi d'un  nom et \u00e9ventuellement de param\u00e8tres. Les param\u00e8tres peuvent \u00eatre constitu\u00e9s  d'une valeur unique ou d'une liste de param\u00e8tres (\u00e9ventuellement avec une  valeur associ\u00e9e), comme cela se fait pour une d\u00e9claration de fonction.  Toutefois, l'annotation ne peut pas r\u00e9f\u00e9rencer de variables car elle est  \u00e9valu\u00e9e au moment du parsing et non \u00e0 l'ex\u00e9cution du script. Toutes les  valeurs pass\u00e9es en param\u00e8tre d'une annotation doivent dont \u00eatre hardcod\u00e9es.</p> <p>Le moteur supporte actuellement les annotations ci-dessous. Si d'autres  annotations sont ajout\u00e9es, elles sont ignor\u00e9es.</p>"},{"location":"reference/script/#encodingrule","title":"<code>@encoding(&lt;rule&gt;)</code>","text":"<p>Cette annotation d\u00e9clare le type d'encoding du fichier de script.  L'annotation doit \u00eatre plac\u00e9e tout au d\u00e9but du fichier  (le premier byte du fichier doit \u00eatre le \"@\" de l'annotation). Le  param\u00e8tre de l'annotation indique le type d'encoding. Exemples:  </p> <pre><code>@encoding(\"utf-8\")\n@encoding(\"iso-8859-1\")\n</code></pre> <p>Par d\u00e9faut, en l'absence d'annotation d'encoding, le script est trait\u00e9 en  utf-8.</p>"},{"location":"reference/script/#timeoutduration","title":"<code>@timeout(&lt;duration&gt;)</code>","text":"<p>Cette annotation permet d'indiquer au processeur une limite de temps en  millisecondes pour l'ex\u00e9cution du bloc courant. Cela signifie que les  instructions du bloc dans lequel se trouve l'annotation doivent \u00eatre  ex\u00e9cut\u00e9s dans le temps imparti sous peine de d\u00e9clencher une exception.  Cette exception peut \u00eatre trait\u00e9e via un bloc <code>try/catch</code>.</p> <p>Le but de l'annotation est double : permettre de mettre fin \u00e0 des boucles  infinies et permettre \u00e0 un script de s'arr\u00eater s'il n'a pas pu effectuer  le traitement dans le temps imparti. Par exemple, si le serveur  d'application impose un d\u00e9lai de r\u00e9ponse de 30 secondes et que le script  doit appeler un service tiers, on pourra stopper tout traitement.</p> <p>Limitations</p> <p>Attention, le timeout d\u00e9fini via cette annotation n'est pas une  contrainte forte. Il se peut qu'un traitement se prolonge au-del\u00e0 du  d\u00e9lai indiqu\u00e9. L'expiration du d\u00e9lai de timeout est \u00e9valu\u00e9 avant et  apr\u00e8s chaque instruction envoy\u00e9e au processeur de script, mais pas  au sein de l'instruction elle-m\u00eame. Cela signifie que si une m\u00e9thode  n\u00e9cessite plus de temps que le timeout demand\u00e9, elle ne sera pas  interrompue. Cela est plus clair avec un exemple:</p> <pre><code>try {\n    @timeout(1500)\n\n    $logger.info(\"waiting...\");\n    $script.sleep(3000);\n    $logger.info(\"done.\");\n}\ncatch (e) {\n    $logger.error(e);\n}\n</code></pre> <p>Le script ci-dessus cr\u00e9e un bloc <code>try</code> pour lequel un timeout de 1  seconde est d\u00e9fini. Le block d\u00e9clenche une attente de 3 secondes via  une instruction <code>$script.sleep</code>. On pourrait s'attendre \u00e0 ce que  l'attente soit interrompue au bout de 1 seconde, mais \u00e0 l'ex\u00e9cution ce n'est pas le cas. Le log g\u00e9n\u00e9r\u00e9 est le suivant et on constate que le traitement a bien pris 3 secondes.</p> <pre><code>2024-02-14 14:40:38 INFO   waiting...\n2024-02-14 14:40:41 ERROR  timeout\n</code></pre> <p>Cela vient du fait que le timeout est \u00e9valu\u00e9 entre les instructions  et non pas au sein des instructions elles-m\u00eames. L'instruction  <code>$script.sleep</code> n'est donc pas interrompue. Par contre \u00e0 sa sortie  le timeout est v\u00e9rifi\u00e9, ce qui d\u00e9clenche l'exception trait\u00e9e par le  <code>catch</code>. La ligne de log <code>done.</code> n'est donc pas inscrite.</p> <p>Dans le cas de cet exemple, il serait plus pertinent de remplacer  l'attente de 3 secondes par 3 attentes de 1 secondes. Cela  permettrait au processeur de d\u00e9tecter le d\u00e9passement plus t\u00f4t:</p> <pre><code>try {\n    @timeout(1000)\n\n    $logger.info(\"waiting...\");\n    for (var i = 0; i &lt; 3; ++i) {\n        $script.sleep(1000);\n    }\n    $logger.info(\"done.\");\n}\ncatch (e) {\n    $logger.error(e);\n}\n</code></pre>"},{"location":"reference/script/#unitary","title":"<code>@unitary</code>","text":"<p>Cette annotation est une d\u00e9sactivation temporaire de l'annotation <code>@timeout</code>. Elle indique que le bloc dans lequel elle est d\u00e9finie est  unitaire, c'est-\u00e0-dire qu'il doit \u00eatre ex\u00e9cut\u00e9 en int\u00e9gralit\u00e9 ou pas du  tout, mais qu'il ne peut pas \u00eatre interrompu en cours de route.  L'annotation n'attend pas de param\u00e8tre.</p> <p>L'annotation prend effet \u00e0 l'endroit o\u00f9 elle est sp\u00e9cifi\u00e9e et pr\u00e9vaut  jusqu'\u00e0 la sortie du bloc dans lequel elle se trouve. Une annotation  <code>@unitary</code> sp\u00e9cifi\u00e9e dans un sous-bloc d'un de bloc unitaire est sans  effet.</p> <p>On utilisera par exemple cette annotation pour d\u00e9signer un bloc qui effectue des traitements dont l'interruption serait susceptible de compromettre la qualit\u00e9 des donn\u00e9es.</p> <p>Voici une version modifi\u00e9e de l'exemple donn\u00e9 plus haut pour <code>@timeout</code>:</p> <pre><code>try {\n    @timeout(1000)\n\n    {\n        @unitary\n        $logger.info(\"waiting...\");\n        for (var i = 0; i &lt; 3; ++i) {\n            $script.sleep(1000);\n        }\n    }\n\n    $logger.info(\"done.\");\n}\ncatch (e) {\n    $logger.error(e);\n}\n</code></pre> <p>La pr\u00e9sence de l'annotation <code>@unitary</code> dans le sous-bloc fait que ce  dernier ne peut plus \u00eatre interrompu. Le timeout prendra donc effet  uniquement \u00e0 la sortie du sous-bloc apr\u00e8s 3 fois 1 seconde d'attente,  et non avant.</p>"},{"location":"reference/script/#acceptrule","title":"<code>@accept(&lt;rule&gt;, ...)</code>","text":"<p>Cette annotation permet de d\u00e9clarer les conditions pr\u00e9liminaires pour  l'ex\u00e9cution du script. Les conditions peuvent porter sur diff\u00e9rents  \u00e9l\u00e9ments:</p> <ul> <li>Le <code>servlet</code> (\"web\", \"rest\", \"soap\", \"data\") : cela permettrait de      refuser l'ex\u00e9cution d'un script en fonction du servlet depuis lequel      il est appel\u00e9, p.ex <code>@accept(servlet=\"rest\")</code></li> <li>Le <code>endpoint</code> utilis\u00e9 (\"rest\", \"web\", \"pub\", etc.), p.ex.      <code>@accept(endpoint=\"pub\")</code> : cela permettrait de filtrer l'ex\u00e9cution      du script en fonction du endpoint utilis\u00e9; on pourrait ainsi indiquer      que l'ex\u00e9cution du script n\u00e9cessite de passer par un endpoint qui      n\u00e9cessite une authentification.     Il est possible de sp\u00e9cifier des wildcards dans l'expression. Par      contre la valeur ne doit pas commencer par \"/\". </li> <li>Le <code>scheme</code> (protocoles \"http\", \"https\", \"ws\", \"wss\", etc.)</li> <li>Le <code>thread</code> (\"useragent\", \"scheduler\", \"unittest\"),      p.ex. <code>@accept(thread=\"scheduler\")</code> : cela     permettrait d'emp\u00eacher un utilisateur lambda d'ex\u00e9cuter une t\u00e2che      cens\u00e9e \u00eatre ex\u00e9cut\u00e9e par le scheduler</li> <li>Le <code>trigger</code> (\"default\", \"asyncscript\", \"notification\") : cela permet     de bloquer l'ex\u00e9cution d'un script pr\u00e9vu pour une notification     lorsque l'on n'est pas dans ce mode</li> <li>Le sujet (<code>login</code>, <code>principal</code>, <code>role</code>, <code>group</code>), p.ex.      <code>@accept(role = [\"EWT_TEST\", \"EWT_OTHER\"])</code>. Note: dans la version      actuelle, le filtre en fonction du groupe n'est pas fonctionnel.</li> </ul> <p>Il est possible de sp\u00e9cifier plusieurs valeurs en utilisant la notation entre crochets (voir exemple ci-dessous). Il est \u00e9galement possible de combiner plusieurs r\u00e8gles ensemble:</p> <pre><code>@accept(endpoint = [\"web\", \"rest\"], trigger = \"default\")\n</code></pre> <p>L'annotation est sans effet si elle n'est pas d\u00e9finie \u00e0 la racine du  script. L'annotation est sans effet si elle est d\u00e9finie dans un  sous-programme (c.-\u00e0-d. une librairie de script r\u00e9f\u00e9renc\u00e9e au moyen  de l'instruction <code>import</code>).</p> <p>En l'absence de la notation <code>@accept</code>, le script est \u00e9valu\u00e9 sous condition que les r\u00e8gles de s\u00e9curit\u00e9s d\u00e9finies au niveau du  fichier de configuration l'autorise (voir  <code>security.publishAllScriptsAsService</code>).</p>"},{"location":"reference/script/#rejectrule","title":"<code>@reject(&lt;rule&gt;, ...)</code>","text":"<p>Cette annotation est l'inverse de <code>@accept</code> : elle indique la ou les  conditions selon lesquelles une ex\u00e9cution de script doit \u00eatre refus\u00e9e.  La syntaxe est identique \u00e0 celle de <code>@accept</code>.</p>"},{"location":"reference/script/#wsdlsource","title":"<code>@wsdl(&lt;source&gt;)</code>","text":"<p>Cette annotation permet de sp\u00e9cifier le WSDL qui d\u00e9crit le script en  tant que service SOAP. L'annotation attend en param\u00e8tre le path du  fichier WSDL. Ce dernier peut \u00eatre donn\u00e9 en absolu ou en relatif  (par rapport au dossier du script lui-m\u00eame). Exemple:</p> <pre><code>@wsdl(\"../wsdl/myservice.wsdl\")\n</code></pre> <p>Si cette annotation est absente, le moteur propose un WSDL g\u00e9n\u00e9rique.</p>"},{"location":"reference/script/#execution-asynchrone","title":"Ex\u00e9cution asynchrone","text":"<p>Les scripts d\u00e9marr\u00e9s \u00e0 l'aide de la m\u00e9thode  <code>$script.call()</code> sont par d\u00e9faut  ex\u00e9cut\u00e9s de mani\u00e8re synchrone. Ewt supporte en outre l'ex\u00e9cution de scripts  en asynchrone. Dans la version actuelle, l'ex\u00e9cution d'un script en  asynchrone se fait en sp\u00e9cifiant l'option <code>async</code> \u00e0 <code>true</code>. Le moteur  ex\u00e9cute alors le script dans un thread ind\u00e9pendant.</p> <pre><code>$script.call(\"TaskAsync.script\", null, null, { async: true });\n</code></pre> <p>L'ex\u00e9cution asynchrone d'un script se fait sur un thread ind\u00e9pendant du  thread d'ex\u00e9cution du script, mais \u00e9galement -\u00a0et c'est le plus  important\u00a0- sur une session ind\u00e9pendante. Cela signifie que le script  ex\u00e9cut\u00e9 de fa\u00e7on asynchrone ne partage pas la m\u00eame session (qu'il s'agisse  d'une session utilisateur ou d'une session de scheduler) que le script qui  l'a d\u00e9marr\u00e9. Cette limitation est n\u00e9cessaire pour \u00e9viter des acc\u00e8s  concurrents aux donn\u00e9es de sessions, en particulier les dossiers, tuples et  groupes.</p>"},{"location":"reference/script/#callback-oncomplete","title":"Callback <code>oncomplete</code>","text":"<p>Il est possible de fournir au moteur une fonction de callback  \u00e0 invoquer lorsque le traitement asynchrone se termine. L'exemple ci-dessous  permet d'y voir plus clair.</p> <p>L'exemple suivant est constitu\u00e9 de deux scripts:</p> <ul> <li> <p><code>TaskLauncher.script</code> : il s'agit du script principal qui a pour      charge de lancer l'ex\u00e9cution asynchrone du second script</p> <pre><code>$script.call(\"TaskAsync.script\", null, null, {\n  async: true,\n  oncomplete: function(res) {\n    $logger.info(\"async execution ends\");\n  }\n});\n</code></pre> <p>Le script d\u00e9marre l'ex\u00e9cution de la t\u00e2che asynchrone et d\u00e9clare une  fonction de callback qui sera invoqu\u00e9e par le moteur \u00e0 la fin de  l'ex\u00e9cution de la t\u00e2che. La fonction de callback attend un param\u00e8tre <code>res</code>  qui sera un map contenant les variables export\u00e9es par le script  <code>TaskAsync.script</code></p> </li> <li> <p><code>TaskAsync.script</code> : il s'agit du script qui est ex\u00e9cut\u00e9 de fa\u00e7on      asynchrone par <code>TaskLauncher.script</code>. Ici la t\u00e2che ne fait que de      faire une pause de 2.5 secondes et d'exporter une variable <code>foo</code>.</p> <pre><code>$logger.info(\"async script start\");\n$script.sleep(2500);\nexport var foo = \"bar\"; \n$logger.info(\"async script end\");\n</code></pre> </li> </ul>"},{"location":"reference/script/#callback-onprogress","title":"Callback <code>onprogress</code>","text":"<p>Les t\u00e2ches asynchrones peuvent fournir une indication sur leur \u00e9tat  d'avancement au moyen des m\u00e9thodes  <code>$script.addProgress()</code>) et  <code>$script.setProgress()</code>. Les \u00e9v\u00e9nements  signalant un avancement peuvent \u00eatre suivis depuis le thread principal  au moyen de la fonction de callback <code>onprogress</code>.</p> <pre><code>$script.call(\"TaskAsync.script\", null, null, {\n  async: true,\n  onprogress: function(res) {\n    $logger.info(res);\n  }\n});\n</code></pre> <p>Le param\u00e8tre de la fonction de callback contient un map dont la propri\u00e9t\u00e9  <code>progress</code> indique l'\u00e9tat d'avancement au moyen d'une valeur decimale  comprise entre 0 et 1.</p> <p>Remarque: Le param\u00e8tre a exactement la m\u00eame forme que pour le callback  <code>onprogress</code> de la m\u00e9thode <code>$http.request()</code>.</p>"},{"location":"reference/script/#debugger","title":"Debugger","text":"<p>Ewt int\u00e8gre un debugger de script prenant en charge les fonctionnalit\u00e9s  suivantes:</p> <ul> <li>breakpoints</li> <li>breakpoints conditionnels</li> <li>\u00e9valuation d'expression</li> <li>liste des variables</li> <li>ex\u00e9cution pas \u00e0 pas</li> <li>arr\u00eat sur exception</li> <li>stack d'appels</li> </ul> <p>Le debugger int\u00e9gr\u00e9 \u00e0 Ewt est compatible DAP (Debug Adapter  Protocol). Cela  signifie que les scripts Ewt peuvent \u00eatre d\u00e9bogu\u00e9s au moyen d'un \u00e9diteur qui  supporte DAP, ce qui est le cas par exemple de VS Code.</p> <p>Epilogic fournit une extension VS Code pour faciliter l'int\u00e9gration du  langage de script avec VS Code et activ\u00e9 les options de debug.</p> <p></p> <p>Les fonctions de debug sont encore en cours de d\u00e9veloppement, mais elles  permettent d\u00e9j\u00e0 un debug step by step ainsi que l'\u00e9dition de variables.</p>"},{"location":"reference/script/#mise-en-uvre","title":"Mise en \u0153uvre","text":""},{"location":"reference/script/#application-ewt","title":"Application EWT","text":"<p>Le debugger n'est disponible que lorsque l'application est en mode <code>dev</code>.  Par ailleurs, il faut d\u00e9clarer le num\u00e9ro du port du socket sur lequel Ewt  \u00e9coutera les commandes envoy\u00e9es par l'UI de debug (p.ex. VS Code). Cela est  \u00e0 faire dans la section <code>admin</code> du fichier de configuration <code>config.xml</code> de  l'application:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;config&gt;\n  &lt;admin&gt;\n    &lt;!-- le debugger n'est disponible qu'en mode dev --&gt;\n    &lt;runMode&gt;dev&lt;/runMode&gt;\n    &lt;!-- port sur lequel le moteur ouvre un socket pour le debug --&gt;\n    &lt;debuggerPort&gt;8000&lt;/debuggerPort&gt;\n    &lt;!-- option : adresse IP de bind --&gt;\n    &lt;debuggerAddress&gt;0.0.0.0&lt;/debuggerAddress&gt;\n    ...\n  &lt;/admin&gt;\n  ...\n</code></pre> <p>Se connecter \u00e0 l'application et, si celle-ci tournait d\u00e9j\u00e0, effectuer un  <code>reset</code> pour forcer un rechargement de la config. Il est important que  l'application soit charg\u00e9e avant de d\u00e9marrer le debugger depuis l'UI de  debug pour que le socket d'\u00e9coute soit ouvert.</p>"},{"location":"reference/script/#vs-code","title":"VS Code","text":"<p>Pour r\u00e9aliser un debug via VS Code, il faut commencer par installer  l'extension Ewt \u00e0 l'aide du fichier VSIX.</p> <p>Une fois que cela est fait, ouvrez le dossier de votre application Ewt dans  VS Code. Si vous ouvrez un fichier de script, l'UI devrait vous permettre de  placer des breakpoints dans la marge de gauche du script.</p> <p>Pour d\u00e9marrer le debugger, acc\u00e9dez au panneau \"Run and Debug\"  (Ctrl + Shift + D). La toute premi\u00e8re fois, cliquez sur \"create a launch. json file\".</p> <p></p> <p>VS Code va cr\u00e9er et ouvrir un fichier <code>launch.json</code> que vous pouvez adapter  ainsi:</p> <pre><code>{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"type\": \"mock\",\n            \"request\": \"launch\",\n            \"name\": \"Ewt debugger\",\n            \"program\": \"Mon application\",\n            \"stopOnEntry\": true,\n            \"debugServer\": 8000\n        }\n    ]\n}\n</code></pre> <p>Ici l'adresse du serveur reprend le num\u00e9ro de port du socket ouvert par Ewt. Apr\u00e8s modification, faites une sauvegarde du fichier (Ctrl + S). Vous  devriez alors voir une liste d\u00e9roulante avec l'entr\u00e9e \"Ewt debugger\"  s\u00e9lectionn\u00e9e. Cliquez sur la fl\u00e8che verte pour lancer le debugger.</p> <p></p> <p>Dans votre application Ewt, ex\u00e9cutez le script comme d'ordinaire. Arriv\u00e9 \u00e0 la  ligne du breakpoint, le traitement devrait s'interrompre et le debug devrait  pouvoir se faire selon les usages habituels \u00e0 travers VS Code.</p>"},{"location":"reference/script/#chargement","title":"Chargement","text":"<p>Tous les scripts et sous-scripts pr\u00e9sents dans le dossier <code>scripts</code> de  l'application sont pars\u00e9s au chargement de l'application<sup>1</sup> et au <code>reset</code>.  Les erreurs de parsing sont donc imm\u00e9diatement affich\u00e9es au moment du  chargement.</p> <p>Lorsque l'application est en mode <code>dev</code>, le moteur v\u00e9rifie si des  modifications de scripts et/ou de sous-script ont \u00e9t\u00e9 faites et recharge les  scripts le cas \u00e9ch\u00e9ant. Ce principe n'est valable que pour le mode <code>dev</code>  uniquement. La d\u00e9tection de modifications est d\u00e9sactiv\u00e9e dans les modes  <code>test</code> et <code>prod</code>.  </p> <ol> <li> <p>Le chargement de l'application se fait lorsqu'une connexion est faite    \u00e0 l'application ou si l'application est d\u00e9clar\u00e9e au niveau de la    propri\u00e9t\u00e9 <code>auto-load-applications</code> du fichier de propri\u00e9t\u00e9s de Ewt   (par d\u00e9faut dans <code>/opt/ewt/ewt.properties</code>).\u00a0\u21a9</p> </li> </ol>"},{"location":"reference/search/","title":"Indexation et recherche","text":"<p>En premier lieu, il convient de pr\u00e9ciser que Ewt ne fournit pas de  fonction de recherche de dossiers int\u00e9gr\u00e9e. Dans la version actuelle,  les recherches doivent \u00eatre r\u00e9alis\u00e9es au moyen de scripts.</p> <p>Par contre Ewt int\u00e8gre des m\u00e9canismes d'indexation de dossiers et  de maintien de ces index \u00e0 jour.</p> <p>Pour r\u00e9aliser des op\u00e9rations de recherche, les scripts sont donc libres  de s'appuyer sur la base de donn\u00e9es, sur les index disponibles, voire sur  les deux \u00e0 la fois.</p> <p>La mise en place d'un script de recherche bas\u00e9 sur la base de donn\u00e9es  est une op\u00e9ration standard et ne n\u00e9cessite pas de d\u00e9tails particuliers.  La suite de ce document se concentre donc sur la configuration d'une  application afin d'indexer ses dossiers et sur la recherche par index.</p>"},{"location":"reference/search/#configuration","title":"Configuration","text":"<p>La section <code>search</code> du fichier de  configuration permet de sp\u00e9cifier les index disponibles dans l'application.</p> <p>Il est possible de r\u00e9f\u00e9rencer ces index et de sp\u00e9cifier des r\u00e8gles de  comportement au niveau de la description (fichier <code>descript.xml</code>).</p>"},{"location":"reference/search/#recherche-par-index","title":"Recherche par index","text":"<p>La recherche par index consiste \u00e0 utiliser un syst\u00e8me tiers d'indexation des  donn\u00e9es et de recherche. Ewt int\u00e8gre la librairie  Apache Lucene pour effectuer ce type de recherche,  mais il est pr\u00e9vu d'\u00e9tendre ce type de recherche \u00e0 d'autres outils externes (ElasticSearch, Meilisearch, etc.)</p> <p>En pratique, la mise en place de ce type de recherche n\u00e9cessite de  configurer l'application de la fa\u00e7on suivante:</p> <ul> <li>Les param\u00e8tres d'index doivent \u00eatre sp\u00e9cifi\u00e9s au niveau d'une section   <code>search.index</code> dans le fichier de configuration de l'application. Le    moteur autorise une application \u00e0 avoir plusieurs index. Ainsi on pourra    utiliser un index pour les dossiers de l'application et d'autres index    pour des donn\u00e9es sp\u00e9cifiques (des adresses, des coordonn\u00e9es, etc.)</li> <li>Au niveau de la description (fichier <code>descript.xml</code>), on indiquera pour    chaque mod\u00e8le le nom de l'index \u00e0 utiliser</li> <li>Par d\u00e9faut tous les champs d'un dossier pour lequel un index est d\u00e9clar\u00e9    sont index\u00e9s. Il est toutefois possible d'indiquer de ne pas indexer du    contenu au moyen de l'attribut <code>index=\"false\"</code>. La valeur de l'attribut    est valable pour tous les \u00e9l\u00e9ments fils.</li> </ul>"},{"location":"reference/search/#indexation-par-le-moteur","title":"Indexation par le moteur","text":"<p>Ewt d\u00e9clenche automatiquement une indexation de dossier lors de  la sauvegarde explicite (c'est-\u00e0-dire par exemple lorsque l'utilisateur  clique explicitement sur le bouton \"Enregistrer\"), lors de la fermeture  et lors d'un changement d'\u00e9tat d'un dossier, que l'op\u00e9ration soit  r\u00e9alis\u00e9e via un script ou via une action de l'utilisateur. L'index est  \u00e9galement mis \u00e0 jour en cas de suppression de dossier.</p> <p>Le noms de champs au niveau de l'index sont not\u00e9s selon la syntaxe  <code>&lt;modelName&gt;.&lt;groupName&gt;.&lt;fieldName&gt;</code>, o\u00f9 <code>modelName</code> est le nom du  mod\u00e8le, <code>groupName</code> le nom du groupe et <code>fieldName</code> le nom du champ.</p> <p>Il se peut que les mises \u00e0 jour d'index ne soient pas imm\u00e9diatement prises  en compte lors des recherches. Cela d\u00e9pend de la solution de recherche  utilis\u00e9e et des param\u00e8tres de cette derni\u00e8re.</p> <p>Pour que le moteur puisse indexer correctement les donn\u00e9es, il convient  de pr\u00e9ciser comment il doit s'y prendre. En particulier, il y a lieu de  sp\u00e9cifier le nom d'index (<code>indexname</code>) et les options d'index via les  attributs <code>indexstore</code> et <code>indexmode</code> \u00e0 d\u00e9finir au niveau des \u00e9l\u00e9ments  <code>model</code>, <code>group</code> et <code>field</code> de la descript.</p> <code>indexname</code> <p>Cet attribut indique le nom de l'index sur lequel r\u00e9f\u00e9rencer le  dossier. Dans la version actuelle, l'attribut ne peut \u00eatre d\u00e9fini  qu'au niveau du mod\u00e8le.</p> <p>Le nom d'index doit \u00eatre d\u00e9clar\u00e9 dans le fichier de configuration de  l'application: ce dernier doit contenir une section <code>search.index</code> dont  l'attribut <code>name</code> correspond au nom d'index.</p> <code>indexmode</code> <p>Cet attribut permet de sp\u00e9cifier comment la valeur doit \u00eatre index\u00e9e. Plusieurs modes sont possibles:</p> <code>token</code> La valeur n'est pas index\u00e9e telle quelle, mais elle est d\u00e9compos\u00e9e  en tokens et ce sont ces derniers qui sont index\u00e9s. Par exemple,  une valeur \"ceci est un exemple\" est d\u00e9compos\u00e9e en \"ceci\", \"est\", \"un\" et \"exemple\". Seuls les tokens \"ceci\" et \"exemple\" sont  index\u00e9s car les autres termes ne sont pas suffisamment  significatifs. <code>token:&lt;analyzer&gt;</code> <p>Ce mode joue le m\u00eame r\u00f4le que <code>token</code>, mais ici le terme <code>analyzer</code>  est \u00e0 remplacer par le type d'analyzer \u00e0 utiliser, par exemple <code>token:fr</code> pour une tokenisation adapt\u00e9e au fran\u00e7ais, <code>token:en</code> pour  une tokenisation adapt\u00e9e \u00e0 l'anglais, etc. Les analyzers disponibles  d\u00e9pendent du moteur d'indexation choisi.</p> <p>Pour le moteur <code>lucene</code> int\u00e9gr\u00e9 \u00e0 Ewt, les analyzers reconnus sont:</p> <ul> <li><code>ar</code>: Arabic</li> <li><code>bg</code>: Bulgarian</li> <li><code>bn</code>: Bengali</li> <li><code>br</code>: Brazilian</li> <li><code>ca</code>: Catalan</li> <li><code>cjk</code>: Chinese, Japanese, and Korean</li> <li><code>ckb</code>: Sorani</li> <li><code>cz</code>: Czech</li> <li><code>da</code>: Danish</li> <li><code>de</code>: German</li> <li><code>el</code>: Greek</li> <li><code>en</code>: English</li> <li><code>es</code>: Spanish</li> <li><code>et</code>: Estonian</li> <li><code>eu</code>: Basque</li> <li><code>fa</code>: Persian</li> <li><code>fi</code>: Finnish</li> <li><code>fr</code>: French</li> <li><code>ga</code>: Irish</li> <li><code>gl</code>: Galician</li> <li><code>hi</code>: Hindi</li> <li><code>hu</code>: Hungarian</li> <li><code>hy</code>: Armenian</li> <li><code>id</code>: Indonesian</li> <li><code>it</code>: Italian</li> <li><code>lt</code>: Lithuanian</li> <li><code>lv</code>: Latvian</li> <li><code>ne</code>: Nepali</li> <li><code>nl</code>: Dutch</li> <li><code>no</code>: Norwegian</li> <li><code>pt</code>: Portuguese</li> <li><code>ro</code>: Romanian</li> <li><code>ru</code>: Russian</li> <li><code>sr</code>: Serbian</li> <li><code>sv</code>: Swedish</li> <li><code>ta</code>: Tamil</li> <li><code>te</code>: Telugu</li> <li><code>th</code>: Thai</li> <li><code>tr</code>: Turkish</li> <li><code>keyword</code>: indexation de mot-cl\u00e9</li> <li><code>email</code>: indexation d'adresse e-mail</li> <li><code>simple</code>: indexation de donn\u00e9e simple</li> <li><code>whitespace</code>: d\u00e9coupage sur les espaces</li> <li><code>classic</code>: indexation standard</li> <li><code>standard</code>: indexation standard</li> </ul> <code>raw</code> La valeur est index\u00e9e dans son int\u00e9gralit\u00e9, c'est-\u00e0-dire qu'elle n'est pas analys\u00e9e mais simplement index\u00e9e telle quelle. On  utilisera ce mode pour les identifiants, les champs qui contiennent  un mot unique ou une s\u00e9rie de mots ins\u00e9parables les uns des autres (un nom de famille ou de localit\u00e9 par exemple). <code>ident</code> Identique \u00e0 <code>raw</code>, mais plus adapt\u00e9 aux champs identifiants.  <code>no</code> La valeur n'est pas index\u00e9e. <code>indexstore</code> <p>Cet attribut peut \u00eatre sp\u00e9cifi\u00e9 au niveau des \u00e9l\u00e9ments <code>model</code>,  <code>group</code> et <code>field</code>. Il vaut pour toute la sous-arborescence de l'\u00e9l\u00e9ment  sur lequel il est sp\u00e9cifi\u00e9, mais il peut \u00eatre surcharg\u00e9 au niveau d'un  \u00e9l\u00e9ment fils.</p> <p>Il permet d'indiquer si la valeur du champ doit \u00eatre sauv\u00e9e dans l'index. Les valeurs possibles sont donc:</p> <code>yes</code> <p>Indique d'enregistrer la valeur dans l'index.</p> <p>Par d\u00e9faut, l'index n'enregistre pas la valeur compl\u00e8te d'un champ,  mais il indexe les tokens qui la composent, c'est-\u00e0-dire les mots  d'un texte (en ignorant certains mots peu significatifs). Le fait  d'activer le mode <code>store</code> force l'index \u00e0 enregistrer la valeur  compl\u00e8te du champ. Cela est n\u00e9cessaires pour les cl\u00e9s primaires  ou lorsque l'on veut afficher des informations d\u00e9taill\u00e9es sur la  fa\u00e7on de calculer la pertinence de r\u00e9sultat.</p> <code>no</code> Indique de ne pas enregistrer la valeur dans l'index <p>Les identifiants de dossiers (c.-\u00e0-d. les primary keys) sont  automatiquement index\u00e9s avec les options <code>indexstore=\"yes\"</code> et  <code>indexmode=\"raw\"</code>.</p>"},{"location":"reference/search/#note-concernant-la-securite","title":"Note concernant la s\u00e9curit\u00e9","text":"<p>Lors d'une indexation de dossier effectu\u00e9e par le moteur, les donn\u00e9es ne  sont pas enregistr\u00e9es dans l'index, \u00e0 l'exception de l'identifiant de dossier lui-m\u00eame.</p>"},{"location":"reference/servlets/","title":"Servlets","text":""},{"location":"reference/servlets/#introduction","title":"Introduction","text":"<p>Ewt est une application Web qui se pr\u00e9sente sous la forme d'une archive WAR  contenant les \u00e9l\u00e9ments de configuration et les d\u00e9pendances de base. En  particulier, l'archive int\u00e8gre un fichier de description de la web  application (<code>web.xml</code>) dans lequel sont pr\u00e9d\u00e9finis un certain nombre  d'\u00e9l\u00e9ments. Le fichier est structur\u00e9 en 7 parties:</p> <ol> <li>les param\u00e8tres d'initialisation de contexte</li> <li>l'\u00e9num\u00e9ration des servlets</li> <li>le mapping des servlets vers des url</li> <li>les param\u00e8tres de configuration des dur\u00e9es de vies des sessions</li> <li>les contraintes de s\u00e9curit\u00e9</li> <li>les configurations de login</li> <li>l'\u00e9num\u00e9ration des r\u00f4les techniques</li> </ol> <p>Dans ce document, nous nous limitons aux parties 1 et 3.</p>"},{"location":"reference/servlets/#parametres-dinitialisation","title":"Param\u00e8tres d'initialisation","text":"<p>Le fichier de base ne contient qu'un seul param\u00e8tre de contexte qui permet \u00e0  Ewt de conna\u00eetre le chemin dans lequel se trouvent les applications m\u00e9tier \u00e0  g\u00e9rer. Dans la configuration de base, la valeur du param\u00e8tre est une  r\u00e9f\u00e9rence \u00e0 la variable d'environnement <code>EWT_APPLICATION_ROOT_PATH</code>. Cela  \u00e9vite d'avoir \"en dur\" un chemin absolu dans la configuration, mais implique  que le serveur sur lequel Ewt est d\u00e9marr\u00e9 d\u00e9finisse la variable  d'environnement <code>EWT_APPLICATION_ROOT_PATH</code> avec le chemin des  applications. \u00c0 noter que la r\u00e9f\u00e9rence \u00e0 cette variable peut \u00eatre remplac\u00e9e  par une valeur personnalis\u00e9e, par exemple:</p> <pre><code>&lt;context-param&gt;\n  &lt;param-name&gt;application-root-path&lt;/param-name&gt;\n  &lt;param-value&gt;/opt/ewt/&lt;/param-value&gt;\n&lt;/context-param&gt;\n</code></pre>"},{"location":"reference/servlets/#endpoints","title":"Endpoints","text":"<p>La 2e partie du fichier <code>web.xml</code> d\u00e9clare les servlets mis \u00e0 disposition par  le moteur et la 3e partie d\u00e9crit les mapping de ces servlets vers des  endpoints.</p> <p>Le moteur int\u00e8gre 5 endpoints:</p> <ul> <li>web : prend en charge les formulaires HTTP</li> <li>rest : prend en charge les requ\u00eates REST</li> <li>soap : prend en charge les requ\u00eates SOAP</li> <li>data : fournit des m\u00e9thodes de lecture/\u00e9criture de    donn\u00e9es de dossier</li> <li>websocket: prend en charge les WebSockets</li> </ul>"},{"location":"reference/statemodel/","title":"Gestion d'\u00e9tats","text":""},{"location":"reference/statemodel/#modele-detats","title":"Mod\u00e8le d'\u00e9tats","text":"<p>Ewt permet de d\u00e9crire un ou plusieurs mod\u00e8les d'\u00e9tats au format XML. On  appelle mod\u00e8le d'\u00e9tats l'encha\u00eenement de plusieurs \u00e9tats qui d\u00e9finissent  ainsi un cycle de vie de dossier. Pr\u00e9cisons au passage qu'une application  Ewt peut parfaitement fonctionner sans gestion d'\u00e9tats.</p> <p>Le mod\u00e8le d'\u00e9tats permet de d\u00e9crire des r\u00e8gles d'encha\u00eenement d'\u00e9tats. Cela  se fait au moyen de transitions, auxquelles on associe un nom  (attribut <code>name</code>) et un \u00e9tat cible (<code>target</code>).</p> <p>Lorsque l'on souhaite mettre en place une gestion d'\u00e9tats, on commence par  d\u00e9finir des mod\u00e8les d'\u00e9tats (ou cycles de vie) dans le sous-dossier <code>states</code>  de l'application. Il s'agit de fichiers XML dont la syntaxe s'inspire de la  notation SCXML.</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;states name=\"simple\" changemode=\"both\"&gt;\n  &lt;state name=\"traitement\" class=\"initial\"&gt;\n    &lt;transition name=\"vendeur.archiver\" target=\"archive\"/&gt;\n  &lt;/state&gt;\n  &lt;state name=\"archive\" class=\"final\"/&gt;\n&lt;/states&gt;\n</code></pre> <p>Le mod\u00e8le d'\u00e9tats doit \u00eatre identifi\u00e9 au moyen d'un nom. En option, on peut  \u00e9galement d\u00e9finir un attribut <code>changemode</code> qui permet de personnaliser le  mode de changement d'\u00e9tat que l'on souhaite autoriser. Il est possible de  changer d'\u00e9tat de diff\u00e9rentes fa\u00e7ons:</p> <ol> <li>De fa\u00e7on explicite : on indique explicitement quel nouvel \u00e9tat le dossier     doit avoir</li> <li>Par transition : on active une transition et le dossier prendra l'\u00e9tat     cible associ\u00e9 \u00e0 cette transition</li> <li>Par \u00e9v\u00e9nement : un \u00e9v\u00e9nement d\u00e9clenche une transition (ce cas peut \u00eatre     associ\u00e9 au mode pr\u00e9c\u00e9dent)</li> </ol> <p>L'attribut peut donc prendre les valeurs <code>name</code> (ou <code>state</code>, ou <code>explicit</code>),  <code>transition</code> ou <code>both</code>, cette derni\u00e8re \u00e9tant la valeur par d\u00e9faut.</p> <p>Chaque \u00e9tat (<code>state</code>) contient un nom et \u00e9ventuellement une classe et des  transitions. La classe permet de sp\u00e9cifier si l'\u00e9tat est l'\u00e9tat initial  (classe <code>initial</code>) et/ou l'\u00e9tat final (classe <code>final</code>). Un \u00e9tat peut \u00eatre \u00e0  la fois initial et final, auquel cas on notera <code>class=\"initial final\"</code> (il  est aussi possible de s\u00e9parer les termes au moyen d'une virgule).</p> <p>Les transitions indiquent les r\u00e8gles de passage d'un \u00e9tat \u00e0 l'autre. Chaque  transition doit au minimum indiquer l'\u00e9tat de destination. Il est possible  de sp\u00e9cifier un \u00e9v\u00e9nement. Dans ce cas, le d\u00e9clenchement de l'\u00e9v\u00e9nement  entra\u00eenera la transition vers l'\u00e9tat de destination.</p>"},{"location":"reference/statemodel/#referencement-de-modele-detat","title":"R\u00e9f\u00e9rencement de mod\u00e8le d'\u00e9tat","text":"<p>Pour appliquer un mod\u00e8le d'\u00e9tats \u00e0 un mod\u00e8le de dossier, il suffit de  r\u00e9f\u00e9rencer le premier dans le second \u00e0 l'aide de l'attribut <code>statesmodel</code>.</p> <pre><code>&lt;descript&gt;\n  &lt;models&gt;\n    &lt;model name=\"vendeur\" maingroup=\"info\" mainfield=\"idVendeur\"\n           statesmodel=\"simple\" statefield=\"idStatut\"&gt;\n      ...\n      &lt;groups&gt;\n        &lt;group name=\"info\" table=\"Vendeur\" type=\"single\"&gt;  \n          &lt;field name=\"idStatut\" type=\"hidden\" column=\"idStatut\"/&gt;\n        &lt;/group&gt;\n      &lt;/groups&gt;\n      ...\n    &lt;/model&gt;\n  &lt;/models&gt;\n&lt;/descript&gt;\n</code></pre> <p>Un mod\u00e8le d'\u00e9tats n'est pas forc\u00e9ment li\u00e9 \u00e0 un et un seul mod\u00e8le de  dossier. Plusieurs mod\u00e8les de dossier peuvent r\u00e9f\u00e9rencer un m\u00eame  mod\u00e8le d'\u00e9tats.</p> <p>En plus du mod\u00e8le d'\u00e9tats, le mod\u00e8le de dossier qui souhaite appliquer une  gestion d'\u00e9tats doit fournir un champ de statut. Il s'agit d'un champ de la  base de donn\u00e9es qui servira \u00e0 enregistrer l'\u00e9tat du dossier. Pour ce faire,  on sp\u00e9cifie le nom de champ en question au moyen de l'attribut <code>statefield</code>  dans le fichier <code>descript.xml</code>.</p>"},{"location":"reference/statemodel/#internationalisation","title":"Internationalisation","text":"<p>Ewt pr\u00e9voit un format d'\u00e9tiquettes pour les \u00e9l\u00e9ments des bundles de langues.  Les libell\u00e9s d\u00e9crivant les \u00e9tats et les transitions sont \u00e0 sp\u00e9cifier au  niveau des bundles de l'application.</p> <p>Par convention, une \u00e9tiquette d\u00e9signant un nom d'\u00e9tat doit avoir la forme  suivante:</p> <pre><code>states.&lt;states-model-name&gt;.state.&lt;state-name&gt;.label\n</code></pre> <p>o\u00f9 <code>&lt;states-model-name&gt;</code> est le nom du mod\u00e8le d'\u00e9tats et <code>&lt;state-name&gt;</code> est  le nom de l'\u00e9tat.</p> <p>Pour les transitions, la syntaxe est la suivante:</p> <pre><code>states.&lt;states-model-name&gt;.transition.&lt;transition-name&gt;.label\n</code></pre> <p>o\u00f9 <code>&lt;transition-name&gt;</code> est le nom de la transition. Si plusieurs transitions  de m\u00eame nom existent et qu'on souhaite leur attribuer un libell\u00e9 sp\u00e9cifique,  il est possible de les distinguer en ajoutant le nom de l'\u00e9tat dans le  libell\u00e9, de la fa\u00e7on suivante:</p> <pre><code>states.&lt;states-model-name&gt;.state.&lt;state-name&gt;.transition.&lt;transition-name&gt;.label\n</code></pre> <p>Cette syntaxe prime sur la syntaxe courte qui n'inclut pas le nom d'\u00e9tat.</p> <p>Prenons l'exemple suivant:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;states name=\"ticket\"&gt;\n  &lt;state name=\"preparation\" class=\"initial\"&gt;\n    &lt;transition name=\"ticket.ouvrir\" target=\"ouvert\"/&gt;\n  &lt;/state&gt;\n  &lt;state name=\"ouvert\"&gt;\n    &lt;transition name=\"ticket.cloturer\" target=\"termine\"/&gt;\n    &lt;transition name=\"ticket.traiter\" target=\"traitement\"/&gt;\n  &lt;/state&gt;\n  &lt;state name=\"traitement\"&gt;\n    &lt;transition name=\"ticket.cloturer\" target=\"termine\"/&gt;\n    &lt;transition name=\"ticket.tester\" target=\"test\"/&gt;\n  &lt;/state&gt;\n  &lt;state name=\"test\"&gt;\n    &lt;transition name=\"ticket.cloturer\" target=\"termine\"/&gt;\n    &lt;transition name=\"ticket.valider\" target=\"resolu\"/&gt;\n  &lt;/state&gt;\n  &lt;state name=\"resolu\"&gt;\n    &lt;transition name=\"ticket.cloturer\" target=\"termine\"/&gt;\n  &lt;/state&gt;\n  &lt;state name=\"standby\"&gt;\n    &lt;transition name=\"ticket.activer\" target=\"traitement\"/&gt;\n    &lt;transition name=\"ticket.cloturer\" target=\"termine\"/&gt;\n  &lt;/state&gt;\n  &lt;state name=\"termine\" class=\"final\"&gt;\n    &lt;transition name=\"ticket.modifier\" target=\"traitement\"/&gt;\n  &lt;/state&gt;\n&lt;/states&gt;\n</code></pre> <p>Pour renseigner les libell\u00e9s de chaque \u00e9l\u00e9ment, on pourra par exemple  utiliser la d\u00e9finition suivante:</p> <pre><code># \u00e9tats\nstates.ticket.state.preparation.label = Pr\u00e9paration\nstates.ticket.state.ouvert.label = Ouvert\nstates.ticket.state.traitement.label = Traitement\nstates.ticket.state.test.label = Test\nstates.ticket.state.resolu.label = R\u00e9solu\nstates.ticket.state.standby.label = Standby\nstates.ticket.state.termine.label = Termin\u00e9\n\n# transistions\nstates.ticket.transition.ticket.ouvrir.label = Ouvrir\nstates.ticket.transition.ticket.cloturer.label = Cl\u00f4turer\nstates.ticket.transition.ticket.traiter.label = Traiter\nstates.ticket.transition.ticket.tester.label = Tester\nstates.ticket.transition.ticket.valider.label = Valider\nstates.ticket.transition.ticket.activer.label = Activer\nstates.ticket.state.standby.transition.ticket.cloturer.label = Abandonner\nstates.ticket.transition.ticket.modifier.label = Modifier\n</code></pre> <p>Dans l'exemple ci-dessus, on surcharge le libell\u00e9 de la transition  \"ticket.cloturer\" pour l'\u00e9tat \"standby\" par un libell\u00e9 diff\u00e9rent.</p>"},{"location":"reference/style/","title":"Styles et vues","text":""},{"location":"reference/style/#generalites","title":"G\u00e9n\u00e9ralit\u00e9s","text":"<p>Les feuilles de styles dans Ewt sont des feuilles XSL standard. Toutefois  elles ne peuvent pas \u00eatre r\u00e9f\u00e9renc\u00e9es directement. Les feuilles de styles  utilisables par une application doivent \u00eatre d\u00e9clar\u00e9es dans le fichier de  configuration de l'application, dans la section <code>styles</code>. Un nom de style  doit \u00eatre rattach\u00e9 \u00e0 la feuille de style. Cette derni\u00e8re sera donc uniquement  r\u00e9f\u00e9renc\u00e9e au moyen de ce nom.</p> <p>Exemple de section <code>&lt;styles&gt;</code> du fichier de configuration:</p> <pre><code>&lt;styles&gt;\n  &lt;!-- liste des feuilles de style disponibles; dans le reste de \n       l'application, on ne fera jamais r\u00e9f\u00e9rence directement au fichier xsl,\n        mais uniquement au nom de la stylesheet, c'est-\u00e0-dire \u00e0 la valeur \n        mise dans l'attribut \"name\". --&gt;\n  &lt;stylesheet name=\"default\"&gt;default.xsl&lt;/stylesheet&gt;\n  &lt;stylesheet name=\"documents\"&gt;documents.xsl&lt;/stylesheet&gt;\n  &lt;stylesheet name=\"info\"&gt;documents.xsl&lt;/stylesheet&gt;\n  &lt;stylesheet name=\"benevoles\"&gt;documents.xsl&lt;/stylesheet&gt;\n  &lt;stylesheet name=\"impressionEtiquettes\"&gt;dlgImpressionEtiquettes.xsl&lt;/stylesheet&gt;\n  &lt;stylesheet name=\"refuserArticles\"&gt;dlgRefuserArticles.xsl&lt;/stylesheet&gt;\n  &lt;stylesheet name=\"listeArticlesVendeur\"&gt;vendeur.xsl&lt;/stylesheet&gt;\n  &lt;!-- style par d\u00e9faut; peut \u00eatre vide ou ind\u00e9fini si l'on souhaite une \n       application enti\u00e8rement pilot\u00e9e par les scripts ou une application qui\n       n'est que pur service web --&gt;\n  &lt;defaultStyle&gt;default&lt;/defaultStyle&gt;\n&lt;/styles&gt;\n</code></pre> <p>Comme on le voit dans l'exemple ci-dessus, il est possible qu'une feuille de  style soit r\u00e9f\u00e9renc\u00e9e sous plusieurs noms. L'inverse n'est par contre pas  permis.</p> <p>Au niveau d'un script, on pourra forcer le changement de style au moyen de  la commande suivante (d'autres syntaxes sont possibles, par exemple pour  d\u00e9finir une feuille de style \u00e0 usage unique, i.e. uniquement pour la sortie  du traitement en cours, ce qui est pratique pour les appels Ajax):</p> <pre><code>$out.setMainStyle(\"listeArticlesVendeur\");\n</code></pre>"},{"location":"reference/style/#descript","title":"Descript","text":"<p>La notation de style n'appara\u00eet pas directement au niveau de la descript.  Dans le cas de l'affichage de dossiers, on parle plut\u00f4t de vue. Une vue est  un ensemble de groupes affich\u00e9s au moyen d'une feuille de style donn\u00e9e.</p> <p>L'id\u00e9e de la vue, est de filtrer le contenu d'un dossier pour ne repr\u00e9senter  que ce qui est r\u00e9ellement utile pour le besoin m\u00e9tier. Une m\u00eame vue peut  \u00eatre utilis\u00e9e sur diff\u00e9rents mod\u00e8les de dossiers avec, pour chaque dossier,  une liste de groupes diff\u00e9rents.</p> <p>Ainsi, une vue \"simple\" pourrait n'afficher que les \u00e9l\u00e9ments de base d'un ou  de plusieurs dossiers, alors qu'une vue \"\u00e9tendue\" affichera davantage  d'\u00e9l\u00e9ments.</p> <p>Voici un exemple de d\u00e9finitions de vues. La vue \"viewDocuments\" est la vue  standard qui affiche un dossier. Elle existe sur le mod\u00e8le \"listeArticle\"  ci-dessous, ainsi que sur d'autres mod\u00e8les, ce qui la rend capable  d'afficher plusieurs dossiers simultan\u00e9ment.</p> <pre><code>&lt;model name=\"listeArticle\" maingroup=\"info\" mainfield=\"idListeArticle\"&gt;\n  &lt;groups&gt;\n    &lt;group name=\"info\" table=\"ListeArticle\" type=\"single\"&gt;\n      &lt;fields&gt;\n        ...\n      &lt;/fields&gt;\n    &lt;/group&gt;\n    &lt;group name=\"articlesListeArticle\" table=\"ArticleListeArticle\" type=\"multi\" order=\"idArticleListeArticle\"&gt;\n      &lt;fields&gt;\n        ...\n      &lt;/fields&gt;\n    &lt;/group&gt;\n  &lt;/groups&gt;\n  &lt;views&gt;\n    &lt;view name=\"viewDocuments\" style=\"documents\"&gt;\n      &lt;group name=\"info\"/&gt;\n      &lt;group name=\"articlesListeArticle\"/&gt;\n    &lt;/view&gt;\n    &lt;view name=\"viewVendeur\" style=\"listeArticlesVendeur\" public=\"false\"&gt;\n      &lt;group name=\"info\"/&gt;\n      &lt;group name=\"articlesListeArticle\"/&gt;\n    &lt;/view&gt;\n  &lt;/views&gt;\n&lt;/model&gt;\n</code></pre> <p>La vue \"viewVendeur\" quant \u00e0 elle sert \u00e0 produire une vue limit\u00e9e dans  laquelle l'utilisateur aura une interface simplifi\u00e9e, sans fonction  d'administration. Elle est indiqu\u00e9e comme priv\u00e9e car elle n'est pas  s\u00e9lectionnable par l'utilisateur : l'activation de cette vue se fait sur la  base de r\u00e8gles d\u00e9finies au niveau des scripts.</p> <p>Chaque vue r\u00e9f\u00e9rence les groupes que la feuille de style est cens\u00e9e pouvoir  afficher.</p>"}]}